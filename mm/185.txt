--->|<!DOCTYPE html>
<html lang="en">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible">
   [ahref]<li>[area1][mkey1]</li><li>[ahref]</li><li>[linkx]</li>
  </meta>
  <meta content="always" name="referrer"/>
  <meta content="1043262023664165646" property="qc:admins">
   <meta content="telephone=no" name="format-detection"/>
   <meta content="on" http-equiv="x-dns-prefetch-control"/>
   <meta content="[V LIVE] [#EVERGLOW] 축 에글 100일 파리 투나잇!!!🥰🥰" property="og:title">
    <meta content="https://www.vlive.tv/video/136894" property="og:url">
     <meta content="https://v-phinf.pstatic.net/20190627_11/1561647481745vwoXV_JPEG/38250289305.jpg?type=a720_play" property="og:image">
      <meta content="https://v-phinf.pstatic.net/20190627_11/1561647481745vwoXV_JPEG/38250289305.jpg?type=a720_play" property="og:image:secure_url">
       <meta content="720" property="og:image:width"/>
       <meta content="405" property="og:image:height"/>
       <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
       <meta content="article" property="og:type"/>
       <meta content="summary_large_image" name="twitter:card"/>
       <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
       <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
       <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
       <meta content="https://v-phinf.pstatic.net/20190627_11/1561647481745vwoXV_JPEG/38250289305.jpg?type=a720_play" name="twitter:image"/>
       <meta content="webpage" name="weibo:type">
        <meta content="https://www.vlive.tv/video/136894" name="weibo:webpage:url">
         <meta content="[V LIVE] [#EVERGLOW] 축 에글 100일 파리 투나잇!!!🥰🥰" name="weibo:webpage:title">
          <meta content="Try watching videos on V LIVE!" name="weibo:webpage:description">
           <meta content="https://v-phinf.pstatic.net/20190627_11/1561647481745vwoXV_JPEG/38250289305.jpg?type=a720_play" name="weibo:webpage:image">
            <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
            <title>
             [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </title>
            <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
           </meta>
          </meta>
         </meta>
        </meta>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="en">
  <div id="wrap">
   <div id="u_skip">
    [linkx]
    
    [ahref]
    
   </div>
   <div id="header">
    <div class="gnb_top">
     <h1>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h1>
     <div class="navigation">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="gnb_info">
      <label class="blind" for="btn_search1">
       search
      </label>
      <div class="search_area" id="search_area" style="display:none;">
       <div class="box">
        <form action="/search/all" class="_searchForm">
         <label class="blind" for="btn_search2">
          검색
         </label>
        </form>
       </div>
       <div class="lyr search_word">
        <div class="search_auto">
         <ul class="result_list">
         </ul>
        </div>
       </div>
      </div>
      <div class="login_area">
       [ahref]
       
       <div class="nick_area _top_nick_area">
        [linkx]
        
        <div class="lyr" style="display:none;">
         <div class="login_btn">
          <div class="inner">
           [linkx]
           
          </div>
          <div class="inner">
           [ahref]
           
          </div>
          <div class="inner">
           [linkx]
           
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="lang_area">
       <strong class="blind">
        Choose language
       </strong>
       [ahref]
       
       <div class="lyr" style="display:none">
        [linkx]
        
        [linkx]
        
        [ahref]
        
        <a href="#" onclick="vlive.tv.common.changeLanguage('zh_tw');return false;">
         中文(繁體)
        </a>
        [linkx]
        
        [linkx]
         [ahref][area1][keywordx][pkeyx][ahref][area1][mkey1][area1][keywordx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][linkx][area1][mkey1][linkx]
        
        [linkx]
        
        [linkx]
        
        [ahref]
        
       </div>
      </div>
     </div>
    </div>
    <div class="dimmed_bg" id="loginDimmedArea" style="display:none;">
    </div>
    <div class="vlogin_lyr" id="loginPopupArea" style="display:none;">
     <div class="lyr_tit">
      <span class="tit_img">
      </span>
      <span class="txt">
       WELCOME TO V LIVE
      </span>
     </div>
     <div class="lyr_cont _etc_layer">
      [linkx]
      
      [ahref]
      
      [linkx]
      
      [linkx]
      
      <div class="text_area">
       [linkx]
       
      </div>
      <div class="text_area">
       <strong>
        You can use your account above to log in to V.
       </strong>
       <p>
        By logging in, you agree to our
        [ahref]
        
        and
        [ahref]
        
        .
       </p>
      </div>
     </div>
     <div class="lyr_cont _cn_layer" style="display:none;">
      [ahref]
       <li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[area1][keywordx]</li>
      
      [linkx]
      
      [ahref]
      
      <div class="text_area">
       <a class="login_email" href="/auth/email/login">
        Are you having trouble logging in?
       </a>
      </div>
      <div class="text_area">
       [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
      </div>
     </div>
     [linkx]
     
    </div>
   </div>
   <div id="container">
    <div id="content">
     <div class="vlive_section">
      <h2 class="blind">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <div class="cont_area">
       <div class="vlive_top">
        <div class="star_profile">
         [ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][pkeyx][linkx][ahref][linkx][area1][mkey1][pkeyx][pkeyx][ahref][pkeyx]
        </div>
        <div class="vapp_bridge">
         [ahref]
         
         <div class="pop_lyr" style="display:none">
          <div class="lyr_vapp_download">
           <strong class="tit">
            DOWNLOAD THE V LIVE APP
           </strong>
           <div class="app_qr">
            <div class="img_qr">
            </div>
            <div class="btn_area">
             [linkx]
             
             [ahref]
             
            </div>
           </div>
          </div>
          [linkx]
          
         </div>
        </div>
       </div>
       <div class="vlive_cont">
        <div class="vlive_area">
         <div class="player">
          <div class="player_ly">
           <div class="player_ly_cont" style="display:none;">
           </div>
           <div class="player_ly_bg2">
           </div>
          </div>
          <div class="player_box" id="playerBoxArea">
          </div>
         </div>
         <div class="vlive_info">
          <strong class="tit" title="[#EVERGLOW] 축 에글 100일 파리 투나잇!!!🥰🥰">
           [#EVERGLOW] 축 에글 100일 파리 투나잇!!!🥰🥰
          </strong>
          <div class="status_area" style="display:none;">
          </div>
          <div class="btn_area">
           [linkx]
           
           <div class="pop_share" style="display: none;">
            <div class="lyr_share">
             <div class="share_info">
              <div class="btn_share_area">
               [linkx]
               
               [ahref]
               
               [ahref]
               
              </div>
              <div class="copy_area">
               <span class="copy_inner_btn">
                [ahref]
                
               </span>
               <span class="copy_inner_url">
               </span>
              </div>
             </div>
             <div class="share_embed">
              <table class="table_share">
               <caption class="blind">
                embedded info &amp; url
               </caption>
               <tbody>
                <tr>
                 <th>
                  <strong class="title">
                   Size
                  </strong>
                 </th>
                 <td>
                  <div class="embed_size">
                   <div class="embed_select">
                    [linkx]
                    
                    <div aria-labelledby="embed_drlabel" class="select_layer" style="">
                     <[area1][keywordx]>
                     </[area1][keywordx]>
                    </div>
                   </div>
                   <div class="autoplay_check checked">
                    <div class="check_area">
                     <li>[ahref]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                    </div>
                   </div>
                  </div>
                 </td>
                </tr>
                <tr>
                 <th>
                  <strong class="title">
                   Code
                  </strong>
                 </th>
                 <td>
                  <div class="embed_code">
                   <div class="copy_area">
                    <span class="copy_inner_btn">
                     [ahref]
                     
                    </span>
                    <span class="copy_inner_url">
                    </span>
                   </div>
                  </div>
                 </td>
                </tr>
               </tbody>
              </table>
             </div>
            </div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="comment_area">
         <div class="u_cbox" id="cbox_module">
         </div>
        </div>
       </div>
       <div class="notice_box _video _after" data-empty="true" style="display:none;">
        <div class="notice_area">
         <h3 class="notice">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <div class="cnt_area _autolink_area">
          <p class="txt">
          </p>
         </div>
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
     <div class="ad_area">
      <div class="ad_content" id="div-ssp-26">
      </div>
     </div>
     <div class="cont_section">
      <div class="video_area suggest">
       <h3 class="tit">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <div class="inner">
        <ul class="video_list _suggest_list">
         <li class="video_list_cont _suggest_page_1">
          [ahref]
          
          [ahref]
          
          <div class="video_date">
           <span class="date">
            14 days ago
           </span>
           [ahref]
           
          </div>
          <div class="video_info">
           <span class="play">
            <em class="ico ico_play">
             <span class="blind">
              재생수
             </span>
            </em>
            <span>
             8,762
            </span>
           </span>
           <span class="like">
            <em class="ico ico_like">
             <span class="blind">
              좋아요 수
             </span>
            </em>
            <span>
             441,120
            </span>
           </span>
          </div>
         </li>
         <li class="video_list_cont _suggest_page_1">
          [ahref]
          
          [linkx]
          
          <div class="video_date">
           <span class="date">
            17 days ago
           </span>
           [linkx]
           
          </div>
          <div class="video_info">
           <li>[area1][keywordx]</li><li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[pkeyx]
          </div>
         </li>
         <li class="video_list_cont _suggest_page_1">
          [linkx]
          
          [linkx]
          
          <div class="video_date">
           <span class="date">
            21 days ago
           </span>
           [ahref]
           
          </div>
          <div class="video_info">
           <span class="play">
            <em class="ico ico_play">
             <span class="blind">
              재생수
             </span>
            </em>
            <span>
             10,265
            </span>
           </span>
           <span class="like">
            <em class="ico ico_like">
             <span class="blind">
              좋아요 수
             </span>
            </em>
            <span>
             787,000
            </span>
           </span>
          </div>
         </li>
         <li class="video_list_cont _suggest_page_1">
          [linkx]
          
          [ahref]
          
          <div class="video_date">
           <span class="date">
            25 days ago
           </span>
           [linkx]
           
          </div>
          <div class="video_info">
           <span class="play">
            <li>[ahref]</li>[pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
           </span>
           <span class="like">
            <em class="ico ico_like">
             <span class="blind">
              좋아요 수[ahref][area1][mkey1][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][linkx][linkx][ahref][pkeyx][area1][keywordx][pkeyx][pkeyx][linkx][linkx][ahref]
             </span>
            </em>
            <span>
             963,532
            </span>
           </span>
          </div>
         </li>
         <li class="video_list_cont _suggest_page_1">
          [ahref]
          
          [linkx]
          
          <div class="video_date">
           <span class="date">
            1 month ago
           </span>
           [ahref]
           
          </div>
          <div class="video_info">
           <span class="play">
            <em class="ico ico_play">
             <span class="blind">
              재생수
             </span>
            </em>
            <span>
             12,199
            </span>
           </span>
           <span class="like">
            <em class="ico ico_like">
             <span class="blind">
              좋아요 수
             </span>
            </em>
            <span>
             421,031
            </span>
           </span>
          </div>
         </li>
        </ul>
       </div>
       <div class="btn_area">
        <span class="paginate">
         <strong class="blind">
          Page
         </strong>
         <em class="num _current_suggest_page_no">
          <span class="blind">
          </span>
          1
         </em>
         <span class="num">
          /5
         </span>
        </span>
        <strong class="blind">
         More
        </strong>
        <span class="btn_arr prev">
         [ahref]
         
        </span>
        <span class="btn_arr next">
         [ahref]
         
        </span>
       </div>
      </div>
      <div class="video_area upcoming">
       <h3 class="tit">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <div class="inner">
        <ul class="video_list _upcoming_list">
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][ahref][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][pkeyx][linkx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </ul>
       </div>
       <div class="btn_area">
        <span class="paginate">
         <strong class="blind">
          Page
         </strong>
         <em class="num _current_upcoming_page_no">
          <span class="blind">
          </span>
          1
         </em>
         <span class="num">
          /6
         </span>
        </span>
        <strong class="blind">
         More
        </strong>
        <span class="btn_arr prev">
         [linkx]
         
        </span>
        <span class="btn_arr next">
         [linkx]
         
        </span>
       </div>
      </div>
     </div>
    </div>
    <div class="btn_top_area" style="display:none;">
     [ahref]
     
    </div>
   </div>
   <div id="footer">
    <div class="footer_banner">
     <div class="btn_area">
      [linkx]
      
      [ahref]
      
     </div>
    </div>
    <div class="footer_info">
     <div class="address">
      <ul class="footer_link">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <ul class="footer_link">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <div class="adress_info">
       <div class="inner">
        <span class="txt">
         Business Registration Number: 220-81-62517
        </span>
        <span class="txt">
         Communication Vendor Registration Number: 2006-GyeonggiSeongnam-0692
        </span>
        <span class="txt">
         NAVER Corp. CEO, Seong Sook Han
        </span>
       </div>
       <div class="inner">
        <span class="txt">
         6, Buljeong-ro, Bundang-gu, Seongnam-si, Gyeonggi-do, Korea
        </span>
        <span class="txt">
         Tel: 1588-3820
        </span>
        <span class="txt">
         Email address :
         [ahref]
         
        </span>
        <span class="txt">
         Platforms : V LIVE App / www.vlive.tv
        </span>
       </div>
      </div>
      <span class="copyright">
       [ahref]
       
       All rights reserved.
      </span>
     </div>
     <div class="social_link">
      [ahref]
      
      [linkx]
      
     </div>
     <div class="vlive_broadcast_menu" style="display:none;">
      <li>[ahref]</li><li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref]
     </div>
    </div>
   </div>
  </div>
  <div class="ly_evt _gift_coin" style="display:none;">
   <div class="lyr_cont">
    <div class="ly_cont_area">
     <h2 class="tit">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <strong class="sub_tit">
      Coins as a gift have been added to your account.
     </strong>
     <div class="event_coin">
      <span class="icon_coin">
       <span class="blind">
        V Coin
       </span>
      </span>
      <span class="txt _amount">
      </span>
     </div>
     <div class="txt_area">
      <p class="txt">
       Coins received on PC can only be used on PC.
      </p>
      <p class="txt2">
       <li>[pkeyx]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
      </p>
     </div>
    </div>
    <div class="btn_area">
     [ahref]
     
     [linkx]
     
    </div>
   </div>
   [ahref]
   
  </div>
  <div class="pop_lyr _accept_gift_coin _success_confirm" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt" data-success="{0} coins have been added to your account.">
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [ahref]
      
     </span>
     <span class="btn">
      [linkx]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _accept_gift_coin _success" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt" data-success="{0} coins have been added to your account.">
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      <a class="btn_txt ok _close_accept_gift" href="#">
       OK
      </a>
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _accept_gift_coin _error" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt" data-error="A temporary error has occurred.<br>Please try again." data-expire="Gift coins have expired, so you cannot receive coins.">
      [ahref][area1][keywordx][area1][keywordx][linkx]<li>[area1][keywordx]</li>
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [linkx]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _email_sent" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <h4 class="txt">
      Message Sent
     </h4>
     <p class="txt point _email_addr">
     </p>
     <p class="txt">
      Check your email within 24 hours.
      <br/>
      Tap [OK] to go to the login screen.
     </p>
     <p class="txt">
      If you didn't receive a reset email, check that the email address you entered is the one you verified with V LIVE.
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [linkx]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _email_authentication" style="display:none;">
   <div class="lyr_cont1">
    <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[linkx]<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
   </div>
  </div>
  <div class="pop_lyr _common_layer_alert" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt">
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [linkx]
       [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][linkx][pkeyx][pkeyx][area1][keywordx][ahref][area1][keywordx][linkx][ahref][pkeyx][ahref][area1][keywordx][linkx][ahref][pkeyx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][linkx][area1][keywordx]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _common_layer_alert_sub" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt">
     </p>
     <em class="sub_info">
     </em>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [ahref]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _common_layer_confirm" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt">
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [linkx]
      
     </span>
     <span class="btn">
      [linkx]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _common_layer_confirm_sub" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <p class="txt">
     </p>
     <em class="sub_info">
     </em>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [ahref]
      
     </span>
     <span class="btn">
      [ahref]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr _common_layer_title_confirm" style="display:none;">
   <div class="lyr_cont1">
    <div class="txt_area">
     <h4 class="tit">
     </h4>
     <p class="txt">
     </p>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [ahref]
      
     </span>
     <span class="btn">
      [ahref]
      
     </span>
    </div>
   </div>
  </div>
  <div class="pop_lyr" id="privacyAgreePopup" style="display:none;">
   <div class="lyr_cont1 _agree_lyr _account _email _password" style="display:none;">
    <div class="txt_area">
     <h4 class="tit">
      Collection and Use of Personal Information
     </h4>
     <p class="txt">
      By selecting [Agree], you agree to the collection and use of your personal information by V LIVE.
     </p>
     <div class="agreement_content">
      <div class="vlive_law_common">
       <div class="vlive_law_content">
        <div class="vlive_law_content">
         <h3 class="law_tit">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <p class="law_txt">
          - Email address and password (in case logging in with email)
         </p>
         <h3 class="law_tit">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <p class="law_txt">
          - To check the identity and whether the user is a member when using the membership services (in case logging in with email)
         </p>
         <h3 class="law_tit">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <p class="law_txt">
          - Until the account is deleted
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="common_btn_area">
     <span class="btn">
      [ahref]
      
     </span>
     <span class="btn">
      [linkx]
      
      [ahref]
      
      [linkx]
      
     </span>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0196
  </b>
 </body>
</html>|<---