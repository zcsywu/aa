--->|﻿
<!DOCTYPE html PUBLIC "" "">
<html class="no-js" lang="fr" xml:lang="fr" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="2017-10-17T16:07:34.43Z" name="DC.date"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="application-name"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="msapplication-starturl"/>
  <meta content="Démarrer Salon Livre Paris
" name="msapplication-tooltip"/>
  <meta content="core" name="css-links"/>
  <meta content="additional" name="css-links"/>
  <meta content="hacks" name="css-links"/>
  <meta content="custom" name="css-links"/>
  <meta content="/ScriptsV4/libraries/jquery-3.2.1.min.js|/ScriptsV4/libraries/jquery-ui/1.12.1/jquery-ui.min.js|/ScriptsV4/Libraries/jquery.hoverIntent.js|/ScriptsV4/Libraries/swfobject.js|/ScriptsV4/Core_v2.js|/ScriptsV4/Controls/Footer.js|~/ScriptsV4/Libraries/doubletaptogo/doubletaptogo.min.js|~/ScriptsV4/Controls/Autocomplete.js|~/ScriptsV4/Controls/Search.js|~/ScriptsV4/Controls/CookieComplianceMessage.js|~/ScriptsV4/Libraries/cookie/jquery.cookie.js|~/ScriptsV4/Controls/Analytics/Analytics.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.mousewheel.pack.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox.pack.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox-buttons.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox-media.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox-thumbs.js|/REF/Common/WebSite-RWD/plugins/jssor/jssor.slider-26.1.5.min.js|/REF/Common/WebSite-RWD/plugins/owl-carousel-2/owl-carousel_override.js|/REF/Common/WebSite-RWD/js/enquire.js|/REF/REF_LivreParis/js/main-min.js" id="jslinks" name="js-links">
   <li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
  </meta>
  <meta content="0mkndCkysHE3KrTh-0qLLLtzXPPLLCDjRT6r7pv3Jc4" name="verify-v1"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="a9sZ9aakLyOA3E6liaxoavvwsFA06YeKQTjbRfQyle8" name="google-site-verification"/>
 </head>
 <noscript>
 </noscript>
 <body class="twoColumn sidebars-none fr" id="MasterBodyTag">
  <form action="/zoom-sur/russie-pays-honneur/" id="aspnetForm" method="post" name="aspnetForm">
   <div>
   </div>
   <div>
   </div>
   <div class="noindex" id="skip">
    <p>
     <a href="t">
      Skip to main content
     </a>
    </p>
   </div>
   <div class="top-bar-wrapper">
    <div class="top-bar clearfix centered-page">
     <ul class="toolbar toolbar-horizontal toolbar-dock-left">
      <li class="toolbar-item toolbar-item-languages bodyText">
       <div class="languages-container">
        <label class="visuallyhidden" for="ddlLanguages" title="">
         Language
        </label>
        <select class="languages" id="ddlLanguages" name="ctl00$uab$languageSelectorControl$ddlLanguages">
         <option data-url="/fr/zoom-sur/russie-pays-honneur/" selected="selected" value="fr">
          français
         </option>
         <option data-url="/en/focus-on/country-of-honour/" value="en">
          English
         </option>
        </select>
       </div>
      </li>
     </ul>
     <ul class="toolbar toolbar-horizontal toolbar-dock-right">
      <li class="toolbar-item toolbar-item-search bodyText">
       <div class="noindex" id="search">
        <div id="ctl00_uab_searchControl1_SearchFormPanel">
         <button class="button mainButton " id="ctl00_uab_searchControl1_searchButton" name="ctl00$uab$searchControl1$searchButton" type="submit" value="Rechercher">
          <span>
           Rechercher
          </span>
         </button>
        </div>
       </div>
      </li>
      <li class="toolbar-item bodyText">
       [ahref]
       
      </li>
     </ul>
    </div>
   </div>
   <div class="centered-page" id="wrapper">
    <header class=" topNavDepth3 multiLevelNav" id="header">
     <div class="noindex" id="brand">
      <div class="unmanagedContent">
       [content7[linkx]content8]
      </div>
      [ahref]
      
     </div>
     <div class="no-js selectedHasNoChildren" id="topNavigation">
      <ul class="level1">
       <li class=" leaf first" id="navTreeItem-176352">
        [ahref]
        
       </li>
       <li class=" hasChildren " id="navTreeItem-172394">
        [linkx]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-172396">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-172398">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-198234">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-198242">
          <a href="/photos/livreparis/albums" target="_blank" title="Galerie Photos">
           Galerie Photos
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172589">
          <a href="/lesalon/nos-partenaires/" title="Partenaires">
           Partenaires
          </a>
         </li>
         <li class=" last leaf " id="navTreeItem-236310">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172657">
        [linkx]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-173038">
          <a href="/visiter/auteurs-et-dedicaces/" title="Auteurs et dédicaces">
           Auteurs et dédicaces
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172699">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-173079">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-172397">
          [linkx]
          
         </li>
         <li class=" last leaf " id="navTreeItem-172672">
          <a href="/fr/Salon-du-livre-2019/evenements/#" target="_top" title="Toute la programmation">
           Toute la programmation
          </a>
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172976">
        <a href="/scenes-thematiques/" title="PROGRAMMATION">
         PROGRAMMATION
        </a>
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-172978">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-224298">
          <a href="/scenes-thematiques/scene-europe/" title="Scène Europe">
           Scène Europe
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172985">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-172997">
          <a href="/scenes-thematiques/scene-young-adult/" title="Scène Young Adult">
           Scène Young Adult
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172989">
          <a href="/scenes-thematiques/scene-bd-manga-comics/" title="Scène BD, Manga et Comics">
           Scène BD, Manga et Comics
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172993">
          <a href="/scenes-thematiques/scene-jeunesse/" title="Scène Jeunesse">
           Scène Jeunesse
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-173005">
          <a href="/scenes-thematiques/scene-agora/" title="Scène Agora">
           Scène Agora
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-173018">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-173009">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-241523">
          <a href="/scenes-thematiques/scene-livre-audio/" title="Scène Livres Audio">
           Scène Livres Audio
          </a>
         </li>
         <li class=" last leaf " id="navTreeItem-181143">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172778">
        <a href="/zoom-sur/" title="ZOOM SUR">
         ZOOM SUR
        </a>
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-174840">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-174934">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-174927">
          <a href="/zoom-sur/espace-ile-de-france/" title="Espace Île-de-France">
           Espace Île-de-France
          </a>
         </li>
         <li class=" last leaf " id="navTreeItem-237211">
          <a href="/zoom-sur/hors-les-murs/" title="Rencontres Hors les murs">
           Rencontres Hors les murs
          </a>
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172788">
        [ahref]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-172800">
          [linkx]
          
         </li>
         <li class=" last leaf " id="navTreeItem-172848">
          <a href="/participer/devenir-partenaire/" title="Devenir partenaire">
           Devenir partenaire
          </a>
         </li>
        </ul>
       </li>
       <li class=" last hasChildren " id="navTreeItem-172905">
        [linkx]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-219998">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-172954">
          <a href="/infos-pratiques/foire-aux-questions/" title="FAQ">
           FAQ
          </a>
         </li>
         <li class=" last leaf " id="navTreeItem-173374">
          [ahref]
           [content5[linkx]content6[linkx]content7[linkx]content8[linkx]content9]
          
         </li>
        </ul>
       </li>
      </ul>
     </div>
    </header>
    <div class="contentLayoutBox clearfix">
     <div id="pageTopContainer">
      <div class="noindex" id="breadcrumb">
       <span class="breadcrumbStart">
        Vous êtes ici
       </span>
       <ol>
        <li class="level1 first">
         [ahref]
         
        </li>
        <li class="level2">
         [ahref]
         
        </li>
        <li class="level3 last">
         <span>
          Russie, pays à l'honneur
         </span>
        </li>
       </ol>
      </div>
     </div>
     <div class="centered-page" id="content">
      <div id="contentHook1">
      </div>
      <div class="unmanagedContent">
       <div>
        <ul class="btn-mobile">
         <li class="mobile-menu" id="mobile-menu">
         </li>
        </ul>
        <ol class="top-bar-wrapper__reseaux">
         <li class="top-bar-wrapper__reseaux__fa">
          [ahref]
          
         </li>
         <li class="top-bar-wrapper__reseaux__tw">
          <a href="/salondulivre" target="_blank">
           twitter
          </a>
         </li>
         <li class="top-bar-wrapper__reseaux__lk">
          [ahref]
          
         </li>
         <li class="top-bar-wrapper__reseaux__it">
          [linkx]
          
         </li>
         <li class="top-bar-wrapper__reseaux__yt">
          <a href="/channel/UCc-NNnn1trZuDxvO8rLJZkw" target="_blank">
           youtube
          </a>
         </li>
        </ol>
        <ol class="top-bar-wrapper__partners">
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/presse/">
           Presse
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
        </ol>
       </div>
      </div>
      <h1 id="pageName">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h1>
      <ul class="twoColumnList" id="ctlChildPageList">
       <li class="childPageList layoutBlocks c-100 eole--left">
        <div class="layoutBlockContainer layoutBlockContainer1Col">
         <div class="layoutBlock layoutBlock-1">
          <h2>
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h2>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks c-75-ad anubis--second">
        <div class="layoutBlockContainer layoutBlockContainer2Col">
         <div class="layoutBlock layoutBlock-1">
          <div class="unmanagedContent">
           <div>
            <p>
             En 2018, le Salon LIVRE PARIS a accueilli la
             <strong>
              Russie en pays invité d’honneur.
             </strong>
             <br/>
             <br/>
             Du 16 au 19 mars, LIVRE PARIS a reçu
             <strong>
              38 auteurs russes
             </strong>
             , reflets de la diversité et du dynamisme de la création littéraire contemporaine de la Russie : des
             <strong>
              auteurs reconnus internationalement
             </strong>
             , mais également de
             <strong>
              nouveaux talents, émergents et prometteurs.
             </strong>
             <br/>
             <br/>
             <i>
              « Les liens historiques, culturels et littéraires entre la France et la Russie sont privilégiés, uniques même. Nos littératures, et au-delà nos cultures, s’écoutent et se répondent. L’édition 2018 du Salon Livre Paris célébrera ce dialogue intense entre les lettres de nos deux pays. »
             </i>
             <br/>
             <br/>
             Vincent Montagne, Président du SNE
            </p>
           </div>
          </div>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="layoutBlock layoutBlock-2">
          <div class="unmanagedContent">
           <div>
            <div id="div-gpt-ad-1486721070573-0" style="height:250px; width:300px;">
            </div>
           </div>
          </div>
          <div class="feedItems layoutBlock-2">
          </div>
         </div>
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks lego50">
        <div class="layoutBlockContainer layoutBlockContainer">
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks c-75-adp triton--second">
        <div class="layoutBlockContainer layoutBlockContainer2Col">
         <div class="layoutBlock layoutBlock-1">
          <div class="unmanagedContent">
           <div>
            <h2>
             [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
            <br/>
            <table>
             <tr>
              <td width="25%">
               <ul>
                <li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
               </ul>
              </td>
              <td width="25%">
               <ul>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexe%C3%AFx$sp$xIvanov&amp;startRecord=1#" target="_blank">
                  Alexeï Ivanov
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexandrax$sp$xLitvinax$sp$x&amp;startRecord=1#" target="_blank">
                  Alexandra Litvina
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexe%C3%AFx$sp$xMakouchinski&amp;startRecord=1#" target="_blank">
                  Alexeï Makouchinski
                 </a>
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Ludmilax$sp$xOulitska%C3%AFa&amp;startRecord=1#" target="_blank">
                  Ludmila Oulitskaïa
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Zakharx$sp$xPrilepine&amp;startRecord=1#" target="_blank">
                  Zakhar Prilepine
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Victorx$sp$xRemizov&amp;startRecord=1#" target="_blank">
                  Victor Remizov
                 </a>
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Olgax$sp$xSlavnikova&amp;startRecord=1#" target="_blank">
                  Olga Slavnikova
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexandrex$sp$xSneguirev&amp;startRecord=1#" target="_blank">
                  Alexandre Sneguirev
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Marinax$sp$xStepnova&amp;startRecord=1#" target="_blank">
                  Marina Stepnova
                 </a>
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Yanax$sp$xVagnerx$sp$x&amp;startRecord=1#" target="_blank">
                  Yana Vagner
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexe%C3%AFx$sp$xVarlamov&amp;startRecord=1#" target="_blank">
                  Alexeï Varlamov
                 </a>
                </li>
                <li>
                 [linkx]
                 
                </li>
               </ul>
              </td>
             </tr>
            </table>
            <p class="btn">
             [ahref]
             
            </p>
            <br/>
           </div>
          </div>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="layoutBlock layoutBlock-2">
          <a href="">
          </a>
          <div class="feedItems layoutBlock-2">
          </div>
         </div>
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks lego1 color-secondary">
        <div class="layoutBlockContainer layoutBlockContainer">
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks lego50">
        <div class="layoutBlockContainer layoutBlockContainer">
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks c-33-33-33 cronos">
        <div class="layoutBlockContainer layoutBlockContainer2Col">
         <div class="layoutBlock layoutBlock-1">
          <a href="/zoom-sur/russie-pays-honneur/page-des-libraires/">
          </a>
          <h2>
           <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h2>
          <div class="unmanagedContent">
           <div>
            Livre Paris et
            [linkx]
            
            s’associent pour faire découvrir au public les auteurs du pays à l’honneur et faire rayonner les lettres russes au-delà de Paris et du salon.
            <p class="btn">
             [linkx]
             
            </p>
            <br>
             [link]<li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
            </br>
           </div>
          </div>
          <a class="more" href="/zoom-sur/russie-pays-honneur/page-des-libraires/" title="">
           Plus...
          </a>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="layoutBlock layoutBlock-2">
          [content19][content20][linkx][content1][content2][linkx]
         </div>
         <div class="clear">
         </div>
        </div>
       </li>
      </ul>
      <div id="contentHook2">
      </div>
     </div>
    </div>
    <div class="noindex " id="footer">
     <div class="extendedContainer oneNavLevel vertical" id="ctl00_pageFooter_extendedContent">
      <div class="no-js selectedHasNoChildren" id="footerNavigation">
       <ul class="level1">
        <li class=" leaf first" id="navTreeItem-footer-176352">
         [ahref]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172394">
         [ahref]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172657">
         <li>[link]</li>[link]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172976">
         <a href="/scenes-thematiques/" title="PROGRAMMATION">
          PROGRAMMATION
         </a>
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172778">
         [linkx]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172788">
         <a href="/participer/" title="PARTICIPER">
          PARTICIPER
         </a>
        </li>
        <li class=" last hasChildren " id="navTreeItem-footer-172905">
         <a href="/infos-pratiques/" title="INFOS PRATIQUES">
          INFOS PRATIQUES
         </a>
        </li>
       </ul>
      </div>
      <div class="unmanagedContent">
       <div>
        <div class="footer">
         [keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        </div>
        <noscript>
         <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-NMN5JQN" style="display:none;visibility:hidden" width="0">
         </iframe>
        </noscript>
       </div>
      </div>
     </div>
     <span class="copyright">
      <div class="footerBottom">
       <ul class="footerBottom__company">
        <li>
         [ahref]
          [content15][content16][linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       [ahref]
       
      </div>
      <div class="footerBottom__last">
       <ul>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </span>
    </div>
   </div>
   <div id="UserMessageContainer">
    <div id="cookieComplianceMessage">
     <p>
      Nous utilisons des cookies pour faire fonctionner ce site Internet, améliorer son utilisation et vous proposer des offres et services adaptés à vos centres d'intérêt. Veuillez noter qu'en utilisant ce site, vous consentez à l'utilisation de cookies.
      <a href="/cookies/">
       <strong>
        Pour toute information sur les cookies notamment comment les gérer, cliquer ici
       </strong>
      </a>
     </p>
     <div id="cookieComplianceMessageAction">
      [content8][content9][linkx]
     </div>
    </div>
   </div>
  </form>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KRPNFS" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0213
  </b>
 </body>
</html>
|<---