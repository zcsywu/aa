--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="ko_KR" property="og:locale"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="http://asil.kr/logo.png" property="og:image"/>
 </head>
 <body>
  <div id="wrap">
   <div class="headerwrap">
    <div class="header">
     <div class="logo">
      [ahref]
      
     </div>
     <div class="topmenu">
      <ul>
       <li class="ico1">
        <a href="/apt/site/app.jsp">
         <span>
          Sign up
         </span>
         <strong>
          앱 다운로드
         </strong>
        </a>
       </li>
       <li class="ico2">
        [ahref]
        
       </li>
       <li class="ico3">
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="mainmenu">
      <ul>
       [ahref]
       
       <li class="menu02">
        <a href="/apt/site/offer.jsp">
         <span>
          지역별 실시간
         </span>
         <strong>
          매물현황[linkx][linkx][mkey1]
         </strong>
        </a>
       </li>
       <li class="menu03">
        [linkx]
        
       </li>
       <li class="menu04">
        <a href="/apt/site/3dview.jsp">
         <span>
          아파트 실거래가
         </span>
         <strong>
          3D VIEW
         </strong>
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div id="contentswrap">
    <div id="contents_left">
     <div id="mainimg">
      <ul>
       <li>
        <a href="/click?sid=A%2FBJfjAKti%2BCpsBAHASdhPABqJEyR6WgpyqcHlsRKfY%3D" target="_blank">
        </a>
       </li>
       <li>
        <a href="/est/simple?category_code1=10&amp;?src=image&amp;kw=00051F&amp;utm_medium=banner&amp;utm_source=aptpr&amp;utm_campaign=direct&amp;utm_content=app_5" target="_blank">
        </a>
       </li>
      </ul>
     </div>
     <div id="mainicon" style="top:550px">
      <ul>
       <li>
        <a href="#">
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div id="infoimg">
      [ahref]
      
     </div>
     <div id="ranking">
      <div id="ranking_title">
       아파트 순위 / 그래프
      </div>
      <div id="ranking_tab">
       <ul>
        <li>
         <a href=";">
          최고/최저가 순위
         </a>
        </li>
        <li class="tab_line">
         │
        </li>
        <li>
         <a href=";">
          실거래가 그래프
         </a>
        </li>
       </ul>
      </div>
      <div id="ranking_viewbtn">
       <ul>
        <li>
         <a href="/apt/site/price.jsp?area=11&amp;dealmode=1&amp;household=50">
         </a>
        </li>
       </ul>
      </div>
      <iframe frameborder="0" height="630px" id="ifrm_chart" marginheight="0" marginwidth="0" name="ifrm_chart" scrolling="no" src="/apt/include/graph/apt_rankingAll.jsp?main=true&amp;area=11680" width="100%">
      </iframe>
      <br/>
     </div>
     <div id="market">
      <div id="market_title">
       중개업소 추천매물
      </div>
      <div id="market_viewbtn">
       <ul>
        <li>
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="contentbox">
       <table class="tbl_type02_2">
        <colgroup>
         <col width="81"/>
         <col width="70"/>
         <col width="140"/>
         <col width="180"/>
         <col width="70"/>
         <col width=""/>
         <col width="120"/>
         <col width="50"/>
         <col width="190"/>
        </colgroup>
        <thead>
         <tr>
          <th>
           거래
          </th>
          <th>
           등록일
          </th>
          <th>
           지역
          </th>
          <th>
           단지명
          </th>
          <th>
           면적(㎡)
          </th>
          <th>
           층[mkey1]<li>[keywordx]</li>[linkx]
          </th>
          <th>
           매물가
          </th>
          <th colspan="2">
           연락처
          </th>
         </tr>
        </thead>
        <tbody>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 03
          </td>
          <td>
           <a href="/apt/site/offer_view.jsp?offer=2067058">
            서울 송파구 잠실동
           </a>
          </td>
          <th class="cllipsis">
           <a href="/apt/site/offer_view.jsp?offer=2067058" title="잠실엘스">
            잠실엘스
           </a>
           <br>
           </br>
          </th>
          <td title="111. 5㎡ = 34평">
           111. 5
          </td>
          <td>
           고
          </td>
          <td class="price">
           <a href="/apt/site/offer_view.jsp?offer=2067058">
            176,000만
           </a>
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           [linkx]
           
           <br/>
           <a href="/apt/site/member.jsp?member=-9831" title="02-422-7720">
            02-422-7720
           </a>
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           [linkx]
           
          </td>
          <th class="cllipsis">
           <a href="/apt/site/offer_view.jsp?offer=2066007" title="현대프라임">
            현대프라임
           </a>
           <br/>
          </th>
          <td title="104. 4㎡ = 32평">
           104. 4
          </td>
          <td>
           저
          </td>
          <td class="price">
           [linkx]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           <a href="/apt/site/member.jsp?member=-9862" title="부동산1번지현대프라임공인">
            부동산1번지현대프라임공인
           </a>
           <br/>
           <a href="/apt/site/member.jsp?member=-9862" title="02-458-5959">
            02-458-5959
           </a>
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           [ahref]
           
          </td>
          <th class="cllipsis">
           [linkx]
           
           <br/>
          </th>
          <td title="101. 8㎡ = 31평">
           101. 8
          </td>
          <td>
           7
          </td>
          <td class="price">
           [ahref]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           <a href="/apt/site/member.jsp?member=-10166" title="일등그라시움공인중개사">
            일등그라시움공인중개사
           </a>
           <br/>
           <a href="/apt/site/member.jsp?member=-10166" title="02-472-7100">
            02-472-7100
           </a>
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           <a href="/apt/site/offer_view.jsp?offer=2063777">
            서울 양천구 목동
           </a>
          </td>
          <th class="cllipsis">
           [linkx]
           
           <br/>
          </th>
          <td title="72. 2㎡ = 22평">
           72. 2
          </td>
          <td>
           2
          </td>
          <td class="price">
           <a href="/apt/site/offer_view.jsp?offer=2063777">
            112,000만
           </a>
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           [ahref]
           
           <br/>
           [linkx]
           
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           <a href="/apt/site/offer_view.jsp?offer=2063776">
            서울 양천구 목동[pkeyx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx]</li><li>[mkey1]</li>[keywordx]
           </a>
          </td>
          <th class="cllipsis">
           <a href="/apt/site/offer_view.jsp?offer=2063776" title="목동신시가지7단지">
            목동신시가지7단지
           </a>
           <br/>
          </th>
          <td title="90. 1㎡ = 27평">
           90. 1
          </td>
          <td>
           3
          </td>
          <td class="price">
           [linkx]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           [linkx]
           
           <br/>
           <a href="/apt/site/member.jsp?member=-10273" title="02-2644-0040/010-9460-0305">
            02-2644-0040/010-9460-0305
           </a>
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           [linkx]
           
          </td>
          <th class="cllipsis">
           [linkx]
           
           <br/>
          </th>
          <td title="101. 8㎡ = 31평">
           101. 8
          </td>
          <td>
           7
          </td>
          <td class="price">
           [linkx]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           [linkx]
           
           <br/>
           [linkx]
           
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02[pkeyx][ahref][ahref][ahref][pkeyx][pkeyx][pkeyx][linkx][ahref][ahref][linkx][mkey1][linkx][linkx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
          </td>
          <td>
           <a href="/apt/site/offer_view.jsp?offer=2063725">
            서울 마포구 아현동
           </a>
          </td>
          <th class="cllipsis">
           [linkx]
           
           <br/>
          </th>
          <td title="110. 9㎡ = 34평">
           110. 9
          </td>
          <td>
           고
          </td>
          <td class="price">
           <a href="/apt/site/offer_view.jsp?offer=2063725">
            75,000만
           </a>
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           [linkx]
           
           <br/>
           [linkx]
           
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           <a href="/apt/site/offer_view.jsp?offer=2066457">
            서울 송파구 가락동
           </a>
          </td>
          <th class="cllipsis">
           <li>[linkx]</li>[pkeyx][linkx][linkx]
          </th>
          <td title="128. 9㎡ = 39평">
           128. 9
          </td>
          <td>
           5
          </td>
          <td class="price">
           [linkx]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           <a href="/apt/site/member.jsp?member=-9977" title="우리공인중개사">
            우리공인중개사
           </a>
           <br/>
           <a href="/apt/site/member.jsp?member=-9977" title="02-409-1999">
            02-409-1999
           </a>
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 02
          </td>
          <td>
           [linkx]
           
          </td>
          <th class="cllipsis">
           [ahref]
           
           <br/>
          </th>
          <td title="107. 6㎡ = 33평">
           107. 6
          </td>
          <td>
           저
          </td>
          <td class="price">
           [ahref]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           [linkx]
           
           <br/>
           [ahref]
           
          </td>
         </tr>
         <tr>
          <td>
          </td>
          <td>
           19. 07. 01
          </td>
          <td>
           [linkx]
           
          </td>
          <th class="cllipsis">
           <a href="/apt/site/offer_view.jsp?offer=2062806" title="잠실엘스">
            잠실엘스
           </a>
           <br/>
          </th>
          <td title="111. 5㎡ = 34평">
           111. 5
          </td>
          <td>
           고
          </td>
          <td class="price">
           [ahref]
           
          </td>
          <td class="license">
          </td>
          <td class="license cllipsis">
           <a href="/apt/site/member.jsp?member=-9831" title="대신공인중개사">
            대신공인중개사
           </a>
           <br/>
           [linkx]
           
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
     <div id="license">
      <ul>
       <li class="license_titlezone">
        중개업소 스케치
       </li>
       <li class="license_arrow">
        <span id="stotal">
         1/20
        </span>
       </li>
      </ul>
      <div id="contbox_license">
       <ul style="display:block;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10387">
          황제부동산중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10387">
              대구 남구 봉덕동 1135-1
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-9513">
         </a>
        </li>
        <li class="license_name">
         [ahref]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-9513">
              박인숙
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-9513">
              충남 천안시 서북구 불당19로 200, 401동 131호(불당동)
             </a>
            </td>
           </tr>
           <tr>
            <th>
             <h1>
              [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
             </h1>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [linkx]
               [keywordx][pkeyx][ahref][pkeyx]
              
             </span>
             건
             <span class="tBlueB">
              [ahref]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         [linkx]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [ahref]
              [ahref][pkeyx][ahref][pkeyx][keywordx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-9332">
              충남 천안시 서북구 백석동 909 호반리젠시빌아파트 상가 2동 103호
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-9332">
               34
              </a>
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-10384">
         </a>
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10384">
          박라영공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10384">
              박라영
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]<li>[ahref]</li>[mkey1]
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-9497">
          세종까치공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-9497">
              044-868-1800
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-9497">
              <h2>
               [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h2>
              세종시 새롬동 74-47 새뜸마을12단지 상가1동 117호
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [linkx]
               [pkeyx][linkx][mkey1][pkeyx][pkeyx][ahref][linkx][mkey1][mkey1][linkx]
              
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10383">
          더샵복덩이공인중개사<li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]<li>[pkeyx]</li>
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              [ahref]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [ahref]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10380">
          아이파크6차단지내공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10380">
              박정숙
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10380">
              충남 천안시 서북구 쌍용동 2045 현대6차아파트 단지내 상가 106호
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10381">
          의왕내손e편한공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10381">
              류영혜
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10381">
              031-447-7777 / 010-5252-7259
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10381">
               17
              </a>
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [ahref]
         
        </li>
        <li class="license_name">
         [linkx]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10378">
              최은주
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10378">
              031-206-3400 / 010-8755-4935
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10378">
              경기 수원시 영통구 망포동 728 힐스테이트 영통 상가 602동 104호
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              [linkx]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         [linkx]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10377">
               198
              </a>
             </span>
             건
             <span class="tBlueB">
              [linkx]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [ahref]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10376">
          한강공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          [keywordx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][ahref][linkx][keywordx][linkx][ahref][ahref][mkey1][mkey1][ahref][ahref]
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10374">
          김천현대엠코공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10374">
              010-6888-6666 / 010-6888-6666
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              [ahref]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-10373">
         </a>
        </li>
        <li class="license_name">
         [ahref]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10373">
              02-2244-5888 / 010-8959-8003
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10373">
              서울 동대문구 답십리동 322-50 1층
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-10372">
         </a>
        </li>
        <li class="license_name">
         [linkx]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10372">
              허경돈
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10372">
               55
              </a>
             </span>
             건
             <span class="tBlueB">
              [ahref]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [ahref]
         
        </li>
        <li class="license_name">
         [ahref]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10370">
              방수현
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             051-557-7890<li>[mkey1]</li>[linkx][linkx][mkey1]
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물<li>[keywordx]</li><li>[mkey1]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[ahref]</li>
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10370">
               88
              </a>
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-10368">
         </a>
        </li>
        <li class="license_name">
         [ahref]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10368">
              02-2282-7255
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10368">
               72
              </a>
             </span>
             건
             <span class="tBlueB">
              [ahref]
              
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [ahref]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10364">
          다복공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10364">
              051-757-0107
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-10363">
         </a>
        </li>
        <li class="license_name">
         [linkx]
         
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [ahref]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10363">
              경기 성남시 분당구 분당동 39 삼부아파트근린상가 103호
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              [ahref]
              
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         <a href="/apt/site/member.jsp?member=-10362">
         </a>
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10362">
          혁신푸르지오부동산공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10362">
              하두옥
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10362">
              010-2838-7427 / 010-2838-7427<li>[linkx]</li>[keywordx]<li>[mkey1]</li>[mkey1][ahref]
             </a>
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10362">
              울산 중구 유곡동 260
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10362">
               73
              </a>
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
       <ul style="display:none;">
        <li>
         [linkx]
         
        </li>
        <li class="license_name">
         <a href="/apt/site/member.jsp?member=-10360">
          힐탑공인중개사
         </a>
        </li>
        <li class="contbox">
         <table class="tbl_license">
          <tbody>
           <tr>
            <th>
             대표
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10360">
              이규목
             </a>
            </td>
           </tr>
           <tr>
            <th>
             전화
            </th>
            <td>
             [linkx]
             
            </td>
           </tr>
           <tr>
            <th>
             주소
            </th>
            <td>
             <a href="/apt/site/member.jsp?member=-10360">
              서울 성동구 하왕십리동 1070 센트라스 E동 103호
             </a>
            </td>
           </tr>
           <tr>
            <th>
             매물
            </th>
            <td>
             <span class="tBlueB">
              <a href="/apt/site/member.jsp?member=-10360">
               99[keywordx][linkx][linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][keywordx][keywordx][ahref][linkx]
              </a>
             </span>
             건
             <span class="tBlueB">
              <a href="r">
               홈페이지
              </a>
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </li>
       </ul>
      </div>
     </div>
     <div id="price">
      <div id="price_title">
       실거래가 바로가기
      </div>
      <div id="contbox_price">
       <ul>
        <li class="city01">
         <a href="/apt/site/price.jsp?area=11&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city02">
         <a href="/apt/site/price.jsp?area=41&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city03">
         [ahref]
         
        </li>
        <li class="city04">
         [ahref]
         
        </li>
        <li class="city05">
         [linkx]
         
        </li>
        <li class="city06">
         [ahref]
         
        </li>
        <li class="city07">
         [ahref]
         
        </li>
        <li class="city08">
         <a href="/apt/site/price.jsp?area=31&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city09">
         [linkx]
         
        </li>
        <li class="city10">
         [linkx]
         
        </li>
        <li class="city11">
         [linkx]
         
        </li>
        <li class="city12">
         <a href="/apt/site/price.jsp?area=44&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city13">
         <a href="/apt/site/price.jsp?area=45&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city14">
         [ahref]
         
        </li>
        <li class="city15">
         <a href="/apt/site/price.jsp?area=47&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city16">
         <a href="/apt/site/price.jsp?area=48&amp;dealmode=1&amp;household=50">
         </a>
        </li>
        <li class="city17">
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
     <div id="saleout">
      <div id="saleout_title">
       분양정보
      </div>
      <div id="saleout_tab">
       <ul>
        <li>
         [ahref]
         
        </li>
        <li class="saleout_tab_line">
         │
        </li>
        <li>
         <a href=")">
          마감전
         </a>
        </li>
        <li class="saleout_tab_line">
         │
        </li>
        <li>
         <a href=")">
          발표전
         </a>
        </li>
       </ul>
      </div>
      <div id="saleout_viewbtn">
       <ul>
        <li>
         <a href="/apt/site/bunyang.jsp">
         </a>
        </li>
       </ul>
      </div>
      <div id="contbox_saleout">
       <div class="saleout_scrollzone" id="bunyangDiv1" style="display:block">
        <div id="saleout_list">
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000596">
            힐스테이트 황금 센트럴(대구) (750세대)
            <br/>
            청약기간 2019. 07. 03 ~ 2019. 07. 08
           </a>
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000611">
            운서역 반도유보라 (인천) (450세대)
            <br/>
            청약기간 2019. 07. 03 ~ 2019. 07. 05
           </a>
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000612">
            무진로 진아리채 리버뷰 (광주광역시) (558세대)
            <br/>
            청약기간 2019. 07. 03 ~ 2019. 07. 05
           </a>
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [linkx]
           
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000571">
            강원고성 간성스위트엠센트럴 (267세대)
            <br/>
            청약기간 2019. 07. 03 ~ 2019. 07. 05
           </a>
          </li>
         </ul>
        </div>
       </div>
       <div class="saleout_scrollzone" id="bunyangDiv2" style="display:none">
        <div id="saleout_list">
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [ahref]
           
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [linkx]
           
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000611">
            운서역 반도유보라 (인천) (450세대)
            <br/>
            청약기간 2019. 07. 03 ~ 2019. 07. 05
           </a>
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [linkx]
           
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="saleout_scrollzone" id="bunyangDiv3" style="display:none">
        <div id="saleout_list">
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000596">
            힐스테이트 황금 센트럴(대구) (750세대)
            <br/>
            당첨자발표 2019. 07. 12
           </a>
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [linkx]
           
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           <a href="/apt/bunyang/plan_view.jsp?bunyang=2019000611">
            운서역 반도유보라 (인천) (450세대)
            <br/>
            당첨자발표 2019. 07. 12
           </a>
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [ahref]
           
          </li>
         </ul>
         <ul>
          <li class="icon_saleout">
          </li>
          <li class="list_saleout">
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div id="sidewrap">
     <div class="sidetitle">
      관심단지
      <span class="tYellow" id="fav_cnt">
       0/10
      </span>
     </div>
     <div id="sidebox">
      <ul id="fav_ul">
       <li>
        관심단지 없음
       </li>
      </ul>
     </div>
     <div class="sidetitle2">
      최근검색
      <span class="tYellow" id="recent_cnt">
       0/20
      </span>
     </div>
     <div id="sidebox2">
      <ul>
       <li>
        최근검색 없음
       </li>
      </ul>
     </div>
     <div id="etc">
      <ul>
       <li class="download">
        <a href="/apt/site/app.jsp">
        </a>
       </li>
       <li class="top">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <p>
   </p>
   <div id="footerwrap">
    <div id="footer">
     <ul class="logo">
      <li>
      </li>
     </ul>
     <ul class="copy">
      <li class="footmenu">
       [linkx]
       
       │
       <a href="/apt/site/info.jsp">
        이용약관
       </a>
       │
       [linkx]
       
       │
       [ahref]
       
       │
       <a href="/apt/site/login.jsp">
        가맹점 로그인
       </a>
       │
       [ahref]
       
      </li>
      <li class="m_t20">
       주소 : 서울 강남구 테헤란로 329, 907호(역삼동, 삼흥빌딩)  (주)아실 대표 : 전병옥 사업자번호 : 589-88-00855 Tel. 1644-8497
       <p>
        (c) 2018 아실 ALL RIGHTS RESERVED.
       </p>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0019
  </b>
 </body>
</html>|<---