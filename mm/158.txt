--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="ko" http-equiv="content-language"/>
  <meta content="yes" name="apple-mobile-web-app-capable"/>
  <meta content="initial-scale=1, width=device-width, user-scalable=yes" name="viewport"/>
  <meta content="white" name="apple-mobile-web-app-status-bar-style"/>
  <meta content="rkyrhItEtvy6Hl8Acq9scsxGNEWgfG4aZSVMknUGRNY" name="google-site-verification"/>
 </head>
 <body class="ko map" id="map" onload="window._pulsarDocLoad=true">
  <header class="header-main" data-aos="move-down" id="header">
   <div class="wrapper">
    [linkx]
    
    <div>
     [linkx]
     
     [linkx]
     
    </div>
   </div>
  </header>
  <div class="menu-nav" id="menu">
   <div class="inner">
    [linkx]
    
    <nav>
     <ul class="menu">
      <li class="hide-mobile">
       [linkx]
       
      </li>
      <li class="home">
       [ahref]
       
      </li>
      <li class="drop-me rooms-drop">
       [ahref]
       
       <ul class="drop-menu">
        <li class="menu-sectiontitle">
         <span novaref="4280024" novatype="txt">
          쿠튀르 컬렉션
         </span>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li class="menu-sectiontitle">
         <span novaref="4280026" novatype="txt">
          부티크 컬렉션
         </span>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="drop-me eatdrink-drop">
       [ahref]
       
       <ul class="drop-menu">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li>
       [ahref]
        [link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       <a class="contact" href="/ko/contact.html">
        <span novaref="4239215" novatype="txt">
         연락처
        </span>
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
    </nav>
   </div>
  </div>
  <div class="menu-nav-bg">
  </div>
  <div class="clickonme">
  </div>
  <div class="navigation-secondary" data-aos="move-down">
   <div class="navigation-secondary-wrapper">
    <ul class="submenu submenu-couture">
     <li>
      [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <ul class="submenu submenu-boutique">
     <li>
      <a class="boutique" href="/ko/boutique.html">
       <span novaref="4280027" novatype="txt">
        개요
       </span>
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <ul class="submenu submenu-eatdrink">
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <ul class="submenu submenu-meetings">
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <ul class="submenu submenu-press">
     <li>
      [linkx]
      
     </li>
     <li>
      <li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
   </div>
  </div>
  <section class="main">
   <div class="page-banner">
    <div class="slideshow slideshow-banner">
     <div class="myslider slider-banner">
      <div editableslider="1" minheight="700" minwidth="2200">
       <div class="novaslider hideonload">
       </div>
      </div>
     </div>
    </div>
    <div class="inner" data-aos="fade-up" data-aos-delay="1250" data-aos-duration="1000">
     <h1 novaref="4240047" novatype="txt">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h1>
    </div>
   </div>
   <div class="alternate-right" id="main">
    <div class="wrapper">
     <div class="nova_editablelisting" novamasterid="4240043">
     </div>
     <article class="post post-repeat">
      <div class="inner">
       <div class="post-img" data-aos="fade-one">
       </div>
       <div class="post-content" data-aos="fade-two">
        <div class="inner">
         <div class="textfill">
          <h2 novaref="4240048" novatype="txt">
           <h3>
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h3>
           <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h2>
         </div>
         <hr/>
         <div class="p-wrap">
          <p novaref="4240049" novatype="multi">
           메종 샹젤리제는 몽테뉴 애비뉴, 샹젤리제 로터리, 그랑 팔레 사이, 파리의 "골든 트라이앵글"의 중심부에 있습니다. 이 훌륭한 호텔에서 짧은 도보 거리에 최고급 상점들과 최고의 패션 디자이너 숍들, 그랑 팔레, 개선문, 루브르 박물관 및 너무나 많은 파리의 볼거리들이 즐비하고 분주한 도심 한가운데 잔잔한 고요같은 꿈처럼 느끼게 해줍니다. 호텔에 주차하실 수 있습니다.
          </p>
         </div>
         <ul class="alt-list">
          <li novaref="4240050" novatype="multi">
          </li>
         </ul>
         <div class="more-content hideonload showoncmsload">
          <div class="p-wrap">
           <p novaref="4240051" novatype="multi">
           </p>
          </div>
          <ul class="alt-list">
           <li novaref="4240052" novatype="multi">
           </li>
          </ul>
         </div>
         [ahref]
         
         <div class="button">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </article>
    </div>
   </div>
   <div class="post-map">
    <div id="jsloader">
     <div>
     </div>
     <div>
     </div>
     <div>
     </div>
    </div>
    <div id="ggmap">
     <div id="ggmap_map">
     </div>
     <div id="ggmap_sidebar">
      <div id="ggmap_sidebar_inner">
       [ahref]
       
       <table cellpadding="0" cellspacing="0" class="tabledir">
        <tr>
         <td>
          <div class="iti_to" id="direction_divhotel" position="1">
           <div id="searchbox_hotel">
           </div>
          </div>
         </td>
         <td align="center" class="rev_dir" rowspan="2" valign="middle">
          [ahref]
          
         </td>
        </tr>
        <tr>
         <td>
          <div class="iti_from" id="direction_divsearch" position="2">
           <li>[link]</li>[link][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li><li>[link]</li>
          </div>
         </td>
        </tr>
        <tr>
         <td align="left" class="dir_options" colspan="2">
          <select id="direction_mileskm">
           <option value="km">
            킬로미터
           </option>
           <option value="마일">
            마일
           </option>
          </select>
         </td>
        </tr>
        <tr>
         <td align="right" class="dir_options submmitdir_wrap" colspan="2">
          <button class="easy-button submmitdir" id="searchbox_computedirections">
           오시는 길
          </button>
         </td>
        </tr>
       </table>
       <div id="directionsPanel">
       </div>
      </div>
     </div>
    </div>
    <div id="googlemap_data" style="display:none">
    </div>
   </div>
   <div class="directions">
    <div class="wrapper">
     <div class="nova_editablelisting" novamasterid="4240045">
     </div>
     <div class="post post-repeat">
      <div class="inner">
       [content9][content10][content11][linkx]
      </div>
     </div>
     <div class="post post-repeat">
      <div class="inner">
       <div class="post-title">
        <h2 novaref="4240075" novatype="txt">
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
       </div>
       <div class="post-details">
        <div class="p-wrap">
         <p novaref="4240076" novatype="multi">
          샹젤리제 로터리 (라인 28, 42, 52, 73, 83 &amp; 93)
         </p>
         <p novaref="4240076" novatype="multi">
          몽테뉴 프랑소아 I가 (라인 42 &amp; 80)
         </p>
        </div>
        <ul class="alt-list">
         <li novaref="4240077" novatype="multi">
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="post post-repeat">
      <div class="inner">
       <div class="post-title">
        <h2 novaref="4240071" novatype="txt">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
       </div>
       <div class="post-details">
        [content17[linkx]content18[linkx]content19]
       </div>
      </div>
     </div>
     <div class="post post-repeat">
      <div class="inner">
       <div class="post-title">
        <h2 novaref="4240067" novatype="txt">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
       </div>
       <div class="post-details">
        <div class="p-wrap">
         <p novaref="4240068" novatype="multi">
          가르 셍: 10 분
         </p>
         <p novaref="4240068" novatype="multi">
          가르 델레 뒤 노르: 20 분
         </p>
         <p novaref="4240068" novatype="multi">
          가르 몽파르나스: 15분
         </p>
         <p novaref="4240068" novatype="multi">
          가르 데 리옹: 20분[content1][content2][linkx]
         </p>
         <p novaref="4240068" novatype="multi">
          가르 도스테릴츠: 20분
         </p>
        </div>
        <ul class="alt-list">
         <li novaref="4240069" novatype="multi">
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="post post-repeat">
      <div class="inner">
       <div class="post-title">
        <h2 novaref="4240063" novatype="txt">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
       </div>
       <div class="post-details">
        <div class="p-wrap">
         <p novaref="4240064" novatype="multi">
          앵발리드 오를리 공항: 30 분
         </p>
         <p novaref="4240064" novatype="multi">
          샤를 드 골 공항 – 에토왈 -> 샤를 드 골 공항: 40 분
         </p>
        </div>
        <ul class="alt-list">
         <li novaref="4240065" novatype="multi">
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="post post-repeat">
      <div class="inner">
       <div class="post-title">
        <h2 novaref="4240054" novatype="txt">
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
       </div>
       <div class="post-details">
        <div class="p-wrap">
         <p novaref="4240055" novatype="multi">
          퐁 델알마 / 앵발리드 - 오를리 공항: 45 분
         </p>
         <p novaref="4240055" novatype="multi">
          퐁 델알마 / 앵발리드 - 샤를 드골 공항: 55 분
         </p>
         <p novaref="4240055" novatype="multi">
          오를리 철도 + 셔틀: 오스테를리츠 - 오를리 공항: 35 분
         </p>
        </div>
        <ul class="alt-list">
         <li novaref="4240056" novatype="multi">
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="post post-repeat">
      <div class="inner">
       <div class="post-title">
        <h2 novaref="4240083" novatype="txt">
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
       </div>
       <div class="post-details">
        <div class="p-wrap">
         <p novaref="4240084" novatype="multi">
          차로 호텔에 오시려면, 서쪽 "페리페리크" (순환도로)를 타고 포르테 마이요로 내리세요. 그후 아르 데 트리옴페쪽으로 애비뉴 드 라 그랑다르메를 따라가서 샹젤리제로 내려가 첫번째 로터리로 가서, 우회전해 애비뉴 몽테뉴로 가세요. 그 다음 첫번째 길 (뤼 바야르)에서 좌회전해 마지막으로, 프랑소와 1가에서 뤼 장 구종으로 좌회전하세요. 주차는 호텔에서 주차하실 수 있습니다.
         </p>
        </div>
        <ul class="alt-list">
         <li novaref="4240085" novatype="multi">
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="midsection">
   </div>
  </section>
  kinda
  <footer class="footer-main">
   <section class="footer-top">
    <div class="wrapper">
     <article class="footer-column">
      <ul class="footer-links">
       <li>
        <span novaref="4239219" novatype="txt">
         8, rue Jean Goujon
        </span>
        <span novaref="4239220" novatype="txt">
         75008 파리 - 프랑스
        </span>
       </li>
       <li>
        <span>
         전화번호:
        </span>
        <span novaint="1" novaref="4239221" novatype="txt">
         +33 1 40 74 64 64
        </span>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
      <ul class="social">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </article>
    </div>
   </section>
   <section class="footer-bottom">
    <div class="wrapper">
     [ahref]
     
     <ul class="footer-legal">
      <li>
       [linkx]
       
       <div class="hideonload" id="languages">
        <div id="pulsarflaglist">
         <ul id="flag_menu">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
     </ul>
    </div>
   </section>
   <section class="footer-extra">
    <div class="wrapper">
     <ul class="footer-logos">
      <li>
      </li>
      <li>
      </li>
     </ul>
    </div>
   </section>
   <section class="footer-bar">
    <div class="inner">
     <div class="footer-cta">
      <span class="caption" novaref="4309217" novatype="txt">
      </span>
      <span class="subcaption" novaref="4309218" novatype="txt">
       BEST RATE GUARANTEE
      </span>
     </div>
     [linkx]
     
    </div>
   </section>
  </footer>
  <div class="sidebar-overlay">
  </div>
  <div class="sidebar-navigation" id="sidebar-navigation">
   [linkx]
   
   <nav>
    <ul class="sidebar-menu" id="sidebar-menu">
     <li class="hide-mobile">
      [ahref]
      
     </li>
     <li class="home">
      [linkx]
      
     </li>
     <li class="drop-me rooms-drop">
      [ahref]
      
      <ul class="drop-menu">
       <li class="menu-sectiontitle">
        <span novaref="4280024" novatype="txt">
         쿠튀르 컬렉션
        </span>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li class="menu-sectiontitle">
        <span novaref="4280026" novatype="txt">
         부티크 컬렉션
        </span>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a class="superior" href="/ko/superior.html">
         <span novaref="4239188" novatype="txt">
          슈페리어 부티크
         </span>
        </a>
       </li>
      </ul>
     </li>
     <li class="drop-me eatdrink-drop">
      [ahref]
      
      <ul class="drop-menu">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [content11][content12][linkx][content13][content14][content15]
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </nav>
   <ul class="sidebar-info">
    <li>
     [ahref]
     
    </li>
    <li>
     [linkx]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="menu-btn">
   <div class="menu-icon">
    <span>
    </span>
    <span>
    </span>
    <span>
    </span>
   </div>
  </div>
  [linkx]
  
  <div class="gdpr">
   <p class="gdpr-text">
    본 사이트는 더 나은 서비스 제공을 위해 쿠키를 이용하며, 이에 대한 여러분의 동의를 요청합니다.
    <span class="gdpr-divider">
     |[content3[linkx]content4]
    </span>
    [ahref]
    
   </p>
   [ahref]
   
   [linkx]
   
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0163
  </b>
 </body>
</html>|<---