--->|<!DOCTYPE html>
<html class="hidden" lang="ko-KR" prefix="og: http://ogp.me/ns#">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1, user-scalable=no" name="viewport"/>
  <meta content="DXcszjxvXd" name="baidu-site-verification">
  </meta>
 </head>
 <body class="page page-id-14078 page-child parent-pageid-14022 page-template page-template-tpl-is-city-hotel page-template-tpl-is-city-hoteltpl-is-city-hotel-php okura-nikko-hotels is-hotel hotel-nikko-nara is-brand--blue">
  <div class="hfeed site js_site" id="page">
   <header class="header js_header">
    <div class="header__utility js_header__utility">
     <div class="header__utility--layout-center o_layout-center">
      <div class="header__lang-selector lang-selector js_lang-selector">
       <dl class="dropy">
        <dt class="dropy__title">
         <span class="dropy__title-span">
          Language
         </span>
        </dt>
        <dd class="dropy__content">
         <ul class="dropy__list">
          <li class="dropy__list-item dropy__list-item--current">
           [ahref][area1][keywordx][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][pkeyx][area1][mkey1][pkeyx][area1][keywordx][linkx][ahref][pkeyx][ahref][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][ahref][area1][mkey1][area1][keywordx]
          </li>
          <li class="dropy__list-item">
           [linkx]
           
          </li>
          <li class="dropy__list-item">
           [linkx]
           
          </li>
          <li class="dropy__list-item">
           [ahref]
           
          </li>
          <li class="dropy__list-item">
           <a class="dropy__list-item__a js_dropy__list-item__a" href="/zh-hant/japan/nara/hotel-nikko-nara/">
            繁體中文[area1][mkey1]<li>[area1][keywordx]</li>[linkx]
           </a>
          </li>
         </ul>
        </dd>
       </dl>
      </div>
      <div class="header__utility-menu menu menu--utility js_menu--utility menu--utility--brand">
       <nav class="menu__nav menu--utility__nav" id="site-navigation" role="navigation">
        <div class="menu-utility-container">
         <ul class="menu__ul menu--utility__ul menu__ul--en" id="menu-utility">
          <li class="menu-item menu-item-contact">
           <a href="/ko/contact-us/contact-by-phone/">
            예약 센터(프리다이얼)
           </a>
          </li>
         </ul>
        </div>
       </nav>
      </div>
      <div class="header__utility__group-logo">
       [linkx]
       
      </div>
     </div>
    </div>
    <div class="header__nav js_header__nav is_max">
     <div class="header__nav--layout-center o_layout-center">
      <div class="header__nav-mobile mobile__menu js_mobile__menu">
       [ahref]
       
      </div>
      <div class="header__nav-logo header__logo js_header__logo logo header__nav-logo_container logo--nikko">
       [linkx]
       
      </div>
      <div class="header__nav-book-now js_nav-book-now header__nav-book-now_brand">
       [linkx]
       
      </div>
      <div class="header__nav-home js_header__nav-home">
       <div class="home__link">
        [linkx]
        
        <span class="close-menu js-close-menu">
        </span>
       </div>
      </div>
      <div class="header__nav-menu js_header__nav-menu menu menu--primary">
       <nav class="menu__nav menu--primary__nav" id="site-navigation" role="navigation">
        <div class="menu-primary-container">
         <ul class="menu__ul menu--primary__ul menu__ul--ko" id="menu-primary-korean-1">
          <li class="js_menu-item--oneharmony-login menu-item menu-item-type-custom menu-item-object-custom menu-item-14321">
           [pkeyx][area1][keywordx][area1][keywordx][ahref][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][linkx][pkeyx][linkx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-14322">
           [ahref]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14323">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14324">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14325">
             [linkx]
             
            </li>
           </ul>
          </li>
          <li class="js_menu-item--ourhotels menu-item menu-item-type-custom menu-item-object-custom menu-item-14326">
           [linkx]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14327">
           [linkx]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14328">
           [ahref]
           
          </li>
         </ul>
        </div>
       </nav>
      </div>
      <div class="js_oneharmony-login oneharmony-login u_hidden">
       <form action="/en/Account/Login" class="oneharmony-login__form" method="POST" target="_blank">
        <div class="oneharmony-login__uname">
        </div>
        <div class="oneharmony-login__pwd">
        </div>
        <div class="oneharmony-login__submit">
        </div>
        <[area1][keywordx]>
        </[area1][keywordx]>
       </form>
      </div>
     </div>
    </div>
   </header>
   <div class="site-content" id="content">
    <div class="hero hotel__hero" style="background-image: url( 'https://d3g2yh83to8qa2.cloudfront.net/wp-content/uploads/1/2016/04/06010005/qnzz_1600x800_2-1.jpg' )">
     <div class="hero__darken">
      <div class="hero--layout-center o_layout-center hotel__hero-container">
       <div class="hero__header-space">
       </div>
       <div class="hero__content-wrapper">
        <div class="hero__content">
         <div class="hotel__hero-title">
          호텔 닛코 나라
         </div>
         <div class="hotel__time-temp">
          <div class="hv__weather js_weather" data-city="nara" data-country="japan" data-time="1">
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="o_layout-center hotel__sabre--layout-center">
       <div class="hotel__sabre-price js-hotel__sabre-price" data-sabre="25049">
        <div class="hotel__sabre-rate-container js-hotel__sabre-loading loading">
         가격보기
        </div>
        <div class="hotel__sabre-rate-container js-hotel__sabre-avail">
         <div class="hotel-list__hotel__starting-from starting-from js-starting-from">
          <span class="starting-from__from">
           부터
          </span>
          <span class="starting-from__price">
           <span class="starting-from__currency js-starting-from__currency">
            JPY
           </span>
           <span class="starting-from__value js-starting-from__value">
            0
           </span>
           <span class="starting-from__from--chinese">
            ~부터
           </span>
           <span class="starting-from__from--korea">
            부터[area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[pkeyx]
           </span>
          </span>
         </div>
        </div>
        <div class="hotel__sabre-rate-container js-hotel__sabre-no-avail">
         [pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][linkx][area1][mkey1][area1][mkey1][ahref][ahref][ahref][pkeyx][pkeyx][ahref][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][pkeyx][area1][mkey1][ahref]
        </div>
       </div>
      </div>
     </div>
    </div>
    <span class="u_anchor u_anchor--hotel" id="hotel-nikko-nara">
    </span>
    <div class="qs-hotel js_qs-hotel" id="id_qs-hotel" style="display: none;">
     <div class="qs-hotel__wrap qs-hotel--layout-center o_layout-center__small">
      <form action="" class="qs-hotel__form js_qs-hotel__form" id="id-qs-hotel__form" method="post" name="qs-hotel__form">
       <div class="qs-hotel__row qs-hotel__row--first js_qs-hotel__row--first">
        <div class="qs__field qs__field--datepicker qs-hotel__field--datepicker">
        </div>
        <div class="qs__field qs__field--datepicker qs-hotel__field--datepicker">
        </div>
        <div class="qs__field qs__field--select qs-hotel__width--medium">
         [linkx][area1][keywordx][ahref][area1][keywordx][ahref][area1][mkey1][pkeyx][area1][mkey1][ahref][linkx][linkx]
        </div>
        <div class="qs__submit qs-hotel__submit qs-hotel__width--medium">
        </div>
        <div class="qs__field qs-hotel__width--medium qs__field--last">
         [linkx]
         
        </div>
       </div>
       <div class="qs-hotel__row qs-hotel__row--second js_qs-hotel__row--second qs-hotel--hidden">
        <div class="qs__field qs__field--dropdown">
        </div>
        <div class="qs__field qs__field--dropdown">
        </div>
        <div class="qs__field qs-hotel__width--medium qs__field--last">
        </div>
       </div>
      </form>
     </div>
    </div>
    <div class="breadcrumb--layout-center">
     <div class="breadcrumbs o_layout-center">
      [ahref]
      
      <span class="breadcrumbs__sep">
       >
      </span>
      [ahref]
      
      <span class="breadcrumbs__sep">
       >
      </span>
      [linkx]
      
      <span class="breadcrumbs__sep">
       >
      </span>
      <span class="breadcrumbs__item breadcrumbs__item--span">
       호텔 닛코 나라
      </span>
     </div>
    </div>
    <div class="hotel__header">
     <div class="hotel__header--layout-center o_layout-center">
      <div class="hotel__title">
       <div class="hotel__info-container">
        <ul class="hotel__info-list">
         <li class="hotel__info-item hotel__info-item--address">
          <i class="hotel__info-icon fa fa-address">
          </i>
          <span class="hotel__info-span hotel__info-span--address">
           8-1 Sanjo-hommachi  Nara-shi  Nara 630-8122  Japan
          </span>
         </li>
         <li class="hotel__info-item hotel__info-item--phone">
          <i class="hotel__info-icon fa fa-phone">
          </i>
          <span class="hotel__info-span hotel__info-span--phone">
           81-742-35-8831
          </span>
         </li>
         <li class="hotel__info-item hotel__info-item--fax">
          <i class="hotel__info-icon fa fa-fax">
          </i>
          <span class="hotel__info-span hotel__info-span--fax">
           81-742-35-6868
          </span>
         </li>
         <li class="hotel__info-item hotel__info-item--email">
          <i class="hotel__info-icon fa fa-email">
          </i>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="two-col hotel-list__body">
     <div class="two-col--layout-center section--layout-center o_layout-center">
      <div class="two-col__sidebar sidebar hotel-list__sidebar js_sidebar">
       <div class="widget">
        <ul class="sidebar__menu sidebar__menu--hotel">
         <li class="sidebar__menu-item active">
          [linkx]
          
         </li>
         <li class="sidebar__menu-item">
          [ahref]
          
         </li>
         <li class="sidebar__menu-item">
          [linkx]
          
         </li>
         <li class="sidebar__menu-item">
          [ahref]
           <li>[ahref]</li><li>[area1][keywordx]</li><li>[linkx]</li><li>[area1][keywordx]</li>
          
         </li>
         <li class="sidebar__menu-item">
          [linkx]
          
         </li>
         <li class="sidebar__menu-item">
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="widget">
        <ul class="hotel-mobile-nav js_hotel-mobile-nav">
         <div class="hotel-mobile-nav__row hotel-mobile-nav__row--row-1 js_hotel-mobile-nav__row--row-1 clearfix">
          <ul class="hotel-mobile-nav__ul">
           <li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-1 ">
            [linkx]
            
           </li>
          </ul>
         </div>
         <span class="hotel-mobile-nav__text">
          객실
         </span>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0361
  </b>
 </body>
</html>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-1 ">
 [linkx]
 
</li>
<span class="hotel-mobile-nav__text">
 다이닝
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-1">
 [linkx]
 
</li>
<div class="hotel-mobile-nav__row hotel-mobile-nav__row--row-2 js_hotel-mobile-nav__row--row-2 clearfix">
 <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx]<li>[ahref]</li>
</div>
<span class="hotel-mobile-nav__text">
 개요
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 ">
 [linkx]
 
</li>
<span class="hotel-mobile-nav__text">
 연회 &amp; 회의
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 ">
 [linkx]
 
</li>
<span class="hotel-mobile-nav__text">
 오퍼
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 ">
 [linkx]
 
</li>
<span class="hotel-mobile-nav__text">
 One Harmony
</span>
<div class="widget">
 <div class="widget__body widget__body-ta">
  <div class="hotel__ta js_hotel-ta--13303">
   <iframe allowtransparency="true" class="hotel-list__hotel-ta__iframe" frameborder="0" scrolling="no" src="https://www.tripadvisor.com/WidgetEmbed-cdspropertysummary?partnerId=10DCC8A5A3C94363B2984DA17F8C9168&amp;display=1&amp;lang=ko&amp;locationId=574405">
   </iframe>
  </div>
 </div>
</div>
<div class="widget js_trustyou-widget u_hidden" data-lang="ko" data-trustyou-id="07adae37-b217-4272-aaea-aa1b6007cc00">
 <div class="widget__body widget__body-ty">
  <div class="hotel__ty">
   <h4 class="hotel__ty__title header__utility">
   </h4>
   <span class="hotel__ty__rating">
   </span>
   <div class="ty__rating-units clearfix js_ty__rating-units">
   </div>
   <span class="hotel__ty__reviews">
   </span>
  </div>
 </div>
</div>
<div class="two-col__content hotel-list__hotels">
 <div class="hotel-slider hotel-slider--home js_hotel-slider--home site--wrapper">
  <div class="js_hotel-slider--home__container hotel-slider__container hotel-home-slider__container">
   <div class="hotel-slider__item hotel-slider__item--531">
   </div>
   <div class="hotel-slider__item hotel-slider__item--407">
   </div>
   <div class="hotel-slider__item hotel-slider__item--197">
   </div>
   <div class="hotel-slider__item hotel-slider__item--532">
   </div>
   <div class="hotel-slider__item hotel-slider__item--530">
   </div>
   <div class="hotel-slider__item hotel-slider__item--533">
   </div>
   <div class="hotel-slider__item hotel-slider__item--412">
   </div>
  </div>
  <div class="js_hotel-slider--home__thumb-container hotel-slider__thumb-container hotel-slider--home__thumb-container">
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--531 " data-index="0">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--407 " data-index="1">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--197 " data-index="2">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--532 " data-index="3">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--530 " data-index="4">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--533 " data-index="5">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--412 " data-index="6">
   </div>
  </div>
 </div>
 <div class="hotel__content two-col__section">
  <h1 class="hotel__title">
   <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
  </h1>
  <p>
   일본의 원점인 나라의 세계유산 속에서 휴식을. “만요노구니” 나라. 일본의 원점을 느껴지는 신화의 무대, 시간을 초월하여 이어져 내려온 수많은 문화유산, 서정적인 풍경의 마을과 사계절의 자연, 야마토지의 여행에서 만나는, 마음 속 깊이 울리는 감동이 여기에 있습니다.
   <br/>
   호텔 닛코 나라는, 옛 수도・나라에서의 수많은 만남의 중심지로서, 수준 높은 서비스와 “오모테나시” 문화로, 해외에서 방문하시는 여러분을 환영합니다.
  </p>
 </div>
 <div class="fb-map">
  <div class="fb-map__canvas" data-color="blue" id="js_fb-map__canvas">
  </div>
 </div>
 <div class="fb-map__route" id="itineraryForm">
  <label class="fb-map__search-label" for="itineraryFrom">
   오시는길
  </label>
 </div>
 <div class="fb-map__search-results o_layout-center" id="itineraryPanel">
  <div class="fb-map__result-print" id="print_itinerary">
   <a class="close_it fb-map__result-btn fb-map__result-btn--top fb-map__result--close" href=";">
    정보닫기
   </a>
  </div>
  <div class="fb-map__directions js__fb-map__directions">
  </div>
  <div class="fb-map__result-print" id="print_itinerary">
   [ahref]
   
  </div>
 </div>
 <div class="fb-map__places two-col__section" id="places">
  <div class="fb-map__categories">
   <h3 class="fb-map__title">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <ul class="fb-map__categories__ul" id="monuments">
    <li>
    </li>
    <li>
    </li>
    <li>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_cafe">
      카페
     </label>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_restaurant">
      레스토랑
     </label>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_museum">
      미술관
     </label>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_art_gallery">
      아트 갤러리
     </label>
    </li>
   </ul>
  </div>
  <div class="fb-map__places-list">
   <h3 class="fb-map__title">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <ul class="fb-map__places-list__ul" id="places_list">
   </ul>
  </div>
 </div>
 <div class="hotel-home__two-col hotel-home__one-harmony two-col__section">
  <div class="hotel-home__two-col__col-1 u_text-right hotel-one-harmony__col-1">
  </div>
  <div class="hotel-home__two-col__col-2 u_text-center hotel-one-harmony__col-2">
   <div class="hotel-one-harmony__content">
    <p>
     입회비, 연회비 무료의
     <br/>
     멤버쉽 프로그램을 이용하세요.
    </p>
    <p>
     모든 숙박 및 식사시 하모니 포인트 적립
    </p>
    [ahref]
    
   </div>
  </div>
 </div>
 <div class="hotel-home__two-col hotel__content hotel-home__two-col--border-mid two-col__section">
  <div class="hotel-home__two-col__col hotel-home__two-col__col-1">
   <h3>
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <ul>
    <li>
     JR 야마토지선, 나라선 나라역 서쪽출구 직결
     <br/>
     →
     [linkx]
     
    </li>
    <li>
     긴테츠 나라선 나라역에서 도보로 12분
    </li>
    <li>
     간사이 국제공항에서 자동차로 90분
     <br/>
     →
     [ahref]
     
    </li>
    <li오사카 60분<br="" 이타미공항에서="" 자동차로="">
    </li오사카>
    →
    [linkx]
    
   </ul>
  </div>
 </div>
</div>
<li>
 제 2한나 도로—호라이 IC에서 차로 15분
</li>
<li>
 코리야마, 텐리 IC에서 니시메이한 고속도로 차로 30분
</li>
<p>
 <주차장>
 <br/>
 나라 시영 주차장 숙박 1박당 1,500엔
</p>
<h3>
 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
</h3>
<p>
 LAN선, Wi-Fi (무료 )
</p>
<h3>
 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
</h3>
<ul>
 <li>
  객실수: 330실
 </li>
 <li>
  지상10층, 지하2층
 </li>
</ul>
<p>
 [부대시설]
 <br/>
 채플/신전
</p>
<div class="hotel-home__two-col__col hotel-home__two-col__col-2">
 <h3>
  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
 </h3>
 <p>
  현금, 신용카드, JAL쿠폰
 </p>
 <ul>
  <li>
   신용카드
   <br/>
   VISA, MASTER, AMEX, JCB, Diners, China UnionPay 등
  </li>
  <li>
   세금 8%
  </li>
  <li>
   봉사료 10%
  </li>
 </ul>
</div>
<div class="brand-connect js_brand-connect section">
 <div class="brand-connect--layout-center section--layout-center o_layout-center">
  <div class="brand-connect__info">
   <div class="the-title the-title--white the-title--brand-connect">
    <h2 class="the-title__heading">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h2>
    <div class="brand_homepage_social_media_links">
     <ul class="brand__social-list">
      <li class="brand__social-item">
       [linkx]
       
      </li>
      <li class="brand__social-item">
       <a class="brand__social-a" href="/nikkonara" target="_blank" title="Facebook">
        <i class="brand__social-icon fa fa-facebook">
        </i>
       </a>
      </li>
      <li class="brand__social-item">
       [linkx]
       
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div class="brand-connect__instagram">
   <div class="sbi sbi_mob_col_auto sbi_col_5" data-cols="5" data-id="1592734754" data-num="5" data-options='{"sortby": "none", "showbio": "true","feedID": "1592734754", "headercolor": "", "imagepadding": "5","mid": "3a81a9f", "disablecache": "false", "sbiCacheExists": "true","callback": "fcb96397782143f5875d934882c4a2dc", "sbiHeaderCache": "true"}' data-res="auto" id="sb_instagram" style="width:100%; padding-bottom: 10px; ">
    <div id="sbi_images" style="padding: 5px;">
     <div class="sbi_loader fa-spin">
     </div>
    </div>
    <div id="sbi_load">
     [linkx]
     
    </div>
   </div>
  </div>
 </div>
</div>
<footer class="footer js_footer">
 <div class="footer__nav footer__nav--section section">
  <div class="footer__nav--layout-center section--layout-center o_layout-center">
   <div class="footer__nav-menu footer__nav--nav-one">
    <div class="footer__nav-title footer__nav-title--nav-one">
     오쿠라 닛코 호텔 매니지먼트
    </div>
    <div class="menu menu--footer menu--footer__nav-one js_menu--footer__nav-one">
     <nav class="menu__nav menu--footer__nav-one__nav" role="navigation">
      <div class="menu-footer-nav-one-container">
       <ul class="menu--footer__ul menu--footer-nav-one__ul" id="menu-%ec%98%a4%ec%bf%a0%eb%9d%bc-%eb%8b%9b%ec%bd%94-%ed%98%b8%ed%85%94-%eb%a7%a4%eb%8b%88%ec%a7%80%eb%a8%bc%ed%8a%b8-1">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14309">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14310">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14311">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14312">
         [ahref]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-two">
    <div class="footer__nav-title footer__nav-title--nav-two">
     보도 정보
    </div>
    <div class="menu menu--footer menu--footer__nav-two js_menu--footer__nav-two">
     <nav class="menu__nav menu--footer__nav-two__nav" role="navigation">
      <div class="menu-footer-nav-two-container">
       <ul class="menu--footer__ul menu--footer-nav-two__ul" id="menu-%eb%b3%b4%eb%8f%84-%ec%a0%95%eb%b3%b4-1">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14319">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-16625">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-16626" id="menu-item-16626">
         [ahref]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-three">
    <div class="footer__nav-title footer__nav-title--nav-three">
     관련정보
    </div>
    <div class="menu menu--footer menu--footer__nav-three js_menu--footer__nav-three">
     <nav class="menu__nav menu--footer__nav-three__nav" role="navigation">
      <div class="menu-footer-nav-three-container">
       <ul class="menu--footer__ul menu--footer-nav-three__ul" id="menu-%ea%b4%80%eb%a0%a8%ec%a0%95%eb%b3%b4-1">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14329">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14330">
         <a href="/ko/airline-partners/">
          제휴 항공사
         </a>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14331">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14332">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14333">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14334">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-14335">
         [linkx]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-four">
    <div class="footer__nav-title footer__nav-title--nav-four">
     어플리케이션 다운로드
    </div>
    <div class="menu menu--footer menu--footer__nav-four js_menu--footer__nav-four">
     <nav class="menu__nav menu--footer__nav-four__nav" role="navigation">
      <div class="menu-footer-nav-four-container">
       <ul class="menu--footer__ul menu--footer-nav-four__ul" id="menu-%ec%96%b4%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%eb%8b%a4%ec%9a%b4%eb%a1%9c%eb%93%9c-1">
        <li class="js_logo__app-store menu-item menu-item-type-custom menu-item-object-custom menu-item-14314">
         [linkx]
         
        </li>
        <li class="js_logo__google-play menu-item menu-item-type-custom menu-item-object-custom menu-item-17016">
         [ahref]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-five">
    <div class="footer__nav-title footer__nav-title--nav-five">
     One Harmony - Korean
    </div>
    <div class="menu menu--footer menu--footer__nav-five js_menu--footer__nav-five">
     <nav class="menu__nav menu--footer__nav-five__nav" role="navigation">
      <div class="menu-footer-nav-five-container">
       <ul class="menu--footer__ul menu--footer-nav-five__ul" id="menu-one-harmony-korean-1">
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14320">
         <div class="menu-block">
          <div class="menu-block__description">
           <p>
            일본으로, 세계로, 여행의 즐거움을 더해 보세요! 원 하모니 회원으로 등록하시면 다양한 혜택을 누리실 수 있습니다.
           </p>
          </div>
          <div class="menu-block__link">
           [ahref]
           
          </div>
         </div>
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
  </div>
 </div>
 <div class="footer__loc-hotels loc-hotels section">
  <div class="loc-hotels--layout-center section--layout-center o_layout-center">
   <h2 class="loc-hotels__title section__title">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h2>
   <div class="loc-hotels__tabs tabs" data-tabs="">
    <ul class="loc-hotels__tabs-ul">
     <li class="loc-hotels__tabs-li">
      [linkx]
      
     </li>
     <li class="loc-hotels__tabs-li">
      [ahref]
      
     </li>
     <li class="loc-hotels__tabs-li">
      <a class="loc-hotels__tabs-a" href="">
       미주
      </a>
     </li>
     <li class="loc-hotels__tabs-li">
      [linkx]
      
     </li>
    </ul>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__state-ul">
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        홋카이도
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <li>[pkeyx]</li>[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        간토/도쿄
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         <li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][mkey1]</li>
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        주부/호쿠리쿠
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/nagoya/">
          나고야
         </a>
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        간사이/오사카
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/himeji/">
          히메지
         </a>
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        주고쿠/시코쿠
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        큐슈
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        오키나와
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
     </ul>
    </section>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__city-ul">
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/indonesia/bali/">
        발리
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <span class="loc-hotels__city-a">
        베이징
       </span>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/vietnam/hai-phong-city/">
        하이퐁
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/philippines/manila/">
        마닐라
       </a>
      </li>
      <li style="display:block">
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/china/suzhou/">
        쑤저우
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
     </ul>
    </section>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__state-ul">
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        아메리카
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         <li>[area1][keywordx]</li><li>[area1][mkey1]</li><li>[pkeyx]</li><li>[linkx]</li>
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </section>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__state-ul">
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        네덜란드
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        독일
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        터키
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
     </ul>
    </section>
   </div>
  </div>
 </div>
 <div class="footer__legal">
  <div class="footer__legal--layout-center o_layout-center">
   <div class="footer__legal">
    <div class="menu menu--footer__legal js_menu--footer__legal">
     <nav class="menu__nav menu--footer__legal__nav" role="navigation">
      <div class="menu-footer-legal-container">
       <ul class="menu--footer-legal__ul" id="menu-legal-korean-1">
        <li class="menu-item__legal-copyright menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14315">
         <span>
          Copyright © Okura Nikko Hotel Management Co., Ltd. All Rights Reserved.
         </span>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23884">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23885">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23928">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23905">
         [linkx]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
  </div>
 </div>
</footer>
<div class="qs-modal js_qs-modal mfp-hide qs-modal--layout-center o_layout-center" id="id_qs-modal">
 <form action="" class="qs__form qs-modal__form js_qs-modal__form" data-qsu-type="modal" id="id-qs_modal__form" method="post" name="qs_modal__form">
  <div class="qs__title">
   <span class="qs__title-txt qs__title-txt--search">
    호텔검색
   </span>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-9">
   <div class="qs__field qs__field--dropdown">
    <i class="fa fa-angle-down qs__dropdown-icon js_qsu__icon-arrow">
    </i>
    <div class="qs__accordion__group qs-modal__accordion__group js_qsu__dest__acrdn-group">
    </div>
   </div>
   <div class="qs__field qs__field--dropdown">
    <i class="fa fa-angle-down qs__dropdown-icon">
    </i>
    <div class="qs__accordion__group qs-modal__hotel_accordion__group js_qsu__hotel__acrdn-group">
    </div>
   </div>
   <div class="qs__second-row js_qs-modal__second-row">
    <div>
     <div class="qs__field__container">
      <div class="qs__field qs__field--datepicker">
       <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
       </i>
      </div>
      <div class="qs__field qs__field--datepicker">
       <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
       </i>
      </div>
     </div>
     <div class="qs__field__container">
      <div class="qs__field qs__field--select">
       <label class="qs__label">
        성인
       </label>
       <select class="js_qsu__select-styled qs_field__adult js_qsu__adult" id="id_qs-modal__adult" name="qs-modal__adult">
        <option selected="selected" value="1">
         1 성인
        </option>
        <option value="2">
         2 성인
        </option>
        <option value="3">
         3 성인
        </option>
        <option value="4">
         4 성인
        </option>
        <option value="5">
         5 성인
        </option>
        <option value="6">
         6 성인
        </option>
        <option value="7">
         7 성인
        </option>
        <option value="8">
         8 성인
        </option>
        <option value="9">
         9 성인
        </option>
        <option value="10">
         10 성인
        </option>
       </select>
      </div>
     </div>
    </div>
    <div class="qs__field qs__field-text-promo">
     <label class="qs__label">
      법인/프로모션 코드
     </label>
    </div>
    <div class="qs__field qs__field--update-booking">
     [linkx]
     
    </div>
   </div>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-3">
   <div class="qs__submit qs-modal__submit">
   </div>
  </div>
 </form>
</div>
<div class="qs-modal qs-hotel-list js_qs-modal mfp-hide qs-modal--layout-center o_layout-center" id="id_qs-hotel_list">
 <form action="" class="qs__form qs-home__form js_qs-home__form" data-qsu-type="home" id="id-qs_home__form" method="post" name="qs_home__form">
  <div class="qs__title">
   <span class="qs__title-txt qs__title-txt--search">
    호텔검색
   </span>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-9">
   <div class="qs__field qs__field--dropdown">
    <i class="fa fa-angle-down qs__dropdown-icon js_qsu__icon-arrow">
    </i>
    <div class="qs__accordion__group qs-home__accordion__group js_qsu__dest__acrdn-group">
    </div>
   </div>
   <div class="qs__field__container">
    <div class="qs__field qs__field--datepicker">
     <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
     </i>
    </div>
    <div class="qs__field qs__field--datepicker">
     <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
     </i>
    </div>
   </div>
   <div class="qs__second-row qs-home__second-row js_qs-home__second-row">
    <div class="qs__field qs__field--select no-margin-right">
     <label class="qs__label">
      성인
     </label>
     <select class="js_qsu__select-styled qs_field__adult js_qsu__adult" name="qs-home__adult">
      <option selected="selected" value="1">
       1 성인
      </option>
      <option value="2">
       2 성인
      </option>
      <option value="3">
       3 성인
      </option>
      <option value="4">
       4 성인
      </option>
      <option value="5">
       5 성인
      </option>
      <option value="6">
       6 성인
      </option>
      <option value="7">
       7 성인
      </option>
      <option value="8">
       8 성인
      </option>
      <option value="9">
       9 성인
      </option>
      <option value="10">
       10 성인
      </option>
     </select>
    </div>
    <div class="qs__field qs__field-text-promo">
     <label class="qs__label">
      법인/프로모션 코드
     </label>
    </div>
    <div class="qs__field qs__field--update-booking">
     [linkx]
     
    </div>
   </div>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-3">
   <div class="qs__submit qs-modal__submit">
   </div>
  </div>
 </form>
</div>
<div class="back-to-top js_back-to-top">
 <span class="hidden-sm">
  위
 </span>
</div>
<div class="mfp-dark-popup mfp-hide mhl__mfp" id="id_modal-hotel-list">
 <h3 class="mhl__main-title section__title">
  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
 </h3>
 <div class="mhl__column mhl__column--first">
  <div class="mhl__box mhl__box--japan">
   <h3 class="mhl__title mhl__title--country">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <div class="mhl__column mhl__column--japan">
    <div class="mhl__box__state-hotel mhl__box__state-hotel--hokkaido">
     <h4 class="mhl__title mhl__title--state">
      홋카이도
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--kanto">
     <h4 class="mhl__title mhl__title--state">
      간토/도쿄
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
        [ahref][area1][mkey1]<li>[linkx]</li>
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--chubu-hokuriku">
     <h4 class="mhl__title mhl__title--state">
      주부/호쿠리쿠
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       <a class="mhl__hotel-a" href="/ko/japan/kanazawa/hotel-nikko-kanazawa">
        호텔 닛코 가나자와
       </a>
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
   </div>
   <div class="mhl__column mhl__column--japan">
    <div class="mhl__box__state-hotel mhl__box__state-hotel--kansai">
     <h4 class="mhl__title mhl__title--state">
      간사이/오사카
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--chugoku-shikoku">
     <h4 class="mhl__title mhl__title--state">
      주고쿠/시코쿠
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--kyusyu">
     <h4 class="mhl__title mhl__title--state">
      큐슈
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       <a class="mhl__hotel-a" href="/ko/japan/oita/hotel-nikko-oita-oasis-tower">
        호텔 닛코 오이타 오아시스 타워
       </a>
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--okinawa">
     <h4 class="mhl__title mhl__title--state">
      오키나와
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
     </ul>
    </div>
   </div>
  </div>
 </div>
 <div class="mhl__column">
  <h3 class="mhl__title mhl__title--country">
   <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
  </h3>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     <a class="mhl__hotel-a" href="/ko/indonesia/bali/hotel-nikko-bali-benoa-beach">
      호텔 닛코 발리 베노아 비치
     </a>
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     <a class="mhl__hotel-a" href="/ko/thailand/bangkok/hotel-nikko-bangkok">
      호텔 닛코 방콕
     </a>
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]
   </ul>
  </div>
 </div>
 <div class="mhl__column">
  <div class="mhl__box mhl__box--usa">
   <h3 class="mhl__title mhl__title--country">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <div class="mhl__box__country-hotel">
    <ul class="mhl__hotels">
     <li class="mhl__hotel-li">
      [linkx]
      
     </li>
    </ul>
   </div>
  </div>
  <div class="mhl__box mhl__box--germany">
   <h3 class="mhl__title mhl__title--country">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <div class="mhl__box__country-hotel">
    <ul class="mhl__hotels">
     <li class="mhl__hotel-li">
      <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx]<li>[ahref]</li>
     </li>
    </ul>
   </div>
  </div>
 </div>
</div>
|<---