--->|PCFET0NUWVBFIGh0bWw+CjxodG1sIGNsYXNzPSJuby1qcyIgbGFuZz0iZnIiPgogPGhlYWQ+CiAgPG1ldGEgY2hhcnNldD0idXRmLTgiLz4KICA8bWV0YSBjb250ZW50PSJJRT1lZGdlIiBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiLz4KICA8bWV0YSBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiBuYW1lPSJ2aWV3cG9ydCIvPgogIDxtZXRhIGNvbnRlbnQ9ImFwcC1pZD0zOTI2MDYyNDYsIGFwcC1hcmd1bWVudD1odHRwczovL3d3dy5vcGVyYWRlcGFyaXMuZnIiIG5hbWU9ImFwcGxlLWl0dW5lcy1hcHAiLz4KICA8dGl0bGU+CiAgIFthcmVhMV1bbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZDFdW2JyYWNrZXRsMV1bYXJlYTFdW2tleXdvcmR4XVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bYXJlYTFdW2tleXdvcmR4XVticmFja2V0cjJdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XQogIDwvdGl0bGU+CiAgPG1ldGEgY29udGVudD0iW2FyZWExXVtta2V5MV1bc3ltYm9seF1bcGtleTNdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkMV1bYnJhY2tldGwxXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMV1bc3ltYm9seF1bYnJhY2tldGwyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMl1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdIiBuYW1lPSJrZXl3b3JkcyIvPgogIDxtZXRhIGNvbnRlbnQ9IlthcmVhMV1bbWtleTFdW3N5bWJvbHhdW3BrZXkyXVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZDFdW2JyYWNrZXRsMV1bYXJlYTFdW2tleXdvcmR4XVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bYXJlYTFdW2tleXdvcmR4XVticmFja2V0cjJdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XSIgbmFtZT0iZGVzY3JpcHRpb24iLz4KICA8bWV0YSBjb250ZW50PSIxMDAwMDExODg1OTMyNDciIHByb3BlcnR5PSJmYjphZG1pbnMiLz4KICA8bWV0YSBjb250ZW50PSJPcMOpcmEgbmF0aW9uYWwgZGUgUGFyaXMiIHByb3BlcnR5PSJvZzp0aXRsZSI+CiAgIDxtZXRhIGNvbnRlbnQ9IkxlIFBhbGFpcyBHYXJuaWVyLCBs4oCZT3DDqXJhIEJhc3RpbGxlIGV0IGxhIDNlIFNjw6huZS4gUHJvZ3JhbW1hdGlvbiwgQmlsbGV0dGVyaWUsIEluZm9ybWF0aW9ucyBwcmF0aXF1ZXMuIiBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iPgogICAgPG1ldGEgY29udGVudD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvY19maWxsJTJjaF8zMTUlMmN3XzYwMC9zdGF0aWMvcGxhY2Vob2xkZXJfYmxhY2suanBnIiBwcm9wZXJ0eT0ib2c6aW1hZ2U6c2VjdXJlX3VybCI+CiAgICAgPG1ldGEgY29udGVudD0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL29wZXJhZGVwYXJpcyIgcHJvcGVydHk9Im9nOmF1dGhvciI+CiAgICAgIDxtZXRhIGNvbnRlbnQ9IndlYnNpdGUiIHByb3BlcnR5PSJvZzp0eXBlIj4KICAgICAgIDxtZXRhIGNvbnRlbnQ9Ik9ww6lyYSBuYXRpb25hbCBkZSBQYXJpcyIgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSI+CiAgICAgICAgPG1ldGEgY29udGVudD0iNjAwIiBwcm9wZXJ0eT0ib2c6aW1hZ2U6d2lkdGgiLz4KICAgICAgICA8bWV0YSBjb250ZW50PSIzMTUiIHByb3BlcnR5PSJvZzppbWFnZTpoZWlnaHQiLz4KICAgICAgICA8bWV0YSBjb250ZW50PSJbYXJlYTFdW21rZXkxXVtzeW1ib2x4XVtwa2V5NF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmQxXVticmFja2V0bDFdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIyXVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF0iIHByb3BlcnR5PSJvZzp1cmwiLz4KICAgICAgICA8bWV0YSBjb250ZW50PSJodHRwOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2NfZmlsbCUyY2hfMzE1JTJjd182MDAvc3RhdGljL3BsYWNlaG9sZGVyX2JsYWNrLmpwZyIgcHJvcGVydHk9Im9nOmltYWdlIi8+CiAgICAgICAgPG1ldGEgY29udGVudD0ic3VtbWFyeSIgbmFtZT0idHdpdHRlcjpjYXJkIi8+CiAgICAgICAgPG1ldGEgY29udGVudD0iQG9wZXJhZGVwYXJpcyIgbmFtZT0idHdpdHRlcjpzaXRlIi8+CiAgICAgICAgPG1ldGEgY29udGVudD0iW2FyZWExXVtta2V5MV1bc3ltYm9seF1bcGtleTFdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkMV1bYnJhY2tldGwxXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMV1bc3ltYm9seF1bYnJhY2tldGwyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMl1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdIiBuYW1lPSJ0d2l0dGVyOnRpdGxlIi8+CiAgICAgICAgPG1ldGEgY29udGVudD0iW2FyZWExXVtta2V5MV1bc3ltYm9seF1bcGtleTJdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkMV1bYnJhY2tldGwxXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMV1bc3ltYm9seF1bYnJhY2tldGwyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMl1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdIiBuYW1lPSJ0d2l0dGVyOmRlc2NyaXB0aW9uIi8+CiAgICAgICAgPG1ldGEgY29udGVudD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvY19maWxsJTJjaF8zMTUlMmN3XzYwMC9zdGF0aWMvcGxhY2Vob2xkZXJfYmxhY2suanBnIiBuYW1lPSJ0d2l0dGVyOmltYWdlIi8+CiAgICAgICAgPG1ldGEgY29udGVudD0iW2FyZWExXVtta2V5MV1bc3ltYm9seF1bcGtleTRdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkMV1bYnJhY2tldGwxXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMV1bc3ltYm9seF1bYnJhY2tldGwyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMl1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdIiBuYW1lPSJ0d2l0dGVyOnVybCIvPgogICAgICAgPC9tZXRhPgogICAgICA8L21ldGE+CiAgICAgPC9tZXRhPgogICAgPC9tZXRhPgogICA8L21ldGE+CiAgPC9tZXRhPgogPC9oZWFkPgogPGJvZHkgY2xhc3M9InJvdXRlLWhvbWUtbGFuZGluZyIgZGF0YS1hcHA9Im9ucCIgZGF0YS1iZWhhdmlvcj0iY25pbF9jb29raWVzX3dhcm5pbmcgc21hcnRfYmFubmVyIGd0bV90cmFja2luZyIgZGF0YS1jb29raWUtbGlmZXRpbWU9IjU2ODgwMCIgZGF0YS1ndG0tdWk9IkdUTS1LTEtMS0wiIGRhdGEtdGVtcGxhdGU9ImhvbWUiIGRhdGEtdHJhY2stcGxhbj0idHJhY2tpbmdfZ2xvYmFsX2Nvbm5lY3RlZF91c2VyIHRyYWNraW5nX2Fib19wb3BpbiB0cmFja2luZ190b29sdGlwICI+CiAgPG5vc2NyaXB0PgogICA8aWZyYW1lIGhlaWdodD0iMCIgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1LTEtMS0wiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iIHdpZHRoPSIwIj4KICAgPC9pZnJhbWU+CiAgPC9ub3NjcmlwdD4KICA8ZGl2IGNsYXNzPSJTaWRlTmF2IiBkYXRhLWJlaGF2aW9yPSJuYXZfc2lkZSIgZGF0YS1zaWRlbmF2LXN1Ym1lbnU9ImhvbWUiPgogICA8ZGl2IGNsYXNzPSJTaWRlTmF2X193cmFwcGVyIiBkYXRhLXNpZGVuYXYtd3JhcHBlcj0iIj4KICAgIDxkaXYgY2xhc3M9IlNpZGVOYXZfX3Njcm9sbGFibGUiIGRhdGEtc2lkZW5hdi1zY3JvbGxhYmxlPSIiPgogICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1taWRkbGUiIGRhdGEtc2lkZW5hdi1saXN0PSIiPgogICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtbWlkZGxlLXNsaWRlciI+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSBzdWJuYXYtdG9wIj4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICAgPGEgY2xhc3M9ImxpbmsiIGRhdGEtc2VhcmNoLXRyaWdnZXI9IiIgaHJlZj0iIyI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uIG1hei1pY29uLXNlYXJjaCI+CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiPgogICAgICAgICAgUmVjaGVyY2hlcgogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9hPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgPGEgY2xhc3M9ImxpbmsgbGluay1zcGVjaWFsIiBocmVmPSIvcHJvZ3JhbW1hdGlvbi1ldC1iaWxsZXRzIj4KICAgICAgICAgUHJvZ3JhbW1hdGlvbiBldCBCaWxsZXRzCiAgICAgICAgPC9hPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgPHNwYW4gY2xhc3M9ImxpbmsiPgogICAgICAgICA8c3BhbiBjbGFzcz0idGV4dCI+CiAgICAgICAgICBPZmZyZXMgZXQgU2VydmljZXMKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiBtYXotaWNvbi1hcnJvdyBpY29uLWFycm93LXIiPgogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1zdWJpdGVtIj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0gYmFjayBzaGFkb3ciPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gbWF6LWljb24tYXJyb3cgaWNvbi1hcnJvdy1sIj4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxhIGNsYXNzPSJsaW5rIiBocmVmPSIjIj4KICAgICAgICAgICBPZmZyZXMgZXQgU2VydmljZXMKICAgICAgICAgIDwvYT4KICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIFthaHJlZl0KICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgPGEgY2xhc3M9ImxpbmsiIGhyZWY9Ii9iaWxsZXR0ZXJpZS9iaWxsZXRzLXNlcnZpY2VzL29mZnJlcy1zcGVjdGF0ZXVycyI+CiAgICAgICAgICAgT2ZmcmVzIHNwZWN0YXRldXJzCiAgICAgICAgICA8L2E+CiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIFtsaW5reF0KICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICBbbGlua3hdCiAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIDxhIGNsYXNzPSJsaW5rIiBocmVmPSIvYmlsbGV0dGVyaWUvY2FsZW5kcmllciI+CiAgICAgICAgICAgQ2FsZW5kcmllcgogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0icHVzaC1ibG9jayI+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICA8c3BhbiBjbGFzcz0ibGluayI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0Ij4KICAgICAgICAgIFZlbmlyIGV0IHZpc2l0ZXIKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiBtYXotaWNvbi1hcnJvdyBpY29uLWFycm93LXIiPgogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1zdWJpdGVtIj4KICAgICAgICAgPGxpPlthcmVhMV1bbWtleTFdPC9saT5bbGlua3hdPGxpPlthcmVhMV1bbWtleTFdPC9saT5bYXJlYTFdW21rZXkxXTxsaT5bYWhyZWZdPC9saT4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgIDxzcGFuIGNsYXNzPSJsaW5rIj4KICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiPgogICAgICAgICAgRMOpY291dnJpciBsJ09ww6lyYQogICAgICAgICA8L3NwYW4+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uIG1hei1pY29uLWFycm93IGljb24tYXJyb3ctciI+CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LXN1Yml0ZW0iPgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSBiYWNrIHNoYWRvdyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiBtYXotaWNvbi1hcnJvdyBpY29uLWFycm93LWwiPgogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPGEgY2xhc3M9ImxpbmsiIGhyZWY9IiMiPgogICAgICAgICAgIETDqWNvdXZyaXIgbCdPcMOpcmEKICAgICAgICAgIDwvYT4KICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIFthaHJlZl0KICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgPGEgY2xhc3M9ImxpbmsiIGhyZWY9Ii9hcnRpc3Rlcy9kZWNvdXZyaXIvbG9wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2hpc3RvaXJlIj4KICAgICAgICAgICBIaXN0b2lyZQogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL2FydGlzdGVzL2RlY291dnJpci9sb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvbG9wZXJhLWJhc3RpbGxlIj4KICAgICAgICAgICBMJ09ww6lyYSBCYXN0aWxsZQogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIFthaHJlZl0KICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgPGEgY2xhc3M9ImxpbmsiIGhyZWY9Ii9hcnRpc3Rlcy9vcmNoZXN0cmUtZXQtY2hvZXVycyI+CiAgICAgICAgICAgT3JjaGVzdHJlIGV0IENoxZN1cnMKICAgICAgICAgIDwvYT4KICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIDxoMj4KICAgICAgICAgICA8Yj5bYXJlYTFdW21rZXkxXVtzeW1ib2x4XVtwa2V5eF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmQxXVticmFja2V0bDFdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIyXVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF08L2I+CiAgICAgICAgICA8L2gyPgogICAgICAgICAgW2FocmVmXQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL2FjYWRlbWllIj4KICAgICAgICAgICBBY2Fkw6ltaWUKICAgICAgICAgIDwvYT4KICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InB1c2gtYmxvY2siPgogICAgICAgICAgW2FocmVmXQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgPHNwYW4gY2xhc3M9ImxpbmsiPgogICAgICAgICA8c3BhbiBjbGFzcz0idGV4dCI+CiAgICAgICAgICBTb3V0ZW5lei1ub3VzCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gbWF6LWljb24tYXJyb3cgaWNvbi1hcnJvdy1yIj4KICAgICAgICAgIFtsaW5reF1bbGlua3hdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDFdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxXVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW3BrZXl4XVthcmVhMV1bbWtleTFdW2xpbmt4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGwyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMl1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW2FyZWExXVtta2V5MV1bYXJlYTFdW2tleXdvcmR4XVtwa2V5eF1bYXJlYTFdW21rZXkxXVthcmVhMV1bbWtleTFdW2xpbmt4XVtsaW5reF1bcGtleXhdW3BrZXl4XVthcmVhMV1ba2V5d29yZHhdW2FyZWExXVtrZXl3b3JkeF1bbGlua3hdW3BrZXl4XVthcmVhMV1ba2V5d29yZHhdW2xpbmt4XQogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1zdWJpdGVtIj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0gYmFjayBzaGFkb3ciPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gbWF6LWljb24tYXJyb3cgaWNvbi1hcnJvdy1sIj4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIFtsaW5reF0KICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgPGEgY2xhc3M9ImxpbmsiIGhyZWY9Ii9zb3V0ZW5lei1ub3VzL3Byb2pldCI+CiAgICAgICAgICAgVm9pciB0b3V0CiAgICAgICAgICA8L2E+CiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL3NvdXRlbmV6LW5vdXMvcHJvamV0L3NvdXRlbmV6LXVuLXByb2pldCI+CiAgICAgICAgICAgU291dGVuZXogdW4gcHJvamV0CiAgICAgICAgICA8L2E+CiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL3NvdXRlbmV6LW5vdXMvcHJvamV0L3Jlam9pZ25lei11bi1jZXJjbGUtZGUtbWVjZW5lcyI+CiAgICAgICAgICAgUmVqb2lnbmV6IHVuIGNlcmNsZSBkZSBtw6ljw6huZXMKICAgICAgICAgIDwvYT4KICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIDxhIGNsYXNzPSJsaW5rIiBocmVmPSIvc291dGVuZXotbm91cy9wcm9qZXQvZGV2ZW5lei1hbWktZGUtbG9wZXJhIj4KICAgICAgICAgICBEZXZlbmV6IGFtaSBkZSBsJ09ww6lyYQogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICBbcGtleXhdW2FocmVmXVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGw1XVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyNV1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVtwa2V5eF1bcGtleXhdW2xpbmt4XVtsaW5reF1bbGlua3hdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDZdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHI2XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2xpbmt4XVthcmVhMV1bbWtleTFdW2FyZWExXVtta2V5MV0KICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIHN1Ym5hdi1pdGVtLWJ0biI+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InB1c2gtYmxvY2siPgogICAgICAgICAgPGEgaHJlZj0iL3NvdXRlbmV6LW5vdXMvcHJvamV0L2Fkb3B0ZXotdW4tZmF1dGV1aWwiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+CiAgICAgICAgICAgIEFET1BURVogVU4gRkFVVEVVSUwKICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImxpbmsiPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICA8c3BhbiBjbGFzcz0ibGluayI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0Ij4KICAgICAgICAgIE9jdGF2ZSBNYWdhemluZVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGwzXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyM11bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGw0XVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyNF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthaHJlZl1bcGtleXhdW2FocmVmXVthcmVhMV1bbWtleTFdW2xpbmt4XVtwa2V5eF1bbGlua3hdW2FyZWExXVtrZXl3b3JkeF1bcGtleXhdW2FocmVmXVthcmVhMV1bbWtleTFdW2FyZWExXVtrZXl3b3JkeF1bYXJlYTFdW2tleXdvcmR4XVtwa2V5eF1bYXJlYTFdW2tleXdvcmR4XVthcmVhMV1ba2V5d29yZHhdCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gbWF6LWljb24tYXJyb3cgaWNvbi1hcnJvdy1yIj4KICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtc3ViaXRlbSI+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIGJhY2sgc2hhZG93Ij4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uIG1hei1pY29uLWFycm93IGljb24tYXJyb3ctbCI+CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9InN1Ym5hdi1pdGVtIj4KICAgICAgICAgIFtsaW5reF0KICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL21hZ2F6aW5lL2NvdWxpc3NlcyI+CiAgICAgICAgICAgQ291bGlzc2VzCiAgICAgICAgICA8L2E+CiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL21hZ2F6aW5lL3JlZ2FyZHMiPgogICAgICAgICAgIFJlZ2FyZHNbYWhyZWZdW3BrZXl4XVthcmVhMV1ba2V5d29yZHhdW2xpbmt4XVtwa2V5eF1bYXJlYTFdW21rZXkxXVthaHJlZl1bYWhyZWZdW2FyZWExXVtta2V5MV1bYWhyZWZdW2FocmVmXVtwa2V5eF1bbGlua3hdW2FocmVmXVthcmVhMV1bbWtleTFdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDddW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHI3XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdCiAgICAgICAgICA8L2E+CiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL21hZ2F6aW5lL21lZGlhcyI+CiAgICAgICAgICAgTcOpZGlhcwogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgICAgW2FocmVmXQogICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJzdWJuYXYtaXRlbSI+CiAgICAgICAgICA8YSBjbGFzcz0ibGluayIgaHJlZj0iL25ld3NsZXR0ZXIiPgogICAgICAgICAgIFMnYWJvbm5lciBhdSBNYWdhemluZQogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICAgPGRpdiBjbGFzcz0icHVzaC1ibG9jayI+CiAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGUiPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGluayI+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWl0ZW0iPgogICAgICAgIFthaHJlZl0KICAgICAgICAKICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0ic3VibmF2LWJvdHRvbSI+CiAgICAgICAgPGEgY2xhc3M9ImxpbmsgYWN0aXZlICIgaHJlZj0iciI+CiAgICAgICAgIEZSCiAgICAgICAgPC9hPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8aGVhZGVyIGNsYXNzPSJIZWFkZXIiPgogICA8ZGl2IGNsYXNzPSJIZWFkZXJfX3dyYXBwZXIiIGRhdGEtaGVhZGVyLXdyYXBwZXI9IiI+CiAgICA8ZGl2IGNsYXNzPSJOb3RpZmljYXRpb24gTm90aWZpY2F0aW9uLS10b3AiIGRhdGEtYmVoYXZpb3I9Im5vdGlmaWNhdGlvbiIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgIDxkaXYgY2xhc3M9ImdyaWQtY29udGFpbmVyIj4KICAgICAgPGJ1dHRvbiBjbGFzcz0iTm90aWZpY2F0aW9uX19jbG9zZSBpY29uLWNsb3NlIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIiBkYXRhLW5vdGlmaWNhdGlvbi1jbG9zZT0iIiB0eXBlPSJidXR0b24iPgogICAgICA8L2J1dHRvbj4KICAgICAgPHAgY2xhc3M9Ik5vdGlmaWNhdGlvbl9fbWVzc2FnZSI+CiAgICAgICBOb3VzIHJlbmNvbnRyb25zIGFjdHVlbGxlbWVudCB1biBwcm9ibMOobWUgdGVjaG5pcXVlIGVtcMOqY2hhbnQgdG91dCBhY2PDqHMgw6AgbGEgYmlsbGV0dGVyaWUgZW4gbGlnbmUsIG5vdXMgdm91cyBwcmlvbnMgZGUgYmllbiB2b3Vsb2lyIG5vdXMgZW4gZXhjdXNlci4KICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJIZWFkZXJfX2lubmVyIj4KICAgICA8ZGl2IGNsYXNzPSJIZWFkZXJfX2xvZ28iPgogICAgICA8YSBjbGFzcz0iSGVhZGVyX19sb2dvLXRpdGxlIiBocmVmPSJyIj4KICAgICAgIDxkaXYgY2xhc3M9IkhlYWRlcl9fbG9nby10aXRsZUxvZ28iPgogICAgICAgIFtwa2V5eF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsOF1bYXJlYTFdW2tleXdvcmR4XVticmFja2V0cjhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVthaHJlZl1bcGtleXhdW2FocmVmXVtsaW5reF1bYXJlYTFdW21rZXkxXVthaHJlZl1bbGlua3hdW3BrZXl4XVthaHJlZl1bYXJlYTFdW21rZXkxXVthaHJlZl0KICAgICAgIDwvZGl2PgogICAgICA8L2E+CiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iSGVhZGVyX19hY3Rpb25zIj4KICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyX19sYW5ndWFnZXMgbGFuZ3VhZ2VzLWRlc2t0b3AiPgogICAgICAgW2xpbmt4XQogICAgICAgCiAgICAgICA8YSBocmVmPSIvZW4iPgogICAgICAgIEVOCiAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJIZWFkZXJfX3RoaXJkLWxpbmsgdGhpcmQtZGVza3RvcCI+CiAgICAgICA8YSBocmVmPSIvM2Utc2NlbmUiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAzCiAgICAgICAgPHN1cD4KICAgICAgICAgZQogICAgICAgIDwvc3VwPgogICAgICAgIHNjw6huZQogICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyX19zaG9wLWxpbmsgc2hvcC1kZXNrdG9wIj4KICAgICAgIDxhIGhyZWY9Ii9mci8iIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICBCb3V0aXF1ZQogICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iSGVhZGVyX19hY2NvdW50LW9ubHktbW9iaWxlIGlzLWhpZGRlbiI+CiAgICAgICA8ZGl2IGNsYXNzPSJOYXZfX2FjY291bnQiPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2hlYWRlcj4KICA8YiBzdHlsZT0iY29sb3I6YmxhY2s7YmFja2dyb3VuZC1jb2xvcjojYTBmZmZmIj4KICAgam5pY2UwOS1pcHAzMC13cS16cS0wMTkxCiAgPC9iPgogPC9ib2R5Pgo8L2h0bWw+CjxkaXYgY2xhc3M9ImxvZ2luX3Rvb2x0aXAiPgogPHNwYW4gY2xhc3M9Im1hei1pY29uLWFycm93LWZ1bGwiPgogPC9zcGFuPgogPHNwYW4gY2xhc3M9Im1hei1pY29uLWNsb3NlIj4KIDwvc3Bhbj4KIDxwPgogIENyw6lleiB2b3RyZSBjb21wdGUgT3DDqXJhIG91IGlkZW50aWZpZXotdm91cyBwb3VyIGFjY8OpZGVyIMOgIHZvcyBvZmZyZXMgcGVyc29ubmFsaXPDqWVzLgogPC9wPgogPHNwYW4gY2xhc3M9IkJ1dHRvbiBCdXR0b24tYWNjb3VudC1jcmVhdGlvbiI+CiAgTW9uIGNvbXB0ZQogPC9zcGFuPgo8L2Rpdj4KPGRpdiBjbGFzcz0iSGVhZGVyX19tZW51Ij4KIFtsaW5reF0KIAo8L2Rpdj4KPGRpdiBjbGFzcz0iTmF2Ij4KIDxuYXYgY2xhc3M9Ik5hdl9fd3JhcHBlciIgZGF0YS1iZWhhdmlvcj0ibmF2X21haW4gbmF2X3N1YiBjaGVja191c2VyX3N0YXR1cyI+CiAgPGRpdiBjbGFzcz0iTmF2X19saXN0Ij4KICAgPHVsIGNsYXNzPSIgZ3JpZC1yb3cgbGVmdCI+CiAgICA8bGkgY2xhc3M9Ik5hdl9fbGlzdC1pdGVtIj4KICAgICBbYWhyZWZdCiAgICAgCiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJOYXZfX2xpc3QtaXRlbSI+CiAgICAgPGEgY2xhc3M9Ik5hdl9fbGluayAiIGhyZWY9Ii9iaWxsZXR0ZXJpZSIgdGFyZ2V0PSIiPgogICAgICBPZmZyZXMgZXQgU2VydmljZXMKICAgICAgPHNwYW4gY2xhc3M9InVuZGVyLWxpbmsiPgogICAgICA8L3NwYW4+CiAgICAgPC9hPgogICAgIDxkaXYgY2xhc3M9InN1YmNvbnRhaW5lciIgZGF0YS1zdWJuYXY9IiI+CiAgICAgIDxkaXYgY2xhc3M9InN1YmNvbnRhaW5lcjEiPgogICAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyLXB1c2giPgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgW2FocmVmXQogICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICBbbGlua3hdCiAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgW2FocmVmXQogICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InN1YmNvbnRhaW5lcjIiPgogICAgICAgPGEgaHJlZj0iIiB0YXJnZXQ9IiI+CiAgICAgICA8L2E+CiAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXItY2xvc2UgY2xvc2UtbWVudSI+CiAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiPgogICAgICAgICBGZXJtZXIKICAgICAgICA8L3NwYW4+CiAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jbG9zZS1tZW51IiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9Ik5hdl9fbGlzdC1pdGVtIj4KICAgICBbbGlua3hdCiAgICAgCiAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyIiBkYXRhLXN1Ym5hdj0iIj4KICAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyMSI+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJjb250YWluZXItcHVzaCI+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICA8YSBkYXRhLXRyYWNraW5nPSIgIiBocmVmPSIvdmlzaXRlcy92ZW5pci1ldC12aXNpdGVyL3NlcnZpY2VzLXN1ci1wbGFjZSIgdGFyZ2V0PSIiPgogICAgICAgICAgPHAgY2xhc3M9InByb2dyYW0tdGl0bGUiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSIiIHN0eWxlPSJjb2xvcjojZmZmZmZmOyAiPgogICAgICAgICAgICBTZXJ2aWNlcyBzdXIgcGxhY2UKICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L3A+CiAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIDxhIGRhdGEtdHJhY2tpbmc9IiAiIGhyZWY9Ii92aXNpdGVzL3ZlbmlyLWV0LXZpc2l0ZXIvdmlzaXRlci1sZS1wYWxhaXMtZ2Fybmllci1ldC1sb3BlcmEtYmFzdGlsbGUiIHRhcmdldD0iIj4KICAgICAgICAgIDxwIGNsYXNzPSJwcm9ncmFtLXRpdGxlIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iIiBzdHlsZT0iY29sb3I6I2ZmZmZmZjsgIj4KICAgICAgICAgICAgVmlzaXRlciBsZSBQYWxhaXMgR2FybmllciBldCBsJ09ww6lyYSBCYXN0aWxsZQogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvcD4KICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgW2FocmVmXQogICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIDxhIGRhdGEtdHJhY2tpbmc9IiAiIGhyZWY9Ii92aXNpdGVzL3ZlbmlyLWV0LXZpc2l0ZXIvbG9jYXRpb24tZGVzLWVzcGFjZXMiIHRhcmdldD0iIj4KICAgICAgICAgIDxwIGNsYXNzPSJwcm9ncmFtLXRpdGxlIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iIiBzdHlsZT0iY29sb3I6I2ZmZmZmZjsgIj4KICAgICAgICAgICAgTG9jYXRpb24gZGVzIGVzcGFjZXMKICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L3A+CiAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaW5rcy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgPGEgaHJlZj0iL3Zpc2l0ZXMvdmVuaXItZXQtdmlzaXRlci9pbmZvcm1hdGlvbnMtcHJhdGlxdWVzLTIiIHRhcmdldD0iIj4KICAgICAgICAgIDxoMz4KICAgICAgICAgICBbYXJlYTFdW21rZXkxXVtzeW1ib2x4XVtwa2V5eF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmQxXVticmFja2V0bDFdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIyXVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF0KICAgICAgICAgIDwvaDM+CiAgICAgICAgIDwvYT4KICAgICAgICAgPHVsPgogICAgICAgICAgPGxpPgogICAgICAgICAgIFtsaW5reF0KICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgW2xpbmt4XQogICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT4KICAgICAgICAgICBbbGlua3hdCiAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpPgogICAgICAgICAgIDxhIGNsYXNzPSIiIGhyZWY9Ii9pbmZvcm1hdGlvbnMtcHJhdGlxdWVzL2ZhcSIgdGFyZ2V0PSIiPgogICAgICAgICAgICBGQVEKICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJzdWJjb250YWluZXIyIj4KICAgICAgIFthaHJlZl0KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWNsb3NlIGNsb3NlLW1lbnUiPgogICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0Ij4KICAgICAgICAgRmVybWVyCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9Imljb24tY2xvc2UtbWVudSIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJOYXZfX2xpc3QtaXRlbSI+CiAgICAgPGEgY2xhc3M9Ik5hdl9fbGluayAiIGhyZWY9Ii9hcnRpc3Rlcy9kZWNvdXZyaXIiIHRhcmdldD0iIj4KICAgICAgRMOpY291dnJpciBsJ09ww6lyYQogICAgICA8c3BhbiBjbGFzcz0idW5kZXItbGluayI+CiAgICAgIDwvc3Bhbj4KICAgICA8L2E+CiAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyIiBkYXRhLXN1Ym5hdj0iIj4KICAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyMSI+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJjb250YWluZXItcHVzaCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlua3MtY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIDxhIGhyZWY9Ii9hcnRpc3Rlcy9kZWNvdXZyaXIvbG9wZXJhLW5hdGlvbmFsLWRlLXBhcmlzIiB0YXJnZXQ9IiI+CiAgICAgICAgICA8aDM+CiAgICAgICAgICAgW2FyZWExXVtta2V5MV1bc3ltYm9seF1bcGtleXhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkMV1bYnJhY2tldGwxXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMV1bc3ltYm9seF1bYnJhY2tldGwyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMl1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdCiAgICAgICAgICA8L2gzPgogICAgICAgICA8L2E+CiAgICAgICAgIDx1bD4KICAgICAgICAgIDxsaT4KICAgICAgICAgICA8YSBjbGFzcz0iIiBocmVmPSIvYXJ0aXN0ZXMvZGVjb3V2cmlyL2xvcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9oaXN0b2lyZSIgdGFyZ2V0PSIiPgogICAgICAgICAgICBIaXN0b2lyZQogICAgICAgICAgIDwvYT4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgW2FocmVmXQogICAgICAgICAgIAogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT4KICAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpPgogICAgICAgICAgIDxhIGNsYXNzPSIiIGhyZWY9Ii9hcnRpc3Rlcy9lY29sZS1kZS1kYW5zZSIgdGFyZ2V0PSIiPgogICAgICAgICAgICDDiWNvbGUgZGUgZGFuc2UKICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpPgogICAgICAgICAgIFthaHJlZl0KICAgICAgICAgICAKICAgICAgICAgIDwvbGk+CiAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICA8YSBkYXRhLXRyYWNraW5nPSIgIiBocmVmPSIvYXJ0aXN0ZXMvc2Fpc29uLTE4LTE5IiB0YXJnZXQ9IiI+CiAgICAgICAgICA8cCBjbGFzcz0icHJvZ3JhbS10aXRsZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9IiIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7ICI+CiAgICAgICAgICAgIEFydGlzdGVzIGRlIGxhIHNhaXNvbgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvcD4KICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgW2FocmVmXQogICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIFtsaW5reF0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICA8YSBkYXRhLXRyYWNraW5nPSIgIiBocmVmPSIvYWNhZGVtaWUiIHRhcmdldD0iIj4KICAgICAgICAgIDxwIGNsYXNzPSJwcm9ncmFtLXRpdGxlIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iIiBzdHlsZT0iY29sb3I6I2ZmZmZmZjsgIj4KICAgICAgICAgICAgQWNhZMOpbWllCiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9wPgogICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InN1YmNvbnRhaW5lcjIiPgogICAgICAgPGEgaHJlZj0iL2FydGlzdGVzL2NvbmNvdXJzLWV0LWF1ZGl0aW9ucy9vcmNoZXN0cmUiIHRhcmdldD0iIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNvbnRhaW5lciI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJzdWItdGV4dC1jb250YWluZXItYmlnIiBzdHlsZT0iY29sb3I6I2ZmZmZmZjsiPgogICAgICAgICAgT3JjaGVzdHJlLSBvdXZlcnR1cmUgZGVzIGNvbmNvdXJzCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9InN1Yi10ZXh0LWNvbnRhaW5lci1zbWFsbCIgZGF0YS1jb2xvcj0iI2ZmZmZmZiI+CiAgICAgICAgICBFbiBzYXZvaXIgcGx1cwogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2E+CiAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXItY2xvc2UgY2xvc2UtbWVudSI+CiAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiPgogICAgICAgICBGZXJtZXIKICAgICAgICA8L3NwYW4+CiAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jbG9zZS1tZW51IiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvbGk+CiAgICA8bGkgY2xhc3M9Ik5hdl9fbGlzdC1pdGVtIj4KICAgICA8YSBjbGFzcz0iTmF2X19saW5rICIgaHJlZj0iL3NvdXRlbmV6LW5vdXMvcHJvamV0IiB0YXJnZXQ9IiI+CiAgICAgIFNvdXRlbmV6LW5vdXMKICAgICAgPHNwYW4gY2xhc3M9InVuZGVyLWxpbmsiPgogICAgICA8L3NwYW4+CiAgICAgPC9hPgogICAgIDxkaXYgY2xhc3M9InN1YmNvbnRhaW5lciIgZGF0YS1zdWJuYXY9IiI+CiAgICAgIDxkaXYgY2xhc3M9InN1YmNvbnRhaW5lcjEiPgogICAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyLXB1c2giPgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgW2FocmVmXQogICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICA8YSBkYXRhLXRyYWNraW5nPSIgIiBocmVmPSIvc291dGVuZXotbm91cy9wcm9qZXQvZGV2ZW5lei1hbWktZGUtbG9wZXJhIiB0YXJnZXQ9IiI+CiAgICAgICAgICA8cCBjbGFzcz0icHJvZ3JhbS10aXRsZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9IiIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7ICI+CiAgICAgICAgICAgIERldmVuZXogYW1pIGRlIGwnT3DDqXJhCiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9wPgogICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICA8YSBkYXRhLXRyYWNraW5nPSIgIiBocmVmPSIvc291dGVuZXotbm91cy9wcm9qZXQvYXNzb2NpZXotdm90cmUtZW50cmVwcmlzZSIgdGFyZ2V0PSIiPgogICAgICAgICAgPHAgY2xhc3M9InByb2dyYW0tdGl0bGUiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSIiIHN0eWxlPSJjb2xvcjojZmZmZmZmOyAiPgogICAgICAgICAgICBBc3NvY2lleiB2b3RyZSBlbnRyZXByaXNlCiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9wPgogICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICBbYWhyZWZdCiAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJidXR0b24tc3VibmF2IGRvbmF0aW9uIj4KICAgICAgIDxhIGRhdGEtbW9kYWwtaHJlZj0iaHR0cHM6Ly9hcm9wLm9wZXJhZGVwYXJpcy5mci9zb3V0ZW5lei1sb3BlcmEiIGhyZWY9Ii9zb3V0ZW5lei1sb3BlcmEiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICA8c3Bhbj4KICAgICAgICAgRmFpcmUgdW4gZG9uCiAgICAgICAgPC9zcGFuPgogICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyMiI+CiAgICAgICBbYWhyZWZdCiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlci1jbG9zZSBjbG9zZS1tZW51Ij4KICAgICAgICA8c3BhbiBjbGFzcz0idGV4dCI+CiAgICAgICAgIEZlcm1lcgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLWNsb3NlLW1lbnUiIGRhdGEtZ3J1bnRpY29uLWVtYmVkPSIiPgogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgIDwvZGl2PgogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iTmF2X19saXN0LWl0ZW0iPgogICAgIDxhIGNsYXNzPSJOYXZfX2xpbmsgIiBocmVmPSIvbWFnYXppbmUiIHRhcmdldD0iIj4KICAgICAgT2N0YXZlIE1hZ2F6aW5lCiAgICAgIDxzcGFuIGNsYXNzPSJ1bmRlci1saW5rIj4KICAgICAgIDxsaT5bbGlua3hdPC9saT5bYXJlYTFdW2tleXdvcmR4XTxsaT5bYXJlYTFdW2tleXdvcmR4XTwvbGk+CiAgICAgIDwvc3Bhbj4KICAgICA8L2E+CiAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyIiBkYXRhLXN1Ym5hdj0iIj4KICAgICAgPGRpdiBjbGFzcz0ic3ViY29udGFpbmVyMSI+CiAgICAgICA8ZGl2IGNsYXNzPSJzdWJjb250YWluZXItcHVzaCI+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICBbbGlua3hdCiAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgPGEgZGF0YS10cmFja2luZz0iICIgaHJlZj0iL21hZ2F6aW5lL2NvdWxpc3NlcyIgdGFyZ2V0PSIiPgogICAgICAgICAgPHAgY2xhc3M9InByb2dyYW0tdGl0bGUiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSIiIHN0eWxlPSJjb2xvcjojZmZmZmZmOyAiPgogICAgICAgICAgICBDb3VsaXNzZXMKICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L3A+CiAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY29udGFpbmVyIGdyb3ctZml2ZSI+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNvbnRhaW5lciBncm93LWZpdmUiPgogICAgICAgICBbYWhyZWZdCiAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImltZy1jb250YWluZXIgZ3Jvdy1maXZlIj4KICAgICAgICAgPGEgZGF0YS10cmFja2luZz0iICIgaHJlZj0iL21hZ2F6aW5lLzM1MC1hbnMiIHRhcmdldD0iIj4KICAgICAgICAgIDxwIGNsYXNzPSJwcm9ncmFtLXRpdGxlIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iIiBzdHlsZT0iY29sb3I6I2ZmZmZmZjsgIj4KICAgICAgICAgICAgMzUwIGFucwogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvcD4KICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJidXR0b24tc3VibmF2Ij4KICAgICAgIDxhIGRhdGEtYmVoYXZpb3I9Im9wZW5fbW9kYWxfaWZyYW1lIiBkYXRhLW1vZGFsLWlmcmFtZS1ocmVmPSJodHRwczovL3d3dy5vcGVyYWRlcGFyaXMuZnIvbmV3c2xldHRlcj9pbl9tb2RhbD0xIiBkYXRhLW1vZGFsLW1heC13aWR0aD0iNjMwIiBocmVmPSIvbmV3c2xldHRlciIgdGFyZ2V0PSIiPgogICAgICAgIDxzcGFuPgogICAgICAgICBTJ2Fib25uZXIgYXUgTWFnYXppbmUKICAgICAgICA8L3NwYW4+CiAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJzdWJjb250YWluZXIyIj4KICAgICAgIDxhIGhyZWY9IiIgdGFyZ2V0PSIiPgogICAgICAgPC9hPgogICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLWNsb3NlIGNsb3NlLW1lbnUiPgogICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0Ij4KICAgICAgICAgRmVybWVyCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9Imljb24tY2xvc2UtbWVudSIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJOYXZfX2xpc3QtaXRlbSI+CiAgICAgPGEgY2xhc3M9Ik5hdl9fbGluayAiIGhyZWY9IiIgdGFyZ2V0PSIiPgogICAgICA8c3BhbiBjbGFzcz0idW5kZXItbGluayI+CiAgICAgIDwvc3Bhbj4KICAgICA8L2E+CiAgICA8L2xpPgogICA8L3VsPgogICA8dWwgY2xhc3M9IiBncmlkLXJvdyByaWdodCBpcy1oaWRkZW4iPgogICAgPGxpIGNsYXNzPSJOYXZfX2xpc3QtaXRlbSI+CiAgICAgPGRpdiBjbGFzcz0iSGVhZGVyX19hY3Rpb25zLWJ1dHRvbiBzZWFyY2giIGRhdGEtYmVoYXZpb3I9Im9wZW5fc2VhcmNoX2JveCI+CiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgPC9kaXY+CiAgICA8L2xpPgogICAgPGxpIGNsYXNzPSJOYXZfX2xpc3QtaXRlbSI+CiAgICAgW2FocmVmXQogICAgIAogICAgPC9saT4KICAgIDxsaSBjbGFzcz0iTmF2X19saXN0LWl0ZW0iIGRhdGEtYmVoYXZpb3I9Im9wZW5fbG9naW5fYm94IG9wZW5fdXNlcl9ib3giIGRhdGEtaXRlbT0iYWNjb3VudCI+CiAgICAgPGRpdiBjbGFzcz0iTmF2X19hY2NvdW50Ij4KICAgICAgW2FocmVmXQogICAgICAKICAgICAgPGRpdiBjbGFzcz0ibG9naW5fdG9vbHRpcCI+CiAgICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tYXJyb3ctZnVsbCI+CiAgICAgICA8L3NwYW4+CiAgICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tY2xvc2UiPgogICAgICAgPC9zcGFuPgogICAgICAgPHA+CiAgICAgICAgQ3LDqWV6IHZvdHJlIGNvbXB0ZSBPcMOpcmEgb3UgaWRlbnRpZmllei12b3VzIHBvdXIgYWNjw6lkZXIgw6Agdm9zIG9mZnJlcyBwZXJzb25uYWxpc8OpZXMuCiAgICAgICA8L3A+CiAgICAgICA8c3BhbiBjbGFzcz0iQnV0dG9uIEJ1dHRvbi1hY2NvdW50LWNyZWF0aW9uIj4KICAgICAgICBNb24gY29tcHRlCiAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgIDwvZGl2PgogICAgPC9saT4KICAgPC91bD4KICA8L2Rpdj4KIDwvbmF2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0iY29udGVudC13cmFwcGVyIiBkYXRhLXNpZGUtbmF2LWNvbnRlbnQtd3JhcHBlcj0iIj4KIDxkaXYgY2xhc3M9ImNvbnRhaW5lci0taG9tZXBhZ2UiIGlkPSJjb250YWluZXIiPgogIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1tYWluLXNsaWRlciIgZGF0YS1iZWhhdmlvcj0ibWFpbl9zbGlkZXIiIGlkPSJtYWluLXNsaWRlciI+CiAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWNvbnRlbnQiPgogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSBkYXJrLW1vZGUgIj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ltZy1tYWluLWNvbnRhaW5lciI+CiAgICAgIDxzcGFuIGNsYXNzPSJkYXJrLW1vZGUtbGF5ZXIiPgogICAgICA8L3NwYW4+CiAgICAgIDxwaWN0dXJlIGNsYXNzPSJjb21wb25lbnRfX2ltZy1tYWluIj4KICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4td2lkdGg6IDE2MDBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfNzgxJTJjd18yNTAwJTJjeF8wJTJjeV84MzQvZl9hdXRvJTJjd18xOTIwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9wY3N3ejl1dmhnbDl1eXg3b3lheSIvPgogICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi13aWR0aDogMTQ0MHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF85MzglMmN3XzI1MDAlMmN4XzAlMmN5Xzc1Ni9mX2F1dG8lMmN3XzE2MDAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3Bjc3d6OXV2aGdsOXV5eDdveWF5Ii8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEwNDIlMmN3XzI1MDAlMmN4XzAlMmN5XzcwNC9mX2F1dG8lMmN3XzE0NDAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3Bjc3d6OXV2aGdsOXV5eDdveWF5Ii8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTcyJTJjd18yNTAwJTJjeF8wJTJjeV82MzkvZl9hdXRvJTJjd18yNTYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9wY3N3ejl1dmhnbDl1eXg3b3lheSIvPgogICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi13aWR0aDogMTAyNHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTcyJTJjd18yNTAwJTJjeF8wJTJjeV82MzkvZl9hdXRvJTJjd18xMjgwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9wY3N3ejl1dmhnbDl1eXg3b3lheSIvPgogICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE5NTAlMmN3XzI0OTYlMmN4XzAlMmN5Xy0xMjEvZl9hdXRvJTJjd18xNTM2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9wY3N3ejl1dmhnbDl1eXg3b3lheSIvPgogICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE5NTAlMmN3XzI0OTYlMmN4XzAlMmN5Xy0xMjEvZl9hdXRvJTJjd183NjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3Bjc3d6OXV2aGdsOXV5eDdveWF5Ii8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiAwcHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4td2lkdGg6IDBweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjI1JTJjd18yNDk2JTJjeF8wJTJjeV8tMjg0L2ZfYXV0byUyY3dfMTUzNi9mX2F1dG8vdjEvdXNlcl9waG90b3MvcGNzd3o5dXZoZ2w5dXl4N295YXkiLz4KICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4td2lkdGg6IDBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTYyNSUyY3dfMjQ5NiUyY3hfMCUyY3lfLTI4NC9mX2F1dG8lMmN3Xzc2OC9mX2F1dG8vdjEvdXNlcl9waG90b3MvcGNzd3o5dXZoZ2w5dXl4N295YXkiLz4KICAgICAgPC9waWN0dXJlPgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW5mb3MiPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190aXRsZSB0aXRsZSB0aXRsZS0taDEiPgogICAgICAgVFJFRSBPRiBDT0RFUwogICAgICA8L3A+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fdHh0Ij4KICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX3Nob3ctdHlwZSI+CiAgICAgICAgQmFsbGV0CiAgICAgICA8L3NwYW4+CiAgICAgICA8ZGl2PgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIHRpdGxlIHRpdGxlLS1oMyI+CiAgICAgICAgIFdheW5lIE1jR3JlZ29yLCBPbGFmdXIgRWxpYXNzb24sIEphbWllIHh4CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIHRpdGxlIHRpdGxlLS1oMyI+CiAgICAgICAgIER1IDI2IGp1aW4gYXUgMTMganVpbGxldCDDoCBsJ09ww6lyYSBCYXN0aWxsZQogICAgICAgIDwvcD4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fY3RhcyI+CiAgICAgICA8YSBjbGFzcz0iY3RhIGN0YS0td2hpdGUtZnVsbCIgaHJlZj0iL3NhaXNvbi0xOC0xOS9iYWxsZXQvdHJlZS1vZi1jb2RlcyNjYWxlbmRhciI+CiAgICAgICAgUsOpc2VydmVyCiAgICAgICA8L2E+CiAgICAgICBbbGlua3hdCiAgICAgICAKICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIGRhcmstbW9kZSAiPgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLW1haW4tY29udGFpbmVyIj4KICAgICAgPHNwYW4gY2xhc3M9ImRhcmstbW9kZS1sYXllciI+CiAgICAgIDwvc3Bhbj4KICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nLW1haW4iPgogICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi13aWR0aDogMTYwMHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF83ODElMmN3XzI1MDAlMmN4XzAlMmN5XzM0Ny9mX2F1dG8lMmN3XzE5MjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3RkYzhhMWQ1YXBsdXBwdDRnbnVwIi8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiAxNDQwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzkzOCUyY3dfMjUwMCUyY3hfMCUyY3lfMjY5L2ZfYXV0byUyY3dfMTYwMC9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGRjOGExZDVhcGx1cHB0NGdudXAiLz4KICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4td2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTA0MiUyY3dfMjUwMCUyY3hfMCUyY3lfMjE3L2ZfYXV0byUyY3dfMTQ0MC9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGRjOGExZDVhcGx1cHB0NGdudXAiLz4KICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExNzIlMmN3XzI1MDAlMmN4XzAlMmN5XzE1Mi9mX2F1dG8lMmN3XzI1NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3RkYzhhMWQ1YXBsdXBwdDRnbnVwIi8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExNzIlMmN3XzI1MDAlMmN4XzAlMmN5XzE1Mi9mX2F1dG8lMmN3XzEyODAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3RkYzhhMWQ1YXBsdXBwdDRnbnVwIi8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTkzNSUyY3dfMjQ3NyUyY3hfMCUyY3lfLTE2Mi9mX2F1dG8lMmN3XzE1MzYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3RkYzhhMWQ1YXBsdXBwdDRnbnVwIi8+CiAgICAgICA8c291cmNlIG1lZGlhPSIobWluLXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTkzNSUyY3dfMjQ3NyUyY3hfMCUyY3lfLTE2Mi9mX2F1dG8lMmN3Xzc2OC9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGRjOGExZDVhcGx1cHB0NGdudXAiLz4KICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4td2lkdGg6IDBweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi13aWR0aDogMHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE2MTMlMmN3XzI0NzclMmN4XzAlMmN5Xy0zMjMvZl9hdXRvJTJjd18xNTM2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy90ZGM4YTFkNWFwbHVwcHQ0Z251cCIvPgogICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi13aWR0aDogMHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjEzJTJjd18yNDc3JTJjeF8wJTJjeV8tMzIzL2ZfYXV0byUyY3dfNzY4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy90ZGM4YTFkNWFwbHVwcHQ0Z251cCIvPgogICAgICA8L3BpY3R1cmU+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3RpdGxlIHRpdGxlIHRpdGxlLS1oMSI+CiAgICAgICBMQSBGT1JDRSBEVSBERVNUSU4KICAgICAgPC9wPgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3R4dCI+CiAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19zaG93LXR5cGUiPgogICAgICAgIE9ww6lyYQogICAgICAgPC9zcGFuPgogICAgICAgPGRpdj4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSB0aXRsZSB0aXRsZS0taDMiPgogICAgICAgICBHaXVzZXBwZSBWZXJkaQogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSB0aXRsZSB0aXRsZS0taDMiPgogICAgICAgICBEdSA2IGp1aW4gYXUgMDkganVpbGxldCDDoCBsJ09ww6lyYSBCYXN0aWxsZQogICAgICAgIDwvcD4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fY3RhcyI+CiAgICAgICBbbGlua3hdCiAgICAgICAKICAgICAgIFthaHJlZl0KICAgICAgIAogICAgICA8L3A+CiAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYnVsbGV0cy1jb250YWluZXIiPgogICAgIDx1bCBjbGFzcz0iY29tcG9uZW50X19idWxsZXRzLWxpc3QiPgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NwYWNlciI+CiAgICAgICA8bGkgY2xhc3M9ImNvbXBvbmVudF9fYnVsbGV0IiBkYXRhLWluZGV4PSIxIj4KICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ncm93ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgIDwvbGk+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NwYWNlciI+CiAgICAgICA8bGkgY2xhc3M9ImNvbXBvbmVudF9fYnVsbGV0IiBkYXRhLWluZGV4PSIyIj4KICAgICAgICBbYXJlYTFdW21rZXkxXVtwa2V5eF1bYXJlYTFdW21rZXkxXVtsaW5reF0KICAgICAgIDwvbGk+CiAgICAgIDwvZGl2PgogICAgIDwvdWw+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iY29tcG9uZW50LW5ld3NmZWVkLXNsaWRlciIgZGF0YS1iZWhhdmlvcj0iaG9tZV9uZXdzZmVlZF9zbGlkZXIiIGlkPSJuZXdzZmVlZC1zbGlkZXIiPgogICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3dyYXBwZXIiPgogICAgPGJ1dHRvbiBjbGFzcz0iY29tcG9uZW50X19uYXYgY29tcG9uZW50X19uYXYtcHJldiBpcy1kaXNhYmxlZCI+CiAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLWFycm93Ij4KICAgICA8L3NwYW4+CiAgICA8L2J1dHRvbj4KICAgIDxidXR0b24gY2xhc3M9ImNvbXBvbmVudF9fbmF2IGNvbXBvbmVudF9fbmF2LW5leHQiPgogICAgIDxzcGFuIGNsYXNzPSJtYXotaWNvbi1hcnJvdyI+CiAgICAgPC9zcGFuPgogICAgPC9idXR0b24+CiAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1jb250ZW50Ij4KICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgPC9zcGFuPgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWl0ZW0iPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIHRpdGxlIHRpdGxlLS1oMyI+CiAgICAgICAyOC4wNi4yMDE5CiAgICAgIDwvcD4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fdHh0Ij4KICAgICAgIDxhIGhyZWY9Ii9hY3R1YWxpdGVzL2xhLTNlLXNjZW5lLWF1eC1yZW5jb250cmVzLWRhcmxlcyI+CiAgICAgICAgTGEgM2UgU2PDqG5lIGF1eCBSZW5jb250cmVzIGTigJlBcmxlcwogICAgICAgPC9hPgogICAgICA8L3A+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUgdGl0bGUgdGl0bGUtLWgzIj4KICAgICAgIDIwLjA2LjIwMTkKICAgICAgPC9wPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190eHQiPgogICAgICAgW2FocmVmXQogICAgICAgCiAgICAgIDwvcD4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIj4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSB0aXRsZSB0aXRsZS0taDMiPgogICAgICAgMTkuMDYuMjAxOQogICAgICA8L3A+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3R4dCI+CiAgICAgICBbbGlua3hdCiAgICAgICAKICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWl0ZW0iPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIHRpdGxlIHRpdGxlLS1oMyI+CiAgICAgICAxOC4wNi4yMDE5CiAgICAgIDwvcD4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fdHh0Ij4KICAgICAgIFtsaW5reF0KICAgICAgIAogICAgICA8L3A+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUgdGl0bGUgdGl0bGUtLWgzIj4KICAgICAgIDExLjA2LjIwMTkKICAgICAgPC9wPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190eHQiPgogICAgICAgPGEgaHJlZj0iL2FjdHVhbGl0ZXMvb3V2ZXJ0dXJlLWRlcy1jb21wdGVzLW9mZmljaWVscy13ZWNoYXQtZXQtd2VpYm8iPgogICAgICAgIE91dmVydHVyZSBkZXMgY29tcHRlcyBvZmZpY2llbHMgV2VDaGF0IGV0IFdlaWJvCiAgICAgICA8L2E+CiAgICAgIDwvcD4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIj4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSB0aXRsZSB0aXRsZS0taDMiPgogICAgICAgMDQuMDYuMjAxOQogICAgICA8L3A+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3R4dCI+CiAgICAgICBbYWhyZWZdCiAgICAgICAKICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWl0ZW0iPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIHRpdGxlIHRpdGxlLS1oMyI+CiAgICAgICAwMy4wNi4yMDE5CiAgICAgIDwvcD4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fdHh0Ij4KICAgICAgIDxhIGhyZWY9Ii9hY3R1YWxpdGVzL3RvdXJuZWUtZHUtYmFsbGV0LWRlLWxvcGVyYS1uYXRpb25hbC1kZS1wYXJpcy1lbi1hc2llIj4KICAgICAgICBMZSBCYWxsZXQgZGUgbCdPcMOpcmEgZW4gdG91cm7DqWUgZW4gQXNpZQogICAgICAgPC9hPgogICAgICA8L3A+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUgdGl0bGUgdGl0bGUtLWgzIj4KICAgICAgIDAxLjA2LjIwMTkKICAgICAgPC9wPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190eHQiPgogICAgICAgPGEgaHJlZj0iL2FjdHVhbGl0ZXMvYnJldmVzIj4KICAgICAgICBUb3NjYSA6IGNoYW5nZW1lbnQgZGUgZGlzdHJpYnV0aW9uICgxIGp1aW4pCiAgICAgICA8L2E+CiAgICAgIDwvcD4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIj4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSB0aXRsZSB0aXRsZS0taDMiPgogICAgICAgMjcuMDUuMjAxOQogICAgICA8L3A+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3R4dCI+CiAgICAgICA8YSBocmVmPSIvYWN0dWFsaXRlcy9wYXJ0ZW5hcmlhdC1oZXdsZXR0LXBhY2thcmQtZW50ZXJwcmlzZS1ocGUtZXQtbG9wZXJhLW5hdGlvbmFsLWRlLXBhcmlzIj4KICAgICAgICBQYXJ0ZW5hcmlhdCBIZXdsZXR0IFBhY2thcmQgRW50ZXJwcmlzZSAoSFBFKSBldCBs4oCZT3DDqXJhIG5hdGlvbmFsIGRlIFBhcmlzCiAgICAgICA8L2E+CiAgICAgIDwvcD4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIj4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSB0aXRsZSB0aXRsZS0taDMiPgogICAgICAgMjEuMDUuMjAxOQogICAgICA8L3A+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3R4dCI+CiAgICAgICBbbGlua3hdCiAgICAgICAKICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWl0ZW0iPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIHRpdGxlIHRpdGxlLS1oMyI+CiAgICAgICAxNS4wNS4yMDE5CiAgICAgIDwvcD4KICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fdHh0Ij4KICAgICAgIFtsaW5reF0KICAgICAgIAogICAgICA8L3A+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUgdGl0bGUgdGl0bGUtLWgzIj4KICAgICAgIDE1LjA1LjIwMTkKICAgICAgPC9wPgogICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190eHQiPgogICAgICAgPGEgaHJlZj0iL2FjdHVhbGl0ZXMvYnJldmVzIj4KICAgICAgICBDYXJtZW4gOiBjaGFuZ2VtZW50IGRlIGRpc3RyaWJ1dGlvbiAoIDE3LDIwLDIzIG1haSApCiAgICAgICA8L2E+CiAgICAgIDwvcD4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb21wb25lbnQtdGlja2V0LWZpbmRlciIgaWQ9InRpY2tldC1maW5kZXIiPgogICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3RpY2tldC1maW5kZXItY29udGVudCI+CiAgICA8cCBjbGFzcz0idGl0bGUgdGl0bGUtLWgzIj4KICAgICBSZWNoZXJjaGVyIHVuIGJpbGxldAogICAgPC9wPgogICAgPGZvcm0gYWN0aW9uPSIvYmlsbGV0dGVyaWUvcmVjaGVyY2hlIiBjbGFzcz0iY29tcG9uZW50X19mb3JtIj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2RhdGUtY29udGFpbmVyIj4KICAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLWNhbGVuZGFyIj4KICAgICAgPC9zcGFuPgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fcHJpY2UtY29udGFpbmVyIiBkYXRhLWJlaGF2aW9yPSJob21lX3ByaWNlX3NlbGVjdG9yIiBpZD0icHJpY2UtY29udGFpbmVyIj4KICAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLXByaWNlIj4KICAgICAgPC9zcGFuPgogICAgIDwvZGl2PgogICAgIDxidXR0b24gY2xhc3M9ImN0YSBjdGEtLWJsYWNrIGNvbXBvbmVudF9fc3VibWl0IiBpZD0iIiB0eXBlPSJzdWJtaXQiPgogICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tc2VhcmNoIj4KICAgICAgPC9zcGFuPgogICAgIDwvYnV0dG9uPgogICAgIDxhIGNsYXNzPSJjdGEgY3RhLS1ibGFjayBjb21wb25lbnRfX2xpbmsiIGRhdGEtYmVoYXZpb3I9Im9wZW5fYWdlbmRhIiBkYXRhLW1vZGFsLWhyZWY9Imh0dHBzOi8vd3d3Lm9wZXJhZGVwYXJpcy5mci9iaWxsZXR0ZXJpZS9jYWxlbmRyaWVyL2luZGl2aWR1ZWxzIiBocmVmPSIvYmlsbGV0dGVyaWUvY2FsZW5kcmllci9pbmRpdmlkdWVscyI+CiAgICAgIFZvaXIgbGUgY2FsZW5kcmllcgogICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tY2FsZW5kYXIiPgogICAgICA8L3NwYW4+CiAgICAgPC9hPgogICAgPC9mb3JtPgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb21wb25lbnQtZXZlbnRzIiBkYXRhLWJlaGF2aW9yPSJob21lX2V2ZW50cyIgaWQ9ImV2ZW50cyI+CiAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fZXZlbnRzLWNvbnRlbnQiPgogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X190b3AiPgogICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDMiPgogICAgICA8c3Bhbj4KICAgICAgIMOAIGwnYWZmaWNoZQogICAgICA8L3NwYW4+CiAgICAgIDxhIGNsYXNzPSJjb21wb25lbnRfX3N1YnNjcmliZSIgaHJlZj0iL3Byb2dyYW1tYXRpb24tZXQtYmlsbGV0cy9zYWlzb24tMTgtMTkiPgogICAgICAgVm9pciB0b3V0ZSBsYSBwcm9ncmFtbWF0aW9uCiAgICAgIDwvYT4KICAgICA8L3A+CiAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19yb2xleCI+CiAgICAgIDxpZnJhbWUgYXN5bmMtc3JjPSIvbWluaXNpdGVzL3JvbGV4L3JvbGV4Lmh0bWwiIGRhdGEtYmVoYXZpb3I9Imxhenlsb2FkIiBmcmFtZWJvcmRlcj0iMCIgaGVpZ2h0PSIxMDAiIHNjcm9sbGluZz0ibm8iIHNyYz0iYWJvdXQ6YmxhbmsiIHdpZHRoPSIxODUiPgogICAgICA8L2lmcmFtZT4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50LWZpbHRlcnMiIGlkPSJmaWx0ZXJzIj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ZpbHRlcnMtbGlzdCI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fZmlsdGVyLWl0ZW0iPgogICAgICAgPGJ1dHRvbiBjbGFzcz0iY29tcG9uZW50X19maWx0ZXItY3RhIGFjdGl2ZSIgZGF0YS1maWx0ZXI9Im1haW5zIiBpZD0iZmlsdGVyLTAxIj4KICAgICAgICBOZSBwYXMgbWFucXVlcgogICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ZpbHRlci1pdGVtIj4KICAgICAgIDxidXR0b24gY2xhc3M9ImNvbXBvbmVudF9fZmlsdGVyLWN0YSIgZGF0YS1maWx0ZXI9Ik9ww6lyYSIgaWQ9ImZpbHRlci0wMiI+CiAgICAgICAgT3DDqXJhCiAgICAgICA8L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fZmlsdGVyLWl0ZW0iPgogICAgICAgPGJ1dHRvbiBjbGFzcz0iY29tcG9uZW50X19maWx0ZXItY3RhIiBkYXRhLWZpbHRlcj0iQmFsbGV0IiBpZD0iZmlsdGVyLTAzIj4KICAgICAgICBCYWxsZXQKICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19maWx0ZXItaXRlbSI+CiAgICAgICA8YnV0dG9uIGNsYXNzPSJjb21wb25lbnRfX2ZpbHRlci1jdGEiIGRhdGEtZmlsdGVyPSJFdsOpbmVtZW50IiBpZD0iZmlsdGVyLTA0Ij4KICAgICAgICDDiXbDqW5lbWVudAogICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ZpbHRlci1pdGVtIj4KICAgICAgIDxidXR0b24gY2xhc3M9ImNvbXBvbmVudF9fZmlsdGVyLWN0YSIgZGF0YS1maWx0ZXI9IjNzY2VuZSIgaWQ9ImZpbHRlci0wNSI+CiAgICAgICAgMwogICAgICAgIDxzdXA+CiAgICAgICAgIGUKICAgICAgICA8L3N1cD4KICAgICAgICBTY8OobmUKICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9ja3MiPgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2tzLWxpc3QiIGlkPSJibG9ja3MtY29udGFpbmVyIj4KICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICA8L3NwYW4+CiAgICAgIDxidXR0b24gY2xhc3M9ImNvbXBvbmVudF9fbmF2IGNvbXBvbmVudF9fbmF2LXByZXYgaXMtZGlzYWJsZWQiPgogICAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLWFycm93Ij4KICAgICAgIDwvc3Bhbj4KICAgICAgPC9idXR0b24+CiAgICAgIDxidXR0b24gY2xhc3M9ImNvbXBvbmVudF9fbmF2IGNvbXBvbmVudF9fbmF2LW5leHQiPgogICAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLWFycm93Ij4KICAgICAgIDwvc3Bhbj4KICAgICAgPC9idXR0b24+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSBuZXctY29udGVudCIgZGF0YS10aGVtYXRpYz0ibWFpbnMiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQyNiUyY3dfMjUzNSUyY3hfMCUyY3lfMC9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3Mvb2U4cm8wYnBmZGx6b3NzZHo5am0iLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MjYlMmN3XzI1MzUlMmN4XzAlMmN5XzAvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL29lOHJvMGJwZmRsem9zc2R6OWptIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MjYlMmN3XzI1MzUlMmN4XzAlMmN5XzAvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL29lOHJvMGJwZmRsem9zc2R6OWptIj4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQyNiUyY3dfMjUzNSUyY3hfMCUyY3lfMC9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3Mvb2U4cm8wYnBmZGx6b3NzZHo5am0iLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQyNiUyY3dfMjUzNSUyY3hfMCUyY3lfMC9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3Mvb2U4cm8wYnBmZGx6b3NzZHo5am0iLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MjYlMmN3XzI1MzUlMmN4XzAlMmN5XzAvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL29lOHJvMGJwZmRsem9zc2R6OWptIi8+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fb3ZlcmxheS1saW5rIiBocmVmPSIvc2Fpc29uLTE4LTE5L29wZXJhL2Rvbi1naW92YW5uaSNjYWxlbmRhciI+CiAgICAgICAgPC9hPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBEb24gR2lvdmFubmkKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICBPcMOpcmEKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgV29sZmdhbmcgQW1hZGV1cyBNb3phcnQKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgPGkgY2xhc3M9Imljb24tZ2FybmllciAiIGRhdGEtZ3J1bnRpY29uLWVtYmVkPSIiPgogICAgICAgICAgPC9pPgogICAgICAgICAgUGFsYWlzIEdhcm5pZXIKICAgICAgICAgPC9wPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIj4KICAgICAgICAgIGR1IDA4IGp1aW4gIGF1IDEzIGp1aWwuIDIwMTkKICAgICAgICAgPC9wPgogICAgICAgICBbYWhyZWZdCiAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2Jsb2NrLWl0ZW0iIGRhdGEtdGhlbWF0aWM9Im1haW5zIj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nIj4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExODglMmN3XzIxMTUlMmN4XzAlMmN5XzcxMy9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGp6bWl0NWVnZTBwdmZ4bGxjeGsiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExODglMmN3XzIxMTUlMmN4XzAlMmN5XzcxMy9oXzI0MSUyY3FfNjAlMmN3XzQyOC9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGp6bWl0NWVnZTBwdmZ4bGxjeGsiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE4OCUyY3dfMjExNSUyY3hfMCUyY3lfNzEzL2hfNTEzJTJjcV82MCUyY3dfOTEyL2ZfYXV0by92MS91c2VyX3Bob3Rvcy90anptaXQ1ZWdlMHB2ZnhsbGN4ayI+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExODglMmN3XzIxMTUlMmN4XzAlMmN5XzcxMy9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGp6bWl0NWVnZTBwdmZ4bGxjeGsiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE4OCUyY3dfMjExNSUyY3hfMCUyY3lfNzEzL2hfMjg1JTJjcV82MCUyY3dfNTA3L2ZfYXV0by92MS91c2VyX3Bob3Rvcy90anptaXQ1ZWdlMHB2ZnhsbGN4ayIvPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE4OCUyY3dfMjExNSUyY3hfMCUyY3lfNzEzL2hfMzcxJTJjcV82MCUyY3dfNjYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy90anptaXQ1ZWdlMHB2ZnhsbGN4ayIvPgogICAgICAgICA8L3NvdXJjZT4KICAgICAgICA8L3BpY3R1cmU+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW5mb3MiPgogICAgICAgIDxhIGNsYXNzPSJjb21wb25lbnRfX292ZXJsYXktbGluayIgaHJlZj0iL3NhaXNvbi0xOC0xOS9vcGVyYS9sYS1mb3JjZS1kdS1kZXN0aW4jY2FsZW5kYXIiPgogICAgICAgIDwvYT4KICAgICAgICA8cCBjbGFzcz0idGl0bGUgdGl0bGUtLWgyIj4KICAgICAgICAgbGEgZm9yY2UgZHUgZGVzdGluCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgT3DDqXJhCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1uYW1lIj4KICAgICAgICAgIEdpdXNlcHBlIFZlcmRpCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ib3R0b20td3JhcHBlciI+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2xvY2F0aW9uIj4KICAgICAgICAgIDxpIGNsYXNzPSJpY29uLWJhc3RpbGxlICIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgICA8L2k+CiAgICAgICAgICBPcMOpcmEgQmFzdGlsbGUKICAgICAgICAgPC9wPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIj4KICAgICAgICAgIGR1IDA2IGp1aW4gIGF1IDA5IGp1aWwuIDIwMTkKICAgICAgICAgPC9wPgogICAgICAgICBbbGlua3hdCiAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2Jsb2NrLWl0ZW0gbmV3LWNvbnRlbnQiIGRhdGEtdGhlbWF0aWM9Im1haW5zIj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8YSBjbGFzcz0iY3RhIGN0YS0td2hpdGUiIGhyZWY9Ii9zYWlzb24tMTgtMTkvYmFsbGV0L21hdHMtZWsjY2FsZW5kYXIiPgogICAgICAgICBSw6lzZXJ2ZXIKICAgICAgICA8L2E+CiAgICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nIj4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfNDgxJTJjcV82MCUyY3dfODU1L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfOTQyJTJjd18xNjc2JTJjeF8wJTJjeV82NjMvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2JhbW1xc3lvdzd4a21ta25qeXNrIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfNTEzJTJjcV82MCUyY3dfOTEyL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayI+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfMjU3JTJjcV82MCUyY3dfNDU2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayIvPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTI4MHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF85NDIlMmN3XzE2NzYlMmN4XzAlMmN5XzY2My9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MvYmFtbXFzeW93N3hrbW1rbmp5c2siLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfMzcxJTJjcV82MCUyY3dfNjYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayIvPgogICAgICAgICA8L3NvdXJjZT4KICAgICAgICA8L3BpY3R1cmU+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW5mb3MiPgogICAgICAgIDxhIGNsYXNzPSJjb21wb25lbnRfX292ZXJsYXktbGluayIgaHJlZj0iL3NhaXNvbi0xOC0xOS9iYWxsZXQvbWF0cy1layNjYWxlbmRhciI+CiAgICAgICAgPC9hPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBNYXRzIEVrCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgQmFsbGV0CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ib3R0b20td3JhcHBlciI+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2xvY2F0aW9uIj4KICAgICAgICAgIDxpIGNsYXNzPSJpY29uLWdhcm5pZXIgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIFBhbGFpcyBHYXJuaWVyCiAgICAgICAgIDwvcD4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSI+CiAgICAgICAgICBkdSAyMiBqdWluICBhdSAxNCBqdWlsLiAyMDE5CiAgICAgICAgIDwvcD4KICAgICAgICAgPGEgY2xhc3M9ImN0YSBjdGEtLWJsYWNrIiBocmVmPSIvc2Fpc29uLTE4LTE5L2JhbGxldC9tYXRzLWVrI2NhbGVuZGFyIj4KICAgICAgICAgIFLDqXNlcnZlcgogICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSIgZGF0YS10aGVtYXRpYz0ibWFpbnMiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxhIGNsYXNzPSJjdGEgY3RhLS13aGl0ZSIgaHJlZj0iL3NhaXNvbi0xOC0xOS9iYWxsZXQvdHJlZS1vZi1jb2RlcyNjYWxlbmRhciI+CiAgICAgICAgIFLDqXNlcnZlcgogICAgICAgIDwvYT4KICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMjI0OSUyY3dfNDAwMCUyY3hfMCUyY3lfMTY2L2hfNDgxJTJjcV82MCUyY3dfODU1L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9yOHhyc2tucWNmb3NlaWhrZnB1NCIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMjI0OSUyY3dfNDAwMCUyY3hfMCUyY3lfMTY2L2hfMjQxJTJjcV82MCUyY3dfNDI4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9yOHhyc2tucWNmb3NlaWhrZnB1NCIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8yMjQ5JTJjd180MDAwJTJjeF8wJTJjeV8xNjYvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3I4eHJza25xY2Zvc2VpaGtmcHU0Ij4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMjI0OSUyY3dfNDAwMCUyY3hfMCUyY3lfMTY2L2hfMjU3JTJjcV82MCUyY3dfNDU2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9yOHhyc2tucWNmb3NlaWhrZnB1NCIvPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTI4MHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8yMjQ5JTJjd180MDAwJTJjeF8wJTJjeV8xNjYvaF8yODUlMmNxXzYwJTJjd181MDcvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3I4eHJza25xY2Zvc2VpaGtmcHU0Ii8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8yMjQ5JTJjd180MDAwJTJjeF8wJTJjeV8xNjYvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3I4eHJza25xY2Zvc2VpaGtmcHU0Ii8+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fb3ZlcmxheS1saW5rIiBocmVmPSIvc2Fpc29uLTE4LTE5L2JhbGxldC90cmVlLW9mLWNvZGVzI2NhbGVuZGFyIj4KICAgICAgICA8L2E+CiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIHRyZWUgb2YgY29kZXMKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICBCYWxsZXQKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgV2F5bmUgTWNHcmVnb3IsIE9sYWZ1ciBFbGlhc3NvbiwgSmFtaWUgeHgKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgPGkgY2xhc3M9Imljb24tYmFzdGlsbGUgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIE9ww6lyYSBCYXN0aWxsZQogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMjYganVpbiAgYXUgMTMganVpbC4gMjAxOQogICAgICAgICA8L3A+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSIgZGF0YS10aGVtYXRpYz0ibWFpbnMiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIFthaHJlZl0KICAgICAgICAKICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNyUyY3dfMjUwMCUyY3hfMCUyY3lfMjU4L2hfNDgxJTJjcV82MCUyY3dfODU1L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9qenY1bHV4ZzVwdHdlcjBnNGxxdyIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNyUyY3dfMjUwMCUyY3hfMCUyY3lfMjU4L2hfMjQxJTJjcV82MCUyY3dfNDI4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9qenY1bHV4ZzVwdHdlcjBnNGxxdyIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNDA3JTJjd18yNTAwJTJjeF8wJTJjeV8yNTgvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2p6djVsdXhnNXB0d2VyMGc0bHF3Ij4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNyUyY3dfMjUwMCUyY3hfMCUyY3lfMjU4L2hfMjU3JTJjcV82MCUyY3dfNDU2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9qenY1bHV4ZzVwdHdlcjBnNGxxdyIvPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTI4MHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNDA3JTJjd18yNTAwJTJjeF8wJTJjeV8yNTgvaF8yODUlMmNxXzYwJTJjd181MDcvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2p6djVsdXhnNXB0d2VyMGc0bHF3Ii8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNDA3JTJjd18yNTAwJTJjeF8wJTJjeV8yNTgvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2p6djVsdXhnNXB0d2VyMGc0bHF3Ii8+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgW2xpbmt4XQogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBsZXMgcHVyaXRhaW5zCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgT3DDqXJhCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1uYW1lIj4KICAgICAgICAgIFZpbmNlbnpvIEJlbGxpbmkKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgPGkgY2xhc3M9Imljb24tYmFzdGlsbGUgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIE9ww6lyYSBCYXN0aWxsZQogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMDcgc2VwdC4gIGF1IDA1IG9jdC4gMjAxOQogICAgICAgICA8L3A+CiAgICAgICAgIFtsaW5reF0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSBuZXctY29udGVudCIgZGF0YS10aGVtYXRpYz0ibWFpbnMiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIFthaHJlZl0KICAgICAgICAKICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNiUyY3dfMjUwMCUyY3hfMCUyY3lfMC9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvZnBwZmlmanVhd3hlZXE1cHFwYXMiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDYlMmN3XzI1MDAlMmN4XzAlMmN5XzAvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2ZwcGZpZmp1YXd4ZWVxNXBxcGFzIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDYlMmN3XzI1MDAlMmN4XzAlMmN5XzAvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2ZwcGZpZmp1YXd4ZWVxNXBxcGFzIj4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNiUyY3dfMjUwMCUyY3hfMCUyY3lfMC9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3MvZnBwZmlmanVhd3hlZXE1cHFwYXMiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNiUyY3dfMjUwMCUyY3hfMCUyY3lfMC9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MvZnBwZmlmanVhd3hlZXE1cHFwYXMiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDYlMmN3XzI1MDAlMmN4XzAlMmN5XzAvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2ZwcGZpZmp1YXd4ZWVxNXBxcGFzIi8+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fb3ZlcmxheS1saW5rIiBocmVmPSIvc2Fpc29uLTE5LTIwL29wZXJhL2xhLXRyYXZpYXRhI2NhbGVuZGFyIj4KICAgICAgICA8L2E+CiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIExhIFRyYXZpYXRhCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgT3DDqXJhCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1uYW1lIj4KICAgICAgICAgIEdpdXNlcHBlIFZlcmRpCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ib3R0b20td3JhcHBlciI+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2xvY2F0aW9uIj4KICAgICAgICAgIDxpIGNsYXNzPSJpY29uLWdhcm5pZXIgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIFBhbGFpcyBHYXJuaWVyCiAgICAgICAgIDwvcD4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSI+CiAgICAgICAgICBkdSAwOSBzZXB0LiAgYXUgMTYgb2N0LiAyMDE5CiAgICAgICAgIDwvcD4KICAgICAgICAgW2FocmVmXQogICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIG5ldy1jb250ZW50IiBkYXRhLXRoZW1hdGljPSJPcMOpcmEiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIFthaHJlZl0KICAgICAgICAKICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQyNiUyY3dfMjUzNSUyY3hfMCUyY3lfMC9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3Mvb2U4cm8wYnBmZGx6b3NzZHo5am0iLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MjYlMmN3XzI1MzUlMmN4XzAlMmN5XzAvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL29lOHJvMGJwZmRsem9zc2R6OWptIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MjYlMmN3XzI1MzUlMmN4XzAlMmN5XzAvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL29lOHJvMGJwZmRsem9zc2R6OWptIj4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQyNiUyY3dfMjUzNSUyY3hfMCUyY3lfMC9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3Mvb2U4cm8wYnBmZGx6b3NzZHo5am0iLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQyNiUyY3dfMjUzNSUyY3hfMCUyY3lfMC9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3Mvb2U4cm8wYnBmZGx6b3NzZHo5am0iPgogICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MjYlMmN3XzI1MzUlMmN4XzAlMmN5XzAvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL29lOHJvMGJwZmRsem9zc2R6OWptIi8+CiAgICAgICAgICA8L3NvdXJjZT4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICA8YSBjbGFzcz0iY29tcG9uZW50X19vdmVybGF5LWxpbmsiIGhyZWY9Ii9zYWlzb24tMTgtMTkvb3BlcmEvZG9uLWdpb3Zhbm5pI2NhbGVuZGFyIj4KICAgICAgICA8L2E+CiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIERvbiBHaW92YW5uaQogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbG9jIj4KICAgICAgICAgIE9ww6lyYQogICAgICAgICA8L3NwYW4+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbmFtZSI+CiAgICAgICAgICBXb2xmZ2FuZyBBbWFkZXVzIE1vemFydAogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9wPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYm90dG9tLXdyYXBwZXIiPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19sb2NhdGlvbiI+CiAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1nYXJuaWVyICIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgICA8L2k+CiAgICAgICAgICBQYWxhaXMgR2FybmllcgogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMDgganVpbiAgYXUgMTMganVpbC4gMjAxOQogICAgICAgICA8L3A+CiAgICAgICAgIDxhIGNsYXNzPSJjdGEgY3RhLS1ibGFjayIgaHJlZj0iL3NhaXNvbi0xOC0xOS9vcGVyYS9kb24tZ2lvdmFubmkjY2FsZW5kYXIiPgogICAgICAgICAgUsOpc2VydmVyCiAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIiBkYXRhLXRoZW1hdGljPSJPcMOpcmEiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxhIGNsYXNzPSJjdGEgY3RhLS13aGl0ZSIgaHJlZj0iL3NhaXNvbi0xOC0xOS9vcGVyYS9sYS1mb3JjZS1kdS1kZXN0aW4jY2FsZW5kYXIiPgogICAgICAgICBSw6lzZXJ2ZXIKICAgICAgICA8L2E+CiAgICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nIj4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExODglMmN3XzIxMTUlMmN4XzAlMmN5XzcxMy9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGp6bWl0NWVnZTBwdmZ4bGxjeGsiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExODglMmN3XzIxMTUlMmN4XzAlMmN5XzcxMy9oXzI0MSUyY3FfNjAlMmN3XzQyOC9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGp6bWl0NWVnZTBwdmZ4bGxjeGsiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE4OCUyY3dfMjExNSUyY3hfMCUyY3lfNzEzL2hfNTEzJTJjcV82MCUyY3dfOTEyL2ZfYXV0by92MS91c2VyX3Bob3Rvcy90anptaXQ1ZWdlMHB2ZnhsbGN4ayI+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExODglMmN3XzIxMTUlMmN4XzAlMmN5XzcxMy9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3MvdGp6bWl0NWVnZTBwdmZ4bGxjeGsiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE4OCUyY3dfMjExNSUyY3hfMCUyY3lfNzEzL2hfMjg1JTJjcV82MCUyY3dfNTA3L2ZfYXV0by92MS91c2VyX3Bob3Rvcy90anptaXQ1ZWdlMHB2ZnhsbGN4ayI+CiAgICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE4OCUyY3dfMjExNSUyY3hfMCUyY3lfNzEzL2hfMzcxJTJjcV82MCUyY3dfNjYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy90anptaXQ1ZWdlMHB2ZnhsbGN4ayIvPgogICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgW2FocmVmXQogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBsYSBmb3JjZSBkdSBkZXN0aW4KICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICBPcMOpcmEKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgR2l1c2VwcGUgVmVyZGkKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgPGkgY2xhc3M9Imljb24tYmFzdGlsbGUgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIE9ww6lyYSBCYXN0aWxsZQogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMDYganVpbiAgYXUgMDkganVpbC4gMjAxOQogICAgICAgICA8L3A+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSBuZXctY29udGVudCIgZGF0YS10aGVtYXRpYz0iQmFsbGV0Ij4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8YSBjbGFzcz0iY3RhIGN0YS0td2hpdGUiIGhyZWY9Ii9zYWlzb24tMTgtMTkvYmFsbGV0L21hdHMtZWsjY2FsZW5kYXIiPgogICAgICAgICBSw6lzZXJ2ZXIKICAgICAgICA8L2E+CiAgICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nIj4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfNDgxJTJjcV82MCUyY3dfODU1L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfOTQyJTJjd18xNjc2JTJjeF8wJTJjeV82NjMvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2JhbW1xc3lvdzd4a21ta25qeXNrIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfNTEzJTJjcV82MCUyY3dfOTEyL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayI+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfMjU3JTJjcV82MCUyY3dfNDU2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayIvPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTI4MHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF85NDIlMmN3XzE2NzYlMmN4XzAlMmN5XzY2My9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MvYmFtbXFzeW93N3hrbW1rbmp5c2siPgogICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzk0MiUyY3dfMTY3NiUyY3hfMCUyY3lfNjYzL2hfMzcxJTJjcV82MCUyY3dfNjYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iYW1tcXN5b3c3eGttbWtuanlzayIvPgogICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgW2FocmVmXQogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBNYXRzIEVrCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgQmFsbGV0CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ib3R0b20td3JhcHBlciI+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2xvY2F0aW9uIj4KICAgICAgICAgIDxpIGNsYXNzPSJpY29uLWdhcm5pZXIgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIFBhbGFpcyBHYXJuaWVyCiAgICAgICAgIDwvcD4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fZGF0ZSI+CiAgICAgICAgICBkdSAyMiBqdWluICBhdSAxNCBqdWlsLiAyMDE5CiAgICAgICAgIDwvcD4KICAgICAgICAgPGEgY2xhc3M9ImN0YSBjdGEtLWJsYWNrIiBocmVmPSIvc2Fpc29uLTE4LTE5L2JhbGxldC9tYXRzLWVrI2NhbGVuZGFyIj4KICAgICAgICAgIFLDqXNlcnZlcgogICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSIgZGF0YS10aGVtYXRpYz0iQmFsbGV0Ij4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICBbbGlua3hdCiAgICAgICAgIDxsaT5bYWhyZWZdPC9saT48bGk+W2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDEzXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMTNdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF08L2xpPlthcmVhMV1bbWtleTFdCiAgICAgICAgCiAgICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nIj4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzIyNDklMmN3XzQwMDAlMmN4XzAlMmN5XzE2Ni9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3Mvcjh4cnNrbnFjZm9zZWloa2ZwdTQiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzIyNDklMmN3XzQwMDAlMmN4XzAlMmN5XzE2Ni9oXzI0MSUyY3FfNjAlMmN3XzQyOC9mX2F1dG8vdjEvdXNlcl9waG90b3Mvcjh4cnNrbnFjZm9zZWloa2ZwdTQiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMjI0OSUyY3dfNDAwMCUyY3hfMCUyY3lfMTY2L2hfNTEzJTJjcV82MCUyY3dfOTEyL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9yOHhyc2tucWNmb3NlaWhrZnB1NCI+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzIyNDklMmN3XzQwMDAlMmN4XzAlMmN5XzE2Ni9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3Mvcjh4cnNrbnFjZm9zZWloa2ZwdTQiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMjI0OSUyY3dfNDAwMCUyY3hfMCUyY3lfMTY2L2hfMjg1JTJjcV82MCUyY3dfNTA3L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9yOHhyc2tucWNmb3NlaWhrZnB1NCI+CiAgICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMjI0OSUyY3dfNDAwMCUyY3hfMCUyY3lfMTY2L2hfMzcxJTJjcV82MCUyY3dfNjYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9yOHhyc2tucWNmb3NlaWhrZnB1NCIvPgogICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fb3ZlcmxheS1saW5rIiBocmVmPSIvc2Fpc29uLTE4LTE5L2JhbGxldC90cmVlLW9mLWNvZGVzI2NhbGVuZGFyIj4KICAgICAgICA8L2E+CiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIHRyZWUgb2YgY29kZXMKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICBCYWxsZXQKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgV2F5bmUgTWNHcmVnb3IsIE9sYWZ1ciBFbGlhc3NvbiwgSmFtaWUgeHgKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgPGkgY2xhc3M9Imljb24tYmFzdGlsbGUgIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgIDwvaT4KICAgICAgICAgIE9ww6lyYSBCYXN0aWxsZQogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMjYganVpbiAgYXUgMTMganVpbC4gMjAxOQogICAgICAgICA8L3A+CiAgICAgICAgIDxhIGNsYXNzPSJjdGEgY3RhLS1ibGFjayIgaHJlZj0iL3NhaXNvbi0xOC0xOS9iYWxsZXQvdHJlZS1vZi1jb2RlcyNjYWxlbmRhciI+CiAgICAgICAgICBSw6lzZXJ2ZXIKICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2Jsb2NrLWl0ZW0iIGRhdGEtdGhlbWF0aWM9IkV2w6luZW1lbnQiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxwaWN0dXJlIGNsYXNzPSJjb21wb25lbnRfX2ltZyI+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF83MzglMmN3XzEzMTQlMmN4XzAlMmN5XzAvaF80ODElMmNxXzYwJTJjd184NTUvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3dnbDMwZDFwenl0dmZ4YWk2c2VvIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF83MzglMmN3XzEzMTQlMmN4XzAlMmN5XzAvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3dnbDMwZDFwenl0dmZ4YWk2c2VvIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzczOCUyY3dfMTMxNCUyY3hfMCUyY3lfMC9oXzUxMyUyY3FfNjAlMmN3XzkxMi9mX2F1dG8vdjEvdXNlcl9waG90b3Mvd2dsMzBkMXB6eXR2ZnhhaTZzZW8iPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF83MzglMmN3XzEzMTQlMmN4XzAlMmN5XzAvaF8yNTclMmNxXzYwJTJjd180NTYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3dnbDMwZDFwenl0dmZ4YWk2c2VvIi8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzczOCUyY3dfMTMxNCUyY3hfMCUyY3lfMC9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3Mvd2dsMzBkMXB6eXR2ZnhhaTZzZW8iPgogICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzczOCUyY3dfMTMxNCUyY3hfMCUyY3lfMC9oXzM3MSUyY3FfNjAlMmN3XzY2MC9mX2F1dG8vdjEvdXNlcl9waG90b3Mvd2dsMzBkMXB6eXR2ZnhhaTZzZW8iLz4KICAgICAgICAgIDwvc291cmNlPgogICAgICAgICA8L3NvdXJjZT4KICAgICAgICA8L3BpY3R1cmU+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW5mb3MiPgogICAgICAgIDxhIGNsYXNzPSJjb21wb25lbnRfX292ZXJsYXktbGluayIgaHJlZj0iL3NhaXNvbi0xOC0xOS9ldmVuZW1lbnRzL2xhY2FkZW1pZS1yb3lhbGUtZGUtbXVzaXF1ZSNjYWxlbmRhciI+CiAgICAgICAgPC9hPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICB1biBhaXIgZOKAmWl0YWxpZSAtIGzigJlvcMOpcmEgZGUgcGFyaXMgZGUgbG91aXMgeGl2IMOgIGxhIHLDqXZvbHV0aW9uCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgw4l2w6luZW1lbnQKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgRXhwb3NpdGlvbgogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9wPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYm90dG9tLXdyYXBwZXIiPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19sb2NhdGlvbiI+CiAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1nYXJuaWVyICIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgICA8L2k+CiAgICAgICAgICBQYWxhaXMgR2FybmllcgogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMjggbWFpICBhdSAwMSBzZXB0LiAyMDE5CiAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIiBkYXRhLXRoZW1hdGljPSJFdsOpbmVtZW50Ij4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNiUyY3dfMjQ5NyUyY3hfMCUyY3lfMC9oXzQ4MSUyY3FfNjAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvenV3NGJ3YWZ3Z292d2lkd2dndjgiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDYlMmN3XzI0OTclMmN4XzAlMmN5XzAvaF8yNDElMmNxXzYwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3p1dzRid2Fmd2dvdndpZHdnZ3Y4Ii8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDYlMmN3XzI0OTclMmN4XzAlMmN5XzAvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3p1dzRid2Fmd2dvdndpZHdnZ3Y4Ij4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNiUyY3dfMjQ5NyUyY3hfMCUyY3lfMC9oXzI1NyUyY3FfNjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3MvenV3NGJ3YWZ3Z292d2lkd2dndjgiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwNiUyY3dfMjQ5NyUyY3hfMCUyY3lfMC9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MvenV3NGJ3YWZ3Z292d2lkd2dndjgiPgogICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDYlMmN3XzI0OTclMmN4XzAlMmN5XzAvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3p1dzRid2Fmd2dvdndpZHdnZ3Y4Ii8+CiAgICAgICAgICA8L3NvdXJjZT4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIGJhdHRsZSBvcMOpcmEKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICDDiXbDqW5lbWVudAogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9wPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYm90dG9tLXdyYXBwZXIiPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19sb2NhdGlvbiI+CiAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1nYXJuaWVyICIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgICA8L2k+CiAgICAgICAgICBQYWxhaXMgR2FybmllcgogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMjQgZsOpdnIuICBhdSAyNiBkw6ljLiAyMDE5CiAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIiBkYXRhLXRoZW1hdGljPSJFdsOpbmVtZW50Ij4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE1MyUyY3dfMjA0OCUyY3hfMCUyY3lfMjg4L2hfNDgxJTJjcV82MCUyY3dfODU1L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9jcHNhYnFmZGNhN3NncDhvd3BvOCIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE1MyUyY3dfMjA0OCUyY3hfMCUyY3lfMjg4L2hfMjQxJTJjcV82MCUyY3dfNDI4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9jcHNhYnFmZGNhN3NncDhvd3BvOCIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTUzJTJjd18yMDQ4JTJjeF8wJTJjeV8yODgvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2Nwc2FicWZkY2E3c2dwOG93cG84Ij4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTE1MyUyY3dfMjA0OCUyY3hfMCUyY3lfMjg4L2hfMjU3JTJjcV82MCUyY3dfNDU2L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9jcHNhYnFmZGNhN3NncDhvd3BvOCIvPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTI4MHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTUzJTJjd18yMDQ4JTJjeF8wJTJjeV8yODgvaF8yODUlMmNxXzYwJTJjd181MDcvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2Nwc2FicWZkY2E3c2dwOG93cG84Ij4KICAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTUzJTJjd18yMDQ4JTJjeF8wJTJjeV8yODgvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2Nwc2FicWZkY2E3c2dwOG93cG84Ii8+CiAgICAgICAgICA8L3NvdXJjZT4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICA8YSBjbGFzcz0iY29tcG9uZW50X19vdmVybGF5LWxpbmsiIGhyZWY9Ii9zYWlzb24tMTgtMTkvZXZlbmVtZW50cy9lZGdhci1kZWdhcy1hLWxvcGVyYSNjYWxlbmRhciI+CiAgICAgICAgPC9hPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBlZGdhciBkZWdhcyDDoCBsJ29ww6lyYQogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbG9jIj4KICAgICAgICAgIMOJdsOpbmVtZW50CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1uYW1lIj4KICAgICAgICAgIEV4cG9zaXRpb24sIGNvbmNlcnQKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgTXVzw6llIGQnT3JzYXkKICAgICAgICAgPC9wPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIj4KICAgICAgICAgIGR1IDI0IHNlcHQuIDIwMTkgYXUgMTkgamFudi4gMjAyMAogICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSIgZGF0YS10aGVtYXRpYz0iRXbDqW5lbWVudCI+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ltZy1jb250YWluZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJvcGFjaXR5LWxheWVyIj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHBpY3R1cmUgY2xhc3M9ImNvbXBvbmVudF9faW1nIj4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEzMTklMmN3XzIzNDUlMmN4XzM5JTJjeV81NzEvaF80ODElMmNxXzYwJTJjd184NTUvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2JzNmtkdjllcGdmaG1pMHptbWVrIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMzE5JTJjd18yMzQ1JTJjeF8zOSUyY3lfNTcxL2hfMjQxJTJjcV82MCUyY3dfNDI4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iczZrZHY5ZXBnZmhtaTB6bW1layIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMzE5JTJjd18yMzQ1JTJjeF8zOSUyY3lfNTcxL2hfNTEzJTJjcV82MCUyY3dfOTEyL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iczZrZHY5ZXBnZmhtaTB6bW1layI+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEzMTklMmN3XzIzNDUlMmN4XzM5JTJjeV81NzEvaF8yNTclMmNxXzYwJTJjd180NTYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2JzNmtkdjllcGdmaG1pMHptbWVrIi8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEzMTklMmN3XzIzNDUlMmN4XzM5JTJjeV81NzEvaF8yODUlMmNxXzYwJTJjd181MDcvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2JzNmtkdjllcGdmaG1pMHptbWVrIj4KICAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMzE5JTJjd18yMzQ1JTJjeF8zOSUyY3lfNTcxL2hfMzcxJTJjcV82MCUyY3dfNjYwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9iczZrZHY5ZXBnZmhtaTB6bW1layIvPgogICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgIDwvc291cmNlPgogICAgICAgIDwvcGljdHVyZT4KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbmZvcyI+CiAgICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fb3ZlcmxheS1saW5rIiBocmVmPSIvc2Fpc29uLTE4LTE5L2V2ZW5lbWVudHMvbGUtZ3JhbmQtb3BlcmEjY2FsZW5kYXIiPgogICAgICAgIDwvYT4KICAgICAgICA8cCBjbGFzcz0idGl0bGUgdGl0bGUtLWgyIj4KICAgICAgICAgbGUgZ3JhbmQgb3DDqXJhCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX3N1YnRpdGxlIj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1sb2MiPgogICAgICAgICAgw4l2w6luZW1lbnQKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgRXhwb3NpdGlvbgogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9wPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYm90dG9tLXdyYXBwZXIiPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19sb2NhdGlvbiI+CiAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1nYXJuaWVyICIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICAgICA8L2k+CiAgICAgICAgICBQYWxhaXMgR2FybmllcgogICAgICAgICA8L3A+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2RhdGUiPgogICAgICAgICAgZHUgMjQgb2N0LiAyMDE5IGF1IDAyIGbDqXZyLiAyMDIwCiAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIiBkYXRhLXRoZW1hdGljPSJFdsOpbmVtZW50Ij4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwMyUyY3dfMjQ5NCUyY3hfMCUyY3lfNTA2L2hfNDgxJTJjcV82MCUyY3dfODU1L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9leGFhZWZpeDUwdnJ2OTljOWlkMSIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTQwMyUyY3dfMjQ5NCUyY3hfMCUyY3lfNTA2L2hfMjQxJTJjcV82MCUyY3dfNDI4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9leGFhZWZpeDUwdnJ2OTljOWlkMSI+CiAgICAgICAgICA8bGk+W2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDE0XVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMTRdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF08L2xpPjxsaT5bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsMTVdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxNV1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XTwvbGk+W2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDE2XVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMTZdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF0KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDMlMmN3XzI0OTQlMmN4XzAlMmN5XzUwNi9oXzUxMyUyY3FfNjAlMmN3XzkxMi9mX2F1dG8vdjEvdXNlcl9waG90b3MvZXhhYWVmaXg1MHZydjk5YzlpZDEiPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNDAzJTJjd18yNDk0JTJjeF8wJTJjeV81MDYvaF8yNTclMmNxXzYwJTJjd180NTYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2V4YWFlZml4NTB2cnY5OWM5aWQxIi8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDMlMmN3XzI0OTQlMmN4XzAlMmN5XzUwNi9oXzI4NSUyY3FfNjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MvZXhhYWVmaXg1MHZydjk5YzlpZDEiPgogICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE0MDMlMmN3XzI0OTQlMmN4XzAlMmN5XzUwNi9oXzM3MSUyY3FfNjAlMmN3XzY2MC9mX2F1dG8vdjEvdXNlcl9waG90b3MvZXhhYWVmaXg1MHZydjk5YzlpZDEiLz4KICAgICAgICAgIDwvc291cmNlPgogICAgICAgICA8L3NvdXJjZT4KICAgICAgICA8L3BpY3R1cmU+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW5mb3MiPgogICAgICAgIDxhIGNsYXNzPSJjb21wb25lbnRfX292ZXJsYXktbGluayIgaHJlZj0iL3NhaXNvbi0xOC0xOS9ldmVuZW1lbnRzL2hhYmlsbGVyLWxvcGVyYSNjYWxlbmRhciI+CiAgICAgICAgPC9hPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBoYWJpbGxlciBsJ29ww6lyYQogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbG9jIj4KICAgICAgICAgIMOJdsOpbmVtZW50CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1uYW1lIj4KICAgICAgICAgIEV4cG9zaXRpb24KICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgQ2VudHJlIE5hdGlvbmFsIGR1IENvc3R1bWUgZGUgU2PDqG5lIGRlIE1vdWxpbnMKICAgICAgICAgPC9wPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIj4KICAgICAgICAgIGR1IDI1IG1haSAgYXUgMDMgbm92LiAyMDE5CiAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIiBkYXRhLXRoZW1hdGljPSJFdsOpbmVtZW50Ij4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Im9wYWNpdHktbGF5ZXIiPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfOTA5JTJjd18xNjExJTJjeF80NTAlMmN5XzAvaF80ODElMmNxXzYwJTJjd184NTUvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2tzbDJmbWZlMnVjZXJxOG5yb3NvIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF85MDklMmN3XzE2MTElMmN4XzQ1MCUyY3lfMC9oXzI0MSUyY3FfNjAlMmN3XzQyOC9mX2F1dG8vdjEvdXNlcl9waG90b3Mva3NsMmZtZmUydWNlcnE4bnJvc28iLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfOTA5JTJjd18xNjExJTJjeF80NTAlMmN5XzAvaF81MTMlMmNxXzYwJTJjd185MTIvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2tzbDJmbWZlMnVjZXJxOG5yb3NvIj4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfOTA5JTJjd18xNjExJTJjeF80NTAlMmN5XzAvaF8yNTclMmNxXzYwJTJjd180NTYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2tzbDJmbWZlMnVjZXJxOG5yb3NvIi8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzkwOSUyY3dfMTYxMSUyY3hfNDUwJTJjeV8wL2hfMjg1JTJjcV82MCUyY3dfNTA3L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9rc2wyZm1mZTJ1Y2VycThucm9zbyI+CiAgICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfOTA5JTJjd18xNjExJTJjeF80NTAlMmN5XzAvaF8zNzElMmNxXzYwJTJjd182NjAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL2tzbDJmbWZlMnVjZXJxOG5yb3NvIi8+CiAgICAgICAgICA8L3NvdXJjZT4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIG9ww6lyYSBtb25kZS4gbGEgcXXDqnRlIGTigJl1biBhcnQgdG90YWwKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICDDiXbDqW5lbWVudAogICAgICAgICA8L3NwYW4+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbmFtZSI+CiAgICAgICAgICBFeHBvc2l0aW9uIHwgT3DDqXJhIGV0IGFydHMgdmlzdWVscyBhdXggWFhlIGV0IFhYSWUgc2nDqGNsZXMKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgQ2VudHJlIFBvbXBpZG91LU1ldHoKICAgICAgICAgPC9wPgogICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19kYXRlIj4KICAgICAgICAgIGR1IDIyIGp1aW4gMjAxOSBhdSAyNyBqYW52LiAyMDIwCiAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ibG9jay1pdGVtIiBkYXRhLXRoZW1hdGljPSIzc2NlbmUiPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxhIGNsYXNzPSJjdGEgY3RhLS13aGl0ZSIgaHJlZj0iLzNlLXNjZW5lL2RlLWxvbmdzLWRpc2NvdXJzLWRhbnMtdm9zLWNoZXZldXgiPgogICAgICAgICBWb2lyCiAgICAgICAgPC9hPgogICAgICAgIDxwaWN0dXJlIGNsYXNzPSJjb21wb25lbnRfX2ltZyI+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMDgwJTJjd18xOTE4JTJjeF8wJTJjeV8wL2hfNjQwJTJjd184NTUvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3l5ZWV3ZnV2ZG54OGJjbnUya2JoIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMDgwJTJjd18xOTE4JTJjeF8wJTJjeV8wL2hfMzIwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3l5ZWV3ZnV2ZG54OGJjbnUya2JoIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEwODAlMmN3XzE5MTglMmN4XzAlMmN5XzAvaF82NDAlMmN3XzkxMi9mX2F1dG8vdjEvdXNlcl9waG90b3MveXllZXdmdXZkbng4YmNudTJrYmgiPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMDgwJTJjd18xOTE4JTJjeF8wJTJjeV8wL2hfMzIwJTJjd180NTYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3l5ZWV3ZnV2ZG54OGJjbnUya2JoIi8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEwODAlMmN3XzE5MTglMmN4XzAlMmN5XzAvaF8zMjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MveXllZXdmdXZkbng4YmNudTJrYmgiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzEwODAlMmN3XzE5MTglMmN4XzAlMmN5XzAvaF8zNzAlMmN3XzY2MC9mX2F1dG8vdjEvdXNlcl9waG90b3MveXllZXdmdXZkbng4YmNudTJrYmgiLz4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIERFIExPTkdTIERJU0NPVVJTIERBTlMgVk9TIENIRVZFVVgKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICBGaWN0aW9uCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fZXZlbnQtdHlwZS1uYW1lIj4KICAgICAgICAgIEFsZXhhbmRyZSBTdGVpZ2VyCiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ib3R0b20td3JhcHBlciI+CiAgICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2xvY2F0aW9uIj4KICAgICAgICAgIDMKICAgICAgICAgIDxzdXA+CiAgICAgICAgICAgZQogICAgICAgICAgPC9zdXA+CiAgICAgICAgICBTY8OobmUKICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2Jsb2NrLWl0ZW0iIGRhdGEtdGhlbWF0aWM9IjNzY2VuZSI+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ltZy1jb250YWluZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJvcGFjaXR5LWxheWVyIj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPGEgY2xhc3M9ImN0YSBjdGEtLXdoaXRlIiBocmVmPSIvM2Utc2NlbmUvZGUtbGEtam9pZS1kYW5zLWNlLWNvbWJhdCI+CiAgICAgICAgIFZvaXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFthcmVhMV1bbWtleTFdW2xpbmt4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGwxN11bYXJlYTFdW2tleXdvcmR4XVticmFja2V0cjE3XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdCiAgICAgICAgPC9hPgogICAgICAgIDxwaWN0dXJlIGNsYXNzPSJjb21wb25lbnRfX2ltZyI+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTI1JTJjd18yMDAwJTJjeF8wJTJjeV8wL2hfNjQwJTJjd184NTUvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3E0ZGR5YXlxOXV5OXR4eG9tNXZvIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTI1JTJjd18yMDAwJTJjeF8wJTJjeV8wL2hfMzIwJTJjd180MjgvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3E0ZGR5YXlxOXV5OXR4eG9tNXZvIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExMjUlMmN3XzIwMDAlMmN4XzAlMmN5XzAvaF82NDAlMmN3XzkxMi9mX2F1dG8vdjEvdXNlcl9waG90b3MvcTRkZHlheXE5dXk5dHh4b201dm8iPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xMTI1JTJjd18yMDAwJTJjeF8wJTJjeV8wL2hfMzIwJTJjd180NTYvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3E0ZGR5YXlxOXV5OXR4eG9tNXZvIi8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMjgwcHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExMjUlMmN3XzIwMDAlMmN4XzAlMmN5XzAvaF8zMjAlMmN3XzUwNy9mX2F1dG8vdjEvdXNlcl9waG90b3MvcTRkZHlheXE5dXk5dHh4b201dm8iLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzExMjUlMmN3XzIwMDAlMmN4XzAlMmN5XzAvaF8zNzAlMmN3XzY2MC9mX2F1dG8vdjEvdXNlcl9waG90b3MvcTRkZHlheXE5dXk5dHh4b201dm8iLz4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICA8YSBjbGFzcz0iY29tcG9uZW50X19vdmVybGF5LWxpbmsiIGhyZWY9Ii8zZS1zY2VuZS9kZS1sYS1qb2llLWRhbnMtY2UtY29tYmF0Ij4KICAgICAgICA8L2E+CiAgICAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMiI+CiAgICAgICAgIERFIExBIEpPSUUgREFOUyBDRSBDT01CQVQKICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fc3VidGl0bGUiPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLWxvYyI+CiAgICAgICAgICBEb2N1bWVudGFpcmUKICAgICAgICAgPC9zcGFuPgogICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19ldmVudC10eXBlLW5hbWUiPgogICAgICAgICAgSmVhbi1HYWJyaWVsIFDDqXJpb3QKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgMwogICAgICAgICAgPHN1cD4KICAgICAgICAgICBlCiAgICAgICAgICA8L3N1cD4KICAgICAgICAgIFNjw6huZQogICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYmxvY2staXRlbSIgZGF0YS10aGVtYXRpYz0iM3NjZW5lIj4KICAgICAgIDxsaT5bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsMTBdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxMF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XTwvbGk+PGxpPlthaHJlZl08L2xpPjxsaT5bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsMTFdW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHIxMV1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XTwvbGk+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2Jsb2NrLWl0ZW0iIGRhdGEtdGhlbWF0aWM9IjNzY2VuZSI+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ltZy1jb250YWluZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJvcGFjaXR5LWxheWVyIj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPGEgY2xhc3M9ImN0YSBjdGEtLXdoaXRlIiBocmVmPSIvM2Utc2NlbmUvbmUtbWUtcmVnYXJkZS1wYXMiPgogICAgICAgICBWb2lyCiAgICAgICAgPC9hPgogICAgICAgIDxwaWN0dXJlIGNsYXNzPSJjb21wb25lbnRfX2ltZyI+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjU4JTJjd18yOTQ0JTJjeF8wJTJjeV8xOTQvaF82NDAlMmN3Xzg1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvbXFvOGJhbGFya3FsOGpoNXg2bXQiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogNzY4cHgpIiBzcmNzZXQ9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL29wZXJhLW5hdGlvbmFsLWRlLXBhcmlzL2ltYWdlL3VwbG9hZC9jX2Nyb3AlMmNoXzE2NTglMmN3XzI5NDQlMmN4XzAlMmN5XzE5NC9oXzMyMCUyY3dfNDI4L2ZfYXV0by92MS91c2VyX3Bob3Rvcy9tcW84YmFsYXJrcWw4amg1eDZtdCIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjU4JTJjd18yOTQ0JTJjeF8wJTJjeV8xOTQvaF82NDAlMmN3XzkxMi9mX2F1dG8vdjEvdXNlcl9waG90b3MvbXFvOGJhbGFya3FsOGpoNXg2bXQiPgogICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1heC13aWR0aDogMTAyNHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjU4JTJjd18yOTQ0JTJjeF8wJTJjeV8xOTQvaF8zMjAlMmN3XzQ1Ni9mX2F1dG8vdjEvdXNlcl9waG90b3MvbXFvOGJhbGFya3FsOGpoNXg2bXQiLz4KICAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDEyODBweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTY1OCUyY3dfMjk0NCUyY3hfMCUyY3lfMTk0L2hfMzIwJTJjd181MDcvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL21xbzhiYWxhcmtxbDhqaDV4Nm10Ii8+CiAgICAgICAgICA8c291cmNlIG1lZGlhPSIobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjU4JTJjd18yOTQ0JTJjeF8wJTJjeV8xOTQvaF8zNzAlMmN3XzY2MC9mX2F1dG8vdjEvdXNlcl9waG90b3MvbXFvOGJhbGFya3FsOGpoNXg2bXQiLz4KICAgICAgICAgPC9zb3VyY2U+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICA8YSBjbGFzcz0iY29tcG9uZW50X19vdmVybGF5LWxpbmsiIGhyZWY9Ii8zZS1zY2VuZS9uZS1tZS1yZWdhcmRlLXBhcyI+CiAgICAgICAgPC9hPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBORSBNRSBSRUdBUkRFIFBBUwogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSI+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbG9jIj4KICAgICAgICAgIERvY3VtZW50YWlyZQogICAgICAgICA8L3NwYW4+CiAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnRfX2V2ZW50LXR5cGUtbmFtZSI+CiAgICAgICAgICBTdMOpcGhhbmllIFNvbGluYXMKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2JvdHRvbS13cmFwcGVyIj4KICAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fbG9jYXRpb24iPgogICAgICAgICAgMwogICAgICAgICAgPHN1cD4KICAgICAgICAgICBlCiAgICAgICAgICA8L3N1cD4KICAgICAgICAgIFNjw6huZQogICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9ImJsb2Nrcy1oaWRkZW4tbGlzdCI+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0iY29tcG9uZW50LW9jdGF2ZSIgZGF0YS1iZWhhdmlvcj0iaG9tZV9vY3RhdmUiIGlkPSJvY3RhdmUiPgogICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX29jdGF2ZS1jb250ZW50Ij4KICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fdG9wIj4KICAgICA8cCBjbGFzcz0idGl0bGUgdGl0bGUtLWgzIj4KICAgICAgT2N0YXZlIE1hZ2F6aW5lCiAgICAgPC9wPgogICAgIFtsaW5reF0KICAgICAKICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19ib2R5Ij4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2FydGljbGVzLWxpc3QiIGlkPSJhcnRpY2xlcy1jb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJvcGFjaXR5LWxheWVyIj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fYXJ0aWNsZS1pdGVtIGVuY291bnRlcnMiPgogICAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLWFycm93Ij4KICAgICAgIDwvc3Bhbj4KICAgICAgIFtsaW5reF0KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tZ2FsbGVyeSI+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxwaWN0dXJlIGNsYXNzPSJjb21wb25lbnRfX2ltZyI+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjYzJTJjd18yMzUzJTJjeF81MCUyY3lfMC9oXzM2MCUyY3dfNTEwL2ZfYXV0by92MS91c2VyX3Bob3Rvcy9hM2djYmxjd21qdHRwd3RsZzZndCIvPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTY2MyUyY3dfMjM1MyUyY3hfNTAlMmN5XzAvaF8xODAlMmN3XzI1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvYTNnY2JsY3dtanR0cHd0bGc2Z3QiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTY2MyUyY3dfMjM1MyUyY3hfNTAlMmN5XzAvaF8zNjAlMmN3XzUxMC9mX2F1dG8vdjEvdXNlcl9waG90b3MvYTNnY2JsY3dtanR0cHd0bGc2Z3QiLz4KICAgICAgICA8L3BpY3R1cmU+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW5mb3MiPgogICAgICAgIDxwIGNsYXNzPSJ0aXRsZSB0aXRsZS0taDIiPgogICAgICAgICBEb24gR2lvdmFubmkgZGlzc29sdQogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSI+CiAgICAgICAgIFBhcgogICAgICAgICA8YSBocmVmPSIvbWFnYXppbmUvYXV0ZXVyL3NpbW9uLWhhdGFiIj4KICAgICAgICAgIFNpbW9uIEhhdGFiCiAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CiAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBvbmVudF9fYXJ0aWNsZS10eXBlIj4KICAgICAgICAgPGEgaHJlZj0iL21hZ2F6aW5lL3JlbmNvbnRyZXMiIHRpdGxlPSIiPgogICAgICAgICAgUmVuY29udHJlcwogICAgICAgICA8L2E+CiAgICAgICAgPC9zcGFuPgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2FydGljbGUtaXRlbSBwZXJzcGVjdGl2ZXMiPgogICAgICAgPGxpPltsaW5reF08L2xpPlthaHJlZl08bGk+W2xpbmt4XTwvbGk+PGxpPltwa2V5eF08L2xpPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19hcnRpY2xlLWl0ZW0gZW5jb3VudGVycyI+CiAgICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tYXJyb3ciPgogICAgICAgPC9zcGFuPgogICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fb3ZlcmxheS1saW5rIiBocmVmPSIvbWFnYXppbmUvdW4tc3BlY3RhY2xlLXF1aS1tYXJxdWUiPgogICAgICAgPC9hPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0ibWF6LWljb24tdmlkZW8iPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cGljdHVyZSBjbGFzcz0iY29tcG9uZW50X19pbWciPgogICAgICAgICA8c291cmNlIG1lZGlhPSIobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1heC13aWR0aDogNzY4cHgpIGFuZCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTY2NSUyY3dfMjM2MSUyY3hfMTAwJTJjeV8wL2hfMzYwJTJjd181MTAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3F5eDZ1ZnRkZjRldXJjdmNheHplIi8+CiAgICAgICAgIDxzb3VyY2UgbWVkaWE9IihtYXgtd2lkdGg6IDc2OHB4KSIgc3Jjc2V0PSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9vcGVyYS1uYXRpb25hbC1kZS1wYXJpcy9pbWFnZS91cGxvYWQvY19jcm9wJTJjaF8xNjY1JTJjd18yMzYxJTJjeF8xMDAlMmN5XzAvaF8xODAlMmN3XzI1NS9mX2F1dG8vdjEvdXNlcl9waG90b3MvcXl4NnVmdGRmNGV1cmN2Y2F4emUiLz4KICAgICAgICAgPHNvdXJjZSBtZWRpYT0iKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkiIHNyY3NldD0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vb3BlcmEtbmF0aW9uYWwtZGUtcGFyaXMvaW1hZ2UvdXBsb2FkL2NfY3JvcCUyY2hfMTY2NSUyY3dfMjM2MSUyY3hfMTAwJTJjeV8wL2hfMzYwJTJjd181MTAvZl9hdXRvL3YxL3VzZXJfcGhvdG9zL3F5eDZ1ZnRkZjRldXJjdmNheHplIi8+CiAgICAgICAgPC9waWN0dXJlPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2luZm9zIj4KICAgICAgICA8cCBjbGFzcz0idGl0bGUgdGl0bGUtLWgyIj4KICAgICAgICAgwqsgVW4gc3BlY3RhY2xlIHF1aSBtYXJxdWUgISDCuwogICAgICAgIDwvcD4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19zdWJ0aXRsZSI+CiAgICAgICAgIFBhcgogICAgICAgICBbYWhyZWZdCiAgICAgICAgIAogICAgICAgIDwvcD4KICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50X19hcnRpY2xlLXR5cGUiPgogICAgICAgICBbbGlua3hdCiAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3dpZGdldHMtbGlzdCIgaWQ9IndpZGdldHMtY29udGFpbmVyIj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X193aWRnZXQtaXRlbSB0eXBlLXZpZGVvIj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fd2lkZ2V0LWlmcmFtZSI+CiAgICAgICAgPGlmcmFtZSBhbGxvd2Z1bGxzY3JlZW49IiIgZnJhbWVib3JkZXI9IjAiIGhlaWdodD0iMzE1IiBzY3JvbGxpbmc9Im5vIiBzcmM9Ii8vZW1iZWRmdHYtYS5ha2FtYWloZC5uZXQvY2QyN2I0NzEyMDgzODhlZmRhZDE4NDVmNGE4YzNiOTQiIHdpZHRoPSI1NjAiPgogICAgICAgIDwvaWZyYW1lPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3dpZGdldC1pbmZvcyI+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fdGl0bGUiPgogICAgICAgICA8YSBocmVmPSIvbWFnYXppbmUvbGUtbGFjLWRlcy1jeWduZXMtMiIgdGl0bGU9IiI+CiAgICAgICAgICBMZSBMYWMgZGVzIGN5Z25lcwogICAgICAgICA8L2E+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2F1dGhvciI+CiAgICAgICAgIDxzcGFuPgogICAgICAgICAg4oCUIExpdmUKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X193aWRnZXQtaXRlbSB0eXBlLXZpZGVvIj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fd2lkZ2V0LWlmcmFtZSI+CiAgICAgICAgPGlmcmFtZSBhbGxvd2Z1bGxzY3JlZW49IiIgZnJhbWVib3JkZXI9IjAiIGhlaWdodD0iMzE1IiBzY3JvbGxpbmc9Im5vIiBzcmM9Ii8vZW1iZWRmdHYtYS5ha2FtYWloZC5uZXQvODU4NDc3MzI0OWM5NDIyOTE0ZmE1Zjc3YzAwN2ViODgiIHdpZHRoPSI1NjAiPgogICAgICAgIDwvaWZyYW1lPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3dpZGdldC1pbmZvcyI+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fdGl0bGUiPgogICAgICAgICA8YSBocmVmPSIvbWFnYXppbmUvc2ltb24tYm9jY2FuZWdyYSIgdGl0bGU9IiI+CiAgICAgICAgICBTaW1vbiBCb2NjYW5lZ3JhCiAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fYXV0aG9yIj4KICAgICAgICAgPHNwYW4+CiAgICAgICAgICDigJQgTGl2ZQogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9wPgogICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3dpZGdldC1pdGVtIHR5cGUtdmlkZW8iPgogICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X193aWRnZXQtaWZyYW1lIj4KICAgICAgICA8aWZyYW1lIGFsbG93ZnVsbHNjcmVlbj0iIiBmcmFtZWJvcmRlcj0iMCIgaGVpZ2h0PSIzMTUiIHNjcm9sbGluZz0ibm8iIHNyYz0iLy9lbWJlZGZ0di1hLmFrYW1haWhkLm5ldC9iOTc5NzAwZWFiOTQ4NDlkOWFlNGU4MDAyNjM0NDNlOCIgd2lkdGg9IjU2MCI+CiAgICAgICAgPC9pZnJhbWU+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fd2lkZ2V0LWluZm9zIj4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190aXRsZSI+CiAgICAgICAgIFtsaW5reF0KICAgICAgICAgCiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2F1dGhvciI+CiAgICAgICAgIDxzcGFuPgogICAgICAgICAg4oCUIExpdmUKICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvcD4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb21wb25lbnQtYXJ0aXN0cy1zbGlkZXIiIGRhdGEtYmVoYXZpb3I9ImhvbWVfYXJ0aXN0c19zbGlkZXIiIGlkPSJhcnRpc3RzLXNsaWRlciI+CiAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fd3JhcHBlciI+CiAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3RvcCI+CiAgICAgPHAgY2xhc3M9InRpdGxlIHRpdGxlLS1oMyBjb21wb25lbnRfX3RpdGxlIj4KICAgICAgTGVzIGFydGlzdGVzIMOgIGwnYWZmaWNoZQogICAgIDwvcD4KICAgICA8cCBjbGFzcz0iY29tcG9uZW50X190b3AtbGluay1jb250YWluZXIiPgogICAgICBbYWhyZWZdCiAgICAgIAogICAgIDwvcD4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItd3JhcHBlciI+CiAgICAgPGJ1dHRvbiBjbGFzcz0iY29tcG9uZW50X19uYXYgY29tcG9uZW50X19uYXYtcHJldiBpcy1kaXNhYmxlZCI+CiAgICAgIDxzcGFuIGNsYXNzPSJtYXotaWNvbi1hcnJvdyI+CiAgICAgIDwvc3Bhbj4KICAgICA8L2J1dHRvbj4KICAgICA8YnV0dG9uIGNsYXNzPSJjb21wb25lbnRfX25hdiBjb21wb25lbnRfX25hdi1uZXh0Ij4KICAgICAgPHNwYW4gY2xhc3M9Im1hei1pY29uLWFycm93Ij4KICAgICAgPC9zcGFuPgogICAgIDwvYnV0dG9uPgogICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWNvbnRlbnQiPgogICAgICA8c3BhbiBjbGFzcz0ib3BhY2l0eS1sYXllciI+CiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgICA8YSBjbGFzcz0iY29tcG9uZW50X193cmFwcGVyLWxpbmsiIGhyZWY9Ii9hcnRpc3Rlcy9uaWNvbGUtY2FyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX2ltZy1jb250YWluZXIiPgogICAgICAgIDwvZGl2PgogICAgICAgIDxwIGNsYXNzPSJjb21wb25lbnRfX2FydGlzdC1uYW1lIj4KICAgICAgICAgTmljb2xlIENhcgogICAgICAgIDwvcD4KICAgICAgIDwvYT4KICAgICAgIDxwIGNsYXNzPSJSb2xsQ2Fyb3VzZWxfX3N1YnRpdGxlIj4KICAgICAgICA8YSBocmVmPSIvc2Fpc29uLTE4LTE5L29wZXJhL2Rvbi1naW92YW5uaSI+CiAgICAgICAgIERvbiBHaW92YW5uaQogICAgICAgIDwvYT4KICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWl0ZW0iPgogICAgICAgPGEgY2xhc3M9ImNvbXBvbmVudF9fd3JhcHBlci1saW5rIiBocmVmPSIvYXJ0aXN0ZXMvZXRpZW5uZS1kdXB1aXMiPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fYXJ0aXN0LW5hbWUiPgogICAgICAgICDDiXRpZW5uZSBEdXB1aXMKICAgICAgICA8L3A+CiAgICAgICA8L2E+CiAgICAgICA8cCBjbGFzcz0iUm9sbENhcm91c2VsX19zdWJ0aXRsZSI+CiAgICAgICAgPGEgaHJlZj0iL3NhaXNvbi0xOC0xOS9vcGVyYS9kb24tZ2lvdmFubmkiPgogICAgICAgICBEb24gR2lvdmFubmkKICAgICAgICA8L2E+CiAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIj4KICAgICAgIDxhIGNsYXNzPSJjb21wb25lbnRfX3dyYXBwZXItbGluayIgaHJlZj0iL2FydGlzdGVzL3N0YW5pc2xhcy1kZS1iYXJiZXlyYWMiPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9faW1nLWNvbnRhaW5lciI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPHAgY2xhc3M9ImNvbXBvbmVudF9fYXJ0aXN0LW5hbWUiPgogICAgICAgICBTdGFuaXNsYXMgZGUgQmFyYmV5cmFjCiAgICAgICAgPC9wPgogICAgICAgPC9hPgogICAgICAgPHAgY2xhc3M9IlJvbGxDYXJvdXNlbF9fc3VidGl0bGUiPgogICAgICAgIFthaHJlZl0KICAgICAgICAKICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudF9fc2xpZGVyLWl0ZW0iPgogICAgICAgW2xpbmt4XQogICAgICAgCiAgICAgICA8cCBjbGFzcz0iUm9sbENhcm91c2VsX19zdWJ0aXRsZSI+CiAgICAgICAgW2FocmVmXQogICAgICAgIAogICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgICA8YSBjbGFzcz0iY29tcG9uZW50X193cmFwcGVyLWxpbmsiIGhyZWY9Ii9hcnRpc3Rlcy9lbGVuYS1zdGlraGluYSI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19pbWctY29udGFpbmVyIj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8cCBjbGFzcz0iY29tcG9uZW50X19hcnRpc3QtbmFtZSI+CiAgICAgICAgIEVsZW5hIFN0aWtoaW5hCiAgICAgICAgPC9wPgogICAgICAgPC9hPgogICAgICAgPHAgY2xhc3M9IlJvbGxDYXJvdXNlbF9fc3VidGl0bGUiPgogICAgICAgIDxhIGhyZWY9Ii9zYWlzb24tMTgtMTkvb3BlcmEvbGEtZm9yY2UtZHUtZGVzdGluIj4KICAgICAgICAgTGEgRm9yY2UgZHUgZGVzdGluCiAgICAgICAgPC9hPgogICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50X19zbGlkZXItaXRlbSI+CiAgICAgICBbYWhyZWZdCiAgICAgICAKICAgICAgIDxwIGNsYXNzPSJSb2xsQ2Fyb3VzZWxfX3N1YnRpdGxlIj4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRfX3NsaWRlci1pdGVtIj4KICAgICAgIFthaHJlZl0KICAgICAgIAogICAgICAgPHAgY2xhc3M9IlJvbGxDYXJvdXNlbF9fc3VidGl0bGUiPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgPC9kaXY+CiA8L2Rpdj4KIDxmb290ZXIgY2xhc3M9IkZvb3RlciI+CiAgPGRpdiBjbGFzcz0iRm9vdGVyX193cmFwcGVyIj4KICAgPGRpdiBjbGFzcz0iRm9vdGVyLS1pbmZvIGdyaWQtY29udGFpbmVyIj4KICAgIDxkaXYgY2xhc3M9ImdyaWQtcm93Ij4KICAgICA8ZGl2IGNsYXNzPSJGb290ZXJfX2luZm8tc3BhbiBGb290ZXJfX2luZm8tc3Bhbi0tbG9nbyI+CiAgICAgIDxpIGNsYXNzPSJpY29uLW9wZXJhLWxvZ28iIGRhdGEtZ3J1bnRpY29uLWVtYmVkPSIiPgogICAgICA8L2k+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iRm9vdGVyX19pbmZvLXNwYW4gRm9vdGVyX19pbmZvLXNwYW4tLXBhbGFpcyI+CiAgICAgIDxzcGFuIGNsYXNzPSJGb290ZXJfX2luZm8tdGl0bGUiPgogICAgICAgUGFsYWlzIEdhcm5pZXIKICAgICAgPC9zcGFuPgogICAgICA8cD4KICAgICAgIFBsYWNlIGRlIGzigJlPcMOpcmEKICAgICAgIDxici8+CiAgICAgICA3NTAwOSBQYXJpcwogICAgICA8L3A+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0iRm9vdGVyX19pbmZvLXNwYW4gRm9vdGVyX19pbmZvLXNwYW4tLWJhc3RpbGxlIj4KICAgICAgPHNwYW4gY2xhc3M9IkZvb3Rlcl9faW5mby10aXRsZSI+CiAgICAgICBPcMOpcmEgQmFzdGlsbGUKICAgICAgPC9zcGFuPgogICAgICA8cD4KICAgICAgIFBsYWNlIGRlIGxhIEJhc3RpbGxlCiAgICAgICA8YnIvPgogICAgICAgNzUwMTIgUGFyaXMKICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9IkZvb3Rlcl9faW5mby1zcGFuIEZvb3Rlcl9faW5mby1zcGFuLS0zc2NlbmUiPgogICAgICA8c3BhbiBjbGFzcz0iRm9vdGVyX19pbmZvLXRpdGxlIj4KICAgICAgIDMKICAgICAgIDxzdXA+CiAgICAgICAgZQogICAgICAgPC9zdXA+CiAgICAgICBTY8OobmUKICAgICAgPC9zcGFuPgogICAgICBbbGlua3hdCiAgICAgIAogICAgIDwvZGl2PgogICAgPC9kaXY+CiAgIDwvZGl2PgogICA8ZGl2IGNsYXNzPSJGb290ZXJfX2NvbnRhY3QgZ3JpZC1jb250YWluZXIiPgogICAgPGRpdiBjbGFzcz0iZ3JpZC1yb3ciPgogICAgIDxkaXYgY2xhc3M9IkZvb3Rlcl9fY29udGFjdC1ib3giPgogICAgICA8cCBjbGFzcz0iaGlkZS10YWJsZXQtYW5kLWRvd24iPgogICAgICAgTm91cyBzdWl2cmUKICAgICAgPC9wPgogICAgICA8dWwgY2xhc3M9IlNvY2lhbExpc3QgU29jaWFsTGlzdC0tZm9vdGVyIj4KICAgICAgIDxsaT4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICA8L2xpPgogICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9Ii9vcGVyYWRlcGFyaXMiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgPGkgY2xhc3M9IlNvY2lhbExpc3RfX2ljb24gaWNvbi10d2l0dGVyIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgICAgPC9pPgogICAgICAgIDwvYT4KICAgICAgIDwvbGk+CiAgICAgICA8bGk+CiAgICAgICAgW2xpbmt4XQogICAgICAgICBbYXJlYTFdW21rZXkxXVtsaW5reF08bGk+W2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDldW2FyZWExXVtrZXl3b3JkeF1bYnJhY2tldHI5XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdPC9saT4KICAgICAgICAKICAgICAgIDwvbGk+CiAgICAgICA8bGk+CiAgICAgICAgW2xpbmt4XQogICAgICAgIAogICAgICAgPC9saT4KICAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIvdXNlci9vcGVyYW5hdGlvbmFsZGVwYXJpcyIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICA8bGk+W2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDEyXVthcmVhMV1ba2V5d29yZHhdW2JyYWNrZXRyMTJdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF1bYXJlYTFdW2tleXdvcmR4XVtzeW1ib2x4XVthcmVhMV1ba2V5d29yZHhdW3N5bWJvbHhdW2FyZWExXVtrZXl3b3JkeF1bc3ltYm9seF08L2xpPjxsaT5bcGtleXhdPC9saT48bGk+W2FocmVmXTwvbGk+CiAgICAgICAgPC9hPgogICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJGb290ZXJfX25ld3NsZXR0ZXItYm94Ij4KICAgICAgW2FocmVmXQogICAgICAKICAgICAgW2FocmVmXQogICAgICAKICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJGb290ZXJfX2FtaXMtYm94Ij4KICAgICAgPGEgaHJlZj0iLyIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgPGkgY2xhc3M9Imljb24tYW1pcy1vcGVyYSIgZGF0YS1ncnVudGljb24tZW1iZWQ9IiI+CiAgICAgICA8L2k+CiAgICAgIDwvYT4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJGb290ZXJfX25hdiI+CiAgIDxuYXYgY2xhc3M9ImdyaWQtY29udGFpbmVyIj4KICAgIFtsaW5reF0KICAgIAogICAgPGEgY2xhc3M9IkZvb3Rlcl9fbmF2LWxpbmsiIGhyZWY9Ii8iIHRhcmdldD0iX2JsYW5rIj4KICAgICBNw6ltT3DDqXJhCiAgICA8L2E+CiAgICBbYWhyZWZdCiAgICAKICAgIDxhIGNsYXNzPSJGb290ZXJfX25hdi1saW5rIiBocmVmPSIvbWVudGlvbnMtbGVnYWxlcyI+CiAgICAgTWVudGlvbnMgbMOpZ2FsZXMKICAgIDwvYT4KICAgIFtsaW5reF0KICAgIAogICAgPGRpdiBjbGFzcz0iRHJvcERvd24tY29udGFpbmVyIERyb3BEb3duLS1mb290ZXIiIGRhdGEtYmVoYXZpb3I9ImRyb3Bkb3duIj4KICAgICA8YSBkYXRhLWRyb3Bkb3duLWNsaWNrPSIiIGhyZWY9IiMiPgogICAgICA8c3BhbiBkYXRhLXNob3ctc2VsZWN0ZWQ9IiI+CiAgICAgICBMYW5ndWVzCiAgICAgIDwvc3Bhbj4KICAgICAgPGkgY2xhc3M9Imljb24tY2hldnJvbi1kb3duIiBkYXRhLWdydW50aWNvbi1lbWJlZD0iIj4KICAgICAgPC9pPgogICAgIDwvYT4KICAgICA8dWwgY2xhc3M9IkRyb3BEb3duIj4KICAgICAgPGxpPgogICAgICAgW2xpbmt4XQogICAgICAgCiAgICAgIDwvbGk+CiAgICAgIDxsaT4KICAgICAgIDxhIGhyZWY9Ii9lbiI+CiAgICAgICAgRW5nbGlzaAogICAgICAgPC9hPgogICAgICA8L2xpPgogICAgIDwvdWw+CiAgICA8L2Rpdj4KICAgIDxwIGNsYXNzPSJGb290ZXJfX25hdi1jb3B5cmlnaHQiPgogICAgIMKpIDIwMTgg4oCTIE9ww6lyYSBuYXRpb25hbCBkZSBQYXJpcwogICAgPC9wPgogICA8L25hdj4KICA8L2Rpdj4KIDwvZm9vdGVyPgo8L2Rpdj4KPGRpdiBpZD0iYmxhY2stbWFzayI+CjwvZGl2Pgo=|<---