--->|<!DOCTYPE html>
<html class="no-js" lang="fr">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="app-id=392606246, app-argument=https://www.operadeparis.fr" name="apple-itunes-app"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="100001188593247" property="fb:admins"/>
  <meta content="Opéra national de Paris" property="og:title">
   <meta content="Le Palais Garnier, l’Opéra Bastille et la 3e Scène. Programmation, Billetterie, Informations pratiques." property="og:description">
    <meta content="https://res.cloudinary.com/opera-national-de-paris/c_fill%2ch_315%2cw_600/static/placeholder_black.jpg" property="og:image:secure_url">
     <meta content="https://www.facebook.com/operadeparis" property="og:author">
      <meta content="website" property="og:type">
       <meta content="Opéra national de Paris" property="og:site_name">
        <meta content="600" property="og:image:width"/>
        <meta content="315" property="og:image:height"/>
        <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
        <meta content="http://res.cloudinary.com/opera-national-de-paris/c_fill%2ch_315%2cw_600/static/placeholder_black.jpg" property="og:image"/>
        <meta content="summary" name="twitter:card"/>
        <meta content="@operadeparis" name="twitter:site"/>
        <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
        <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
        <meta content="https://res.cloudinary.com/opera-national-de-paris/c_fill%2ch_315%2cw_600/static/placeholder_black.jpg" name="twitter:image"/>
        <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:url"/>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="route-home-landing" data-app="onp" data-behavior="cnil_cookies_warning smart_banner gtm_tracking" data-cookie-lifetime="568800" data-gtm-ui="GTM-KLKLKL" data-template="home" data-track-plan="tracking_global_connected_user tracking_abo_popin tracking_tooltip ">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KLKLKL" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="SideNav" data-behavior="nav_side" data-sidenav-submenu="home">
   <div class="SideNav__wrapper" data-sidenav-wrapper="">
    <div class="SideNav__scrollable" data-sidenav-scrollable="">
     <div class="subnav-middle" data-sidenav-list="">
      <div class="subnav-middle-slider">
       <div class="subnav-item subnav-top">
        [ahref]
        
        <a class="link" data-search-trigger="" href="#">
         <span class="icon maz-icon-search">
         </span>
         <span class="text">
          Rechercher
         </span>
        </a>
       </div>
       <div class="subnav-item">
        <a class="link link-special" href="/programmation-et-billets">
         Programmation et Billets
        </a>
       </div>
       <div class="subnav-item">
        <span class="link">
         <span class="text">
          Offres et Services
         </span>
         <span class="icon maz-icon-arrow icon-arrow-r">
         </span>
        </span>
        <div class="subnav-subitem">
         <div class="subnav-item back shadow">
          <span class="icon maz-icon-arrow icon-arrow-l">
          </span>
          <a class="link" href="#">
           Offres et Services
          </a>
         </div>
         <div class="subnav-item">
          [ahref]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/billetterie/billets-services/offres-spectateurs">
           Offres spectateurs
          </a>
         </div>
         <div class="subnav-item">
          [ahref]
          
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/billetterie/calendrier">
           Calendrier
          </a>
         </div>
         <div class="push-block">
          [ahref]
          
         </div>
        </div>
       </div>
       <div class="subnav-item">
        <span class="link">
         <span class="text">
          Venir et visiter
         </span>
         <span class="icon maz-icon-arrow icon-arrow-r">
         </span>
        </span>
        <div class="subnav-subitem">
         <li>[mkey1]</li>[linkx]<li>[mkey1]</li>[mkey1]<li>[ahref]</li>
        </div>
       </div>
       <div class="subnav-item">
        <span class="link">
         <span class="text">
          Découvrir l'Opéra
         </span>
         <span class="icon maz-icon-arrow icon-arrow-r">
         </span>
        </span>
        <div class="subnav-subitem">
         <div class="subnav-item back shadow">
          <span class="icon maz-icon-arrow icon-arrow-l">
          </span>
          <a class="link" href="#">
           Découvrir l'Opéra
          </a>
         </div>
         <div class="subnav-item">
          [ahref]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/artistes/decouvrir/lopera-national-de-paris/histoire">
           Histoire
          </a>
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/artistes/decouvrir/lopera-national-de-paris/lopera-bastille">
           L'Opéra Bastille
          </a>
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          [ahref]
          
         </div>
         <div class="subnav-item">
          [ahref]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/artistes/orchestre-et-choeurs">
           Orchestre et Chœurs
          </a>
         </div>
         <div class="subnav-item">
          <h2>
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h2>
          [ahref]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/academie">
           Académie
          </a>
         </div>
         <div class="push-block">
          [ahref]
          
         </div>
        </div>
       </div>
       <div class="subnav-item">
        <span class="link">
         <span class="text">
          Soutenez-nous
         </span>
         <span class="icon maz-icon-arrow icon-arrow-r">
          [linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1][keywordx][pkeyx][mkey1][mkey1][linkx][linkx][pkeyx][pkeyx][keywordx][keywordx][linkx][pkeyx][keywordx][linkx]
         </span>
        </span>
        <div class="subnav-subitem">
         <div class="subnav-item back shadow">
          <span class="icon maz-icon-arrow icon-arrow-l">
          </span>
          [linkx]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/soutenez-nous/projet">
           Voir tout
          </a>
         </div>
         <div class="subnav-item">
          <a class="link" href="/soutenez-nous/projet/soutenez-un-projet">
           Soutenez un projet
          </a>
         </div>
         <div class="subnav-item">
          <a class="link" href="/soutenez-nous/projet/rejoignez-un-cercle-de-mecenes">
           Rejoignez un cercle de mécènes
          </a>
         </div>
         <div class="subnav-item">
          <a class="link" href="/soutenez-nous/projet/devenez-ami-de-lopera">
           Devenez ami de l'Opéra
          </a>
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          [pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx][linkx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][mkey1]
         </div>
         <div class="subnav-item subnav-item-btn">
          [ahref]
          
         </div>
         <div class="push-block">
          <a href="/soutenez-nous/projet/adoptez-un-fauteuil">
           <span class="title">
            ADOPTEZ UN FAUTEUIL
           </span>
           <span class="link">
           </span>
          </a>
         </div>
        </div>
       </div>
       <div class="subnav-item">
        <span class="link">
         <span class="text">
          Octave Magazine[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][ahref][mkey1][linkx][pkeyx][linkx][keywordx][pkeyx][ahref][mkey1][keywordx][keywordx][pkeyx][keywordx][keywordx]
         </span>
         <span class="icon maz-icon-arrow icon-arrow-r">
         </span>
        </span>
        <div class="subnav-subitem">
         <div class="subnav-item back shadow">
          <span class="icon maz-icon-arrow icon-arrow-l">
          </span>
          [ahref]
          
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          [linkx]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/magazine/coulisses">
           Coulisses
          </a>
         </div>
         <div class="subnav-item">
          <a class="link" href="/magazine/regards">
           Regards[ahref][pkeyx][keywordx][linkx][pkeyx][mkey1][ahref][ahref][mkey1][ahref][ahref][pkeyx][linkx][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
          </a>
         </div>
         <div class="subnav-item">
          <a class="link" href="/magazine/medias">
           Médias
          </a>
         </div>
         <div class="subnav-item">
          [ahref]
          
         </div>
         <div class="subnav-item">
          <a class="link" href="/newsletter">
           S'abonner au Magazine
          </a>
         </div>
         <div class="push-block">
          <a href="#">
           <span class="title">
           </span>
           <span class="link">
           </span>
          </a>
         </div>
        </div>
       </div>
       <div class="subnav-item">
        [linkx]
        
       </div>
       <div class="subnav-item">
        [ahref]
        
       </div>
       <div class="subnav-bottom">
        <a class="link active " href="r">
         FR
        </a>
        [linkx]
        
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <header class="Header">
   <div class="Header__wrapper" data-header-wrapper="">
    <div class="Notification Notification--top" data-behavior="notification" style="display: none">
     <div class="grid-container">
      <button class="Notification__close icon-close" data-grunticon-embed="" data-notification-close="" type="button">
      </button>
      <p class="Notification__message">
       Nous rencontrons actuellement un problème technique empêchant tout accès à la billetterie en ligne, nous vous prions de bien vouloir nous en excuser.
      </p>
     </div>
    </div>
    <div class="Header__inner">
     <div class="Header__logo">
      <a class="Header__logo-title" href="r">
       <div class="Header__logo-titleLogo">
        [pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][pkeyx][ahref][linkx][mkey1][ahref][linkx][pkeyx][ahref][mkey1][ahref]
       </div>
      </a>
      [linkx]
      
     </div>
     <div class="Header__actions">
      <div class="Header__languages languages-desktop">
       [linkx]
       
       <a href="/en">
        EN
       </a>
      </div>
      <div class="Header__third-link third-desktop">
       <a href="/3e-scene" target="_blank">
        3
        <sup>
         e
        </sup>
        scène
       </a>
      </div>
      <div class="Header__shop-link shop-desktop">
       <a href="/fr/" target="_blank">
        Boutique
       </a>
      </div>
      <div class="Header__account-only-mobile is-hidden">
       <div class="Nav__account">
        [linkx]
        
       </div>
      </div>
     </div>
    </div>
   </div>
  </header>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0191
  </b>
 </body>
</html>
<div class="login_tooltip">
 <span class="maz-icon-arrow-full">
 </span>
 <span class="maz-icon-close">
 </span>
 <p>
  Créez votre compte Opéra ou identifiez-vous pour accéder à vos offres personnalisées.
 </p>
 <span class="Button Button-account-creation">
  Mon compte
 </span>
</div>
<div class="Header__menu">
 [linkx]
 
</div>
<div class="Nav">
 <nav class="Nav__wrapper" data-behavior="nav_main nav_sub check_user_status">
  <div class="Nav__list">
   <ul class=" grid-row left">
    <li class="Nav__list-item">
     [ahref]
     
    </li>
    <li class="Nav__list-item">
     <a class="Nav__link " href="/billetterie" target="">
      Offres et Services
      <span class="under-link">
      </span>
     </a>
     <div class="subcontainer" data-subnav="">
      <div class="subcontainer1">
       <div class="subcontainer-push">
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         [linkx]
         
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="subcontainer2">
       <a href="" target="">
       </a>
       <div class="header-close close-menu">
        <span class="text">
         Fermer
        </span>
        <div class="icon-close-menu" data-grunticon-embed="">
        </div>
       </div>
      </div>
     </div>
    </li>
    <li class="Nav__list-item">
     [linkx]
     
     <div class="subcontainer" data-subnav="">
      <div class="subcontainer1">
       <div class="subcontainer-push">
        <div class="img-container grow-five">
         <a data-tracking=" " href="/visites/venir-et-visiter/services-sur-place" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Services sur place
           </span>
          </p>
         </a>
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/visites/venir-et-visiter/visiter-le-palais-garnier-et-lopera-bastille" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Visiter le Palais Garnier et l'Opéra Bastille
           </span>
          </p>
         </a>
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/visites/venir-et-visiter/location-des-espaces" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Location des espaces
           </span>
          </p>
         </a>
        </div>
        <div class="links-container grow-five">
         <a href="/visites/venir-et-visiter/informations-pratiques-2" target="">
          <h3>
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </a>
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a class="" href="/informations-pratiques/faq" target="">
            FAQ
           </a>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="subcontainer2">
       [ahref]
       
       <div class="header-close close-menu">
        <span class="text">
         Fermer
        </span>
        <div class="icon-close-menu" data-grunticon-embed="">
        </div>
       </div>
      </div>
     </div>
    </li>
    <li class="Nav__list-item">
     <a class="Nav__link " href="/artistes/decouvrir" target="">
      Découvrir l'Opéra
      <span class="under-link">
      </span>
     </a>
     <div class="subcontainer" data-subnav="">
      <div class="subcontainer1">
       <div class="subcontainer-push">
        <div class="links-container grow-five">
         <a href="/artistes/decouvrir/lopera-national-de-paris" target="">
          <h3>
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </a>
         <ul>
          <li>
           <a class="" href="/artistes/decouvrir/lopera-national-de-paris/histoire" target="">
            Histoire
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a class="" href="/artistes/ecole-de-danse" target="">
            École de danse
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/artistes/saison-18-19" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Artistes de la saison
           </span>
          </p>
         </a>
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         [linkx]
         
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/academie" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Académie
           </span>
          </p>
         </a>
        </div>
       </div>
      </div>
      <div class="subcontainer2">
       <a href="/artistes/concours-et-auditions/orchestre" target="">
        <div class="text-container">
         <span class="sub-text-container-big" style="color:#ffffff;">
          Orchestre- ouverture des concours
         </span>
         <span class="sub-text-container-small" data-color="#ffffff">
          En savoir plus
         </span>
        </div>
       </a>
       <div class="header-close close-menu">
        <span class="text">
         Fermer
        </span>
        <div class="icon-close-menu" data-grunticon-embed="">
        </div>
       </div>
      </div>
     </div>
    </li>
    <li class="Nav__list-item">
     <a class="Nav__link " href="/soutenez-nous/projet" target="">
      Soutenez-nous
      <span class="under-link">
      </span>
     </a>
     <div class="subcontainer" data-subnav="">
      <div class="subcontainer1">
       <div class="subcontainer-push">
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/soutenez-nous/projet/devenez-ami-de-lopera" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Devenez ami de l'Opéra
           </span>
          </p>
         </a>
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/soutenez-nous/projet/associez-votre-entreprise" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Associez votre entreprise
           </span>
          </p>
         </a>
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="button-subnav donation">
       <a data-modal-href="https://arop.operadeparis.fr/soutenez-lopera" href="/soutenez-lopera" target="_blank">
        <span>
         Faire un don
        </span>
       </a>
      </div>
      <div class="subcontainer2">
       [ahref]
       
       <div class="header-close close-menu">
        <span class="text">
         Fermer
        </span>
        <div class="icon-close-menu" data-grunticon-embed="">
        </div>
       </div>
      </div>
     </div>
    </li>
    <li class="Nav__list-item">
     <a class="Nav__link " href="/magazine" target="">
      Octave Magazine
      <span class="under-link">
       <li>[linkx]</li>[keywordx]<li>[keywordx]</li>
      </span>
     </a>
     <div class="subcontainer" data-subnav="">
      <div class="subcontainer1">
       <div class="subcontainer-push">
        <div class="img-container grow-five">
         [linkx]
         
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/magazine/coulisses" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            Coulisses
           </span>
          </p>
         </a>
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         [ahref]
         
        </div>
        <div class="img-container grow-five">
         <a data-tracking=" " href="/magazine/350-ans" target="">
          <p class="program-title">
           <span class="" style="color:#ffffff; ">
            350 ans
           </span>
          </p>
         </a>
        </div>
       </div>
      </div>
      <div class="button-subnav">
       <a data-behavior="open_modal_iframe" data-modal-iframe-href="https://www.operadeparis.fr/newsletter?in_modal=1" data-modal-max-width="630" href="/newsletter" target="">
        <span>
         S'abonner au Magazine
        </span>
       </a>
      </div>
      <div class="subcontainer2">
       <a href="" target="">
       </a>
       <div class="header-close close-menu">
        <span class="text">
         Fermer
        </span>
        <div class="icon-close-menu" data-grunticon-embed="">
        </div>
       </div>
      </div>
     </div>
    </li>
    <li class="Nav__list-item">
     <a class="Nav__link " href="" target="">
      <span class="under-link">
      </span>
     </a>
    </li>
   </ul>
   <ul class=" grid-row right is-hidden">
    <li class="Nav__list-item">
     <div class="Header__actions-button search" data-behavior="open_search_box">
      [linkx]
      
     </div>
    </li>
    <li class="Nav__list-item">
     [ahref]
     
    </li>
    <li class="Nav__list-item" data-behavior="open_login_box open_user_box" data-item="account">
     <div class="Nav__account">
      [ahref]
      
      <div class="login_tooltip">
       <span class="maz-icon-arrow-full">
       </span>
       <span class="maz-icon-close">
       </span>
       <p>
        Créez votre compte Opéra ou identifiez-vous pour accéder à vos offres personnalisées.
       </p>
       <span class="Button Button-account-creation">
        Mon compte
       </span>
      </div>
     </div>
    </li>
   </ul>
  </div>
 </nav>
</div>
<div class="content-wrapper" data-side-nav-content-wrapper="">
 <div class="container--homepage" id="container">
  <div class="component-main-slider" data-behavior="main_slider" id="main-slider">
   <div class="component__slider-content">
    <div class="component__slider-item dark-mode ">
     <div class="component__img-main-container">
      <span class="dark-mode-layer">
      </span>
      <picture class="component__img-main">
       <source media="(min-width: 1600px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_781%2cw_2500%2cx_0%2cy_834/f_auto%2cw_1920/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 1440px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_938%2cw_2500%2cx_0%2cy_756/f_auto%2cw_1600/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1042%2cw_2500%2cx_0%2cy_704/f_auto%2cw_1440/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 1024px) and (min-device-pixel-ratio: 2), (min-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1172%2cw_2500%2cx_0%2cy_639/f_auto%2cw_2560/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1172%2cw_2500%2cx_0%2cy_639/f_auto%2cw_1280/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 768px) and (min-device-pixel-ratio: 2), (min-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1950%2cw_2496%2cx_0%2cy_-121/f_auto%2cw_1536/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1950%2cw_2496%2cx_0%2cy_-121/f_auto%2cw_768/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 0px) and (min-device-pixel-ratio: 2), (min-width: 0px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1625%2cw_2496%2cx_0%2cy_-284/f_auto%2cw_1536/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
       <source media="(min-width: 0px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1625%2cw_2496%2cx_0%2cy_-284/f_auto%2cw_768/f_auto/v1/user_photos/pcswz9uvhgl9uyx7oyay"/>
      </picture>
     </div>
     <div class="component__infos">
      <p class="component__title title title--h1">
       TREE OF CODES
      </p>
      <div class="component__txt">
       <span class="component__show-type">
        Ballet
       </span>
       <div>
        <p class="component__subtitle title title--h3">
         Wayne McGregor, Olafur Eliasson, Jamie xx
        </p>
        <p class="component__subtitle title title--h3">
         Du 26 juin au 13 juillet à l'Opéra Bastille
        </p>
       </div>
      </div>
      <p class="component__ctas">
       <a class="cta cta--white-full" href="/saison-18-19/ballet/tree-of-codes#calendar">
        Réserver
       </a>
       [linkx]
       
      </p>
     </div>
    </div>
    <div class="component__slider-item dark-mode ">
     <div class="component__img-main-container">
      <span class="dark-mode-layer">
      </span>
      <picture class="component__img-main">
       <source media="(min-width: 1600px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_781%2cw_2500%2cx_0%2cy_347/f_auto%2cw_1920/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 1440px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_938%2cw_2500%2cx_0%2cy_269/f_auto%2cw_1600/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1042%2cw_2500%2cx_0%2cy_217/f_auto%2cw_1440/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 1024px) and (min-device-pixel-ratio: 2), (min-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1172%2cw_2500%2cx_0%2cy_152/f_auto%2cw_2560/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1172%2cw_2500%2cx_0%2cy_152/f_auto%2cw_1280/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 768px) and (min-device-pixel-ratio: 2), (min-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1935%2cw_2477%2cx_0%2cy_-162/f_auto%2cw_1536/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1935%2cw_2477%2cx_0%2cy_-162/f_auto%2cw_768/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 0px) and (min-device-pixel-ratio: 2), (min-width: 0px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1613%2cw_2477%2cx_0%2cy_-323/f_auto%2cw_1536/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
       <source media="(min-width: 0px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1613%2cw_2477%2cx_0%2cy_-323/f_auto%2cw_768/f_auto/v1/user_photos/tdc8a1d5apluppt4gnup"/>
      </picture>
     </div>
     <div class="component__infos">
      <p class="component__title title title--h1">
       LA FORCE DU DESTIN
      </p>
      <div class="component__txt">
       <span class="component__show-type">
        Opéra
       </span>
       <div>
        <p class="component__subtitle title title--h3">
         Giuseppe Verdi
        </p>
        <p class="component__subtitle title title--h3">
         Du 6 juin au 09 juillet à l'Opéra Bastille
        </p>
       </div>
      </div>
      <p class="component__ctas">
       [linkx]
       
       [ahref]
       
      </p>
     </div>
    </div>
    <div class="component__bullets-container">
     <ul class="component__bullets-list">
      <div class="component__spacer">
       <li class="component__bullet" data-index="1">
        <span class="component__grower">
        </span>
       </li>
      </div>
      <div class="component__spacer">
       <li class="component__bullet" data-index="2">
        [mkey1][pkeyx][mkey1][linkx]
       </li>
      </div>
     </ul>
    </div>
   </div>
  </div>
  <div class="component-newsfeed-slider" data-behavior="home_newsfeed_slider" id="newsfeed-slider">
   <div class="component__wrapper">
    <button class="component__nav component__nav-prev is-disabled">
     <span class="maz-icon-arrow">
     </span>
    </button>
    <button class="component__nav component__nav-next">
     <span class="maz-icon-arrow">
     </span>
    </button>
    <div class="component__slider-content">
     <span class="opacity-layer">
     </span>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       28.06.2019
      </p>
      <p class="component__txt">
       <a href="/actualites/la-3e-scene-aux-rencontres-darles">
        La 3e Scène aux Rencontres d’Arles
       </a>
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       20.06.2019
      </p>
      <p class="component__txt">
       [ahref]
       
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       19.06.2019
      </p>
      <p class="component__txt">
       [linkx]
       
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       18.06.2019
      </p>
      <p class="component__txt">
       [linkx]
       
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       11.06.2019
      </p>
      <p class="component__txt">
       <a href="/actualites/ouverture-des-comptes-officiels-wechat-et-weibo">
        Ouverture des comptes officiels WeChat et Weibo
       </a>
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       04.06.2019
      </p>
      <p class="component__txt">
       [ahref]
       
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       03.06.2019
      </p>
      <p class="component__txt">
       <a href="/actualites/tournee-du-ballet-de-lopera-national-de-paris-en-asie">
        Le Ballet de l'Opéra en tournée en Asie
       </a>
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       01.06.2019
      </p>
      <p class="component__txt">
       <a href="/actualites/breves">
        Tosca : changement de distribution (1 juin)
       </a>
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       27.05.2019
      </p>
      <p class="component__txt">
       <a href="/actualites/partenariat-hewlett-packard-enterprise-hpe-et-lopera-national-de-paris">
        Partenariat Hewlett Packard Enterprise (HPE) et l’Opéra national de Paris
       </a>
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       21.05.2019
      </p>
      <p class="component__txt">
       [linkx]
       
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       15.05.2019
      </p>
      <p class="component__txt">
       [linkx]
       
      </p>
     </div>
     <div class="component__slider-item">
      <p class="component__date title title--h3">
       15.05.2019
      </p>
      <p class="component__txt">
       <a href="/actualites/breves">
        Carmen : changement de distribution ( 17,20,23 mai )
       </a>
      </p>
     </div>
    </div>
   </div>
  </div>
  <div class="component-ticket-finder" id="ticket-finder">
   <div class="component__ticket-finder-content">
    <p class="title title--h3">
     Rechercher un billet
    </p>
    <form action="/billetterie/recherche" class="component__form">
     <div class="component__date-container">
      <span class="maz-icon-calendar">
      </span>
     </div>
     <div class="component__price-container" data-behavior="home_price_selector" id="price-container">
      <span class="maz-icon-price">
      </span>
     </div>
     <button class="cta cta--black component__submit" id="" type="submit">
      <span class="maz-icon-search">
      </span>
     </button>
     <a class="cta cta--black component__link" data-behavior="open_agenda" data-modal-href="https://www.operadeparis.fr/billetterie/calendrier/individuels" href="/billetterie/calendrier/individuels">
      Voir le calendrier
      <span class="maz-icon-calendar">
      </span>
     </a>
    </form>
   </div>
  </div>
  <div class="component-events" data-behavior="home_events" id="events">
   <div class="component__events-content">
    <div class="component__top">
     <p class="title title--h3">
      <span>
       À l'affiche
      </span>
      <a class="component__subscribe" href="/programmation-et-billets/saison-18-19">
       Voir toute la programmation
      </a>
     </p>
     <div class="component__rolex">
      <iframe async-src="/minisites/rolex/rolex.html" data-behavior="lazyload" frameborder="0" height="100" scrolling="no" src="about:blank" width="185">
      </iframe>
     </div>
    </div>
    <div class="component-filters" id="filters">
     <div class="component__filters-list">
      <div class="component__filter-item">
       <button class="component__filter-cta active" data-filter="mains" id="filter-01">
        Ne pas manquer
       </button>
      </div>
      <div class="component__filter-item">
       <button class="component__filter-cta" data-filter="Opéra" id="filter-02">
        Opéra
       </button>
      </div>
      <div class="component__filter-item">
       <button class="component__filter-cta" data-filter="Ballet" id="filter-03">
        Ballet
       </button>
      </div>
      <div class="component__filter-item">
       <button class="component__filter-cta" data-filter="Evénement" id="filter-04">
        Événement
       </button>
      </div>
      <div class="component__filter-item">
       <button class="component__filter-cta" data-filter="3scene" id="filter-05">
        3
        <sup>
         e
        </sup>
        Scène
       </button>
      </div>
     </div>
    </div>
    <div class="component__blocks">
     <div class="component__blocks-list" id="blocks-container">
      <span class="opacity-layer">
      </span>
      <button class="component__nav component__nav-prev is-disabled">
       <span class="maz-icon-arrow">
       </span>
      </button>
      <button class="component__nav component__nav-next">
       <span class="maz-icon-arrow">
       </span>
      </button>
      <div class="component__block-item new-content" data-thematic="mains">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        [linkx]
        
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/opera/don-giovanni#calendar">
        </a>
        <p class="title title--h2">
         Don Giovanni
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Opéra
         </span>
         <span class="component__event-type-name">
          Wolfgang Amadeus Mozart
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 08 juin  au 13 juil. 2019
         </p>
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="mains">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        [linkx]
        
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/opera/la-force-du-destin#calendar">
        </a>
        <p class="title title--h2">
         la force du destin
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Opéra
         </span>
         <span class="component__event-type-name">
          Giuseppe Verdi
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-bastille " data-grunticon-embed="">
          </i>
          Opéra Bastille
         </p>
         <p class="component__date">
          du 06 juin  au 09 juil. 2019
         </p>
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="component__block-item new-content" data-thematic="mains">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/saison-18-19/ballet/mats-ek#calendar">
         Réserver
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/bammqsyow7xkmmknjysk">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/ballet/mats-ek#calendar">
        </a>
        <p class="title title--h2">
         Mats Ek
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Ballet
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 22 juin  au 14 juil. 2019
         </p>
         <a class="cta cta--black" href="/saison-18-19/ballet/mats-ek#calendar">
          Réserver
         </a>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="mains">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/saison-18-19/ballet/tree-of-codes#calendar">
         Réserver
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/ballet/tree-of-codes#calendar">
        </a>
        <p class="title title--h2">
         tree of codes
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Ballet
         </span>
         <span class="component__event-type-name">
          Wayne McGregor, Olafur Eliasson, Jamie xx
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-bastille " data-grunticon-embed="">
          </i>
          Opéra Bastille
         </p>
         <p class="component__date">
          du 26 juin  au 13 juil. 2019
         </p>
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="mains">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        [ahref]
        
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1407%2cw_2500%2cx_0%2cy_258/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/jzv5luxg5ptwer0g4lqw"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1407%2cw_2500%2cx_0%2cy_258/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/jzv5luxg5ptwer0g4lqw"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1407%2cw_2500%2cx_0%2cy_258/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/jzv5luxg5ptwer0g4lqw">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1407%2cw_2500%2cx_0%2cy_258/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/jzv5luxg5ptwer0g4lqw"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1407%2cw_2500%2cx_0%2cy_258/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/jzv5luxg5ptwer0g4lqw"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1407%2cw_2500%2cx_0%2cy_258/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/jzv5luxg5ptwer0g4lqw"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        [linkx]
        
        <p class="title title--h2">
         les puritains
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Opéra
         </span>
         <span class="component__event-type-name">
          Vincenzo Bellini
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-bastille " data-grunticon-embed="">
          </i>
          Opéra Bastille
         </p>
         <p class="component__date">
          du 07 sept.  au 05 oct. 2019
         </p>
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="component__block-item new-content" data-thematic="mains">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        [ahref]
        
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2500%2cx_0%2cy_0/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/fppfifjuawxeeq5pqpas"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2500%2cx_0%2cy_0/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/fppfifjuawxeeq5pqpas"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2500%2cx_0%2cy_0/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/fppfifjuawxeeq5pqpas">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2500%2cx_0%2cy_0/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/fppfifjuawxeeq5pqpas"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2500%2cx_0%2cy_0/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/fppfifjuawxeeq5pqpas"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2500%2cx_0%2cy_0/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/fppfifjuawxeeq5pqpas"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-19-20/opera/la-traviata#calendar">
        </a>
        <p class="title title--h2">
         La Traviata
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Opéra
         </span>
         <span class="component__event-type-name">
          Giuseppe Verdi
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 09 sept.  au 16 oct. 2019
         </p>
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="component__block-item new-content" data-thematic="Opéra">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        [ahref]
        
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1426%2cw_2535%2cx_0%2cy_0/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/oe8ro0bpfdlzossdz9jm"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/opera/don-giovanni#calendar">
        </a>
        <p class="title title--h2">
         Don Giovanni
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Opéra
         </span>
         <span class="component__event-type-name">
          Wolfgang Amadeus Mozart
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 08 juin  au 13 juil. 2019
         </p>
         <a class="cta cta--black" href="/saison-18-19/opera/don-giovanni#calendar">
          Réserver
         </a>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Opéra">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/saison-18-19/opera/la-force-du-destin#calendar">
         Réserver
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1188%2cw_2115%2cx_0%2cy_713/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/tjzmit5ege0pvfxllcxk"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        [ahref]
        
        <p class="title title--h2">
         la force du destin
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Opéra
         </span>
         <span class="component__event-type-name">
          Giuseppe Verdi
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-bastille " data-grunticon-embed="">
          </i>
          Opéra Bastille
         </p>
         <p class="component__date">
          du 06 juin  au 09 juil. 2019
         </p>
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="component__block-item new-content" data-thematic="Ballet">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/saison-18-19/ballet/mats-ek#calendar">
         Réserver
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/bammqsyow7xkmmknjysk">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/bammqsyow7xkmmknjysk">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_942%2cw_1676%2cx_0%2cy_663/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/bammqsyow7xkmmknjysk"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        [ahref]
        
        <p class="title title--h2">
         Mats Ek
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Ballet
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 22 juin  au 14 juil. 2019
         </p>
         <a class="cta cta--black" href="/saison-18-19/ballet/mats-ek#calendar">
          Réserver
         </a>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Ballet">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        [linkx]
         <li>[ahref]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[mkey1]
        
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_2249%2cw_4000%2cx_0%2cy_166/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/r8xrsknqcfoseihkfpu4"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/ballet/tree-of-codes#calendar">
        </a>
        <p class="title title--h2">
         tree of codes
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Ballet
         </span>
         <span class="component__event-type-name">
          Wayne McGregor, Olafur Eliasson, Jamie xx
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-bastille " data-grunticon-embed="">
          </i>
          Opéra Bastille
         </p>
         <p class="component__date">
          du 26 juin  au 13 juil. 2019
         </p>
         <a class="cta cta--black" href="/saison-18-19/ballet/tree-of-codes#calendar">
          Réserver
         </a>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Evénement">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_738%2cw_1314%2cx_0%2cy_0/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/wgl30d1pzytvfxai6seo"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_738%2cw_1314%2cx_0%2cy_0/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/wgl30d1pzytvfxai6seo"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_738%2cw_1314%2cx_0%2cy_0/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/wgl30d1pzytvfxai6seo">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_738%2cw_1314%2cx_0%2cy_0/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/wgl30d1pzytvfxai6seo"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_738%2cw_1314%2cx_0%2cy_0/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/wgl30d1pzytvfxai6seo">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_738%2cw_1314%2cx_0%2cy_0/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/wgl30d1pzytvfxai6seo"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/evenements/lacademie-royale-de-musique#calendar">
        </a>
        <p class="title title--h2">
         un air d’italie - l’opéra de paris de louis xiv à la révolution
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Événement
         </span>
         <span class="component__event-type-name">
          Exposition
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 28 mai  au 01 sept. 2019
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Evénement">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2497%2cx_0%2cy_0/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/zuw4bwafwgovwidwggv8"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2497%2cx_0%2cy_0/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/zuw4bwafwgovwidwggv8"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2497%2cx_0%2cy_0/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/zuw4bwafwgovwidwggv8">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2497%2cx_0%2cy_0/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/zuw4bwafwgovwidwggv8"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2497%2cx_0%2cy_0/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/zuw4bwafwgovwidwggv8">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1406%2cw_2497%2cx_0%2cy_0/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/zuw4bwafwgovwidwggv8"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        [linkx]
        
        <p class="title title--h2">
         battle opéra
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Événement
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 24 févr.  au 26 déc. 2019
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Evénement">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1153%2cw_2048%2cx_0%2cy_288/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/cpsabqfdca7sgp8owpo8"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1153%2cw_2048%2cx_0%2cy_288/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/cpsabqfdca7sgp8owpo8"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1153%2cw_2048%2cx_0%2cy_288/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/cpsabqfdca7sgp8owpo8">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1153%2cw_2048%2cx_0%2cy_288/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/cpsabqfdca7sgp8owpo8"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1153%2cw_2048%2cx_0%2cy_288/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/cpsabqfdca7sgp8owpo8">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1153%2cw_2048%2cx_0%2cy_288/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/cpsabqfdca7sgp8owpo8"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/evenements/edgar-degas-a-lopera#calendar">
        </a>
        <p class="title title--h2">
         edgar degas à l'opéra
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Événement
         </span>
         <span class="component__event-type-name">
          Exposition, concert
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          Musée d'Orsay
         </p>
         <p class="component__date">
          du 24 sept. 2019 au 19 janv. 2020
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Evénement">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1319%2cw_2345%2cx_39%2cy_571/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/bs6kdv9epgfhmi0zmmek"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1319%2cw_2345%2cx_39%2cy_571/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/bs6kdv9epgfhmi0zmmek"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1319%2cw_2345%2cx_39%2cy_571/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/bs6kdv9epgfhmi0zmmek">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1319%2cw_2345%2cx_39%2cy_571/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/bs6kdv9epgfhmi0zmmek"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1319%2cw_2345%2cx_39%2cy_571/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/bs6kdv9epgfhmi0zmmek">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1319%2cw_2345%2cx_39%2cy_571/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/bs6kdv9epgfhmi0zmmek"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/evenements/le-grand-opera#calendar">
        </a>
        <p class="title title--h2">
         le grand opéra
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Événement
         </span>
         <span class="component__event-type-name">
          Exposition
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          <i class="icon-garnier " data-grunticon-embed="">
          </i>
          Palais Garnier
         </p>
         <p class="component__date">
          du 24 oct. 2019 au 02 févr. 2020
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Evénement">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1403%2cw_2494%2cx_0%2cy_506/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/exaaefix50vrv99c9id1"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1403%2cw_2494%2cx_0%2cy_506/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/exaaefix50vrv99c9id1">
          <li>[keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
         </source>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1403%2cw_2494%2cx_0%2cy_506/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/exaaefix50vrv99c9id1">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1403%2cw_2494%2cx_0%2cy_506/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/exaaefix50vrv99c9id1"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1403%2cw_2494%2cx_0%2cy_506/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/exaaefix50vrv99c9id1">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1403%2cw_2494%2cx_0%2cy_506/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/exaaefix50vrv99c9id1"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/saison-18-19/evenements/habiller-lopera#calendar">
        </a>
        <p class="title title--h2">
         habiller l'opéra
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Événement
         </span>
         <span class="component__event-type-name">
          Exposition
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          Centre National du Costume de Scène de Moulins
         </p>
         <p class="component__date">
          du 25 mai  au 03 nov. 2019
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="Evénement">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_909%2cw_1611%2cx_450%2cy_0/h_481%2cq_60%2cw_855/f_auto/v1/user_photos/ksl2fmfe2ucerq8nroso"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_909%2cw_1611%2cx_450%2cy_0/h_241%2cq_60%2cw_428/f_auto/v1/user_photos/ksl2fmfe2ucerq8nroso"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_909%2cw_1611%2cx_450%2cy_0/h_513%2cq_60%2cw_912/f_auto/v1/user_photos/ksl2fmfe2ucerq8nroso">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_909%2cw_1611%2cx_450%2cy_0/h_257%2cq_60%2cw_456/f_auto/v1/user_photos/ksl2fmfe2ucerq8nroso"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_909%2cw_1611%2cx_450%2cy_0/h_285%2cq_60%2cw_507/f_auto/v1/user_photos/ksl2fmfe2ucerq8nroso">
           <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_909%2cw_1611%2cx_450%2cy_0/h_371%2cq_60%2cw_660/f_auto/v1/user_photos/ksl2fmfe2ucerq8nroso"/>
          </source>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        [linkx]
        
        <p class="title title--h2">
         opéra monde. la quête d’un art total
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Événement
         </span>
         <span class="component__event-type-name">
          Exposition | Opéra et arts visuels aux XXe et XXIe siècles
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          Centre Pompidou-Metz
         </p>
         <p class="component__date">
          du 22 juin 2019 au 27 janv. 2020
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="3scene">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/3e-scene/de-longs-discours-dans-vos-cheveux">
         Voir
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1080%2cw_1918%2cx_0%2cy_0/h_640%2cw_855/f_auto/v1/user_photos/yyeewfuvdnx8bcnu2kbh"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1080%2cw_1918%2cx_0%2cy_0/h_320%2cw_428/f_auto/v1/user_photos/yyeewfuvdnx8bcnu2kbh"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1080%2cw_1918%2cx_0%2cy_0/h_640%2cw_912/f_auto/v1/user_photos/yyeewfuvdnx8bcnu2kbh">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1080%2cw_1918%2cx_0%2cy_0/h_320%2cw_456/f_auto/v1/user_photos/yyeewfuvdnx8bcnu2kbh"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1080%2cw_1918%2cx_0%2cy_0/h_320%2cw_507/f_auto/v1/user_photos/yyeewfuvdnx8bcnu2kbh"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1080%2cw_1918%2cx_0%2cy_0/h_370%2cw_660/f_auto/v1/user_photos/yyeewfuvdnx8bcnu2kbh"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        [ahref]
        
        <p class="title title--h2">
         DE LONGS DISCOURS DANS VOS CHEVEUX
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Fiction
         </span>
         <span class="component__event-type-name">
          Alexandre Steiger
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          3
          <sup>
           e
          </sup>
          Scène
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="3scene">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/3e-scene/de-la-joie-dans-ce-combat">
         Voir
                                        [mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1125%2cw_2000%2cx_0%2cy_0/h_640%2cw_855/f_auto/v1/user_photos/q4ddyayq9uy9txxom5vo"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1125%2cw_2000%2cx_0%2cy_0/h_320%2cw_428/f_auto/v1/user_photos/q4ddyayq9uy9txxom5vo"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1125%2cw_2000%2cx_0%2cy_0/h_640%2cw_912/f_auto/v1/user_photos/q4ddyayq9uy9txxom5vo">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1125%2cw_2000%2cx_0%2cy_0/h_320%2cw_456/f_auto/v1/user_photos/q4ddyayq9uy9txxom5vo"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1125%2cw_2000%2cx_0%2cy_0/h_320%2cw_507/f_auto/v1/user_photos/q4ddyayq9uy9txxom5vo"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1125%2cw_2000%2cx_0%2cy_0/h_370%2cw_660/f_auto/v1/user_photos/q4ddyayq9uy9txxom5vo"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/3e-scene/de-la-joie-dans-ce-combat">
        </a>
        <p class="title title--h2">
         DE LA JOIE DANS CE COMBAT
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Documentaire
         </span>
         <span class="component__event-type-name">
          Jean-Gabriel Périot
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          3
          <sup>
           e
          </sup>
          Scène
         </p>
        </div>
       </div>
      </div>
      <div class="component__block-item" data-thematic="3scene">
       <li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[ahref]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
      </div>
      <div class="component__block-item" data-thematic="3scene">
       <div class="component__img-container">
        <span class="opacity-layer">
        </span>
        <a class="cta cta--white" href="/3e-scene/ne-me-regarde-pas">
         Voir
        </a>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1658%2cw_2944%2cx_0%2cy_194/h_640%2cw_855/f_auto/v1/user_photos/mqo8balarkql8jh5x6mt"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1658%2cw_2944%2cx_0%2cy_194/h_320%2cw_428/f_auto/v1/user_photos/mqo8balarkql8jh5x6mt"/>
         <source media="(max-width: 1024px) and (min-device-pixel-ratio: 2), (max-width: 1024px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1658%2cw_2944%2cx_0%2cy_194/h_640%2cw_912/f_auto/v1/user_photos/mqo8balarkql8jh5x6mt">
          <source media="(max-width: 1024px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1658%2cw_2944%2cx_0%2cy_194/h_320%2cw_456/f_auto/v1/user_photos/mqo8balarkql8jh5x6mt"/>
          <source media="(max-width: 1280px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1658%2cw_2944%2cx_0%2cy_194/h_320%2cw_507/f_auto/v1/user_photos/mqo8balarkql8jh5x6mt"/>
          <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1658%2cw_2944%2cx_0%2cy_194/h_370%2cw_660/f_auto/v1/user_photos/mqo8balarkql8jh5x6mt"/>
         </source>
        </picture>
       </div>
       <div class="component__infos">
        <a class="component__overlay-link" href="/3e-scene/ne-me-regarde-pas">
        </a>
        <p class="title title--h2">
         NE ME REGARDE PAS
        </p>
        <p class="component__subtitle">
         <span class="component__event-type-loc">
          Documentaire
         </span>
         <span class="component__event-type-name">
          Stéphanie Solinas
         </span>
        </p>
        <div class="component__bottom-wrapper">
         <p class="component__location">
          3
          <sup>
           e
          </sup>
          Scène
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div id="blocks-hidden-list">
    </div>
   </div>
  </div>
  <div class="component-octave" data-behavior="home_octave" id="octave">
   <div class="component__octave-content">
    <div class="component__top">
     <p class="title title--h3">
      Octave Magazine
     </p>
     [linkx]
     
    </div>
    <div class="component__body">
     <div class="component__articles-list" id="articles-container">
      <div class="opacity-layer">
      </div>
      <div class="component__article-item encounters">
       <span class="maz-icon-arrow">
       </span>
       [linkx]
       
       <div class="component__img-container">
        <span class="maz-icon-gallery">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1663%2cw_2353%2cx_50%2cy_0/h_360%2cw_510/f_auto/v1/user_photos/a3gcblcwmjttpwtlg6gt"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1663%2cw_2353%2cx_50%2cy_0/h_180%2cw_255/f_auto/v1/user_photos/a3gcblcwmjttpwtlg6gt"/>
         <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1663%2cw_2353%2cx_50%2cy_0/h_360%2cw_510/f_auto/v1/user_photos/a3gcblcwmjttpwtlg6gt"/>
        </picture>
       </div>
       <div class="component__infos">
        <p class="title title--h2">
         Don Giovanni dissolu
        </p>
        <p class="component__subtitle">
         Par
         <a href="/magazine/auteur/simon-hatab">
          Simon Hatab
         </a>
        </p>
        <span class="component__article-type">
         <a href="/magazine/rencontres" title="">
          Rencontres
         </a>
        </span>
       </div>
      </div>
      <div class="component__article-item perspectives">
       <li>[linkx]</li>[ahref]<li>[linkx]</li><li>[pkeyx]</li>
      </div>
      <div class="component__article-item encounters">
       <span class="maz-icon-arrow">
       </span>
       <a class="component__overlay-link" href="/magazine/un-spectacle-qui-marque">
       </a>
       <div class="component__img-container">
        <span class="maz-icon-video">
        </span>
        <picture class="component__img">
         <source media="(max-width: 768px) and (min-device-pixel-ratio: 2), (max-width: 768px) and (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1665%2cw_2361%2cx_100%2cy_0/h_360%2cw_510/f_auto/v1/user_photos/qyx6uftdf4eurcvcaxze"/>
         <source media="(max-width: 768px)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1665%2cw_2361%2cx_100%2cy_0/h_180%2cw_255/f_auto/v1/user_photos/qyx6uftdf4eurcvcaxze"/>
         <source media="(min-device-pixel-ratio: 2), (min-resolution: 192dpi)" srcset="https://res.cloudinary.com/opera-national-de-paris/image/upload/c_crop%2ch_1665%2cw_2361%2cx_100%2cy_0/h_360%2cw_510/f_auto/v1/user_photos/qyx6uftdf4eurcvcaxze"/>
        </picture>
       </div>
       <div class="component__infos">
        <p class="title title--h2">
         « Un spectacle qui marque ! »
        </p>
        <p class="component__subtitle">
         Par
         [ahref]
         
        </p>
        <span class="component__article-type">
         [linkx]
         
        </span>
       </div>
      </div>
     </div>
     <div class="component__widgets-list" id="widgets-container">
      <div class="component__widget-item type-video">
       <div class="component__widget-iframe">
        <iframe allowfullscreen="" frameborder="0" height="315" scrolling="no" src="//embedftv-a.akamaihd.net/cd27b471208388efdad1845f4a8c3b94" width="560">
        </iframe>
       </div>
       <div class="component__widget-infos">
        <p class="component__title">
         <a href="/magazine/le-lac-des-cygnes-2" title="">
          Le Lac des cygnes
         </a>
        </p>
        <p class="component__author">
         <span>
          — Live
         </span>
        </p>
       </div>
      </div>
      <div class="component__widget-item type-video">
       <div class="component__widget-iframe">
        <iframe allowfullscreen="" frameborder="0" height="315" scrolling="no" src="//embedftv-a.akamaihd.net/8584773249c9422914fa5f77c007eb88" width="560">
        </iframe>
       </div>
       <div class="component__widget-infos">
        <p class="component__title">
         <a href="/magazine/simon-boccanegra" title="">
          Simon Boccanegra
         </a>
        </p>
        <p class="component__author">
         <span>
          — Live
         </span>
        </p>
       </div>
      </div>
      <div class="component__widget-item type-video">
       <div class="component__widget-iframe">
        <iframe allowfullscreen="" frameborder="0" height="315" scrolling="no" src="//embedftv-a.akamaihd.net/b979700eab94849d9ae4e800263443e8" width="560">
        </iframe>
       </div>
       <div class="component__widget-infos">
        <p class="component__title">
         [linkx]
         
        </p>
        <p class="component__author">
         <span>
          — Live
         </span>
        </p>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="component-artists-slider" data-behavior="home_artists_slider" id="artists-slider">
   <div class="component__wrapper">
    <div class="component__top">
     <p class="title title--h3 component__title">
      Les artistes à l'affiche
     </p>
     <p class="component__top-link-container">
      [ahref]
      
     </p>
    </div>
    <div class="component__slider-wrapper">
     <button class="component__nav component__nav-prev is-disabled">
      <span class="maz-icon-arrow">
      </span>
     </button>
     <button class="component__nav component__nav-next">
      <span class="maz-icon-arrow">
      </span>
     </button>
     <div class="component__slider-content">
      <span class="opacity-layer">
      </span>
      <div class="component__slider-item">
       <a class="component__wrapper-link" href="/artistes/nicole-car">
        <div class="component__img-container">
        </div>
        <p class="component__artist-name">
         Nicole Car
        </p>
       </a>
       <p class="RollCarousel__subtitle">
        <a href="/saison-18-19/opera/don-giovanni">
         Don Giovanni
        </a>
       </p>
      </div>
      <div class="component__slider-item">
       <a class="component__wrapper-link" href="/artistes/etienne-dupuis">
        <div class="component__img-container">
        </div>
        <p class="component__artist-name">
         Étienne Dupuis
        </p>
       </a>
       <p class="RollCarousel__subtitle">
        <a href="/saison-18-19/opera/don-giovanni">
         Don Giovanni
        </a>
       </p>
      </div>
      <div class="component__slider-item">
       <a class="component__wrapper-link" href="/artistes/stanislas-de-barbeyrac">
        <div class="component__img-container">
        </div>
        <p class="component__artist-name">
         Stanislas de Barbeyrac
        </p>
       </a>
       <p class="RollCarousel__subtitle">
        [ahref]
        
       </p>
      </div>
      <div class="component__slider-item">
       [linkx]
       
       <p class="RollCarousel__subtitle">
        [ahref]
        
       </p>
      </div>
      <div class="component__slider-item">
       <a class="component__wrapper-link" href="/artistes/elena-stikhina">
        <div class="component__img-container">
        </div>
        <p class="component__artist-name">
         Elena Stikhina
        </p>
       </a>
       <p class="RollCarousel__subtitle">
        <a href="/saison-18-19/opera/la-force-du-destin">
         La Force du destin
        </a>
       </p>
      </div>
      <div class="component__slider-item">
       [ahref]
       
       <p class="RollCarousel__subtitle">
        [ahref]
        
       </p>
      </div>
      <div class="component__slider-item">
       [ahref]
       
       <p class="RollCarousel__subtitle">
        [linkx]
        
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
 <footer class="Footer">
  <div class="Footer__wrapper">
   <div class="Footer--info grid-container">
    <div class="grid-row">
     <div class="Footer__info-span Footer__info-span--logo">
      <i class="icon-opera-logo" data-grunticon-embed="">
      </i>
     </div>
     <div class="Footer__info-span Footer__info-span--palais">
      <span class="Footer__info-title">
       Palais Garnier
      </span>
      <p>
       Place de l’Opéra
       <br/>
       75009 Paris
      </p>
     </div>
     <div class="Footer__info-span Footer__info-span--bastille">
      <span class="Footer__info-title">
       Opéra Bastille
      </span>
      <p>
       Place de la Bastille
       <br/>
       75012 Paris
      </p>
     </div>
     <div class="Footer__info-span Footer__info-span--3scene">
      <span class="Footer__info-title">
       3
       <sup>
        e
       </sup>
       Scène
      </span>
      [linkx]
      
     </div>
    </div>
   </div>
   <div class="Footer__contact grid-container">
    <div class="grid-row">
     <div class="Footer__contact-box">
      <p class="hide-tablet-and-down">
       Nous suivre
      </p>
      <ul class="SocialList SocialList--footer">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/operadeparis" target="_blank">
         <i class="SocialList__icon icon-twitter" data-grunticon-embed="">
         </i>
        </a>
       </li>
       <li>
        [linkx]
         [mkey1][linkx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/user/operanationaldeparis" target="_blank">
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[pkeyx]</li><li>[ahref]</li>
        </a>
       </li>
      </ul>
     </div>
     <div class="Footer__newsletter-box">
      [ahref]
      
      [ahref]
      
     </div>
     <div class="Footer__amis-box">
      <a href="/" target="_blank">
       <i class="icon-amis-opera" data-grunticon-embed="">
       </i>
      </a>
     </div>
    </div>
   </div>
  </div>
  <div class="Footer__nav">
   <nav class="grid-container">
    [linkx]
    
    <a class="Footer__nav-link" href="/" target="_blank">
     MémOpéra
    </a>
    [ahref]
    
    <a class="Footer__nav-link" href="/mentions-legales">
     Mentions légales
    </a>
    [linkx]
    
    <div class="DropDown-container DropDown--footer" data-behavior="dropdown">
     <a data-dropdown-click="" href="#">
      <span data-show-selected="">
       Langues
      </span>
      <i class="icon-chevron-down" data-grunticon-embed="">
      </i>
     </a>
     <ul class="DropDown">
      <li>
       [linkx]
       
      </li>
      <li>
       <a href="/en">
        English
       </a>
      </li>
     </ul>
    </div>
    <p class="Footer__nav-copyright">
     © 2018 – Opéra national de Paris
    </p>
   </nav>
  </div>
 </footer>
</div>
<div id="black-mask">
</div>
|<---