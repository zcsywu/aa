--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body id="statHtmlBody">
  <form action="/statHtml/statHtml.do;jsessionid=9DIgAxtxiOurqO2TgoK15314gust0L1oUVoPwaOA1t1321sCy1NPptL0g57ukK3R.STAT_SIGA2_servlet_engine5?orgId=101&amp;tblId=DT_2KAA406_OECD" id="ParamInfo" method="post" name="ParamInfo">
   <div id="topTitleKo">
    <p class="logo">
     <a href=";">
     </a>
    </p>
   </div>
   <div id="wrap">
    <div id="modal">
    </div>
    <div id="modal2">
    </div>
    <div id="popup_outer">
     <div id="pop_pivotfunc">
      <div id="pop_pivotfunc2">
       <div class="pop_top">
        피봇
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content">
        <div class="swap_lay">
         <div class="pop_title">
          <h1>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h1>
          <span class="btn_r">
           [ahref]
           
           <a href=";">
           </a>
          </span>
         </div>
         <ul class="swapList" id="ulLeft">
          <li id="Le0">
           국가별
          </li>
         </ul>
        </div>
        <div class="alignBtn">
         <p>
          <a href=";">
          </a>
          [linkx]
          
         </p>
        </div>
        <div class="swap_lay">
         <div class="pop_title">
          <h1>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h1>
          <span class="btn_r">
           [ahref]
           
           <a href=";">
           </a>
          </span>
         </div>
         <ul class="swapList" id="ulRight">
          <li id="Ri0">
           시점
          </li>
          <li id="Ri1">
           항목
          </li>
         </ul>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          [linkx]
          
         </span>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_addfunc">
      <div id="pop_addfunc2">
       <div class="pop_top">
        부가기능설정 / 데이터찾기
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <div class="pop_content">
        <div class="pop_title">
         <h1 class="bu_circle">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
        </div>
        <div class="con_lay">
         <div>
          <select id="tableType" name="tableType" onchange="fn_changeTableType()" style="width:110px; margin-right:10px;" title="통계표 타입">
           <option value="standard">
            기본통계표
           </option>
           <option value="timeSeriesV">
            시계열표(표측)
           </option>
           <option value="timeSeriesH">
            시계열표(표두)
           </option>
           <option selected="selected" value="default">
            초기조회
           </option>
          </select>
          <select id="dataOpt2" name="dataOpt2" style="width:120px; margin-right:7px;" title="언어 및 코드">
           <option selected="selected" value="ko">
            한글보기<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </option>
           <option value="en">
            English
           </option>
           <option value="cd">
            코드보기(Code)
           </option>
           <option value="cdko">
            코드+한글보기
           </option>
           <option value="cden">
            Code+English
           </option>
          </select>
          <select id="periodCo" name="periodCo" onchange="fn_changePeriodCo()" style="width:75px; margin-right:6px;" title="소수점">
           <option selected="selected" value="">
            소수점
           </option>
           <option value="0">
            0
           </option>
           <option value="1">
            1
           </option>
           <option value="2">
            2
           </option>
           <option value="3">
            3
           </option>
           <option value="4">
            4
           </option>
           <option value="5">
            5
           </option>
          </select>
         </div>
         <ul class="setCheck">
          <li>
           <span>
            <label for="enableLevelExpr">
             계층컬럼구분
            </label>
           </span>
           <a href=")">
           </a>
          </li>
          <li>
           <span>
            <label for="enableParentLevel">
             상위레벨표시
            </label>
           </span>
           [ahref]
           
          </li>
          <li style="display: none;">
           <span class="notFunctext">
            <label for="enableCellUnit">
             셀단위
            </label>
           </span>
          </li>
          <li>
           <span class="notFunctext">
            <label for="enableWeight">
             가중치보기
            </label>
           </span>
          </li>
         </ul>
         <div class="line_lay">
          <span>
           시점정렬 :
           <label for="prdSortAsc">
            오름차순
           </label>
           <label for="prdSortDesc">
            내림차순
           </label>
          </span>
         </div>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          [ahref]
          
         </span>
        </div>
        <div class="pop_title">
         <h1 class="bu_circle">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
        </div>
        <div class="con_lay">
         <p>
          <label for="findData01">
           찾을 데이터
          </label>
          <select id="findOption" title="부등호">
           <option value="1">
            <
           </option>
           <option value="2">
            <=
           </option>
           <option value="3">
            =
           </option>
           <option value="4">
            >=
           </option>
           <option value="5">
            >[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][linkx][pkeyx][linkx][area1][mkey1][ahref][area1][keywordx][area1][keywordx][pkeyx][ahref][linkx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
           </option>
          </select>
          <label for="compValue">
          </label>
         </p>
         <p style="margin-top:5px;">
          <label for="findData02">
          </label>
          <label for="compValue01">
          </label>
          <label for="compValue02">
           <= 찾을 데이터 <=
          </label>
         </p>
         <p class="f_point">
          * 찾을 데이터 결과값은 노란색 배경에 굵은 글씨체가 적용됨.
         </p>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          [linkx]
          
         </span>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_cmmtInfoAll">
      <div id="pop_cmmtInfoAll2">
       <div class="pop_top">
        주석정보
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content">
        <div class="pop_title">
         <h1 class="bu_circle3">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
        </div>
        <div class="con_lay2" id="cmmtAll">
        </div>
       </div>
      </div>
     </div>
     <div id="pop_cmmtInfo">
      <div id="pop_cmmtInfo2">
       <div class="pop_top2">
        <span class="h2_title" id="cmmtNo">
        </span>
        <span class="bu_circle5" id="cmmtTitle">
        </span>
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <div class="pop_content2">
        <div class="con_lay3" id="cmmt_lay3">
         <p class="text_con3" id="cmmt">
         </p>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_downgrid">
      <div id="pop_downgrid2">
       <div class="pop_top">
        다운로드
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <div class="pop_content2">
        <div class="pop_title2">
         <span class="btn_r grayBtn">
          [linkx]
          
         </span>
        </div>
        <div class="downList">
         <div style="margin-top:5px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h1>
          </div>
          <div style="padding-right:5px; position:absolute; top:1px; right:0px;">
           <span>
            <label for="smblYn">
             통계부호
            </label>
           </span>
           <span style="display:none;">
            <label for="CellUnit_remote">
             셀단위
            </label>
           </span>
           <span>
            <label for="codeYn">
             코드포함
            </label>
           </span>
          </div>
         </div>
         <div class="fileList">
          <ul>
           <li>
            <label for="excelradio">
             EXCEL(xlsx)
            </label>
            <label for="excelradio2">
             EXCEL(xls)
            </label>
            <label for="downGridCellMerge" style="margin-left:15px;">
             (
            </label>
            <span>
             <label for="downGridCellMerge">
              <h3>
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1]
              </h3>
              셀 병합
             </label>
            </span>
            <label for="downGridMeta">
             )
            </label>
           </li>
           <li>
            <label for="csvradio">
             CSV
            </label>
           </li>
           <li>
            <label for="txtradio">
             TXT
            </label>
           </li>
           <li>
            <li>[area1][mkey1]</li>[ahref][area1][mkey1]
           </li>
          </ul>
         </div>
         <div style="margin-top:10px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle" style="width:250px;">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h1>
          </div>
          <div style="padding-right:5px; position:absolute; top:1px; right:0px;">
          </div>
         </div>
         <div class="fileList">
          <label for="downAsc">
           오름차순
          </label>
          <label for="downDesc">
           내림차순
          </label>
         </div>
         <div style="margin-top:10px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle" style="width:250px;">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h1>
          </div>
         </div>
         <div class="fileList">
          <label for="PtypeOri">
           수록자료형식과 동일
          </label>
          <label for="PtypeScr">
           조회화면과 동일
          </label>
         </div>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          <a href=";">
           다운로드
          </a>
         </span>
         <span class="loadingBtn" style="display:none;">
          다운로드 파일을 생성하고 있습니다. 잠시만 기다려주십시오.
         </span>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_downlarge">
      <div id="pop_downglarge2">
       <div class="pop_top">
        다운로드
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content2">
        <div class="pop_title2">
         <span class="btn_r grayBtn">
          [linkx]
          
         </span>
        </div>
        <div class="downLargeList">
         <h1 class="bu_circle">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
         <div class="fileList">
          <p>
           <label for="downLargeExcel">
            EXCEL
           </label>
           <label for="downLargeCSV">
            CSV
           </label>
          </p>
         </div>
         <div style="margin-top:10px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle" style="width:250px;">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h1>
          </div>
          <div style="padding-right:5px; position:absolute; top:1px; right:0px;">
           코드포함[ahref]<li>[area1][keywordx]</li>[area1][mkey1]
          </div>
         </div>
         <div class="fileList">
          <p>
           <label for="downLargeTimeH">
            시점표두, 항목표측
           </label>
          </p>
          <p>
           <label for="downLargeTimeV">
            항목표두, 시점표측
           </label>
          </p>
         </div>
         <h1 class="bu_circle" style="margin-top:10px;">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
         <div class="fileList">
          <label for="downLargeAsc">
           오름차순
          </label>
          <label for="downLargeDesc">
           내림차순<li>[linkx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          </label>
         </div>
        </div>
        <div class="downLarge_lay" id="downLarge_lay">
         <span class="downLargeBtn" id="downLargeBtn">
          [ahref]
          
         </span>
        </div>
        <div class="loading_lay" id="loading_lay">
         [area1][mkey1]<li>[ahref]</li><li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_myscrap">
      <div id="pop_myscrap2">
       <div class="pop_top">
        마이스크랩
        <span class="closeBtn">
         <li>[ahref]</li><li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[linkx]</li>
        </span>
       </div>
       <iframe frameborder="0" id="ifr_myscrap" name="ifr_myscrap" scrolling="no" title="마이스크랩">
       </iframe>
      </div>
     </div>
     <div id="pop_selectAll">
      <div id="pop_selectAll2">
       <div class="pop_top">
        선택정보 전체보기
        <span class="closeBtn">
         [ahref]
         
        </span>
       </div>
       <iframe frameborder="0" id="ifrSelectAll" name="ifrSelectAll" scrolling="no" title="선택정보 전체보기">
        <li>[linkx]</li><li>[area1][keywordx]</li><li>[area1][keywordx]</li><li>[linkx]</li>
       </iframe>
      </div>
     </div>
     <div id="pop_detailfunc">
      <div id="pop_detailfunc2">
       <div class="pop_top">
        일괄설정
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <iframe frameborder="0" id="ifrSearchDetail" name="ifrSearchDetail" scrolling="no" title="일괄설정">
       </iframe>
      </div>
     </div>
     <div id="pop_url">
      <div id="pop_url2">
       <div class="pop_top">
        주소정보
        <span class="closeBtn">
         [ahref]
         
        </span>
       </div>
       <div class="pop_content">
        <label for="urlText">
        </label>
       </div>
      </div>
     </div>
     <div id="pop_assay">
      <div id="pop_assay2">
       <div class="pop_top">
        분석
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <iframe frameborder="0" id="ifrAssayInfo" name="ifrAssayInfo" scrolling="no" title="분석">
       </iframe>
      </div>
     </div>
     <div id="pop_relGrid">
      <div id="pop_relGrid2">
       <div class="pop_top">
        관련통계표
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <iframe frameborder="0" id="ifrRelationInfo" name="ifrRelationInfo" scrolling="no" title="관련통계표">
       </iframe>
      </div>
     </div>
     <div id="pop_levelExpr">
      [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][pkeyx][area1][mkey1][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][linkx][pkeyx][area1][mkey1][pkeyx][area1][keywordx][ahref][area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][linkx][ahref]
     </div>
     <div id="pop_parentLevel">
      <div id="pop_parentLevel2">
       <div class="pop_top">
        상위레벨표시란?
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content">
       </div>
      </div>
     </div>
     <div id="pop_classLvAllChkHelp">
      <div id="pop_classLvAllChkHelp2">
       <div class="pop_top">
        레벨별 전체선택
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content">
        <div class="pop_title">
         <h1 class="bu_circle">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
         <p style="margin:3px 0;">
          -
          <b>
           상위레벨 선택(일부)값에 상관없이
          </b>
          해당레벨 전체가 선택됩니다.
         </p>
         <p style="margin:3px 0;">
          - 왼쪽 위
          <b>
           일괄설정은
          </b>
          분류, 항목 및 시점을 보다 편리하게 설정할 수 있는 기능입니다.
         </p>
         <p style="margin-top:15px; text-align:center;">
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div id="header">
     <div class="titleCenter">
      <div class="titleLeft">
       <div class="titleRight">
        <h1 class="title">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <ul class="title_utill">
         <li>
         </li>
        </ul>
       </div>
      </div>
     </div>
     <p class="more">
      출처 :
					
					주석 참조(자료관리 : 통계서비스기획과)
     </p>
    </div>
    <div class="content" id="content">
     <div id="disPlayBox" style="display: none;">
     </div>
     <h2 class="bu_2circle">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <div id="directMenu">
     </div>
     <div class="tabMu" id="tabMenu">
      <p class="leftBtn">
       <a href=")">
       </a>
      </p>
      <ul class="selection1">
       <li class="menu_off" id="tabItemText" onclick="fn_disPlay('tabItemText',0);" style="cursor: pointer;">
        [pkeyx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][linkx][area1][mkey1][pkeyx][area1][keywordx][pkeyx][ahref][ahref][area1][mkey1][ahref][ahref][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][linkx][area1][mkey1]
       </li>
       <li class="menu_off" id="tabClassText_1" onclick="fn_disPlay('tabClassText_1','1');" style="cursor: pointer;" value="A">
        <span>
        </span>
       </li>
       <li class="menu_off" id="tabTimeText">
        [linkx]
        
       </li>
      </ul>
      <p class="rightBtn">
      </p>
     </div>
     <div class="cont_line" id="changeAttribute">
      <div class="btnIcon" id="btnShow" style="display: inline-block">
       <p class="text" style="width: 30%;">
        <span id="analysisText">
        </span>
       </p>
       <ul class="align">
        <li>
         <a href=")" id="showCmmtAll" style="">
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li class="gap" id="ico_swap" title="피봇">
         [linkx]
         
        </li>
        <li id="ico_addfunc" title="부가기능설정">
         [ahref]
         
        </li>
        <li id="ico_analysis" title="분석">
         <a href=")">
         </a>
        </li>
        <li id="chartEnable" title="차트">
         [ahref]
         
        </li>
        <li class="gap" id="ico_myscrap" title="스크랩">
         [linkx]
         
        </li>
        <li id="ico_download" title="다운로드">
         <a href=")">
         </a>
        </li>
        <li class="icobtn" id="ico_print" title="인쇄">
         [linkx]
         
        </li>
        <li class="gap">
         <a href="#" onclick="downHelp()">
         </a>
        </li>
       </ul>
      </div>
      <div class="text_lay" id="textShow" style="display: none">
       <ul style="height: 21px;">
        <li class="text" style="padding-left: 10px;">
         현재까지 선택된 데이터는 항목
        </li>
        <li class="text" id="changeTextLi">
        </li>
        <li class="text">
         셀
         <span class="f_bold">
          [
         </span>
         <span id="changeSpanRed">
          20,000
									(조회)
         </span>
         <span class="f_bold">
          |
         </span>
         <span id="changeSpanGray">
          200,000
									(다운로드)
         </span>
         <span class="f_bold">
          |
         </span>
         <span id="changeDownText">
          다운로드 불가
         </span>
         <span class="f_bold">
          ]
         </span>
        </li>
        <li class="btn_r">
         [linkx]
         
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="chart" id="Divchart" style="visibility: hidden; height: 0px;">
       <div class="chartTop">
        <div class="chartBtn">
         <a href=";">
         </a>
         [ahref]
         
         [ahref]
         
         [linkx]
         
         [ahref]
         
         [linkx]
         
         [ahref]
         
         <a href=";">
         </a>
         [ahref]
         
         [ahref]
         
         [linkx]
         
         [ahref]
         
         <a href=";">
         </a>
         [ahref]
         
         <a href=";">
         </a>
         [linkx]
         
        </div>
        <div class="alignRight">
         <select id="chartViewCnt" title="조회 카운트">
          <option value="1">
           1
          </option>
          <option value="2">
           2
          </option>
          <option value="3">
           3
          </option>
          <option value="4">
           4
          </option>
          <option selected="selected" value="5">
           5
          </option>
          <option value="6">
           6
          </option>
          <option value="7">
           7
          </option>
          <option value="8">
           8
          </option>
          <option value="9">
           9
          </option>
          <option value="10">
           10
          </option>
          <option value="11">
           11
          </option>
          <option value="12">
           12
          </option>
          <option value="13">
           13
          </option>
          <option value="14">
           14
          </option>
          <option value="15">
           15
          </option>
          <option value="16">
           16
          </option>
          <option value="17">
           17
										[pkeyx][pkeyx]<li>[pkeyx]</li>
          </option>
          <option value="18">
           18
          </option>
          <option value="19">
           19
          </option>
          <option value="20">
           20
          </option>
         </select>
         <a href=";">
         </a>
        </div>
        <div class="alignText">
         <span id="saveCharts">
          <li>[area1][mkey1]</li><li>[ahref]</li><li>[pkeyx]</li>
         </span>
        </div>
       </div>
       <div id="Chartcontent" style="display: none;">
        [pkeyx][area1][mkey1][area1][mkey1]<li>[ahref]</li>[area1][keywordx]
       </div>
      </div>
      <div class="remark" id="jqGrid" style="visibility: hidden; float: left; height: 0px;">
       <table id="tbl_data_view" style="table-layout: fixed;">
        <tr>
         <td>
         </td>
        </tr>
       </table>
       <div class="legend">
        <span class="f_bold">
         * 챠트의 범례는 최대 20개까지 제공되며, 항목과 분류값을 재설정하여 조회할 수 있습니다.
        </span>
       </div>
      </div>
      <div class="popMode" id="popMode">
       <div class="inner" id="htmlGrid">
       </div>
       <div class="inner" id="ThtmlGrid" style="display: none; position: absolute;">
       </div>
      </div>
      <div class="block_definition" id="block0" style="display: none;">
       <p class="h3_arrow">
        항목
       </p>
       <div class="cont_detail" id="itmList0" style="width:928px;">
        <div class="selectBox" style="width: 305px;">
         <h2 class="top">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h2>
         <ul class="selectList">
          <li>
           <label for="itemChkLi0">
            감자
           </label>
          </li>
          <li>
           <label for="itemChkLi1">
            경작면적당생산량
           </label>
          </li>
          <li>
           <label for="itemChkLi2">
            고구마
           </label>
          </li>
          <li>
           <label for="itemChkLi3">
            경작면적당생산량
           </label>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="block_definition" id="block1" style="display: none;">
       <p class="h3_arrow" id="h3_arrow1">
       </p>
       <div class="cont_detail" id="itmList1" style="width:616px;">
        <div class="selectBox" style="width: 299px;">
         <h2 class="top">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h2>
         <ul class="selectList" id="classList1_1">
          <li>
           <label for="classChkLi1_1_1">
           </label>
           [linkx]
           
          </li>
          <li>
           <label for="classChkLi1_1_2">
           </label>
           <a onclick="fn_searchClass('2','A',1,1,2,1);" style="cursor: pointer;">
            북아메리카
           </a>
          </li>
          <li>
           <label for="classChkLi1_1_3">
           </label>
           [ahref]
           
          </li>
          <li>
           <label for="classChkLi1_1_4">
           </label>
           [linkx]
           
          </li>
          <li>
           <label for="classChkLi1_1_6">
           </label>
           [ahref]
           
          </li>
         </ul>
        </div>
        <div class="selectBox" style="width: 299px;">
         <h2 class="top">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h2>
         <ul class="selectList2" id="classList1_2">
          <li>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="block_definition" id="block2" style="display: none;">
       <p class="h3_arrow">
        시점
       </p>
       <div class="cont_detail" id="itmList2" style="width:232px;">
        <div class="selectTimeBox" id="timeY" style="width: 224px;">
         <div class="top">
          <p class="tit">
           <label for="checkY">
            년(1980 ~ 2017)
           </label>
          </p>
         </div>
         <h2 class="top">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h2>
         <ul class="selectList" id="searchPeriodY">
          <li>
           <label for="timeChY0">
           </label>
           2017
          </li>
          [ahref]
          
          <li>
           <label for="timeChY2">
           </label>
           2015
          </li>
          <li>
           <label for="ie7bugY">
           </label>
          </li>
         </ul>
         <div id="divSelectAllY">
          <label for="selectAllY">
           전체선택
          </label>
         </div>
        </div>
       </div>
      </div>
      <p class="exemple" id="tailExplain" style="display: none;">
       <span>
        하위레벨 없음
       </span>
       <span>
        [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][pkeyx][area1][keywordx][linkx][area1][keywordx][linkx][ahref][pkeyx][pkeyx][pkeyx][linkx][area1][mkey1][area1][keywordx][pkeyx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
       </span>
      </p>
     </div>
    </div>
    <div id="footer">
     <ul class="footer_wrap">
      <li class="left">
       e : 추정치, p : 잠정치, - : 자료없음, ... : 미상자료, x : 비밀보호, ▽ : 시계열 불연속
      </li>
      <li class="right">
       ☞선택한 시점의 계열(항목×분류)에 자료가 없을 때는 표시되지 않습니다.
      </li>
     </ul>
    </div>
   </div>
  </form>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0105
  </b>
 </body>
</html>|<---