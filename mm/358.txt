--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][link]<li>[link]</li><li>[link]</li><li>[link]</li>
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="x-ua-compatible"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="yes" name="apple-mobile-web-app-capable"/>
  <meta content="black" name="apple-mobile-web-app-status-bar-style"/>
  <meta content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=yes" name="viewport"/>
 </head>
 <body>
  <form class="p-t-15" id="frm2" name="frm2" role="form">
  </form>
  <div id="wrap">
   <div class="lnb-area-clnt">
    <div class="utill">
     [ahref]
     
     <div class="lnb-clnt">
      [linkx]
      
      [linkx]
      
      [linkx]
      
      [ahref]
      
     </div>
    </div>
   </div>
   <div id="header">
    <div class="header_menu">
     <div class="header_menu_inner">
      <div class="header-logos">
       <h1>
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h1>
       <p>
        인천광역시 인재개발원
       </p>
      </div>
      <div class="gnb_wrap">
       <h2 class="gnb_tit">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <ul class="gnb">
        <li class="menu">
         [ahref]
         
        </li>
        <li class="menu">
         [ahref]
         
        </li>
        <li class="menu">
         [ahref]
         
        </li>
        <li class="menu">
         [ahref]
         
        </li>
        <li class="menu">
         [ahref]
         
        </li>
        <li class="menu">
         [linkx]
         
        </li>
       </ul>
       <div class="three col">
       </div>
       <span class="right_link type2">
        <span class="toggle">
         [linkx]
         
        </span>
        <div class="link shadow20">
         <span class="arrow">
         </span>
         [ahref]
         
         [ahref]
         
         [ahref]
         
         <a href=";" onclick="goBlogMain('e-learning.nhi.go.kr/blog/home/index.do');">
          <span>
           블로그
          </span>
         </a>
        </div>
       </span>
      </div>
     </div>
    </div>
   </div>
   <form id="announceForm" method="post" name="announceForm">
   </form>
   <form id="listForm" method="post" name="listForm">
    <form id="mainForm" method="post" name="mainForm">
    </form>
    <div class="container hub11">
     <div class="container_inner">
      <div class="gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1">
       </div>
       <div class="dd dt2 onair">
        <div class="onair_tit">
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <span>
          인터넷 실시간 방송을 보시려면 '방송보기'를 클릭해주세요.
         </span>
        </div>
        [linkx]
        
        <div class="air-board" style="display:none;">
         [ahref]
         
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt3">
        <a href="/myspace/myroom/myHomeStudyList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="나의 강의실">
        </a>
       </div>
       <div class="dd dt4">
        [linkx]
        
       </div>
       <div class="dd dt5">
        <a href="/crs/apply/elrnGovMoocApplyList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="Gov-MOOC">
        </a>
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7 noti">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt8 faq">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           <a href="/helpdesk/qa/hlpQaList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="상세보기">
            기존회원 아이디 발급은 어떻게 하나요?
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt9 kong">
        <div class="tit_for_m">
         <h2>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h2>
        </div>
        [ahref]
        
        <div class="ifr-kong">
         <ul class="kong-list">
          <li>
           [ahref]
           
          </li>
          <li>
           <a href=";" onclick="fn_apply_view('C020023643201900006')">
            [2019-6기] e-4차 산업혁명의 이해와 미래 대응전략
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt10">
        [ahref]
        
       </div>
       <div class="dd dt11">
        [ahref]
        
       </div>
       <div class="dd dt12">
        [linkx]
        
       </div>
       <div class="dd dt13">
        [ahref]
        
       </div>
       <div class="dd dt14">
        [ahref]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          <a href=";" onclick="goCommunityMain('e-learning.nhi.go.kr/cafe/home/index.do');">
           <span>
            커뮤니티
           </span>
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub12">
     <div class="container_inner">
      <div class="gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1">
       </div>
       <div class="dd dt2 onair">
        <div class="onair_tit">
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <span>
          인터넷 실시간 방송을 보시려면 '방송보기'를 클릭해주세요.
         </span>
        </div>
        [linkx]
        
        <div class="air-board" style="display:none;">
         [linkx]
         
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href=";" onclick="fn_apply_view('C020023703201900006')">
            [2019-6기] e-미세먼지의 원인과 대책
           </a>
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt3">
        [linkx]
        
       </div>
       <div class="dd dt4">
        [content7[linkx]content8]
       </div>
       <div class="dd dt5">
        [ahref]
        
       </div>
       <div class="dd dt6">
        <a href="/opencrs/gocw/gOcwAllList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="열린강좌">
        </a>
       </div>
       <div class="dd dt7 noti">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [linkx]
           
          </li>
          <li>
           <a href=";" onclick="onAnnounceViewPage('94277')" title="상세보기">
            회원가입 및 로그인 불가시 조치방법 안내
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt8 faq">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt9 kong">
        <div class="tit_for_m">
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
        </div>
        <a class="kong-more" href="#">
         강의목록
        </a>
        <div class="ifr-kong">
         <ul class="kong-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt10">
        <a href=";" title="마이크로러닝과정">
        </a>
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12">
        [linkx]
        
       </div>
       <div class="dd dt13">
        [ahref]
        
       </div>
       <div class="dd dt14">
        [ahref]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub13">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1">
       </div>
       <div class="dd dt2 onair">
        <div class="onair_tit">
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <span>
          인터넷 실시간 방송을 보시려면 '방송보기'를 클릭해주세요.
         </span>
        </div>
        [linkx]
        
        <div class="air-board" style="display:none;">
         [linkx]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href=";" onclick="fn_apply_view('C020023703201900006')">
            [2019-6기] e-미세먼지의 원인과 대책
           </a>
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt3">
        [linkx]
        
       </div>
       <div class="dd dt4">
        [linkx]
        
       </div>
       <div class="dd dt5">
        [ahref]
        
       </div>
       <div class="dd dt6">
        [linkx]
        
       </div>
       <div class="dd dt7 noti">
        [linkx]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt8 faq">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/helpdesk/qa/hlpQaList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="상세보기">
            개명 후 이름 정정은 어떻게 하나요?
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt9 kong">
        <div class="tit_for_m">
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
        </div>
        [ahref]
        
        <div class="ifr-kong">
         <ul class="kong-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt10">
        [ahref]
        
       </div>
       <div class="dd dt11">
        [ahref]
        
       </div>
       <div class="dd dt12">
        [ahref]
        
       </div>
       <div class="dd dt13">
        [linkx]
        
       </div>
       <div class="dd dt14">
        [linkx]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub14">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1" data-col="1" data-row="1" data-sizex="4" data-sizey="3">
       </div>
       <div class="dd dt2 onair" data-col="2" data-row="1" data-sizex="2" data-sizey="4">
        <div class="onair_tit">
         <h2>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h2>
         <span>
          인터넷 실시간 방송을 보시려면 '방송보기'를 클릭해주세요.
         </span>
        </div>
        <a class="air-btn" href="/home/broadcast/homBroadcastList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="방송보기">
         방송보기
        </a>
        <div class="air-board" style="display:none;">
         [ahref]
         
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt3">
        [linkx]
        
       </div>
       <div class="dd dt4">
        [linkx]
        
       </div>
       <div class="dd dt5">
        <a href="/crs/apply/elrnGovMoocApplyList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="Gov-MOOC">
        </a>
       </div>
       <div class="dd dt6">
        [linkx]
        
       </div>
       <div class="dd dt7 noti">
        [linkx]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt8 faq">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt9 kong">
        <div class="tit_for_m">
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
        </div>
        [linkx]
        
        <div class="ifr-kong">
         <ul class="kong-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt10">
        [linkx]
        
       </div>
       <div class="dd dt11">
        <a href="/crs/schedule/crsScheduleList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="연간교육일정">
        </a>
       </div>
       <div class="dd dt12">
        [ahref]
        
       </div>
       <div class="dd dt13">
        [ahref]
        
       </div>
       <div class="dd dt14">
        [ahref]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub15">
     [link][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
    </div>
    <div class="container hub06">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1 banner">
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [linkx]
        
       </div>
       <div class="dd dt4">
        [linkx]
        
       </div>
       <div class="dd dt5">
        [ahref]
        
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7">
        [linkx]
        
       </div>
       <div class="dd dt8">
        [ahref]
        
       </div>
       <div class="dd dt9">
        [ahref]
        
       </div>
       <div class="dd dt10">
        [ahref]
        
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12 noti">
        [linkx]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href=";" onclick="onAnnounceViewPage('93249')" style="color: red;" title="상세보기">
            2019년 사이버교육 운영 및 과정안내
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt13 faq">
        [ahref]
        
        <div class="ifr-faq">
         <ul class="faq-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/helpdesk/qa/hlpQaList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="상세보기">
            회원탈퇴를 원할 경우 어떻게 하나요?
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt14">
        <a href="/home/broadcast/homBroadcastList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" style="display:none;" title="방송보기">
        </a>
        <div class="air-board">
         [linkx]
         
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub07">
     <div class="container_inner">
      <div class="gridster">
       <h2 class="hide">
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="dd dt1 banner">
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [ahref]
        
       </div>
       <div class="dd dt4">
        [ahref]
        
       </div>
       <div class="dd dt5">
        [linkx]
        
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7">
        <a href="/opencrs/gocw/gOcwAllList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="열린강좌">
        </a>
       </div>
       <div class="dd dt8">
        [ahref]
        
       </div>
       <div class="dd dt9">
        [linkx]
        
       </div>
       <div class="dd dt10">
        [linkx]
        
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12 noti">
        [linkx]
         [content16[linkx]content17[linkx]content18]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt13 faq">
        [linkx]
        
        <div class="ifr-faq">
         <ul class="faq-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt14">
        <a href="/home/broadcast/homBroadcastList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" style="display:none;" title="방송보기">
        </a>
        <div class="air-board">
         [linkx]
         
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub08">
     <div class="container_inner">
      <div class="gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1 banner">
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [ahref]
        
       </div>
       <div class="dd dt4">
        [ahref]
        
       </div>
       <div class="dd dt5">
        [ahref]
        
       </div>
       <div class="dd dt6">
        [linkx]
        
       </div>
       <div class="dd dt7">
        [linkx]
        
       </div>
       <div class="dd dt8">
        [ahref]
        
       </div>
       <div class="dd dt9">
        [ahref]
        
       </div>
       <div class="dd dt10">
        [linkx]
        
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12 noti">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt13 faq">
        [linkx]
        
        <div class="ifr-faq">
         <ul class="faq-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt14">
        [linkx]
        
        <div class="air-board">
         <a class="air-more" href="/home/broadcast/homBroadcastList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="방송보기 더보기">
          더보기
         </a>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          <a href=";" onclick="goCommunityMain('e-learning.nhi.go.kr/cafe/home/index.do');">
           <span>
            커뮤니티
           </span>
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub09">
     <div class="container_inner">
      <div class="gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1 banner">
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [ahref]
        
       </div>
       <div class="dd dt4">
        [linkx]
        
       </div>
       <div class="dd dt5">
        [ahref]
        
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7">
        <a href="/opencrs/gocw/gOcwAllList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="열린강좌">
        </a>
       </div>
       <div class="dd dt8">
        [linkx]
        
       </div>
       <div class="dd dt9">
        [ahref]
        
       </div>
       <div class="dd dt10">
        [ahref]
        
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12 noti">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt13 faq">
        [ahref]
        
        <div class="ifr-faq">
         <ul class="faq-list">
          <li>
           <a href="/helpdesk/qa/hlpQaList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="상세보기">
            기존회원 아이디 발급은 어떻게 하나요?
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt14">
        [linkx]
        
        <div class="air-board">
         [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[link]
        </div>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub10">
     <div class="container_inner">
      <div class="gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1 banner">
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [ahref]
        
       </div>
       <div class="dd dt4">
        [ahref]
        
       </div>
       <div class="dd dt5">
        [ahref]
        
       </div>
       <div class="dd dt6">
        <a href="/crs/apply/elrnGovMoocApplyList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="Gov-MOOC">
        </a>
       </div>
       <div class="dd dt7">
        [content8][content9][linkx][content10][linkx]
       </div>
       <div class="dd dt8">
        [ahref]
        
       </div>
       <div class="dd dt9">
        [ahref]
        
       </div>
       <div class="dd dt10">
        <a href="/center/introduce/intIntroduceView.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" target="_blank" title="기관소개">
        </a>
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12 noti">
        [ahref]
        
        <div class="ifr-noti">
         <ul class="noti-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt13 faq">
        [linkx]
        
        <div class="ifr-faq">
         <ul class="faq-list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
            <li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt14">
        [linkx]
        
        <div class="air-board">
         [linkx]
         
         <ul>
          <li>
           <a href=";" onclick="fn_apply_view('C020023665201900006')">
            [2019-6기] e-보고서 잘쓰는 방법
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub01">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="dd dt1">
        [linkx]
        
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [ahref]
        
       </div>
       <div class="dd dt4">
        <div class="srch-area">
        </div>
       </div>
       <div class="dd dt5">
        [ahref]
        
        <div class="air-board">
         [linkx]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7">
        [linkx]
        
       </div>
       <div class="dd dt8">
        [ahref]
        
       </div>
       <div class="dd dt9">
        <div class="noti">
         [linkx]
         
         <div class="ifr-noti">
          <ul class="noti-list">
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="dd dt10">
        <div class="cst_wrap">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <strong class="color26">
         </strong>
         <span>
          평일 09:00-18:00
         </span>
         <span>
          (점심시간 12:00-13:00)
         </span>
        </div>
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12">
        [ahref]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub02">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="dd dt1">
        [ahref]
        
       </div>
       <div class="dd dt2">
        [ahref]
        
       </div>
       <div class="dd dt3">
        [linkx]
        
       </div>
       <div class="dd dt4">
        <div class="srch-area">
        </div>
       </div>
       <div class="dd dt5">
        [linkx]
        
        <div class="air-board">
         [ahref]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7">
        [ahref]
        
       </div>
       <div class="dd dt8">
        [linkx]
        
       </div>
       <div class="dd dt9">
        <div class="noti">
         [ahref]
         
         <div class="ifr-noti">
          <ul class="noti-list">
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="dd dt10">
        <div class="cst_wrap">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <strong class="color26">
         </strong>
         <span>
          평일 09:00-18:00
         </span>
         <span>
          (점심시간 12:00-13:00)[content6[linkx]content7[linkx]content8[linkx]content9[linkx]content10]
         </span>
        </div>
       </div>
       <div class="dd dt11">
        [ahref]
        
       </div>
       <div class="dd dt12">
        [linkx]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub03">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="dd dt1">
        [linkx]
        
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [ahref]
        
       </div>
       <div class="dd dt4">
        <div class="srch-area">
        </div>
       </div>
       <div class="dd dt5">
        [linkx]
        
        <div class="air-board">
         <a class="air-more" href="/home/broadcast/homBroadcastList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="방송보기 더보기">
          더보기
         </a>
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt6">
        <a href="/crs/apply/elrnGovMoocApplyList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="Gov-MOOC">
        </a>
       </div>
       <div class="dd dt7">
        [linkx]
        
       </div>
       <div class="dd dt8">
        [ahref]
        
       </div>
       <div class="dd dt9">
        <div class="noti">
         [ahref]
         
         <div class="ifr-noti">
          <ul class="noti-list">
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="dd dt10">
        <div class="cst_wrap">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <strong class="color26">
         </strong>
         <span>
          평일 09:00-18:00
         </span>
         <span>
          (점심시간 12:00-13:00)
         </span>
        </div>
       </div>
       <div class="dd dt11">
        [linkx]
        
       </div>
       <div class="dd dt12">
        <a href="/helpdesk/data/hlpDataList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="자료실">
        </a>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub04">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="dd dt1">
        [linkx]
        
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        <a href="/crs/schedule/crsScheduleList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="연간교육일정">
        </a>
       </div>
       <div class="dd dt4">
        <div class="srch-area">
         [ahref]
         
        </div>
       </div>
       <div class="dd dt5">
        [ahref]
        
        <div class="air-board">
         [linkx]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt6">
        [ahref]
        
       </div>
       <div class="dd dt7">
        [linkx]
        
       </div>
       <div class="dd dt8">
        [linkx]
        
       </div>
       <div class="dd dt9">
        <div class="noti">
         [linkx]
         
         <div class="ifr-noti">
          <ul class="noti-list">
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="dd dt10">
        <div class="cst_wrap">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <strong class="color26">
         </strong>
         <span>
          평일 09:00-18:00
         </span>
         <span>
          (점심시간 12:00-13:00)
         </span>
        </div>
       </div>
       <div class="dd dt11">
        <a href=";" title="마이크로러닝과정">
        </a>
       </div>
       <div class="dd dt12">
        [linkx]
        
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="container hub05">
     <div class="container_inner">
      <div class="gridster_start gridster">
       <h2 class="hide">
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="dd dt1">
        [ahref]
        
       </div>
       <div class="dd dt2">
        [linkx]
        
       </div>
       <div class="dd dt3">
        [linkx]
        
       </div>
       <div class="dd dt4">
        <div class="srch-area">
         [linkx]
         
        </div>
       </div>
       <div class="dd dt5">
        [ahref]
        
        <div class="air-board">
         [linkx]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="dd dt6">
        <a href="/crs/apply/elrnGovMoocApplyList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="Gov-MOOC">
        </a>
       </div>
       <div class="dd dt7">
        [linkx]
        
       </div>
       <div class="dd dt8">
        [linkx]
        
       </div>
       <div class="dd dt9">
        <div class="noti">
         [ahref]
         
         <div class="ifr-noti">
          <ul class="noti-list">
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="dd dt10">
        <div class="cst_wrap">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <strong class="color26">
         </strong>
         <span>
          평일 09:00-18:00
         </span>
         <span>
          (점심시간 12:00-13:00)
         </span>
        </div>
       </div>
       <div class="dd dt11">
        [ahref]
        
       </div>
       <div class="dd dt12">
        <a href="/helpdesk/data/hlpDataList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" title="자료실">
        </a>
       </div>
       <div class="pub_quickLink" style="width:1140px;top:850px;">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="tail">
     [ahref]
     
     [ahref]
     
     <a class="pc-quick" href="/helpdesk/announce/hlpAnnounceList.do;jsessionid=biZ33DHG8pm471OCIIh8REba.node211" titlte="공지사항">
      공지사항
     </a>
     [ahref]
     
     [linkx]
     
     [ahref]
     
     [linkx]
     
    </div>
    <iframe height="0" id="LoginTable" name="ifm_login_check" src="/sso/loginCheck.do" style="border:none;" title="빈프레임" width="0">
    </iframe>
    <div id="ft">
     <div id="fnb">
      <div class="fnb">
       <ul class="btn-ft">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <ul class="go-url">
        <li>
         <legend>
          <label for="searchType2">
           관련사이트 바로가기 선택
          </label>
         </legend>
         <select id="searchType2" name="relateSiteList">
          <option value="">
           관련사이트 바로가기
          </option>
          <option value="http://www.nhi.go.kr/">
           국가공무원인재개발원
          </option>
          <option value="http://www.nhi.go.kr/cad/">
           역량진단시스템
          </option>
          <option value="http://www.training.go.kr/">
           인재개발정보센터
          </option>
          <option value="http://www.mpm.go.kr/">
           인사혁신처
          </option>
         </select>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="footer-clnt">
      <div class="logo">
      </div>
      <div class="f_info">
       인천광역시인재개발원 인재양성과 전문교육팀  Tel) 032-440-7684
      </div>
     </div>
    </div>
   </form>
  </div>
  <form method="post" name="frmPopu0">
   <div class="layerpopup" id="Popup0" style="position:absolute;top:90px;left:60px;border:solid 1px black;">
    <div class="layerpopup-top layerpopup-txt" id="titleBar0" style="width:800px; height:329px;">
     [ahref]
     
     [linkx]
     
    </div>
    <div class="layerpopup-bottom">
     [linkx]
     
     [ahref]
     
    </div>
   </div>
  </form>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0375
  </b>
 </body>
</html>
|<---