--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir="ltr" lang="fr" xml:lang="fr" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="1 day" name="revisit-after"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
 </head>
 <body class="front not-logged-in page-node node-type-nyx-ct-content-page hide-page-title i18n-fr page nyseplatform nyx-platform has-sidebar-second is-primary has-page-title page-node-617 euronextV2Common">
  <div id="skip">
   <a href="t">
    Skip to Content
   </a>
   <a href="n">
    Skip to Navigation
   </a>
  </div>
  <div id="page-wrapper">
   <div class="clearfix" id="header">
    <div id="tophat">
     <div id="tophat-inner">
      <div id="logo">
       [ahref]
       
      </div>
      <div id="tophat-region">
       <div class="block block-menu clear-block" id="block-menu-nyx_tophat">
        <div class="inner">
         <div class="block-header">
          <h3 class="title">
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h3>
         </div>
         <div class="block-body">
          <div class="content">
           <ul class="menu">
            <li class="leaf first">
             <li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
            </li>
            <li class="leaf">
             [ahref]
             
            </li>
            <li class="leaf">
             [ahref]
             
            </li>
            <li class="leaf last">
             <a href="/contact-us" title="">
              Contact us
             </a>
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-block clear-block" id="block-block-42">
        <div class="inner">
         <div class="block-body">
          <div class="content">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="clearfix" id="utilities">
     <div class="clearfix" id="utilities-inner">
      <div class="block block-locale clear-block" id="block-locale-0">
       <div class="inner">
        <div class="block-header">
         <h3 class="title">
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h3>
        </div>
        <div class="block-body">
         <div class="content">
          <ul>
           <li class="fr first last active">
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
      <div class="block block-search clear-block" id="block-search-0">
       <div class="inner">
        <div class="block-header">
         <h3 class="title">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
        </div>
        <div class="block-body">
         <div class="content">
          <form accept-charset="UTF-8" action="/" class="quote-search" id="search-block-form" method="post">
           <div>
            <div class="container-inline">
             <div class="form-item" id="edit-search-block-form-1-wrapper">
             </div>
             <div class="form-radios">
              <div class="form-item" id="edit-search-type-quote-wrapper">
               <label class="option" for="edit-search-type-quote">
                Recherche cours
               </label>
              </div>
              <div class="form-item" id="edit-search-type-site-wrapper">
               <label class="option" for="edit-search-type-site">
                Recherche site
               </label>
              </div>
             </div>
            </div>
           </div>
          </form>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div id="site-name">
     [ahref]
     
    </div>
   </div>
   <div class="container-12 clearfix" id="sub-header">
    <div class="clearfix" id="navigation">
     <div class="block block-nyx_global_navigation clear-block" id="block-nyx_global_navigation-global_nav">
      <div class="inner">
       <div class="block-body">
        <div class="content">
         <div>
          <ul>
           <div class="global-nav-top-level first">
            <div class="collapsed menu-item">
             [ahref]
             
            </div>
            <div class="mega-menu mega-menu-4-col">
             <div class="level1 global-nav-col global-nav-col-1">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 <a href="/cours/actions-paris" title="Actions cotées à Paris">
                  Actions Paris
                 </a>
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
             </div>
             <div class="level1 global-nav-col global-nav-col-2">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               [pkeyx]<li>[keywordx]</li>[pkeyx]<li>[linkx]</li>
              </div>
             </div>
             <div class="level1 global-nav-col global-nav-col-3">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
             </div>
             <div class="level1 global-nav-col global-nav-col-4">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [pkeyx][linkx][linkx][mkey1][keywordx][keywordx][linkx][ahref][ahref][linkx][pkeyx][pkeyx][keywordx][ahref]
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
             </div>
             <div class="clear-block">
             </div>
            </div>
           </div>
           <div class="global-nav-top-level">
            <div class="collapsed menu-item">
             [ahref]
             
            </div>
            <div class="mega-menu mega-menu-4-col">
             <div class="level1 global-nav-col global-nav-col-1">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 <a href="/centre-d-apprentissage/les-bases-de-l-investissement-en-bourse" title="">
                  Les bases de l’investissement en Bourse
                 </a>
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
             </div>
             <div class="level1 global-nav-col global-nav-col-2">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <li>[ahref]</li>[linkx]<li>[pkeyx]</li>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
             </div>
             <div class="level1 global-nav-col global-nav-col-3">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 <a href="/centre-d-apprentissage/les-certificats" title="">
                  Les certificats
                 </a>
                </div>
               </ul>
              </div>
             </div>
             <div class="level1 global-nav-col global-nav-col-4">
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [linkx]
                 
                </div>
               </ul>
              </div>
              <div class="global-nav-mega-menu-head">
               <ul>
                <div class="leaf menu-item">
                 [ahref]
                 
                </div>
               </ul>
              </div>
             </div>
             <div class="clear-block">
             </div>
            </div>
           </div>
           <div class="global-nav-top-level last">
            [ahref][ahref][mkey1][linkx][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][linkx][ahref][mkey1][ahref][ahref][mkey1][ahref][linkx][linkx][ahref][mkey1][pkeyx][linkx][keywordx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
           </div>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="block block-block clear-block" id="block-block-36">
      <div class="inner">
       <div class="block-body">
        <div class="content">
        </div>
       </div>
      </div>
     </div>
     <div class="block block-block clear-block" id="block-block-37">
      <div class="inner">
       <div class="block-body">
        <div class="content">
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="container-12" id="container">
    <div id="full_width_lede">
    </div>
    <div class="clearfix" id="content-wrapper-wrapper">
     <div class="clearfix" id="content-wrapper">
      <div class="grid-8 clearfix" id="content-wrapper-inner">
       <li>[ahref]</li><li>[keywordx]</li>[mkey1][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
      </div>
      <div class="grid-4 sidebar clearfix" id="sidebar-second">
       <div class="block block-views clear-block nodequeue-styled nodequeue-callout-thumb-1up-wrapper" id="block-views-nodequeue_427-block">
        <div class="inner">
         <div class="block-header">
          <h3 class="title">
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h3>
         </div>
         <div class="block-body">
          <div class="content">
           <div class="view view-nodequeue-427 view-id-nodequeue_427 view-display-id-block nodequeue-callout-thumb-1up view-dom-id-11">
            <div class="view-content">
             <div class="first last odd">
              <div class="content">
               <p>
                <a href="/euronext_fr" style="background:none;display:inline-block;" target="_blank">
                </a>
                [linkx]
                
                [linkx]
                
               </p>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-views clear-block nodequeue-styled nodequeue-none-wrapper" id="block-views-nodequeue_307-block">
        <div class="inner">
         <div class="block-header">
          <h3 class="title">
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h3>
         </div>
         <div class="block-body">
          <div class="content">
           <div class="view view-nodequeue-307 view-id-nodequeue_307 view-display-id-block nodequeue-none view-dom-id-12">
            <div class="view-content">
             <div class="first last odd">
              <div class="content">
               <ul>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/best-of-book">
                  Best of Book
                 </a>
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
               </ul>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-views clear-block nodequeue-styled nodequeue-none-wrapper" id="block-views-nodequeue_308-block">
        <div class="inner">
         <div class="block-header">
          <h3 class="title">
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="block-body">
          <div class="content">
           <div class="view view-nodequeue-308 view-id-nodequeue_308 view-display-id-block nodequeue-none view-dom-id-13">
            <div class="view-content">
             <div class="first last odd">
              <div class="content">
               <p>
               </p>
               <div id="divcac">
               </div>
               <div>
                <ul>
                 <li>
                  [linkx]
                   <li>[ahref]</li><li>[ahref]</li><li>[pkeyx]</li>
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [linkx]
                   [mkey1]<li>[keywordx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
                  
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                 <li>
                  <a href="/cours/warrants">
                   Warrants et Certificats
                  </a>
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                </ul>
                <p class="title">
                 <h2>
                  [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                 </h2>
                 Découvrez le classement des 50 obligations les plus traitées en France par les investisseurs particuliers.
                </p>
                <ul>
                 <li class="title">
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-views clear-block nodequeue-styled nodequeue-callout-thumb-1up-wrapper" id="block-views-nodequeue_660-block">
        <div class="inner">
         <div class="block-header">
          <h3 class="title">
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="block-body">
          <div class="content">
           <div class="view view-nodequeue-660 view-id-nodequeue_660 view-display-id-block nodequeue-callout-thumb-1up view-dom-id-14">
            <div class="view-content">
             <div class="first last odd">
              <div class="content">
               <p>
                [ahref]
                
               </p>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-views clear-block nodequeue-styled nodequeue-right-rail-ad-wrapper" id="block-views-nodequeue_592-block">
        <div class="inner">
         <div class="block-body">
          <div class="content">
           <div class="view view-nodequeue-592 view-id-nodequeue_592 view-display-id-block nodequeue-right-rail-ad view-dom-id-15">
            <div class="view-content">
             <div class="first last odd">
              <div class="content">
               <p>
                [linkx]
                
               </p>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="clearfix clear" id="pre-footer">
   <div class="container-12" id="pre-footer-inner">
    <div class="block block-menu clear-block" id="block-menu-menu-menu-utility-footer">
     <div class="inner">
      <div class="block-header">
       <h3 class="title">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
      </div>
      <div class="block-body">
       <div class="content">
        <ul class="menu">
         <li class="leaf first">
          <a href="/contact-euronext-paris" title="">
           Contact Euronext Paris
          </a>
         </li>
         <li class="leaf">
          [linkx]
          
         </li>
         <li class="leaf last">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="clearfix clear" id="global-footer">
   <div id="global-footer-inner">
    <div class="block block-menu clear-block" id="block-menu-menu-disclaimer-footer">
     <div class="inner">
      <div class="block-header">
       <h3 class="title">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
      </div>
      <div class="block-body">
       <div class="content">
        <ul class="menu">
         <li class="leaf first">
          [ahref]
          
         </li>
         <li class="leaf">
          [pkeyx][mkey1][pkeyx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][linkx][linkx][pkeyx][ahref][mkey1]
         </li>
         <li class="leaf last">
          Politique de confidentialité<li>[ahref]</li><li>[mkey1]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx]</li>[ahref]
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0192
  </b>
 </body>
</html>
|<---