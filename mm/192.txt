--->|<!DOCTYPE html>
<html class="no-js" lang="en_US" prefix="og: http://ogp.me/ns#" xml:lang="en_US">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
   <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description">
    <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
    <meta content="no-transform" http-equiv="Cache-Control"/>
    <meta content="no-siteapp" http-equiv="Cache-Control"/>
    <meta content="pc,mobile" name="applicable-device"/>
    <title>
     [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </title>
    <meta content="http://www.bulgarihotels.com/en_US/paris" property="og:url">
     <meta content="website" property="og:type"/>
     <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
     <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
     <meta content="/.imaging/bhr-960-jpg/dam/PARIS/slider-paris.jpg/jcr%3Acontent" property="og:image"/>
     <meta content="summary_large_image" name="twitter:card"/>
     <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
     <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
     <meta content="/.imaging/bhr-960-jpg/dam/PARIS/slider-paris.jpg/jcr%3Acontent" name="twitter:image"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body data-chinesemapurlprefix="/en_US/chinesegooglemapsproxy?language=en_US&amp;callback=" data-contextpath="" data-cookieprefix="bhr" data-ctxpath="" data-currentproperty="3bedf630-d5ef-4371-8fb3-ff1a2c6c6969" data-facebookbanned="true" data-facebookmeeded="false" data-googlebanned="true" data-googlemapsneeded="false" data-hotelcompletename="The Bvlgari Hotel Paris" data-hotelcompletenamecapital="THE BVLGARI HOTEL PARIS" data-httpsenabled="true" data-locale="en" data-longlocale="en_US" data-requestidcookie="bhr_request_id" data-requestidcookiefallback="bhr_request_id_fallback" data-rtlview="false" data-shortlocale="en">
  <div aria-hidden="true" aria-labelledby="basicModalLabel" class="modal fade" data-modalemailerror="Sorry, we were unable to receive your request. Please try later." data-modalemailok="E-mail successfully sent" data-modalemailsuccess="The e-mail has been sent. You will be contacted as soon as possible. Thank you for your interest." data-modalok="Ok" data.modalerror="Error" id="basicModal" role="dialog" tabindex="-1">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        <span class="bhricon bhricon-remove">
        </span>
       </span>
      </button>
      <h4 class="modal-title text-center" id="basicModalLabel">
      </h4>
     </div>
     <div class="modal-body">
     </div>
     <div class="modal-footer">
     </div>
    </div>
   </div>
  </div>
  <h1 style="display: none;">
   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h1>
  <div class="cookie-popup" id="accept-cookie-popup" style="display: none;">
   <div class="col-xs-11 cookie-text flip text-left" style="margin-top: 10px;">
    <p class="article-title">
     COOKIE ACCEPTANCE ON FIRST ACCESS TO THE BVLGARI HOTELS &amp; RESORTS WEBSITE
    </p>
    <p class="information-copy-01">
     <span>
      Bvlgari uses cookies on this website to ensure you an excellent navigation experience. For more information about the cookies used and about methods for removing them, click
      <a href="/en_US/meta/cookie-policy">
       here
      </a>
      .
     </span>
     <span>
      By continuing to use this website, you accept the use of cookies.
     </span>
     [linkx]
     
    </p>
   </div>
   <div class="col-xs-1 cookie-close" flip="" style="margin-top: 10px;" text-right="">
    <li>[mkey1]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[mkey1]<li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
   </div>
  </div>
  <div aria-hidden="true" aria-labelledby="basicModalLabel" class="modal fade" id="cookie-policy-modal" role="dialog" tabindex="-1">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        <span class="bhricon bhricon-remove">
        </span>
       </span>
      </button>
      <h4 class="modal-title text-center" id="basicModalLabel">
       Cookies extended information notice
      </h4>
     </div>
     <div class="modal-body" style="text-align: left;">
      [ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][pkeyx][pkeyx][pkeyx][pkeyx][keywordx][keywordx][ahref][keywordx][ahref][mkey1][pkeyx][pkeyx][linkx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
     </div>
     <div class="modal-footer">
      <button class="btn btn-primary popup" id="cookie-policy-modal-button" type="button">
       Continue navigation
      </button>
     </div>
    </div>
   </div>
  </div>
  <div class="site-overlay">
  </div>
  <div class="se-pre-con">
  </div>
  <div class="loader">
  </div>
  <div class="modal fade" id="modal-language" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        <span class="bhricon bhricon-remove">
        </span>
       </span>
      </button>
      <h4 class="modal-title text-center">
       Choose your language
      </h4>
     </div>
     <div class="modal-body">
      <ul class="list-unstyled text-center">
       <li class="active">
        <span data-lang="en_US">
         English
        </span>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a class="choose-lang" data-lang="ar_SA" href="/ar_SA/paris" title="العربية">
         العربية
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <header class="site-header visible-md visible-lg">
   <div class="container-fluid">
    <div class="header-top">
     <ul class="nav top-right-menu flip text-right">
      <li class="dropdown dropdown-bhr rtl-margin-left-20">
       [ahref]
        <li>[pkeyx]</li><li>[linkx]</li><li>[linkx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
       
       <ul class="dropdown-menu">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a class="text-uppercase " href="/en_US/london">
          <div class="city text-uppercase">
           London
          </div>
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="text-uppercase " href="/en_US/shanghai">
          <div class="city text-uppercase">
           Shanghai
          </div>
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="text-uppercase " href="/en_US/tokyo-osaka-restaurants">
          <div class="city text-uppercase">
           Tokyo
          </div>
          <div class="city-subtitle text-uppercase">
           Restaurants
          </div>
         </a>
        </li>
       </ul>
      </li>
      <li class="dropdown dropdown-bhr rtl-margin-left-20">
       [linkx]
       
       <ul class="dropdown-menu">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </div>
    <div class="header-middle">
     <div class="row">
      <div class="col-md-3 flip text-left">
       <div class="menu-contact">
       </div>
      </div>
      <div class="col-md-6">
       <div class="site-logo">
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="row">
      <div class="col-xs-12 menu-col">
       <div class="menu">
        <ul class="list-unstyled">
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </header>
  <header class="site-header hidden-md hidden-lg ">
   <div class="header-mobile">
    <div class="open-menu flip pull-left">
     <a class="show-menu" data-menuid="menu" href="#">
      <span class="bhricon bhricon-remove hide" id="toggle-remove-menu">
      </span>
      <span class="bhricon bhricon-burger" id="toggle-show-menu">
      </span>
     </a>
    </div>
    <div class="logo">
     <a href="/en_US/paris">
      [linkx]
      
     </a>
    </div>
    <div class="clearfix">
    </div>
    <div class="menu-mobile" id="menu-mobile">
     <div class="list-group panel text-uppercase" id="mainMenu">
     </div>
     <div class="list-group panel grey" id="infoMenu">
      [ahref]
      
     </div>
     <div class="list-group panel blue" id="destinationMenu">
      [ahref]
      
      <div class="collapse" id="menu-destination">
       [ahref]
       
       [linkx]
       
       <a class="list-group-item" href="/en_US/dubai">
        <span class="city text-uppercase">
         Dubai
        </span>
       </a>
       [ahref]
       
       <a class="list-group-item" href="/en_US/beijing">
        <span class="city text-uppercase">
         Beijing
        </span>
       </a>
       <a class="list-group-item" href="/en_US/shanghai">
        <span class="city text-uppercase">
         Shanghai
        </span>
       </a>
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
      </div>
     </div>
    </div>
    <div class="reservation-mobile" id="reservation-mobile">
     <div class="container-reservation">
      <div class="header-reservation">
       <p class="title text-uppercase">
        Reservation
        [ahref]
        
       </p>
      </div>
      <div class="form-reservation">
      </div>
     </div>
    </div>
   </div>
  </header>
  <div class="modal fade" id="modal-destination" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        <span class="bhricon bhricon-remove">
        </span>
       </span>
      </button>
      <h4 class="modal-title text-center">
       Our other destinations
      </h4>
     </div>
     <div class="modal-body">
      <ul class="list-unstyled text-center">
       <li>
        [linkx]
        
       </li>
       <li>
        <a class="uppercase " href="/en_US/london">
         London
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a class="uppercase " href="/en_US/paris">
         Paris
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div class="container-wrapper" id="content-wrapper">
   <div class="container-slide slick-wrapper">
    <div class="slide-top" data-slick-fullscreen='{"target": ".slide-top .item-slide", "slick":{ "dots": false, "centerMode": true}}'>
     <div class="item-slide" href="/.imaging/bhr-narrow-big-jpg/dam/PARIS/slider-paris.jpg/jcr%3Acontent" style="background-image: url('/.imaging/bhr-narrow-big-jpg/dam/PARIS/slider-paris.jpg/jcr%3Acontent')">
     </div>
    </div>
   </div>
   <div class="section-standard margin-bottom-section ">
    <div class="container">
     <div class="row">
      <div class="col-md-8 col-md-offset-2 col-sm-12">
       <div class="content flip text-left text-copy-01 text-copy-space redrawn">
        <p>
         A new Bvlgari Hotel is scheduled to open in Paris, in 2020. Following the opening of Beijing and Dubai in 2017, Shanghai in 2018, Moscow and Paris in 2020 the Bvlgari Hotels and Resorts collection will grow to eight properties, including Milan, London and Bali.
        </p>
        <p>
         The Hotel will be located at 30 Avenue George V. This Avenue forms with the Champs Elysees and the Avenue Montaigne the famous “Triangle d’Or”, one of Paris’ most exclusive and distinctive areas offering a wealth of luxury shopping, entertainment and cultural attractions.[ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx][ahref][ahref][ahref][mkey1]
        </p>
        <p>
         The Bvlgari Hotel Paris will offer 76 rooms, most of them suites, and a full range of luxury facilities including a spa with a 25-metre pool and a Bvlgari restaurant and bar opening to a charming courtyard garden.
        </p>
        <p>
         The Bvlgari Hotel Paris is being designed by the Italian architectural firm Antonio Citterio Patricia Viel, and the renowned Parisian architects Valode &amp; Pistre.
        </p>
        <p>
         The restyling of the building has been conceived as a transition to modernity: while both the use of the typical Parisian limestone and the respect of the ‘alignment’ criteria recall the 19th century Haussmanian urban patterns, the completely renewed façade evokes a rationalistic style that is an expression of the most contemporary architectural design.
        </p>
       </div>
      </div>
     </div>
    </div>
   </div>
   <hr class="divider divider-section "/>
   <div class="container ">
    <h2 class="section-name section-name-space text-center">
     [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </h2>
    <div class="slick-wrapper">
     <div class="carousel-article row">
      <div class="slick-wrapper">
       <div class="article article-horizontal carousel-article-item">
        <div class="col-sm-12 col-md-4">
         <h3 class="article-title article-title-space">
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h3>
         <div class="text-copy-01 text-copy-space redrawn">
          <p>
           On a private street between Via Montenapoleone, Via della Spiga, La Scala and the Accademia di Brera, in a tastefully renovated 18th-century Milanese palazzo is Bvlgari Hotel Milano, situated in the cultural and commercial heart of a city that, behind its austere façades, hides delightful and unexpected courtyards and green spaces...
          </p>
         </div>
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="slick-wrapper">
       <div class="article article-horizontal carousel-article-item">
        <div class="col-sm-12 col-md-4">
         <h3 class="article-title article-title-space">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <div class="text-copy-01 text-copy-space redrawn">
          <p>
           Located in Knightsbridge on the edge of Hyde Park, London’s Bvlgari Hotel is both a haven of calm in the centre of the city and yet under a minute’s walk from such landmarks as the famous Harrod’s department store. Since opening in 2012 the Bvlgari has set new standards among the luxury hotels of the British capital...
          </p>
         </div>
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="slick-wrapper">
       <div class="article article-horizontal carousel-article-item">
        <div class="col-sm-12 col-md-4">
         <h3 class="article-title article-title-space">
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h3>
         <div class="text-copy-01 text-copy-space redrawn">
          <p>
           Bvlgari Resort Bali is located in one of the most exclusive destinations in the world, a veritable emblem of the tropical exoticism of the Orient, combining the breathtaking beauty of unspoiled nature of Bali beach resorts with a sophisticated contemporary design born from the encounter between traditional Balinese forms and high Italian style...
          </p>
         </div>
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <hr class="divider divider-section "/>
  </div>
  <div class="modal fade" id="modal-newsletter" role="dialog">
   <div class="modal-dialog modal-dialog-custom">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        <span class="bhricon bhricon-remove">
        </span>
       </span>
      </button>
      <h4 class="modal-title text-center">
       Newsletter sign up
      </h4>
     </div>
     <div class="modal-body">
      <form class="overlay-form form-overlay-form" data-context-path="" data-error-message="<p>Sorry, we were unable to receive your request. Please try later.</p><br/>" data-form-id="53b45504-ec13-4d27-9b11-4a6cee73d556" data-property-code="DPSBG" data-success-message="<p>Your subscription has been gratefully received.</p><br/>" data-toggle="validator" id="newsletterSignUp" method="post" role="form">
       <div class="se-pre-con-form">
       </div>
       <div class="row">
        <div class="col-sm-6">
         <div class=" overlay-form-input" id="1562158558858">
          <div class="form-group compulsory">
           <label for="firstName">
            First name
           </label>
          </div>
         </div>
        </div>
        <div class="col-sm-6">
         <div class=" overlay-form-input" id="1562158558860">
          <div class="form-group compulsory">
           <label for="lastName">
            Last name
           </label>
          </div>
         </div>
        </div>
       </div>
       <div class=" overlay-form-input" id="1562158558861">
        <div class="form-group compulsory">
         <label for="gender">
          Gender
         </label>
         <div class="form-select">
          <select class="form-control" id="gender" name="gender" required="">
           <option value="male">
            Male
           </option>
           <option value="female">
            Female
           </option>
          </select>
         </div>
        </div>
       </div>
       <div class="row">
        <div class="col-sm-6">
         <div class=" overlay-form-input" id="1562158558863">
          <div class="form-group compulsory">
           <label for="customerEmail">
            Email address
           </label>
          </div>
         </div>
        </div>
        <div class="col-sm-6">
         <div class=" overlay-form-input" id="1562158558865">
          <div class="form-group compulsory">
           <label for="retypeyouremailaddress">
            Confirm email
           </label>
          </div>
         </div>
        </div>
       </div>
       <div class="row">
        <div class="col-sm-4">
         <div class=" overlay-form-input" id="1562158558867">
          <div class="form-group compulsory">
           <label for="city">
            City
           </label>
          </div>
         </div>
        </div>
        <div class="col-sm-5">
         <div class=" overlay-form-input" id="1562158558869">
          <div class="form-group ">
           <label for="address">
            Address
           </label>
          </div>
         </div>
        </div>
        <div class="col-sm-3">
         <div class=" overlay-form-input" id="1562158558870">
          [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][ahref][mkey1][pkeyx][pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][linkx][keywordx][pkeyx]
         </div>
        </div>
       </div>
       <div class=" overlay-form-input" id="1562158558871">
        <div class="form-group compulsory">
         <label for="country">
          Country/Region
         </label>
         <div class="form-select">
          <select class="form-control" id="country" name="country" required="">
           <option value="AD">
            Andorra
           </option>
           <option value="AE">
            United Arab Emirates
           </option>
           <option value="AF">
            Afghanistan
           </option>
           <option value="AG">
            Antigua and Barbuda
           </option>
           <option value="AI">
            Anguilla
           </option>
           <option value="AL">
            Albania
           </option>
           <option value="AM">
            Armenia
           </option>
           <option value="AN">
            Netherlands Antilles
           </option>
           <option value="AO">
            Angola
           </option>
           <option value="AQ">
            Antarctica
           </option>
           <option value="AR">
            Argentina
           </option>
           <option value="AS">
            American Samoa
           </option>
           <option value="AT">
            Austria
           </option>
           <option value="AU">
            Australia
           </option>
           <option value="AW">
            Aruba
           </option>
           <option value="AX">
            Åland Islands
           </option>
           <option value="AZ">
            Azerbaijan
           </option>
           <option value="BA">
            Bosnia and Herzegovina
           </option>
           <option value="BB">
            Barbados
           </option>
           <option value="BD">
            Bangladesh
           </option>
           <option value="BE">
            Belgium
           </option>
           <option value="BF">
            Burkina Faso
           </option>
           <option value="BG">
            Bvlgaria
           </option>
           <option value="BH">
            Bahrain
           </option>
           <option value="BI">
            Burundi
           </option>
           <option value="BJ">
            Benin
           </option>
           <option value="BL">
            Saint Barthélemy
           </option>
           <option value="BM">
            Bermuda
           </option>
           <option value="BN">
            Brunei
           </option>
           <option value="BO">
            Bolivia
           </option>
           <option value="BQ">
            Bonaire, Sint Eustatius and Saba
           </option>
           <option value="BR">
            Brazil
           </option>
           <option value="BS">
            Bahamas
           </option>
           <option value="BT">
            Bhutan
           </option>
           <option value="BV">
            Bouvet Island
           </option>
           <option value="BW">
            Botswana
           </option>
           <option value="BY">
            Belarus
           </option>
           <option value="BZ">
            Belize
           </option>
           <option value="CA">
            Canada
           </option>
           <option value="CC">
            Cocos Islands
           </option>
           <option value="CD">
            The Democratic Republic Of Congo
           </option>
           <option value="CF">
            Central African Republic
           </option>
           <option value="CG">
            Congo
           </option>
           <option value="CH">
            Switzerland
           </option>
           <option value="CI">
            Côte d'Ivoire
           </option>
           <option value="CK">
            Cook Islands<li>[pkeyx]</li><li>[pkeyx]</li>[keywordx][linkx]<li>[keywordx]</li>
           </option>
           <option value="CL">
            Chile
           </option>
           <option value="CM">
            Cameroon
           </option>
           <option value="CN">
            China
           </option>
           <option value="CO">
            Colombia
           </option>
           <option value="CR">
            Costa Rica
           </option>
           <option value="CU">
            Cuba
           </option>
           <option value="CV">
            Cape Verde
           </option>
           <option value="CW">
            Curaçao
           </option>
           <option value="CX">
            Christmas Island
           </option>
           <option value="CY">
            Cyprus
           </option>
           <option value="CZ">
            Czech Republic
           </option>
           <option value="DE">
            Germany
           </option>
           <option value="DJ">
            Djibouti
           </option>
           <option value="DK">
            Denmark
           </option>
           <option value="DM">
            Dominica
           </option>
           <option value="DO">
            Dominican Republic
           </option>
           <option value="DZ">
            Algeria
           </option>
           <option value="EC">
            Ecuador
           </option>
           <option value="EE">
            Estonia
           </option>
           <option value="EG">
            Egypt
           </option>
           <option value="EH">
            Western Sahara
           </option>
           <option value="ER">
            Eritrea
           </option>
           <option value="ES">
            Spain
           </option>
           <option value="ET">
            Ethiopia
           </option>
           <option value="FI">
            Finland
           </option>
           <option value="FJ">
            Fiji
           </option>
           <option value="FK">
            Falkland Islands
           </option>
           <option value="FM">
            Micronesia
           </option>
           <option value="FO">
            Faroe Islands
           </option>
           <option value="FR">
            France
           </option>
           <option value="GA">
            Gabon
           </option>
           <option value="GB">
            United Kingdom
           </option>
           <option value="GD">
            Grenada
           </option>
           <option value="GE">
            Georgia
           </option>
           <option value="GF">
            French Guiana
           </option>
           <option value="GG">
            Guernsey
           </option>
           <option value="GH">
            Ghana
           </option>
           <option value="GI">
            Gibraltar
           </option>
           <option value="GL">
            Greenland
           </option>
           <option value="GM">
            Gambia
           </option>
           <option value="GN">
            Guinea
           </option>
           <option value="GP">
            Guadeloupe
           </option>
           <option value="GQ">
            Equatorial Guinea
           </option>
           <option value="GR">
            Greece
           </option>
           <option value="GS">
            South Georgia And The South Sandwich Islands
           </option>
           <option value="GT">
            Guatemala
           </option>
           <option value="GU">
            Guam
           </option>
           <option value="GW">
            Guinea-Bissau
           </option>
           <option value="GY">
            Guyana
           </option>
           <option value="HK">
            Hong Kong
           </option>
           <option value="HM">
            Heard Island And McDonald Islands
           </option>
           <option value="HN">
            Honduras
           </option>
           <option value="HR">
            Croatia
           </option>
           <option value="HT">
            Haiti
           </option>
           <option value="HU">
            Hungary
           </option>
           <option value="ID">
            Indonesia
           </option>
           <option value="IE">
            Ireland
           </option>
           <option value="IL">
            Israel
           </option>
           <option value="IM">
            Isle Of Man
           </option>
           <option value="IN">
            India
           </option>
           <option value="IO">
            British Indian Ocean Territory
           </option>
           <option value="IQ">
            Iraq
           </option>
           <option value="IR">
            Iran
           </option>
           <option value="IS">
            Iceland
           </option>
           <option value="IT">
            Italy
           </option>
           <option value="JE">
            Jersey
           </option>
           <option value="JM">
            Jamaica
           </option>
           <option value="JO">
            Jordan
           </option>
           <option value="JP">
            Japan
           </option>
           <option value="KE">
            Kenya
           </option>
           <option value="KG">
            Kyrgyzstan
           </option>
           <option value="KH">
            Cambodia
           </option>
           <option value="KI">
            Kiribati
           </option>
           <option value="KM">
            Comoros
           </option>
           <option value="KN">
            Saint Kitts And Nevis
           </option>
           <option value="KP">
            North Korea
           </option>
           <option value="KR">
            South Korea
           </option>
           <option value="KW">
            Kuwait[linkx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[ahref][linkx]
           </option>
           <option value="KY">
            Cayman Islands
           </option>
           <option value="KZ">
            Kazakhstan
           </option>
           <option value="LA">
            Laos
           </option>
           <option value="LB">
            Lebanon
           </option>
           <option value="LC">
            Saint Lucia
           </option>
           <option value="LI">
            Liechtenstein
           </option>
           <option value="LK">
            Sri Lanka
           </option>
           <option value="LR">
            Liberia
           </option>
           <option value="LS">
            Lesotho
           </option>
           <option value="LT">
            Lithuania
           </option>
           <option value="LU">
            Luxembourg
           </option>
           <option value="LV">
            Latvia
           </option>
           <option value="LY">
            Libya
           </option>
           <option value="MA">
            Morocco
           </option>
           <option value="MC">
            Monaco
           </option>
           <option value="MD">
            Moldova
           </option>
           <option value="ME">
            Montenegro
           </option>
           <option value="MF">
            Saint Martin
           </option>
           <option value="MG">
            Madagascar
           </option>
           <option value="MH">
            Marshall Islands
           </option>
           <option value="MK">
            Macedonia
           </option>
           <option value="ML">
            Mali[linkx][mkey1][pkeyx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx]
           </option>
           <option value="MM">
            Myanmar
           </option>
           <option value="MN">
            Mongolia
           </option>
           <option value="MO">
            Macao
           </option>
           <option value="MP">
            Northern Mariana Islands
           </option>
           <option value="MQ">
            Martinique
           </option>
           <option value="MR">
            Mauritania
           </option>
           <option value="MS">
            Montserrat
           </option>
           <option value="MT">
            Malta
           </option>
           <option value="MU">
            Mauritius[linkx][mkey1][keywordx][linkx][keywordx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][ahref][keywordx][pkeyx][keywordx][mkey1][ahref][pkeyx][ahref][pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][linkx][pkeyx][ahref][mkey1]
           </option>
           <option value="MV">
            Maldives
           </option>
           <option value="MW">
            Malawi
           </option>
           <option value="MX">
            Mexico
           </option>
           <option value="MY">
            Malaysia
           </option>
           <option value="MZ">
            Mozambique
           </option>
           <option value="NA">
            Namibia
           </option>
           <option value="NC">
            New Caledonia
           </option>
           <option value="NE">
            Niger
           </option>
           <option value="NF">
            Norfolk Island
           </option>
           <option value="NG">
            Nigeria
           </option>
           <option value="NI">
            Nicaragua
           </option>
           <option value="NL">
            Netherlands
           </option>
           <option value="NO">
            Norway
           </option>
           <option value="NP">
            Nepal
           </option>
           <option value="NR">
            Nauru
           </option>
           <option value="NU">
            Niue
           </option>
           <option value="NZ">
            New Zealand
           </option>
           <option value="OM">
            Oman
           </option>
           <option value="PA">
            Panama
           </option>
           <option value="PE">
            Peru
           </option>
           <option value="PF">
            French Polynesia
           </option>
           <option value="PG">
            Papua New Guinea
           </option>
           <option value="PH">
            Philippines
           </option>
           <option value="PK">
            Pakistan
           </option>
           <option value="PL">
            Poland
           </option>
           <option value="PM">
            Saint Pierre And Miquelon
           </option>
           <option value="PN">
            Pitcairn
           </option>
           <option value="PR">
            Puerto Rico
           </option>
           <option value="PS">
            Palestine
           </option>
           <option value="PT">
            Portugal
           </option>
           <option value="PW">
            Palau
           </option>
           <option value="PY">
            Paraguay
           </option>
           <option value="QA">
            Qatar
           </option>
           <option value="RE">
            Reunion
           </option>
           <option value="RO">
            Romania
           </option>
           <option value="RS">
            Serbia
           </option>
           <option value="RU">
            Russia
           </option>
           <option value="RW">
            Rwanda
           </option>
           <option value="SA">
            Saudi Arabia
           </option>
           <option value="SB">
            Solomon Islands
           </option>
           <option value="SC">
            Seychelles
           </option>
           <option value="SD">
            Sudan
           </option>
           <option value="SE">
            Sweden
           </option>
           <option value="SG">
            Singapore
           </option>
           <option value="SH">
            Saint Helena<li>[linkx]</li>[pkeyx][keywordx][ahref][mkey1]
           </option>
           <option value="SI">
            Slovenia
           </option>
           <option value="SJ">
            Svalbard And Jan Mayen
           </option>
           <option value="SK">
            Slovakia
           </option>
           <option value="SL">
            Sierra Leone
           </option>
           <option value="SM">
            San Marino
           </option>
           <option value="SN">
            Senegal
           </option>
           <option value="SO">
            Somalia
           </option>
           <option value="SR">
            Suriname
           </option>
           <option value="SS">
            South Sudan
           </option>
           <option value="ST">
            Sao Tome And Principe
           </option>
           <option value="SV">
            El Salvador
           </option>
           <option value="SX">
            Sint Maarten (Dutch part)
           </option>
           <option value="SY">
            Syria
           </option>
           <option value="SZ">
            Swaziland<li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx]
           </option>
           <option value="TC">
            Turks And Caicos Islands
           </option>
           <option value="TD">
            Chad
           </option>
           <option value="TF">
            French Southern Territories
           </option>
           <option value="TG">
            Togo
           </option>
           <option value="TH">
            Thailand
           </option>
           <option value="TJ">
            Tajikistan
           </option>
           <option value="TK">
            Tokelau
           </option>
           <option value="TL">
            Timor-Leste
           </option>
           <option value="TM">
            Turkmenistan
           </option>
           <option value="TN">
            Tunisia
           </option>
           <option value="TO">
            Tonga
           </option>
           <option value="TR">
            Turkey
           </option>
           <option value="TT">
            Trinidad and Tobago
           </option>
           <option value="TV">
            Tuvalu
           </option>
           <option value="TW">
            Taiwan
           </option>
           <option value="TZ">
            Tanzania
           </option>
           <option value="UA">
            Ukraine
           </option>
           <option value="UG">
            Uganda
           </option>
           <option value="UM">
            United States Minor Outlying Islands
           </option>
           <option value="US">
            United States
           </option>
           <option value="UY">
            Uruguay
           </option>
           <option value="UZ">
            Uzbekistan
           </option>
           <option value="VA">
            Vatican
           </option>
           <option value="VC">
            Saint Vincent And The Grenadines
           </option>
           <option value="VE">
            Venezuela
           </option>
           <option value="VG">
            British Virgin Islands[keywordx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref]
           </option>
           <option value="VI">
            U.S. Virgin Islands
           </option>
           <option value="VN">
            Vietnam
           </option>
           <option value="VU">
            Vanuatu
           </option>
           <option value="WF">
            Wallis And Futuna
           </option>
           <option value="WS">
            Samoa
           </option>
           <option value="YE">
            Yemen
           </option>
           <option value="YT">
            Mayotte
           </option>
           <option value="ZA">
            South Africa
           </option>
           <option value="ZM">
            Zambia
           </option>
           <option value="ZW">
            Zimbabwe
           </option>
          </select>
         </div>
        </div>
       </div>
       <div class="row">
        <div class="col-sm-6">
         <div class=" overlay-form-input" id="1562158558878">
          <div class="form-group ">
           <label for="company">
            Company
           </label>
          </div>
         </div>
        </div>
        <div class="col-sm-6">
         <div class=" overlay-form-input" id="1562158558880">
          <div class="form-group ">
           <label for="phone">
            Phone
           </label>
          </div>
         </div>
        </div>
       </div>
       <div class=" overlay-form-input" id="1562158558881">
        <div class="form-group ">
         <label for="language">
          Language
         </label>
         <div class="form-select">
          <select class="form-control" id="language" name="language">
           <option value="en">
            English
           </option>
           <option value="it">
            Italian
           </option>
           <option value="fr">
            Français
           </option>
           <option value="ja">
            日本語
           </option>
           <option value="ko">
            한국어
           </option>
           <option value="zh_TW">
            中文 (台灣)
           </option>
           <option value="zh_CN">
            中文 (中国)
           </option>
          </select>
         </div>
        </div>
       </div>
       <div class=" overlay-form-input" id="1562158558882">
        <div class="form-group ">
         <label for="question">
          Are you a Bvlgari client?
         </label>
         <div class="form-select">
          <select class="form-control" id="question" name="question">
           <option value="yes">
            Yes
           </option>
           <option value="no">
            No
           </option>
          </select>
         </div>
        </div>
       </div>
       <div class=" overlay-form-input" id="1562158558882">
        <div class="form-group ">
         <label for="location">
          Location
         </label>
         <div class="form-select">
          <select class="form-control" id="location" name="location">
           <option value="none">
            Select
           </option>
           <option value="milan">
            Milan
           </option>
           <option value="london">
            London
           </option>
           <option value="bali">
            Bali
           </option>
           <option value="tokio-osaka">
            Tokyo-Osaka
           </option>
           <option value="shanghai">
            Shanghai
           </option>
           <option value="beijing">
            Beijing
           </option>
           <option value="dubai">
            Dubai
           </option>
           <option value="moscow">
            Moscow
           </option>
          </select>
         </div>
        </div>
       </div>
       <div class=" overlay-form-input" id="1562158558883">
        <div class="form-group ">
         <label for="media">
          Media/Company
         </label>
        </div>
       </div>
       <hr class="divider divider-section form-divider"/>
       <div class="checkbox">
        <label class="checkbox-inline" for="privacyAgreement">
         <span>
          I agree to the
          [ahref]
          
          ‌*
         </span>
        </label>
       </div>
       <p class="notes">
        * Required Fields
       </p>
       <br/>
       <div class="g-recaptcha" data-sitekey="6Leu62wUAAAAACOjrantTVEH6qBTOKMcSsdv-FXW">
       </div>
       <button class="btn btn-primary pull-right" name="formName" type="submit" value="newsletterSignUp">
        Send request
       </button>
      </form>
     </div>
    </div>
   </div>
  </div>
  <footer class="">
   <button class="backtotop" onclick="event.preventDefault(); backToTop()" title="Back to top">
    <span class="bhricon bhricon-arrow-up">
    </span>
    <span class="sr-only">
     Back to top
    </span>
   </button>
   <div class="container footer-container">
    <div class="hidden-xs">
     <p class="footer-section-title text-center text-uppercase">
      OUR DESTINATIONS
     </p>
     <div class="menu-footer">
      <ul class="list-unstyled">
       <li>
        <a href="/en_US/milan">
         <span class="city">
          Milan
         </span>
         <span class="sub-title">
         </span>
        </a>
       </li>
       <li>
        <a href="/en_US/london">
         <span class="city">
          London
         </span>
         <span class="sub-title">
         </span>
        </a>
       </li>
       <li>
        [keywordx][pkeyx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][mkey1][pkeyx][keywordx][keywordx]
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/en_US/paris">
         <span class="city">
          Paris
         </span>
         <span class="sub-title">
          2020
         </span>
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="container footer-container small">
    <div class="hidden-xs">
     <div class="logo-footer text-center">
      [linkx]
      
     </div>
     <div class="row">
      <div class="col-sm-4">
       <ul class="list-01">
        <li>
         Services
        </li>
        <li class="text-uppercase">
         [ahref]
         
        </li>
        <li class="text-uppercase">
         [ahref]
         
        </li>
        <li class="text-uppercase">
         [ahref]
         
        </li>
        <li class="text-uppercase">
         [linkx]
         
        </li>
        <li class="text-uppercase">
         [linkx]
         
        </li>
        <li class="text-uppercase">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="col-sm-5">
       <ul class="list-02">
        <li style="padding-left: 0;">
         Newsletter sign up
        </li>
       </ul>
       <div class="footer-form-newsletter">
        <form>
         <label class="label-newsletter" for="input-newsletter">
          Email
         </label>
         [linkx]
         
        </form>
       </div>
      </div>
      <div class="col-sm-3">
       <ul class="list-02 list-inline">
        <li>
         Social
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <ul class="list-01">
        <li>
         Official website
        </li>
        <li class="text-uppercase">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="text-center">
      <p class="footer-bottom-label text-uppercase">
       Choose your language
      </p>
      <ul class="footer-bottom-link list-inline list-unstyled">
       <li class="dropup dropdown-bhr">
        [ahref]
        
        <ul class="dropdown-menu">
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[linkx]</li>[keywordx]
         </li>
         <li>
          <a class="choose-lang" data-lang="ja_JP" href="/ja_JP/paris?" title="Japanese (japan)">
           日本語
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="choose-lang" data-lang="zh_CN" href="/zh_CN/paris?" title="Simplified Chinese">
           简体中文
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="visible-xs">
    <hr class="divider divider-footer"/>
   </div>
   <div class="container footer-container">
    <div class="visible-xs">
     <div class="footer-form-newsletter">
      <form>
       <p class="title-form-mobile ">
        Newsletter sign up[pkeyx]<li>[ahref]</li>[linkx]<li>[mkey1]</li><li>[keywordx]</li>
       </p>
       <label class="label-newsletter" for="input-newsletter-mobile">
        Email
       </label>
       [ahref]
       
      </form>
     </div>
    </div>
   </div>
   <div class="visible-xs">
    <hr class="divider divider-footer"/>
   </div>
   <div class="container footer-container">
    <div class="visible-xs">
     <div class="footer-mobile">
      <div class="logo-footer text-center">
       [linkx]
       
      </div>
      <ul class="list-inline list-social">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="#" onclick="window.open('https://it.pinterest.com/bulgarihotels/','_blank')">
         <span class="bhricon bhricon-pinterest">
         </span>
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
      <ul class="list-info">
       <li class="text-uppercase">
        [ahref]
        
       </li>
       <li class="text-uppercase">
        <a class=" uppercase" href="/en_US/meta/cookie-policy" target="">
         <span>
          cookie policy
         </span>
        </a>
       </li>
       <li class="text-uppercase">
        <a class=" uppercase" href="/en_US/meta/privacy-policy" target="">
         <span>
          Privacy Policy
         </span>
        </a>
       </li>
       <li class="text-uppercase">
        [linkx]
        
       </li>
       <li class="text-uppercase">
        [linkx]
        
       </li>
       <li class="text-uppercase">
        [linkx]
        
       </li>
       <li class="text-uppercase">
        [linkx]
        
       </li>
       <li class="dropup dropdown-bhr hidden-xs hidden-sm">
        [linkx]
        
        <ul class="dropdown-menu">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="dropup dropdown-bhr visible-xs visible-sm">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </footer>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0203
  </b>
 </body>
</html>|<---