--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.27.5" name="generator"/>
  <meta content="http://wiki.teamfortress.com/w/images/3/3f/Reddit_thumbnail.png" name="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Strange_Count_Transfer_Tool_ko rootpage-Strange_Count_Transfer_Tool skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [linkx]
   
   <div class="mw-indicators">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="en">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div id="siteSub">
     From Team Fortress Wiki
    </div>
    <div id="contentSub">
     <span class="subpages">
      <
      [ahref]
      
     </span>
    </div>
    <div class="mw-jump" id="jump-to-nav">
     Jump to:
     [ahref]
     
     ,
     <a href="h">
      search
     </a>
    </div>
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en">
     <div id="right-sidebar">
      <table class="infobox item-infobox Tool-infobox" style="width:300px; max-width:300px; {{{1}}}">
       <tr>
        <th class="infobox-header" colspan="2" id="top-header" style="background:#F3A957;">
         이상한 수치 이전 도구
        </th>
       </tr>
       <tr>
        <td colspan="2" style="padding:0em;">
         <div class="center">
          <div class="floatnone">
           <a class="image" href="/wiki/File:Backpack_Strange_Count_Transfer_Tool.png">
           </a>
          </div>
         </div>
        </td>
       </tr>
       <tr>
        <th class="infobox-header" colspan="2">
         기본 정보
        </th>
       </tr>
       <tr>
        <td class="infobox-label">
         공개일
        </td>
        <td class="infobox-data">
         [ahref]
         
         <br/>
         (
         [linkx]
         
         )
        </td>
       </tr>
       <tr>
        <td class="infobox-label">
         획득 방법:
        </td>
        <td class="infobox-data">
         [linkx]
         
        </td>
       </tr>
       <tr>
        <td class="infobox-label">
         [linkx]
         
        </td>
        <td class="infobox-data">
         가능
        </td>
       </tr>
       <tr>
        <td class="infobox-label">
         <a href="/wiki/Gift_Wrap/ko" title="Gift Wrap/ko">
          <span id="tooltip" style="cursor:help; border-bottom:1px dotted;" title="선물 포장이 가능한 경우">
           선물 여부
          </span>
         </a>
        </td>
        <td class="infobox-data">
         가능
        </td>
       </tr>
       <tr>
        <td class="infobox-label">
         [ahref]
         
        </td>
        <td class="infobox-data">
         가능
        </td>
       </tr>
       <tr>
        <th class="infobox-header" colspan="2">
         존재하는 품질
        </th>
       </tr>
       <tr>
        <td colspan="2" style="text-align:center;">
         <div class="quality-tag tooltip-unique">
          [ahref]
          
         </div>
        </td>
       </tr>
       <tr>
        <th class="infobox-header" colspan="2">
         장비 설정 상태
        </th>
       </tr>
       <tr>
        <td class="loadout-tooltip-container" colspan="2" style="text-align:center;">
         <div style="text-align: center; background: #24201B; width: 100%; -moz-border-radius: 10px; border-radius: 10px; padding:7px 0px;">
          <center>
           <div style="align:center; width: 120px; height: 90px; -moz-border-radius: 10px; border-radius: 10px; background: #3C362F; margin-bottom: 5px; border: 0px #847668 solid; position:relative;">
            [ahref]
            
           </div>
          </center>
          <div style="-moz-border-radius: 10px; border-radius: 10px; background: transparent; padding: 5px; margin: 0px 7px;">
           <span class="qua_unique" style="font-size:18px; line-height:16px; text-shadow: 2px 1px 1px #24201B; font-family:Pathang, sans-serif, Totum, Kodig, serif; font-weight: bold;">
            이상한 수치 이전 도구
           </span>
           <div style="font-family:Pathang, sans-serif, Totum, Kodig, serif; font-weight: bold; font-size: 15px">
            <span class="att_level">
             레벨 1-100 도구
            </span>
            <br/>
            <span style="line-height:0.3em;">
            </span>
            <br/>
            <span class="att_neutral" style="line-height:1.2em; font-size:95%; width:80%;">
             이상한 점수를 한 아이템에서 가져다 다른 아이템에 더합니다. 옮긴 점수를 원래 가지고 있던 아이템의 점수는 0점으로 초기화 됩니다. 이상한 부품의 점수는 동일한 이상한 부품이 있을 때 옮겨서 초기화할 수 있습니다. 유형이 같은 이상한 아이템끼리만 쓸 수 있습니다.
            </span>
            <br/>
            <br/>
            <span class="att_uses">
             사용 횟수가 제한된 아이템으로 1번 사용할 수 있습니다.
            </span>
           </div>
          </div>
         </div>
        </td>
       </tr>
      </table>
     </div>
     <p>
      [pkeyx][pkeyx][pkeyx][area1][keywordx][pkeyx][pkeyx][linkx][linkx][pkeyx][area1][keywordx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][area1][mkey1][linkx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx]
     </p>
     <h2>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <h3>
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <table class="wikitable" style="font-size:90%; text-align:center; margin-bottom:1em;" width="auto">
      <tr>
       <td style="background-color: #FFDD99;">
        [linkx]
        
       </td>
       <td>
       </td>
       <td style="background-color: #FFDD99;">
        <strong class="selflink">
         이상한 수치 이전 도구
        </strong>
       </td>
      </tr>
      <tr>
       <td>
        [ahref]
        
        <span style="font-size:22px; line-height:16px;color:#292625;font-family: Pathang, sans-serif, Totum, Kodig, serif; font-weight: bold;">
         x2
        </span>
       </td>
       <td>
        <span style="font-size:65px; line-height:16px;color:#292625;font-family: Pathang, sans-serif, Totum, Kodig, serif; font-weight: bold;">
         =
        </span>
       </td>
       <td>
        [ahref]
        
       </td>
      </tr>
     </table>
     <h2>
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h2>
     <p>
      <b>
       [linkx]
       
      </b>
      (
      [linkx]
      
      )
     </p>
     <ul>
      <li>
       이상한 수치 이전 도구가 추가되었습니다.
      </li>
     </ul>
     <table cellspacing="0" class="navbox" style="border: 1px solid #AAA;;;">
      <tr>
       <td style="padding:2px;">
        <table cellspacing="0" class="nowraplinks collapsible uncollapsed" style="width:100%;background:transparent;color:inherit;;">
         <tr>
          <th class="navbox-title" colspan="2" style=";background: #DBA901; color:black">
           <div style="float:left; width:6em;text-align:left;">
            <div class="noprint plainlinks navbar" style="background:none; padding:0; font-weight:normal;;background: #DBA901; color:black;border:none;; font-size:xx-small;">
             [ahref]
             
             <span style="font-size:80%;">
              •
             </span>
             [ahref]
             
             <span style="font-size:80%;">
              •
             </span>
             [linkx]
             
            </div>
           </div>
           <span class="" style="font-size:110%;">
            [linkx]
            
            <a href="/wiki/Tough_Break_Update/ko" title="Tough Break Update/ko">
             불행한 휴가 업데이트
            </a>
           </span>
          </th>
         </tr>
         <tr style="height:2px;">
          <td>
          </td>
         </tr>
         <tr>
          <td class="navbox-group" style=";background: #F2D9AD;;">
           [linkx]
           
          </td>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;background: #FFFFFF;;">
           <div style="padding:0em 0.25em">
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [ahref]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            <a href="/wiki/Vanguard/ko" title="Vanguard/ko">
             Vanguard
            </a>
           </div>
          </td>
         </tr>
         <tr style="height:2px">
          <td>
          </td>
         </tr>
         <tr>
          <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li><li>[linkx]</li>
         </tr>
         <tr style="height:2px">
          <td>
          </td>
         </tr>
         <tr>
          <td class="navbox-group" style=";background: #F2D9AD;;">
           [ahref]
           
          </td>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;background: #FFFFFF;;">
           <div style="padding:0em 0.25em">
            [linkx]
            
            [ahref]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
            <a href="/wiki/Bucking_Bronco/ko" title="Bucking Bronco/ko">
             환장한 황소
            </a>
            <span style="font-weight:bold;">
             ·
            </span>
            <a href="/wiki/Classes/ko" title="Classes/ko">
            </a>
            <a href="/wiki/Mannrobics/ko" title="Mannrobics/ko">
             에어로빅'만' 댄스
            </a>
           </div>
          </td>
         </tr>
         <tr style="height:2px">
          <td>
          </td>
         </tr>
         <tr>
          <td class="navbox-group" style=";background: #F2D9AD;;">
           <a class="mw-redirect" href="/wiki/Tool/ko" title="Tool/ko">
            도구
           </a>
          </td>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;background: #FFFFFF;;">
           <div style="padding:0em 0.25em">
            <a class="mw-redirect" href="/wiki/Pyroland_Weapons_Case/ko" title="Pyroland Weapons Case/ko">
             파이로 동산 무기 상자
            </a>
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            <strong class="selflink">
             이상한 수치 이전 도구
            </strong>
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
            <span style="font-weight:bold;">
             ·[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][linkx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][mkey1][area1][mkey1][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][pkeyx][linkx][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref][area1][mkey1][pkeyx][ahref]
            </span>
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [ahref]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [linkx]
            
           </div>
          </td>
         </tr>
         <tr style="height:2px">
          <td>
          </td>
         </tr>
         <tr>
          <td class="navbox-group" style=";background: #F2D9AD;;">
           기타
          </td>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;background: #FFFFFF;;">
           <div style="padding:0em 0.25em">
            <a href="/wiki/Tough_Break_Campaign/ko" title="Tough Break Campaign/ko">
             불행한 휴가 작전
            </a>
            <span style="font-weight:bold;">
             ·
            </span>
            [ahref]
            
           </div>
          </td>
         </tr>
        </table>
       </td>
      </tr>
     </table>
     <table cellspacing="0" class="navbox" style=";;">
      <tr>
       <td style="padding:2px;">
        <table cellspacing="0" class="nowraplinks collapsible uncollapsed" style="width:100%;background:transparent;color:inherit;;">
         <tr>
          <th class="navbox-title" colspan="2" style=";">
           <div style="float:left; width:6em;text-align:left;">
            <div class="noprint plainlinks navbar" style="background:none; padding:0; font-weight:normal;;;border:none;; font-size:xx-small;">
             [ahref]
             
             <span style="font-size:80%;">
              •
             </span>
             [linkx]
             
             <span style="font-size:80%;">
              •
             </span>
             [linkx]
             
            </div>
           </div>
           <span class="" style="font-size:110%;">
            [linkx]
            
            및
            [linkx]
            
           </span>
          </th>
         </tr>
         <tr style="height:2px;">
          <td>
          </td>
         </tr>
         <tr>
          <td class="navbox-group" style=";;">
           [linkx]
           
          </td>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
           <div style="padding:0em 0.25em">
           </div>
           <table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               보급 상자
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               <a href="/wiki/Mann_Co._Supply_Crate/ko" title="Mann Co. Supply Crate/ko">
                Mann Co. 보급 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Scorched_Crate/ko" title="Scorched Crate/ko">
                그슬린 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Fall_Crate/ko" title="Fall Crate/ko">
                가을 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Naughty_Winter_Crate_2012/ko" title="Naughty Winter Crate 2012/ko">
                2012년형 나쁜 겨울 보급 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Red_Summer_2013_Cooler/ko" title="Red Summer 2013 Cooler/ko">
                적색 2013년 여름 냉각기
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Aqua_Summer_2013_Cooler/ko" title="Aqua Summer 2013 Cooler/ko">
                청록색 2013년 여름 냉각기
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·<li>[area1][mkey1]</li><li>[area1][mkey1]</li>[linkx]
               </span>
               <a class="mw-redirect" href="/wiki/Brown_Summer_2013_Cooler/ko" title="Brown Summer 2013 Cooler/ko">
                갈색 2013년 여름 냉각기
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Spooky_Crate/ko" title="Spooky Crate/ko">
                으스스한 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Nice_Winter_Crate_2013/ko" title="Nice Winter Crate 2013/ko">
                2013년형 착한 겨울 보급 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Unlocked_Creepy_Demoman_Crate/ko" title="Unlocked Creepy Demoman Crate/ko">
                열린 오싹한 데모맨 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Unlocked_Creepy_Spy_Crate/ko" title="Unlocked Creepy Spy Crate/ko">
                열린 오싹한 스파이 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Powerhouse_Weapons_Case/ko" title="Powerhouse Weapons Case/ko">
                Powerhouse 무기 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Gargoyle_Case/ko" title="Gargoyle Case/ko">
                가고일 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Pyroland_Weapons_Case/ko" title="Pyroland Weapons Case/ko">
                파이로 동산 무기 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Unlocked_Cosmetic_Crate_Engineer/ko" title="Unlocked Cosmetic Crate Engineer/ko">
                잠금 해제된 엔지니어 장식 아이템 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Unlocked_Cosmetic_Crate_Sniper/ko" title="Unlocked Cosmetic Crate Sniper/ko">
                잠금 해제된 스나이퍼 장식 아이템 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Unlocked_Cosmetic_Crate_Spy/ko" title="Unlocked Cosmetic Crate Spy/ko">
                잠금 해제된 스파이 장식 아이템 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Abominable_Cosmetic_Case/ko" title="Abominable Cosmetic Case/ko">
                Abominable Cosmetic Case
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Unleash_the_Beast_Cosmetic_Case/ko" title="Unleash the Beast Cosmetic Case/ko">
                Unleash the Beast Cosmetic Case
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
              </div>
             </td>
            </tr>
            <tr style="height:2px">
             <td>
              <li>[pkeyx]</li><li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             </td>
            </tr>
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               열쇠
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               <a href="/wiki/Mann_Co._Supply_Crate_Key/ko" title="Mann Co. Supply Crate Key/ko">
                Mann Co. 보급 상자 열쇠
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
                <li>[area1][mkey1]</li><li>[pkeyx]</li><li>[linkx]</li>[ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Naughty_Winter_Crate_Key_2012/ko" title="Naughty Winter Crate Key 2012/ko">
                2012년형 나쁜 겨울 보급 상자 열쇠
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Robo_Community_Crate_Key/ko" title="Robo Community Crate Key/ko">
                로봇 커뮤니티 상자 열쇠
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Naughty_Winter_Crate_Key_2013/ko" title="Naughty Winter Crate Key 2013/ko">
                2013년형 나쁜 겨울 보급 상자 열쇠
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Nice_Winter_Crate_Key_2014/ko" title="Nice Winter Crate Key 2014/ko">
                2014년형 착한 겨울 상자 열쇠
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="mw-redirect" href="/wiki/Naughty_Winter_Crate_Key_2014/ko" title="Naughty Winter Crate Key 2014/ko">
                2014년형 나쁜 겨울 상자 열쇠
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a class="new" href="/w/index.php?title=Scream_Fortress_X_War_Paint_Key/ko&amp;action=edit&amp;redlink=1" title="Scream Fortress X War Paint Key/ko (page does not exist)">
                Scream Fortress X War Paint Key
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
              </div>
             </td>
            </tr>
            <tr style="height:2px">
             <td>
             </td>
            </tr>
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               장식용 아이템
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Decal_Tool/ko" title="Decal Tool/ko">
                데칼 도구
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Strange_Filter/ko" title="Strange Filter/ko">
                이상한 여과기
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <strong class="selflink">
                이상한 수치 이전 도구
               </strong>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
              </div>
             </td>
            </tr>
            <tr style="height:2px">
             <td>
             </td>
            </tr>
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               기타
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               [area1][mkey1][ahref][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][pkeyx][area1][keywordx][linkx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][pkeyx]
              </div>
             </td>
            </tr>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr style="height:2px">
          <td>
          </td>
         </tr>
         <tr>
          <td class="navbox-group" style=";;">
           [linkx]
           
          </td>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
           <div style="padding:0em 0.25em">
           </div>
           <table cellspacing="0" class="nowraplinks navbox-subgroup" style="width:100%;;;;">
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               소비성
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Noise_Maker/ko" title="Noise Maker/ko">
                소음 발생기
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
                <li>[area1][keywordx]</li>[linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
              </div>
             </td>
            </tr>
            <tr style="height:2px">
             <td>
             </td>
            </tr>
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              선물[area1][keywordx][linkx][linkx][area1][mkey1][pkeyx][ahref][pkeyx][ahref][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][mkey1][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][area1][keywordx][linkx][area1][keywordx][area1][mkey1][pkeyx]
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Pallet_of_Crates/ko" title="Pallet of Crates/ko">
                운반대 한가득 상자
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Pile_of_Robo_Community_Crate_Key_Gifts/ko" title="Pile of Robo Community Crate Key Gifts/ko">
                로봇 커뮤니티 상자 열쇠 더미
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/A_Random_Summer_Cooler_Key_Gift/ko" title="A Random Summer Cooler Key Gift/ko">
                여름 냉각기 열쇠 무작위 선물
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Smissmas_2015_Festive_Gift/ko" title="Smissmas 2015 Festive Gift/ko">
                2015년도 스미스마스 축제 선물
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Gift-Stuffed_Stocking_2017/ko" title="Gift-Stuffed Stocking 2017/ko">
                Gift-Stuffed Stocking 2017
               </a>
              </div>
             </td>
            </tr>
            <tr style="height:2px">
             <td>
             </td>
            </tr>
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               도발
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               <li>[area1][keywordx]</li><li>[area1][mkey1]</li><li>[pkeyx]</li>[area1][mkey1]
              </div>
             </td>
            </tr>
            <tr style="height:2px">
             <td>
             </td>
            </tr>
            <tr>
             <td class="navbox-group" style=";padding-left:0em;padding-right:0em;background: #FFF2B3;;">
              <div style="padding:0em 0.75em;">
               기타
              </div>
             </td>
             <td class="navbox-list navbox-off" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;">
              <div style="padding:0em 0.25em">
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               <a href="/wiki/Pile_Of_Ash/ko" title="Pile Of Ash/ko">
                잿더미
               </a>
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               (
               [ahref]
               
               ,
               [ahref]
               
               )
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [linkx]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
               <span style="font-weight:bold;">
                ·
               </span>
               [ahref]
               
              </div>
             </td>
            </tr>
           </table>
           <div>
           </div>
          </td>
         </tr>
        </table>
       </td>
      </tr>
     </table>
    </div>
    <div class="printfooter">
     Retrieved from "
     <a dir="ltr" href="/w/index.php?title=Strange_Count_Transfer_Tool/ko&amp;oldid=2120944">
      https://wiki.teamfortress.com/w/index.php?title=Strange_Count_Transfer_Tool/ko&amp;oldid=2120944
     </a>
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      Hidden categories:
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <ul>
      <li id="pt-createaccount">
       <a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Strange+Count+Transfer+Tool%2Fko" title="You are encouraged to create an account and log in; however, it is not mandatory">
        Create account
       </a>
      </li>
      <li id="pt-login">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <div class="menu">
       <ul>
       </ul>
      </div>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       <li class="selected" id="ca-view">
        <span>
         [linkx]
         
        </span>
       </li>
       <li id="ca-viewsource">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <div class="menu">
       <ul>
       </ul>
      </div>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-Navigation-label" class="portal" id="p-Navigation" role="navigation">
     <h3 id="p-Navigation-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        [linkx]
        
       </li>
       <li id="n-about">
        [linkx]
        
       </li>
       <li id="n-recentchanges">
        [linkx]
        
       </li>
       <li id="n-randompage">
        [linkx]
        
       </li>
       <li id="n-Help">
        <a href="/wiki/Help:Contents">
         Help
        </a>
       </li>
       <li id="n-FAQ">
        [linkx]
        
       </li>
       <li id="n-ircchannel">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        [linkx]
        
       </li>
       <li id="t-specialpages">
        <a accesskey="q" href="/wiki/Special:SpecialPages" title="A list of all special pages [q]">
         Special pages
        </a>
       </li>
       <li id="t-print">
        <a accesskey="p" href="/w/index.php?title=Strange_Count_Transfer_Tool/ko&amp;printable=yes" rel="alternate" title="Printable version of this page [p]">
         Printable version
        </a>
       </li>
       <li id="t-permalink">
        [linkx]
        
       </li>
       <li id="t-info">
        [ahref]
        
       </li>
       <li id="t-cite">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Languages-label" class="portal" id="p-Languages" role="navigation">
     <h3 id="p-Languages-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-English">
        [ahref]
        
       </li>
       <li id="n-.C4.8Cesky">
        [linkx]
        
       </li>
       <li id="n-Dansk">
        <a href="/wiki/Strange_Count_Transfer_Tool/da">
         Dansk
        </a>
       </li>
       <li id="n-Deutsch">
        <a href="/wiki/Strange_Count_Transfer_Tool/de">
         Deutsch
        </a>
       </li>
       <li id="n-Espa.C3.B1ol">
        <a href="/wiki/Strange_Count_Transfer_Tool/es">
         Español
        </a>
       </li>
       <li id="n-Suomi">
        [linkx]
        
       </li>
       <li id="n-Fran.C3.A7ais">
        [linkx]
        
       </li>
       <li id="n-.E6.97.A5.E6.9C.AC.E8.AA.9E">
        <a href="/wiki/Strange_Count_Transfer_Tool/ja">
         日本語<li>[area1][mkey1]</li>[linkx]<li>[area1][keywordx]</li>
        </a>
       </li>
       <li id="n-.ED.95.9C.EA.B5.AD.EC.96.B4">
        <a href="/wiki/Strange_Count_Transfer_Tool/ko">
         한국어
        </a>
       </li>
       <li id="n-Polski">
        [linkx]
        
       </li>
       <li id="n-Portugu.C3.AAs-do-Brasil">
        [linkx]
        
       </li>
       <li id="n-.D0.A0.D1.83.D1.81.D1.81.D0.BA.D0.B8.D0.B9">
        [ahref]
        
       </li>
       <li id="n-T.C3.BCrk.C3.A7e">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Team_Fortress_2-label" class="portal" id="p-Team_Fortress_2" role="navigation">
     <h3 id="p-Team_Fortress_2-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="n-Download">
        [ahref]
        
       </li>
       <li id="n-Blog">
        [ahref]
        
       </li>
       <li id="n-Updates">
        [linkx]
        
       </li>
       <li id="n-communityhub">
        [ahref]
        
       </li>
       <li id="n-steamworkshop">
        <a href="/workshop/" rel="nofollow">
         Steam Workshop
        </a>
       </li>
       <li id="n-Forums">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Team_Fortress_Classic-label" class="portal" id="p-Team_Fortress_Classic" role="navigation">
     <h3 id="p-Team_Fortress_Classic-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="n-tfcmainpage">
        [linkx]
        
       </li>
       <li id="n-Purchase">
        [linkx]
        
       </li>
       <li id="n-Updates">
        [ahref]
        
       </li>
       <li id="n-communityhub">
        <a href="/app/20" rel="nofollow">
         Community Hub
        </a>
       </li>
       <li id="n-Forums">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Valve_Wiki_Network-label" class="portal" id="p-Valve_Wiki_Network" role="navigation">
     <h3 id="p-Valve_Wiki_Network-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref]<li>[ahref]</li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     This page was last modified on 23 June 2016, at 03:28.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     <a href="/wiki/Team_Fortress_Wiki:Terms_of_Use" title="Team Fortress Wiki:Terms of Use">
      Terms of Use
     </a>
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-poweredbyico">
     [linkx]
      [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx]
     
    </li>
   </ul>
   <div style="clear:both">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0445
  </b>
 </body>
</html>
|<---