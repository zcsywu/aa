--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://ogp.me/ns/fb#" xmlns:og="http://ogp.me/ns#">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="a4e4dea560c66d9311da7235d298592b28d3d4bf" name="naver-site-verification">
   [linkx]<li>[ahref]</li><li>[pkeyx]</li><li>[pkeyx]</li>[ahref]
  </meta>
  <meta content="+jr0qAfyxHLgXUaH4JSgbTKYe2I57knC3iKHAJ2yI7g=" name="verify-v1"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="off" name="autocomplete">
   <meta content="no" http-equiv="imagetoolbar"/>
   <meta content="no-cache, no-store, must-revalidate" http-equiv="Cache-Control"/>
   <meta content="Sat, 01, Jan 1970 22:00:00 GMT" http-equiv="Expires"/>
   <meta content="-1" http-equiv="Expires"/>
   <meta content="no-cache" http-equiv="Pragma"/>
   <meta content='CP="CAO DSP CURa ADMa TAIa PSAa OUR LAW STP PHY ONL UNI PUR FIN COM NAV INT DEM STA PRE"' http-equiv="p3p"/>
   <meta content="닥터아파트" name="author"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  </meta>
 </head>
 <body>
  [linkx]
  
  <div id="dr_ui_bar">
   <div class="layout_subBar">
    <p class="Lside">
     <a href="/닥터아파트-340445129793517" target="_blank">
     </a>
     [ahref]
     
     <a href="/channel/UC81psJ9lkoxdgGAhm2MK-aw" target="_blank">
     </a>
    </p>
    <p class="Rside">
     [ahref]
     
     <span class="apd04">
      |
     </span>
     [linkx]
     
     <span class="apd04">
      |
     </span>
     [ahref]
     
    </p>
   </div>
  </div>
  <div id="dr_ui_main">
   <div id="dr_ui_header">
    <div class="layout_subTop">
     <h1>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h1>
     <p class="layout_subTop_ad">
      <iframe frameborder="0" height="50" marginheight="0" marginwidth="0" scrolling="no" src="http://news.drapt.com/index_sub.htm" title="광고영역" width="250">
      </iframe>
     </p>
     <p class="fr">
      <iframe frameborder="0" height="70" marginheight="0" marginwidth="0" scrolling="no" src="http://www.drapt.com/_templates/advFrame/topSubRight.htm?SESS_MENUNO=121&amp;page_name=main&amp;menu_key=&amp;mcode=" title="광고영역" width="320">
      </iframe>
     </p>
     <p class="cb">
     </p>
    </div>
    <p class="cb">
    </p>
    <div class="layout_bigMeu">
     <ul class="lBigMeu">
      <li>
       <a class="topmeu04" href="/e_sale/" onfocus="blur();" target="_top">
        분양권
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="topmeu15" href="/academy/" onfocus="blur();" target="_top">
        투자스쿨
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="topmeu07" href="/theme/whitepaper/" onfocus="blur();" target="_top">
        생활백서
       </a>
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       <a class="topmeu08" href="/comm/" onfocus="blur();" target="_top">
        커뮤니티
       </a>
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       <a class="topmeu12" href=";" onfocus="blur();">
        원클릭아파트
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <p class="layout_sch_btnQ">
      [linkx]
      
     </p>
    </div>
    <div class="layout_schBar">
     <div class="layout_sch_smeu">
      [linkx]
      
      <span>
       |
      </span>
      <a href="/maemul/index.htm?page_name=self_list&amp;menu_key=100" target="_top">
       부동산계산기
      </a>
      <span>
       |
      </span>
      [linkx]
      
      <span>
       |
      </span>
      [linkx]
      
      <span>
       |
      </span>
      <a href="/external/drapt/getList.do" target="_top">
       인테리어
      </a>
      <span>
       |
      </span>
      <a href="/theme/theme_special/" target="_top">
       입주닥터
      </a>
      <span>
       |
      </span>
      [linkx]
      
      <span>
       |
      </span>
      <a href="/" style="font-weight: 700;color:#ff7635" target="_blank">
       온라인 투자스쿨
      </a>
      <span>
       |
      </span>
      [ahref]
      
      <span>
       |
      </span>
      [ahref]
      
     </div>
    </div>
   </div>
   <div id="dr_ui_body">
    <div id="dr_ui_menu">
     <div id="esale_helper" style="display:none">
      <div class="esale_helper">
       <div class="panel_btn">
       </div>
       <div class="helper_box">
        <div class="tit">
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <p>
          [linkx]
          
         </p>
        </div>
        <div class="content">
         <div class="quesBox">
          <p>
          </p>
          <p class="yesno">
           [ahref]
           
           <a href=")" target="_self">
           </a>
          </p>
         </div>
         <div id="res1_no" style="display:none">
          [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]<li>[area1][mkey1]</li>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="esale_helper2" style="display:none">
      <div class="esale_helper">
       <div class="panel_btn">
       </div>
       <div class="helper_box">
        <div class="tit">
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <p>
          [ahref]
          
         </p>
        </div>
        <div class="content">
         <div class="quesBox">
          <p>
          </p>
          <p class="yesno">
           [ahref]
           
           <a href=")">
           </a>
          </p>
         </div>
         <div id="res2_no" style="display:none">
          <div class="resultBox">
           <p>
           </p>
           <p class="result_loca1">
           </p>
           <p class="btn">
            <a href="/e_sale/index.htm?page_name=saleguideN&amp;menu_key=47&amp;mkey=&amp;skey=2" target="_blank">
            </a>
           </p>
          </div>
          <div class="nextBtn">
           <a href=")">
           </a>
           [linkx]
           
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="esale_helper3" style="display:none">
      <div class="esale_helper">
       <div class="panel_btn">
       </div>
       <div class="helper_box">
        <div class="tit">
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <p>
          <a href=")">
          </a>
         </p>
        </div>
        <div class="content">
         <div class="quesBox">
          <p>
          </p>
          <p class="yesno">
           [ahref]
           
           <a href=")">
           </a>
          </p>
         </div>
         <div id="res3_no" style="display:none">
          <div class="resultBox">
           <p>
           </p>
           <p class="result_loca2">
           </p>
           <p class="btn">
            [ahref]
            
           </p>
          </div>
          <div class="nextBtn">
           <a href=")">
           </a>
           [linkx]
           
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="esale_helper4" style="display:none">
      <div class="esale_helper">
       <div class="panel_btn">
       </div>
       <div class="helper_box">
        <div class="tit">
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <p>
          [ahref]
          
         </p>
        </div>
        <div class="content">
         <div class="quesBox">
          <p>
          </p>
          <p class="btn2">
           [ahref]
           
          </p>
         </div>
         <div class="nextBtn" style="padding-top:15px; border-top:1px solid #dfdfdf;">
          <a href=")">
          </a>
          <a href=")">
          </a>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="transpar" id="transpar" style="display:none;">
      <iframe frameborder="no" style="border:0px;height:1995px;width:100%; filter:Alpha(Opacity=0);position:absolute;z-index:-99;" title="청약헬퍼영역">
      </iframe>
     </div>
     <div class="layout_Lmeu">
      <h2 class="mt06">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <p class="mt10">
       <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
       </a>
      </p>
      <p class="mt05">
       <a href="/e_sale/index.htm?page_name=chungPlanFirst">
       </a>
      </p>
      <p class="topLine">
      </p>
      <dl>
       <dt class="commbtn">
        분양정보
        <a href=")" style="background:none; display:inline; widht:57px; height:23px;">
        </a>
       </dt>
       <dd>
        [ahref]
        
        <span class="fs11set" style="color:#d7d7d7; padding:0 6px;">
         |
        </span>
        <a class="fs11set" href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=9">
         분양중
        </a>
        <span class="fs11set" style="color:#d7d7d7; padding:0 6px;">
        </span>
       </dd>
       <dd>
        <a href="/e_sale/index.htm?page_name=cal&amp;menu_key=0">
         분양캘린더
        </a>
       </dd>
       <dd>
        <a href="/e_sale/index.htm?page_name=bestSaleApt&amp;menu_key=54">
         베스트 분양단지
        </a>
       </dd>
      </dl>
      <dl>
       <dt>
        분양소식
       </dt>
       <dd>
        [ahref]
        
       </dd>
       <dd>
        <a href="/e_sale/index.htm?page_name=cont_list&amp;menu_key=5">
         분양집중정보
        </a>
       </dd>
       <dd>
        <a href="/e_sale/index.htm?page_name=cont_list&amp;menu_key=6">
         리포트 &amp; 동향
        </a>
       </dd>
      </dl>
      <p class="lmeu_dot commbtn">
       [linkx]
       
       [ahref]
        [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][linkx][ahref][ahref][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
       
      </p>
      <dl>
       <dt>
        [linkx]
        
       </dt>
      </dl>
      <p class="mt05">
       [ahref]
       
      </p>
      <p class="mt05">
       [ahref]
       
      </p>
      <p class="mt03">
       [ahref]
       
      </p>
      <p class="mt12">
       [linkx]
       
      </p>
      <p class="mt10 ml-5">
       [linkx]
       
      </p>
      <p class="ml-5">
       [ahref]
       
      </p>
      <p class="ml-5">
       [ahref]
       
      </p>
     </div>
     <div id="div_quick" style="position:absolute; display:none; left:166px; top:169px; z-index:10">
      <iframe frameborder="0" height="384" hspace="0" marginheight="0" marginwidth="0" name="quick_search" scrolling="no" src="/e_sale/frame/quick_search.htm" title="퀵서치영역" vspace="0" width="610">
      </iframe>
      <iframe height="0" name="click_frc" title="액션영역" width="0">
      </iframe>
     </div>
    </div>
    <div id="dr_ui_contentbg">
     <div id="dr_ui_content">
      <div id="dr_long_ad">
      </div>
      <div id="sise_map_pop" style="display:none;">
       <p class="sise_map_rtop">
       </p>
       <p class="tac">
        <iframe frameborder="0" id="sise_map_id" marginheight="0" marginwidth="0" name="sise_map_id" scrolling="no" style=" width:610px; height:420px;" title="시세지도영역">
        </iframe>
       </p>
       <p class="sise_map_rbt tac mt05">
        [ahref]
        
       </p>
      </div>
      <body oncontextmenu="javascript:alert('해당 컨텐츠의 무단도용 방지를 위하여\n\n마우스 오른쪽 버튼을 사용할 수가 없습니다.');return false" ondragstart="return false" onselectstart="return false">
       <h4 style="background:url(/imgs/sTitle/tl_e_sale047.gif) no-repeat; text-indent: -1000em; height: 40px; width: 100%;">
        분양정보
       </h4>
       <p class="nav">
        [ahref]
        
        >
        <a href="/index.htm">
         분양
        </a>
        > 분양정보
       </p>
       <p class="cb">
       </p>
       <p class="mt20">
       </p>
       <ul class="saletab_2010">
        <li class="selected">
         [area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][pkeyx][ahref][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </li>
        <li class="selelineleft">
         <a href="9">
          분양중
         </a>
        </li>
        <li>
         <[area1][keywordx]>
         </[area1][keywordx]>
        </li>
       </ul>
       <div class="subbox_2010">
        <div class="subbox_area">
         <label>
          <select onchange="groupSelect('submenu2',this.value,'')" style="width:105px;">
           <option selected="" value="전국">
            시/도 선택
           </option>
           <option value="서울특별시">
            서울특별시
           </option>
           <option value="경기도">
            경기도
           </option>
           <option value="인천광역시">
            인천광역시
           </option>
           <option value="부산광역시">
            부산광역시
           </option>
           <option value="대구광역시">
            대구광역시
           </option>
           <option value="광주광역시">
            광주광역시
           </option>
           <option value="대전광역시">
            대전광역시
           </option>
           <option value="울산광역시">
            울산광역시
           </option>
           <option value="강원도">
            강원도
           </option>
           <option value="경상남도">
            경상남도
           </option>
           <option value="경상북도">
            경상북도
           </option>
           <option value="전라남도">
            전라남도
           </option>
           <option value="전라북도">
            전라북도
           </option>
           <option value="세종특별자치시">
            세종특별자치시
           </option>
           <option value="충청남도">
            충청남도
           </option>
           <option value="충청북도">
            충청북도
           </option>
           <option value="제주도">
            제주도
           </option>
          </select>
         </label>
         <label>
          <select onchange="groupSelect('submenu2','전국',this.value)" style="width:105px;">
           <option value="">
            구/시/군 선택
           </option>
          </select>
         </label>
        </div>
        <div class="subbox_section">
         <span style="font-weight:bold;">
          [ahref]
          
         </span>
         <font color="#999999">
          |
         </font>
         <span>
          [ahref]
          
         </span>
        </div>
       </div>
       <div class="map_2014">
        <div class="map_2014_list">
         <div class="map_2014_list1">
          <ul class="area_list">
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%BC%AD%BF%EF%C6%AF%BA%B0%BD%C3">
             서울특별시
            </a>
            <span>
             (55)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%B0%E6%B1%E2%B5%B5">
             경기도
            </a>
            <span>
             (110)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%C0%CE%C3%B5%B1%A4%BF%AA%BD%C3">
             인천광역시
            </a>
            <span>
             (24)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%BA%CE%BB%EA%B1%A4%BF%AA%BD%C3">
             부산광역시
            </a>
            <span>
             (28)
            </span>
           </li>
           <li>
            [ahref]
            
            <span>
             (23)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%B1%A4%C1%D6%B1%A4%BF%AA%BD%C3">
             광주광역시
            </a>
            <span>
             (15)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%B4%EB%C0%FC%B1%A4%BF%AA%BD%C3">
             대전광역시
            </a>
            <span>
             (9)
            </span>
           </li>
           <li>
            [linkx]
            
            <span>
             (7)
            </span>
           </li>
           <li>
            [linkx]
            
            <span>
             (7)
            </span>
           </li>
           <li>
            [linkx]
            
            <span>
             (15)
            </span>
           </li>
           <li>
            [linkx]
            
            <span>
             (2)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%C0%FC%B6%F3%B3%B2%B5%B5">
             전라남도
            </a>
            <span>
             (11)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%C0%FC%B6%F3%BA%CF%B5%B5">
             전라북도
            </a>
            <span>
             (8)
            </span>
           </li>
           <li>
            <a href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=%BC%BC%C1%BE%C6%AF%BA%B0%C0%DA%C4%A1%BD%C3">
             세종특별자치시
            </a>
            <span>
             (2)
            </span>
           </li>
           <li>
            [linkx]
            
            <span>
             (23)
            </span>
           </li>
           <li>
            [linkx]
            
            <span>
             (6)
            </span>
           </li>
           <li>
            [ahref]
            
            <span>
             (2)
            </span>
           </li>
          </ul>
         </div>
        </div>
        <div class="map_2014_body">
         <iframe frameborder="0" height="330" name="mapframe" scrolling="no" src="/map/esale_map.htm?page_name=saleinfo&amp;menu_key=8&amp;si=전국" width="491">
         </iframe>
        </div>
       </div>
       <br/>
       <table cellpadding="0" class="siselist_2010" width="100%">
        <colgroup>
         <col width="15%"/>
         <col width=""/>
         <col width="10%"/>
         <col width="10%"/>
         <col width="12%"/>
         <col width="10%"/>
         <col width="10%"/>
         <col width="11%"/>
        </colgroup>
        <tr>
         <th>
          위치
         </th>
         <th>
          사업명
         </th>
         <th>
          공급면적
          <br>
           (㎡)
          </br>
         </th>
         <th>
          전용면적
          <br/>
          (㎡)
         </th>
         <th>
          총가구수
          <br/>
          (일반분양)
         </th>
         <th>
          분양시기
         </th>
         <th>
          사업구분
         </th>
         <th>
          시공사
          <br/>
          (문의)
         </th>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="3">
          고양시 탄현동 173-4
         </td>
         <td class="txt_name" rowspan="3">
          [linkx]
          
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          55
         </td>
         <td class="txt_area">
          24
         </td>
         <td class="txt_area">
          (78)
         </td>
         <td class="txt_date" rowspan="3">
          2017-06
         </td>
         <td class="txt_kind" rowspan="3">
          오피스텔
         </td>
         <td class="txt_builder" rowspan="3">
          CAMUS E&amp;C
          <br/>
          <em>
           (1661-7850)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          82
         </td>
         <td class="txt_area">
          36
         </td>
         <td class="txt_area">
          (26)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          104 (104)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="4">
          동대문구 전농동 620-4
          [linkx]
          
         </td>
         <td class="txt_name" rowspan="4">
          <a class="link_busi" href=";">
           청량리역 리버리치 2차
          </a>
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          34A
         </td>
         <td class="txt_area">
          19
         </td>
         <td class="txt_area">
          (85)
         </td>
         <td class="txt_date" rowspan="4">
          2019-05
         </td>
         <td class="txt_kind" rowspan="4">
          오피스텔
         </td>
         <td class="txt_builder" rowspan="4">
          창보종합건설
          <br/>
          <em>
           (1811-7731)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          71B
         </td>
         <td class="txt_area">
          41
         </td>
         <td class="txt_area">
          (29)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          71C
         </td>
         <td class="txt_area">
          41
         </td>
         <td class="txt_area">
          (9)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          123 (123)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="10">
          동래구 낙민동 53-7번지
          [ahref]
          
         </td>
         <td class="txt_name" rowspan="10">
          <a class="link_busi" href=";">
           부산 동래(행복주택)
          </a>
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          31A
         </td>
         <td class="txt_area">
          19
         </td>
         <td class="txt_area">
          (136)
         </td>
         <td class="txt_date" rowspan="10">
          2019-06
         </td>
         <td class="txt_kind" rowspan="10">
          임대
         </td>
         <td class="txt_builder" rowspan="10">
          부산도시공사
          <br/>
          수인종합건설
          <br/>
          <em>
           (051-810-1256)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          31B
         </td>
         <td class="txt_area">
          19
         </td>
         <td class="txt_area">
          (62)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          40
         </td>
         <td class="txt_area">
          25
         </td>
         <td class="txt_area">
          (16)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          46A
         </td>
         <td class="txt_area">
          29
         </td>
         <td class="txt_area">
          (84)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          46B
         </td>
         <td class="txt_area">
          29
         </td>
         <td class="txt_area">
          (15)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          51
         </td>
         <td class="txt_area">
          32
         </td>
         <td class="txt_area">
          (12)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          51A2
         </td>
         <td class="txt_area">
          32
         </td>
         <td class="txt_area">
          (7)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          57
         </td>
         <td class="txt_area">
          36
         </td>
         <td class="txt_area">
          (46)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          58C
         </td>
         <td class="txt_area">
          36
         </td>
         <td class="txt_area">
          (17)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          395 (395)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="3">
          군산시 내흥동 492-11(군산신역세권 A2블록)
          <a href=")">
          </a>
         </td>
         <td class="txt_name" rowspan="3">
          <a class="link_busi" href=";">
           군산신역세권 A2블록(국민임대)
          </a>
          <br>
           <li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </br>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          50
         </td>
         <td class="txt_area">
          33
         </td>
         <td class="txt_area">
          (300)
         </td>
         <td class="txt_date" rowspan="3">
          2019-06
         </td>
         <td class="txt_kind" rowspan="3">
          임대
         </td>
         <td class="txt_builder" rowspan="3">
          LH
          <br/>
          일성건설
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          70
         </td>
         <td class="txt_area">
          46
         </td>
         <td class="txt_area">
          (120)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          420 (420)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="3">
          계룡시 두마면 농소리 969(계룡대실지구 4블록)
          [linkx]
          
         </td>
         <td class="txt_name" rowspan="3">
          [linkx]<li>[ahref]</li><li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
         </td>
         <td class="txt_area">
          33A
         </td>
         <td class="txt_area">
          22
         </td>
         <td class="txt_area">
          (102)
         </td>
         <td class="txt_date" rowspan="3">
          2019-06
         </td>
         <td class="txt_kind" rowspan="3">
          임대
         </td>
         <td class="txt_builder" rowspan="3">
          LH
          <br/>
          성지건설주식회사
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          33B
         </td>
         <td class="txt_area">
          22
         </td>
         <td class="txt_area">
          (12)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          114 (114)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="6">
          계룡시 두마면 농소리 969(계룡대실지구 4블록)
          [ahref]
          
         </td>
         <td class="txt_name" rowspan="6">
          <a class="link_busi" href=";">
           계룡대실 4블록(국민임대)
          </a>
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          44A
         </td>
         <td class="txt_area">
          29
         </td>
         <td class="txt_area">
          (220)
         </td>
         <td class="txt_date" rowspan="6">
          2019-06
         </td>
         <td class="txt_kind" rowspan="6">
          임대
         </td>
         <td class="txt_builder" rowspan="6">
          LH
          <br/>
          성지건설주식회사
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          44B
         </td>
         <td class="txt_area">
          29
         </td>
         <td class="txt_area">
          (8)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          56A
         </td>
         <td class="txt_area">
          37
         </td>
         <td class="txt_area">
          (332)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          56B
         </td>
         <td class="txt_area">
          37
         </td>
         <td class="txt_area">
          (24)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          68A
         </td>
         <td class="txt_area">
          46
         </td>
         <td class="txt_area">
          (144)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          728 (728)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="5">
          북구 화봉동 송정지구 A2블록
          <a href=")">
          </a>
         </td>
         <td class="txt_name" rowspan="5">
          [ahref]
          
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          39A
         </td>
         <td class="txt_area">
          26
         </td>
         <td class="txt_area">
          (268)
         </td>
         <td class="txt_date" rowspan="5">
          2019-06
         </td>
         <td class="txt_kind" rowspan="5">
          임대
         </td>
         <td class="txt_builder" rowspan="5">
          LH
          <br/>
          삼환기업
          <br/>
          지원건설
          <br/>
          흥화
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          39B
         </td>
         <td class="txt_area">
          26
         </td>
         <td class="txt_area">
          (72)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          54A
         </td>
         <td class="txt_area">
          37
         </td>
         <td class="txt_area">
          (390)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          68A
         </td>
         <td class="txt_area">
          46
         </td>
         <td class="txt_area">
          (216)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          946 (946)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="5">
          고흥군 고흥읍 고흥남계지구 1블록
          <a href=")">
          </a>
         </td>
         <td class="txt_name" rowspan="5">
          <a class="link_busi" href=";">
           고흥남계(국민임대)
          </a>
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          40A
         </td>
         <td class="txt_area">
          27
         </td>
         <td class="txt_area">
          (88)
         </td>
         <td class="txt_date" rowspan="5">
          2019-06
         </td>
         <td class="txt_kind" rowspan="5">
          임대
         </td>
         <td class="txt_builder" rowspan="5">
          LH
          <br/>
          경일건설
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          40B
         </td>
         <td class="txt_area">
          27
         </td>
         <td class="txt_area">
          (24)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          55
         </td>
         <td class="txt_area">
          37
         </td>
         <td class="txt_area">
          (130)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          68
         </td>
         <td class="txt_area">
          46
         </td>
         <td class="txt_area">
          (120)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          362 (362)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="4">
          천안시 서북구 두정동 399-1번지
          [linkx]
          
         </td>
         <td class="txt_name" rowspan="4">
          [ahref]
          
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (390)[ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][area1][mkey1][linkx][ahref][area1][mkey1][pkeyx][pkeyx][area1][keywordx]
         </td>
         <td class="txt_date" rowspan="4">
          2019-06
         </td>
         <td class="txt_kind" rowspan="4">
          임대
         </td>
         <td class="txt_builder" rowspan="4">
          범양건영
          <br/>
          <em>
           (041-903-2000)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          103
         </td>
         <td class="txt_area">
          74
         </td>
         <td class="txt_area">
          (334)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          116
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (80)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          804 (804)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="4">
          과천시 별양동 1-22
          <a href=")">
          </a>
         </td>
         <td class="txt_name" rowspan="4">
          [linkx]
          
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          54
         </td>
         <td class="txt_area">
          25
         </td>
         <td class="txt_area">
          (350)
         </td>
         <td class="txt_date" rowspan="4">
          2019-06
         </td>
         <td class="txt_kind" rowspan="4">
          오피스텔
         </td>
         <td class="txt_builder" rowspan="4">
          대림산업
          <br/>
          <em>
           (1600-7550)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          122
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (74)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          169
         </td>
         <td class="txt_area">
          82
         </td>
         <td class="txt_area">
          (125)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          549 (549)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="4">
          춘천시 우두동 우두지구 B3, B4블록
          <a href=")">
          </a>
         </td>
         <td class="txt_name" rowspan="4">
          <a class="link_busi" href=";">
           춘천 우두지구 EG the1(1차)
          </a>
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          67A
         </td>
         <td class="txt_area">
          (52)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          아파트
         </td>
         <td class="txt_builder" rowspan="4">
          라인건설
          <br/>
          <em>
           (031-910-0060)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          67B
         </td>
         <td class="txt_area">
          (52)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (812)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          1,310 (916)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="5">
          고양시 덕은동 덕은 A5블럭
         </td>
         <td class="txt_name" rowspan="5">
          [ahref]
          
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84A
         </td>
         <td class="txt_area">
          (239)
         </td>
         <td class="txt_date" rowspan="5">
          2019-07
         </td>
         <td class="txt_kind" rowspan="5">
          아파트
         </td>
         <td class="txt_builder" rowspan="5">
          대방건설
          <br/>
          <em>
           (031-975-7988)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84B
         </td>
         <td class="txt_area">
          (287)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          116A
         </td>
         <td class="txt_area">
          (48)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          116B
         </td>
         <td class="txt_area">
          (48)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          622 (622)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="7">
          과천시 갈현동 과천지식정보타운 S9블록
          [ahref]
          
         </td>
         <td class="txt_name" rowspan="7">
          <a class="link_busi" href=";">
           과천제이드자이(공공분양)
          </a>
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          [area1][mkey1]<li>[area1][mkey1]</li><li>[area1][keywordx]</li>
         </td>
         <td class="txt_area">
          49A
         </td>
         <td class="txt_area">
          (104)
         </td>
         <td class="txt_date" rowspan="7">
          2019-07
         </td>
         <td class="txt_kind" rowspan="7">
          아파트
         </td>
         <td class="txt_builder" rowspan="7">
          GS건설
          <br/>
          LH
          <br/>
          금호건설
          <br/>
          <em>
           (1644-9949)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          49B [ahref][area1][keywordx][ahref][area1][keywordx][ahref][linkx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][linkx][pkeyx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][pkeyx][ahref]
         </td>
         <td class="txt_area">
          (127)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59A
         </td>
         <td class="txt_area">
          (224)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59B
         </td>
         <td class="txt_area">
          (3)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59C
         </td>
         <td class="txt_area">
          (187)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59T
         </td>
         <td class="txt_area">
          (2)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          647 (647)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="4">
          과천시 갈현동 461 (우정병원 정비사업)
         </td>
         <td class="txt_name" rowspan="4">
          [ahref]
          
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59~84
         </td>
         <td class="txt_area">
          (170)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          아파트
         </td>
         <td class="txt_builder" rowspan="4">
          LH
          <br/>
          한양
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          170 (170)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="2">
          과천시 중앙동 38
         </td>
         <td class="txt_name" rowspan="2">
          [ahref]
          
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          (319)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          오피스텔
         </td>
         <td class="txt_builder" rowspan="2">
          현대건설
          <br/>
          <em>
           (1577-7755)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          319 (319)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="4">
          광주시 역동 169-20(광주역세권 도시개발구역 A1블록)
         </td>
         <td class="txt_name" rowspan="4">
          [ahref]
          
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          74~84
         </td>
         <td class="txt_area">
          (1,031)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          아파트
         </td>
         <td class="txt_builder" rowspan="4">
          GS건설
          <br/>
          경기도시공사
          <br/>
          대보건설
          <br/>
          태영건설
          <br/>
          <em>
           (1833-4476)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          74
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          1,031 (1,031)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="4">
          광주시 오포읍 오포지구 C1블록
         </td>
         <td class="txt_name" rowspan="4">
          [linkx]
          
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (48)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          아파트
         </td>
         <td class="txt_builder" rowspan="4">
          (주)포스코건설
          <br/>
          <em>
           (1588-3633)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          76
         </td>
         <td class="txt_area">
          (479)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          [area1][keywordx]<li>[pkeyx]</li><li>[ahref]</li><li>[area1][keywordx]</li>[area1][keywordx]
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (869)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          1,396 (1,396)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="2">
          광주시 장지동 692-63번지(태전2지구 A1블록)
         </td>
         <td class="txt_name" rowspan="2">
          <a class="link_busi" href=";">
           태전2지구 A1블록 경남아너스빌
          </a>
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          <li>[ahref]</li><li>[area1][mkey1]</li><li>[area1][mkey1]</li>[area1][keywordx]<li>[area1][mkey1]</li>
         </td>
         <td class="txt_area">
          (624)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          아파트
         </td>
         <td class="txt_builder" rowspan="2">
          경남기업
          <br/>
          <em>
           (02-2210-0273)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          624 (624)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="2">
          구리시 인창동 533
         </td>
         <td class="txt_name" rowspan="2">
          <a class="link_busi" href=";">
           구리 인창 대원칸타빌
          </a>
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59~84
         </td>
         <td class="txt_area">
          (379)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          아파트
         </td>
         <td class="txt_builder" rowspan="2">
          대원
          <br/>
          <em>
           (02-6677-1000)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          379 (379)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="3">
          남양주시 지금동 지금지구 A4블록
         </td>
         <td class="txt_name" rowspan="3">
          [linkx]
          
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          51
         </td>
         <td class="txt_area">
          (378)
         </td>
         <td class="txt_date" rowspan="3">
          2019-07
         </td>
         <td class="txt_kind" rowspan="3">
          아파트
         </td>
         <td class="txt_builder" rowspan="3">
          경기도시공사
          <br/>
          대우건설
          <br/>
          <em>
           (1588-4101)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (1,236)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          1,614 (1,614)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="2">
          성남시 고등동 고등지구 S3블록
         </td>
         <td class="txt_name" rowspan="2">
          [linkx]
          
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (346)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          아파트
         </td>
         <td class="txt_builder" rowspan="2">
          LH
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          346 (346)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="2">
          성남시 고등동 고등지구 C1,C2,C3블록
         </td>
         <td class="txt_name" rowspan="2">
          [linkx]
          
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (364)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          주상복합
         </td>
         <td class="txt_builder" rowspan="2">
          GS건설
          <br>
           <li>[ahref]</li>[area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx]
          </br>
          <em>
           (1833-4471)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          364 (364)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="2">
          성남시 고등동 고등지구 C1,C2,C3블록
         </td>
         <td class="txt_name" rowspan="2">
          <a class="link_busi" href=";">
           성남고등자이(오)
          </a>
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          22~52
         </td>
         <td class="txt_area">
          (363)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          오피스텔
         </td>
         <td class="txt_builder" rowspan="2">
          GS건설
          <br/>
          <em>
           (1833-4471)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          363 (363)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="4">
          수원시 고등동 207-7 일원(수원고등 주건환경개선사업지구 A1블록)
         </td>
         <td class="txt_name" rowspan="4">
          <a class="link_busi" href=";">
           수원고등지구 A1블록(공공임대)
          </a>
          <br/>
          <a href="/login/index.htm?page_name=login&amp;url_link=/e_sale/index.htm?tmp_page_name=saleinfo%26menu_key=8">
          </a>
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          40
         </td>
         <td class="txt_area">
          (108)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          임대
         </td>
         <td class="txt_builder" rowspan="4">
          GS건설
          <br/>
          금호건설
          <br/>
          대우건설
          <br/>
          태영건설
          <br/>
          <em>
           (1600-1004)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          51
         </td>
         <td class="txt_area">
          (268)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (238)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          614 (614)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="2">
          시흥시 목감동 397번지(목감지구 L1블록)
          <a href=")">
          </a>
         </td>
         <td class="txt_name" rowspan="2">
          <a class="link_busi" href=";">
           목감역 지음재파크뷰
          </a>
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          52~55
         </td>
         <td class="txt_area">
          (154)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          아파트
         </td>
         <td class="txt_builder" rowspan="2">
          도시공감
          <br/>
          <em>
           (02-3666-3663)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          154 (154)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="4">
          시흥시 정왕동 시화MTV 공동 4블록
         </td>
         <td class="txt_name" rowspan="4">
          <a class="link_busi" href=";">
           시흥 시화MTV 금강펜테리움
          </a>
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          74~84
         </td>
         <td class="txt_area">
          (930)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          아파트
         </td>
         <td class="txt_builder" rowspan="4">
          금강주택
          <br/>
          <em>
           (02-565-1314)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          74
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          930 (930)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="4">
          시흥시 정왕동 공동 1블록
         </td>
         <td class="txt_name" rowspan="4">
          [linkx]
          
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59~84
         </td>
         <td class="txt_area">
          (656)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          아파트
         </td>
         <td class="txt_builder" rowspan="4">
          동양건설산업
          <br/>
          <em>
           (02-3420-8000)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          59
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          656 (656)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="2">
          여주시 교동 산9-2
         </td>
         <td class="txt_name" rowspan="2">
          <a class="link_busi" href=";">
           여주 교동 푸르지오
          </a>
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          (568)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          아파트
         </td>
         <td class="txt_builder" rowspan="2">
          대우건설
          <br/>
          <em>
           (1670-1000)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          568 (568)
         </td>
        </tr>
        <tr>
         <td class="txt_loca" rowspan="4">
          이천시 안흥동 266-2번지
          [ahref]
          
         </td>
         <td class="txt_name" rowspan="4">
          <a class="link_busi" href=";">
           이천 롯데캐슬 페라즈 스카이
          </a>
          <br/>
          [ahref]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84~142
         </td>
         <td class="txt_area">
          (299)
         </td>
         <td class="txt_date" rowspan="4">
          2019-07
         </td>
         <td class="txt_kind" rowspan="4">
          주상복합
         </td>
         <td class="txt_builder" rowspan="4">
          롯데건설
          <br/>
          <em>
           (1588-5779)
          </em>
         </td>
        </tr>
        <tr>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84 <li>[pkeyx]</li><li>[linkx]</li>[area1][mkey1][pkeyx]
         </td>
         <td class="txt_area">
          (0)
         </td>
        </tr>
        <tr>
         [linkx][linkx][area1][mkey1]<li>[linkx]</li>
        </tr>
        <tr>
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          299 (299)
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_loca" rowspan="2">
          이천시 안흥동 266-2번지
          [ahref]
          
         </td>
         <td class="txt_name" rowspan="2">
          [ahref]
          
          <br/>
          [linkx]
          
         </td>
         <td class="txt_area">
          <span class="fs11set">
           미정
          </span>
         </td>
         <td class="txt_area">
          84
         </td>
         <td class="txt_area">
          (180)
         </td>
         <td class="txt_date" rowspan="2">
          2019-07
         </td>
         <td class="txt_kind" rowspan="2">
          오피스텔
         </td>
         <td class="txt_builder" rowspan="2">
          롯데건설
          <br/>
          <em>
           (1588-5779)
          </em>
         </td>
        </tr>
        <tr class="back_type">
         <td class="txt_subtotal">
          소계
         </td>
         <td class="txt_area">
          -
         </td>
         <td class="txt_area">
          180 (180)
         </td>
        </tr>
       </table>
       <div class="common_pageing03">
        <div class="common_pageing05">
         [ahref]
         
         [ahref]
         
         [ahref]
         
         [linkx]
         
         <a class="" href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=전국&amp;gu=&amp;dong=&amp;sear_date=&amp;gubun=&amp;sigong=&amp;sub_menu=0&amp;viewline=30&amp;quick_search=&amp;sigong_name=&amp;start=120">
          5
         </a>
         [linkx]
         
         [ahref]
         
         [linkx]
         
         [ahref]
         
         <a class="" href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=전국&amp;gu=&amp;dong=&amp;sear_date=&amp;gubun=&amp;sigong=&amp;sub_menu=0&amp;viewline=30&amp;quick_search=&amp;sigong_name=&amp;start=270">
          10
         </a>
         <a class="btn" href="/e_sale/index.htm?page_name=saleinfo&amp;menu_key=8&amp;si=전국&amp;gu=&amp;dong=&amp;sear_date=&amp;gubun=&amp;sigong=&amp;sub_menu=0&amp;viewline=30&amp;quick_search=&amp;sigong_name=&amp;start=300">
         </a>
         [linkx]
         
        </div>
       </div>
       <p class="notice_2010">
        ※ 조사시점 기준이므로 다소 차이가 있을수 있습니다. 자세한 사항은 해당 연락처를 통해 확인하시기 바랍니다.
       </p>
       <form action="/e_sale/index.htm" method="get" name="myform">
       </form>
       <iframe border="0" frameborder="0" height="0" name="actFrame" src="" title="액션영역" width="0">
       </iframe>
       <div class="n_ad_power2">
        <h2>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h2>
        <p class="ad_desc">
        </p>
        [linkx]
        
        <ul class="naver_type02">
         <li>
          <dl>
           <dt>
            <a href="/adcr?x=7auxeOy6zjmoMrktXN1k3v./w==kCcD5aPU1BXVPJVFm67jqT/vv7J6ePggG3L18v/+2Jve7ABwstWeqhZwtFTotcpHfgxLdAfQl+jzLy+RiGoZ7Zxh91o6AhKNajwhnhBYJpFahuGP42Pxefshjai2E33nGujRuYpd1TGxawSANUtbi6hcfNxhGLpu22LUo/npXOs5fYkY1Hg8CZ8njYGu5KaXAm0UYX4+HZT5n8j5mW29Qj+cm+b/gJTksXR0JZxAgEeK/vRHTClQrw3QA7XiYbL9RFg2UgFYCqBWtzQi4cZ8x+m/xfdL8mW6PZOZRg3e0J4rs7k/esoqbJQ8wQgy8RPTKzNHzBAxphIAK6MgVBat7OGyGnlcbc6GU/IHYQmomHyTa/3TkNrBWwwpnoUenN9Wqoj7oXEEaLbMBJmEVsJ/lzKSQyr8BRjT6ugu8QRRLNd+MJs368oe4IYpgJHMJ+qvi9ZCUB4kgZ9LuSLohMDwspJTrYPPvBIzuB7jsA3z7F4HCqZ23z6CTdd8PJukUdzbR7yzXihjoOSmYPynpvtOGNHvazC/ymTB7vD9f1mBSRATZe4fTaOZzdl6U5OdTEO2mj+K1UrF9nLqm4KL0qHRp4n3oU+S9f8+PyaA2n0LroNLqmP7VRT97PUMY0GXlQTY80rncxbPGyQEwB0X0QaZRTf5ISpADPcPQHsre47DOygacbht19XhajBEfnsVe0SAbRONzNUx8PXHNjGGfOpX1WFZa3dXIBdCx9HTZJHVbEfmxei7RRjdPX2vNcPPxoiDG7T1aY3PuoYKK17t9oZxsUI1eURpQZtWt+pX9wVewi/rmSneT2lW97A+3tBDpR66LRdtfXcsKdB/KSKi6yeetjMp+Qg0UaISAK5o2ma9gQq8PVZmigHBJw9A/+E4TFl05" target="_blank">
             부산 오션 파라곤
            </a>
           </dt>
           <dd class="txt_block">
            [linkx]
            
           </dd>
           <dd class="txt_inline">
            <a class="url02" href="/adcr?x=7auxeOy6zjmoMrktXN1k3v./w==kCcD5aPU1BXVPJVFm67jqT/vv7J6ePggG3L18v/+2Jve7ABwstWeqhZwtFTotcpHfgxLdAfQl+jzLy+RiGoZ7Zxh91o6AhKNajwhnhBYJpFahuGP42Pxefshjai2E33nGujRuYpd1TGxawSANUtbi6hcfNxhGLpu22LUo/npXOs5fYkY1Hg8CZ8njYGu5KaXAm0UYX4+HZT5n8j5mW29Qj+cm+b/gJTksXR0JZxAgEeK/vRHTClQrw3QA7XiYbL9RFg2UgFYCqBWtzQi4cZ8x+m/xfdL8mW6PZOZRg3e0J4rs7k/esoqbJQ8wQgy8RPTKzNHzBAxphIAK6MgVBat7OGyGnlcbc6GU/IHYQmomHyTa/3TkNrBWwwpnoUenN9Wqoj7oXEEaLbMBJmEVsJ/lzKSQyr8BRjT6ugu8QRRLNd+MJs368oe4IYpgJHMJ+qvi9ZCUB4kgZ9LuSLohMDwspJTrYPPvBIzuB7jsA3z7F4HCqZ23z6CTdd8PJukUdzbR7yzXihjoOSmYPynpvtOGNHvazC/ymTB7vD9f1mBSRATZe4fTaOZzdl6U5OdTEO2mj+K1UrF9nLqm4KL0qHRp4n3oU+S9f8+PyaA2n0LroNLqmP7VRT97PUMY0GXlQTY80rncxbPGyQEwB0X0QaZRTf5ISpADPcPQHsre47DOygacbht19XhajBEfnsVe0SAbRONzNUx8PXHNjGGfOpX1WFZa3dXIBdCx9HTZJHVbEfmxei7RRjdPX2vNcPPxoiDG7T1aY3PuoYKK17t9oZxsUI1eURpQZtWt+pX9wVewi/rmSneT2lW97A+3tBDpR66LRdtfXcsKdB/KSKi6yeetjMp+Qg0UaISAK5o2ma9gQq8PVZmigHBJw9A/+E4TFl05" target="_blank">
             oceanparagon.co.kr
            </a>
           </dd>
          </dl>
         </li>
         <li>
          <dl>
           <dt>
            [ahref]
            
           </dt>
           <dd class="txt_block">
            <a class="url02" href="/adcr?x=tJhfXRotSxOAqIl2uIVckf./w==kiqbv7HzszS6b5wkCi+oEtphF9Or12rNxroonzQ7C94m5a0x5m52PxWITtatTn8+le48zktETpAk1YQ8vmzWnE8xf/cYuL8uQDZqkBnEXqA0IENKPc15D3AR+p5vrhxwvTbX62E492zFvwJ4rcmg6HHhy52QOOnHNf9VMimkFJ7wy1kvYijQyB6GJBB0Glgwsf/f/pcI24UNXKvdluNTSt/5+eRuJK3rE8ByMzLVESvtWvpK5+LY9XXkORKZ5Y4vbdLWsQg54b9DJJct4rNS4gRXONGCwG6kz5unnSuQZFo+dEtuP1FZlOw1VFvJWc848B/Sg2HzQn9yNuK6TXSIM+rj1mx/x/YFpzqDJ06kaehTlz4ymMUDU4MwoUXzUlDvdUangXEcF0jK81nnGKx61sV63N/4dfpIS16xsF33xmiAk+c3ipgJTzfing19Mk5xDS551+6MI3yqrlkpm87vSi65RHR+IOO4RTVJ+Rsn0J2y2XpdchTwyTxzQvxZY4J0cL1fnNYh9EF3O7+Sa+UJKQe37T+rHIdQH5nSRgyiweYH+EN22vAxpfpBLvlhPpFR7fH3NmRVbxWxN0YSAmNfpmAL7HYGXH0gLIyiuu0ntuxW4eQB0quxqciGafnCzK/y45hYSEGXhQMrZtG9pzvDoTQPdWp9w7o+zuU+Tv2JpR9P4J6h4GubaI6vjsO+bjspxE2W9vuvJRlviFNo2D3QvD73QSG6nQgOE7z8lcQk4NdZOgAdoJLdw28KYnNrzAW4aQEKhCME7rRgxYxGEGiPM9CeT/oGJtLjFosEO9cBjZJFQqjTALmqM1jSCCJGzga5Pc9NroC6rLU2nr6P87xaLNfnGedyoOxJLFnZ4FvNtnbRYeT0uWH4b2Pa6v2A0vE3zKms7m1VYzEe7tlQLG/fjtw==" target="_blank">
             1,140세대 브랜드 대단지에서 교육환경, 자연환경, 미래가치의 프리미엄을 탐하라
            </a>
           </dd>
           <dd class="txt_inline">
            [ahref]
            
           </dd>
          </dl>
         </li>
         <li>
          <dl>
           <dt>
            <a href="/adcr?x=3UjWeEsWXHz7sgwwnVqp9f./w==kfnEcLX25FAbv+WfV7hLq12PSADqcxoPXvJCMIHgNc7tQDYWsZ4Xd62knLK0XtKRFAuxXPPaKHhDS0pwNpTwmLsgJu98Gljy7lt8wjA+A8SFuDoTm7lJAu8UdfZBGhpAWVEmqW405TUTBKNlzfM3f63Jot9pVUwgg+oH9W9BeQijHLETZqhFOxvvVyEFWLcP90fUT+OACM9YWtJGuPW6R1M6o663CwIZP8Rncx5VLgfV+6xusiMY+jrUNIgPAh0EklYKKvp25ekPAbNu2911u2Jw2nF/lwPrd0cu1vGH/QOxg9+x3Q4zZkpoFOrovokRYrVSFMY7aTHcOoIkDs9I60gn3ttB3JjzVnisLFA2bV+7+hX6nGg+Y7ZgYi2yq9qTuCRhX8jPkG3OEmstJVSz8wAz47ACVsZC/D6wUa5OC6aMgltPLJdiwtXrk1Eqx++C11YhdVmhsdHYR4mZKeuxYPq2FdCLi/c3OMhWHZIBAXDB7xOUZ4NSbpeVGiZdaie0VApyyKb45RZjcq/LEJFIc/YkAOCwnMEANM0y23wwM4hoEJcT8ZjVUTGHi8GbrKKQwy6+QpbAf4/r0A76E2r/0ZwGoQmrYB159skYwJAR1irKXMQf0TVG38IkJLBx8Uy3iB4ov2T/VM3ZxPseMe7qakPmjPi277IJV2fRxmGODh48AekNdea7OCciOs7HkOc+iiaxO51LtcxSHKwCsDRFPhzobM1nFLuW926hjhyfUQCBJawmAgFm2n+zZ1fMUdciEU0l873ts3RXBWQXcS6tGPtL1poTzbdNIisiv/GwUoPMAuh5JYy1ZqRFojsiZSC6xEQHVEWKcyoy5s4aaNHI1dQk594cuckEKJ2BwdjIXoKhBf6CraZcFs9428eQpUjTL" target="_blank">
             용인 성복 힐스테이트 홍보관
            </a>
           </dt>
           <dd class="txt_block">
            <a class="url02" href="/adcr?x=3UjWeEsWXHz7sgwwnVqp9f./w==kfnEcLX25FAbv+WfV7hLq12PSADqcxoPXvJCMIHgNc7tQDYWsZ4Xd62knLK0XtKRFAuxXPPaKHhDS0pwNpTwmLsgJu98Gljy7lt8wjA+A8SFuDoTm7lJAu8UdfZBGhpAWVEmqW405TUTBKNlzfM3f63Jot9pVUwgg+oH9W9BeQijHLETZqhFOxvvVyEFWLcP90fUT+OACM9YWtJGuPW6R1M6o663CwIZP8Rncx5VLgfV+6xusiMY+jrUNIgPAh0EklYKKvp25ekPAbNu2911u2Jw2nF/lwPrd0cu1vGH/QOxg9+x3Q4zZkpoFOrovokRYrVSFMY7aTHcOoIkDs9I60gn3ttB3JjzVnisLFA2bV+7+hX6nGg+Y7ZgYi2yq9qTuCRhX8jPkG3OEmstJVSz8wAz47ACVsZC/D6wUa5OC6aMgltPLJdiwtXrk1Eqx++C11YhdVmhsdHYR4mZKeuxYPq2FdCLi/c3OMhWHZIBAXDB7xOUZ4NSbpeVGiZdaie0VApyyKb45RZjcq/LEJFIc/YkAOCwnMEANM0y23wwM4hoEJcT8ZjVUTGHi8GbrKKQwy6+QpbAf4/r0A76E2r/0ZwGoQmrYB159skYwJAR1irKXMQf0TVG38IkJLBx8Uy3iB4ov2T/VM3ZxPseMe7qakPmjPi277IJV2fRxmGODh48AekNdea7OCciOs7HkOc+iiaxO51LtcxSHKwCsDRFPhzobM1nFLuW926hjhyfUQCBJawmAgFm2n+zZ1fMUdciEU0l873ts3RXBWQXcS6tGPtL1poTzbdNIisiv/GwUoPMAuh5JYy1ZqRFojsiZSC6xEQHVEWKcyoy5s4aaNHI1dQk594cuckEKJ2BwdjIXoKhBf6CraZcFs9428eQpUjTL" target="_blank">
             용인힐스테이트 미분양아파트/즉시입주/잔금유예가능/입주금소액/할인분양
            </a>
           </dd>
           <dd class="txt_inline">
            [linkx]
            
           </dd>
          </dl>
         </li>
        </ul>
       </div>
       <p>
       </p>
      </body>
     </div>
    </div>
    <div id="dr_ui_ad">
     우측광고
    </div>
   </div>
   <div id="dr_ui_footer">
    <div class="layout_footer_bar">
     <ul>
      <li>
       [linkx]
       
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a href="/company/sub_index.htm?menu_key=3" target="_blank">
        상시채용
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       [linkx]
       
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a href="/family_new/index.htm?menu_key=1&amp;page_name=family_benefit">
        중개업소가입문의
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a href="/company/sub_index.htm?menu_key=4&amp;sub_key=3" target="_blank">
        제휴문의
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       [linkx]
       
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a class="fwb" href="/_templates/DWS_HTML/privacy.htm" target="_blank">
        개인정보취급방침
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a href="/center/popup/info03.htm" target="_blank">
        법적고지
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a href=";" onclick="MM_openBrWindow('/center/popup/reject.htm','','width=300,height=235')">
        이메일 수집거부
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       <a href="/index/index.htm?page_name=sitemap">
        사이트맵
       </a>
       <span class="tpd8">
        |
       </span>
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <p>
      <a href="P">
      </a>
     </p>
    </div>
    <p class="cb">
    </p>
    <ul class="foorer_cs clearfix">
     <li class="left_li">
      <h3 class="cs_title">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <p class="cs_info">
       평일 AM 09:00 ~ PM 18:00
      </p>
      <p class="cs_info">
       점심 PM 12:30 ~ PM 13:30
      </p>
     </li>
     <li class="right_li">
      <h3 class="cs_title">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <p class="cs_info">
       <span>
        <b class="text_inn01">
         회원가입 및 전송 문의 :
        </b>
        02-553-5532
       </span>
       <span>
        <b class="text_inn02">
         투자스쿨 관련 문의 :
        </b>
        02-2135-5505
       </span>
      </p>
      <p class="cs_info">
       <span>
        <b>
         광고 및 분양/입주 DB 구매 문의 :
        </b>
        02-516-0410
       </span>
       <span>
        <b>
         리서치 및 제휴 문의 :
        </b>
        02-571-5583
       </span>
      </p>
     </li>
    </ul>
    <div class="layout_footer_box">
     <p class="footer_logo">
      <a href="/index/" onfocus="blur();">
      </a>
     </p>
     <ul>
      <li class="c555555">
       <span class="ls-1">
        서울시 강남구 논현로30길 6 (도곡동) 키앤키빌딩 2층
       </span>
       <span class="tpd8 cdbdbdb">
        |
       </span>
       <span class="ls-1">
        대표이사  박 진 규
       </span>
       <span class="ls-1">
        사업자등록번호
       </span>
       220-81-66546
       <span class="ls-1">
        통신판매업소신고 제 강남
       </span>
       -4167호
      </li>
      <li class="c555555 mt07">
       Copyright ⓒ 1999~
       <span class="ls-1 fwb c397cb8">
        닥터아파트(주)
       </span>
       , All Rights Reserved.
       <span class="company_sns footer_sns_inn">
        <a href="/_dxcDZT" target="_blank" title="닥터아파트 카카오 플러스 친구 새창 열기">
        </a>
        [ahref]
        
        <a href="/channel/UC81psJ9lkoxdgGAhm2MK-aw" target="_blank" title="닥터아파트 YouTube 새창 열기">
        </a>
        <a href="/" target="_blank" title="닥터아파트 blog 새창 열기">
        </a>
        <a href="/my.nhn?memberNo=4842138" target="_blank" title="닥터아파트 naver post 새창 열기">
        </a>
       </span>
      </li>
     </ul>
     <p class="cb">
     </p>
    </div>
    <div id="SISE_QUICK_SEARCH" style="position:absolute; display:none; left:50%; margin-left:-465px; top:116px; z-index:10">
     <iframe frameborder="0" height="317" hspace="0" marginheight="0" marginwidth="0" name="SISE_QUICK_SEARCH_FRAME" scrolling="no" src="" title="광고영역" vspace="0" width="1000">
     </iframe>
     <iframe frameborder="0" height="0" hspace="0" marginheight="0" marginwidth="0" name="click_frc" scrolling="no" title="광고영역" vspace="0" width="0">
     </iframe>
    </div>
   </div>
  </div>
  <div class="tooltip" id="tooltip" style="position:absolute; top:0px; left:0px;visibility:hidden;border-left:2px #cccccc solid; border-right:2px #cccccc solid; border-bottom:2px #cccccc solid; border-top:2px #cccccc solid; background-color:#ffffff;color:#505050;font-size:12px">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0013
  </b>
 </body>
</html>|<---