--->|<!DOCTYPE doctype html>
<html class="lang-ko_KR " lang="ko-KR">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, user-scalable=0" name="viewport"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="ko_KR" property="og:locale"/>
  <meta content="article" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="https://www.facebook.com/algogaja" property="article:author"/>
  <meta content="summary" name="twitter:card"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
  <meta content="http://algogaza.com/wp-content/uploads/2018/01/icon-face.png" name="twitter:image"/>
  <meta content="@algogaja" name="twitter:creator"/>
  <? php}
add_action ( 'login_enqueue_scripts', 'my_login_logo');
</style>
  <meta content="WordPress 5.2.2" name="generator"/>
  <meta content="Powered by Slider Revolution 5.4.8.2 - responsive, Mobile-Friendly Slider Plugin for WordPress with comfortable drag and drop interface." name="generator"/>
 </head>
 <body class="page-template-default page page-id-15226 page-child parent-pageid-15230 element-sidebars-boundary-start element-items element-comments element-sidebars-boundary-end element-page-title element-search-form right-sidebar layout-wide sticky-menu-enabled search-form-input-radius-disabled search-form-type-2 breadcrumbs-enabled">
  <div class="page-container header-one" id="page">
   <header class="site-header" id="masthead">
    <div class="top-bar">
     <div class="grid-main">
      <div class="top-bar-tools">
       <div class="social-icons">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="icon-2" href="/algogaja" onmouseout="this.style.backgroundColor=''" onmouseover="this.style.backgroundColor='#00aced'" target="_blank">
           <i class="fa fa-twitter">
           </i>
           <span class="s-title">
            Twitter
           </span>
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="header-resources">
        <span class="resources-data">
         <span class="resources-count">
          224
         </span>
         <span class="resources-text">
          Resources
         </span>
        </span>
        [ahref]
         <li>[ahref]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        
       </div>
      </div>
      <p class="site-description">
       프랑스 공인 VIP 차량가이드 여행사
      </p>
     </div>
    </div>
    <div class="header-container grid-main">
     <div class="site-logo">
      [linkx]
      
     </div>
     <div class="menu-container">
      <nav class="main-nav menu-hidden" data-menucollapse="968">
       <div class="main-nav-wrap">
        <h3 class="menu-toggle">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="nav-menu-container nav-menu-main megaWrapper">
         <ul class="ait-megamenu" id="menu-top-menu">
          <li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor current-menu-parent menu-item-has-children" id="menu-item-5856">
           [ahref]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-15226 current_page_item" id="menu-item-15227">
             <a href="/france/paris/">
              파리 Paris
             </a>
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15242">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15245">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15248">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15251">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15255">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15258">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15261">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15264">
             <li>[ahref]</li><li>[mkey1]</li><li>[ahref]</li>[ahref]
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15267">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15270">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15273">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-15276">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-14288">
           [linkx]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-14449">
             [linkx]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5889">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5894">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5891">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5892">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5893">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5890">
               [ahref][ahref][linkx]<li>[keywordx]</li>
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-14448">
             [linkx]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5895">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5897">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5899">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5896">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5898">
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5879">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5878">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-14256">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-14259">
             [linkx]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-14289">
           [linkx]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5882">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5883">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5884">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5885">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-5888">
             [linkx]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-14290">
           [linkx]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-taxonomy menu-item-object-ait-items" id="menu-item-14502">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-taxonomy menu-item-object-ait-items" id="menu-item-14505">
             <a href="/cat/bar/">
              멋진까페
             </a>
            </li>
            <li class="menu-item menu-item-type-taxonomy menu-item-object-ait-items" id="menu-item-14796">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-taxonomy menu-item-object-ait-items" id="menu-item-14498">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-taxonomy menu-item-object-ait-items" id="menu-item-14328">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-taxonomy menu-item-object-ait-items" id="menu-item-14504">
             <li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[ahref]
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-5867">
           [ahref]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-15669">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-15670">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-11405">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-15671">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-15672">
             [linkx]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children" id="menu-item-14543">
           [linkx]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14563">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14564">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14565">
             [ahref]
             
            </li>
           </ul>
          </li>
         </ul>
        </div>
       </div>
      </nav>
     </div>
    </div>
   </header>
   <div class="sticky-menu menu-container">
    <div class="grid-main">
     <div class="site-logo">
      [ahref]
      
     </div>
     <nav class="main-nav menu-hidden" data-menucollapse="968">
     </nav>
    </div>
   </div>
   <div class="header-layout element-none-enabled">
    <div class="header-element-wrap">
    </div>
    <div class="header-search-wrap">
     <div class="elm-search-form-main" id="elm-search-form-5-main">
      <div class="elm-search-form" id="elm-search-form-5">
       <div class="search-form-container search-type-2" id="elm-search-form-5-container">
        <form action="/" class="main-search-form" method="get">
         <div class="elm-wrapper">
          <div class="inputs-container">
           <div class="search-shadow">
           </div>
           <div class="search-content">
            <span class="label">
             원하시는 내용을
            </span>
            <span class="searchinput-wrap">
            </span>
            <span class="label">
             또는
            </span>
            <div class="category-search-wrap " data-position="first">
             <span class="category-clear">
              <i class="fa fa-times">
              </i>
             </span>
             <select class="category-search default-disabled" data-placeholder="카테고리" name="category" style="display: none;">
              <option label="-">
              </option>
              <option value="1365">
               고성 &amp; 성곽도시
              </option>
              <option value="1367">
               관광명소
              </option>
              <option value="1368">
               레스토랑
              </option>
              <option value="1369">
               멋진까페
              </option>
              <option value="1370">
               박물관 &amp; 미술관
              </option>
              <option value="1371">
               쇼핑센터
              </option>
              <option value="1366">
               유네스코 문화유산
              </option>
              <option value="1374">
               전시 &amp; 박람회
              </option>
              <option value="1372">
               착한민박
              </option>
              <option value="1373">
               축제 &amp; 카니발
              </option>
             </select>
            </div>
            <span class="label">
             와
            </span>
            <div class="location-search-wrap " data-position="last">
             <span class="location-clear">
              <i class="fa fa-times">
              </i>
             </span>
             <select class="location-search default-disabled" data-placeholder="장소" name="location" style="display: none;">
              <option label="-">
              </option>
              <option value="1383">
               그랑 데스트
              </option>
              <option value="1376">
               노르망디
              </option>
              <option value="1385">
               누밸 아키텐느
              </option>
              <option value="1381">
               부르고뉴&amp;프랑쉬 꽁떼
              </option>
              <option value="1382">
               브르타뉴
              </option>
              <option value="1379">
               빼이 드 라 르와르
              </option>
              <option value="1384">
               썽트르&amp;르와르 계곡
              </option>
              <option value="1377">
               오 드 프랑스
              </option>
              <option value="1378">
               오베르뉴&amp;론 알프
              </option>
              <option value="1380">
               옥씨따니
              </option>
              <option value="1387">
               일 드 프랑스
              </option>
              <option value="1375">
               파 리
              </option>
              <option value="1386">
               프로방스&amp;알프스&amp;꼬따쥐
              </option>
             </select>
            </div>
            <span class="label">
             로 찾아보세요.
            </span>
            <div class="searchinput search-input-width-hack" data-defaulttext="키워드 검색" style="position: fixed; z-index: 99999; visibility: hidden">
             키워드 검색
            </div>
           </div>
           <div class="searchsubmit-wrapper">
            <div class="submit-main-button">
             <div class="searchsubmit2">
              검색
             </div>
            </div>
           </div>
          </div>
         </div>
        </form>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="elements" id="main">
    <div class="page-title share-enabled subtitle-missing">
     <div class="grid-main">
      <div class="grid-table">
       <div class="grid-row">
        <header class="entry-header">
         <div class="entry-header-left">
          <div class="entry-title standard-title">
           <div class="entry-title-wrap">
            <h1>
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h1>
           </div>
          </div>
         </div>
         <div class="breadcrumb">
          <nav class="breadcrumbs">
           <span class="breadcrumbs-before">
            현재위치:
           </span>
           <span class="breadcrumb-begin">
            [ahref]
            
           </span>
           <span class="sep">
            /
           </span>
           <a href="/france/" title="France">
            France
           </a>
           <span class="sep">
            /
           </span>
           <span class="breadcrumb-end">
            파리 Paris
           </span>
          </nav>
         </div>
        </header>
        <div class="page-title-social">
         <div class="page-share">
          <ul class="share-icons">
           <li class="share-facebook">
            [ahref]
            
           </li>
           <li class="share-twitter">
            [linkx]
            
           </li>
           <li class="share-pinterest">
            [ahref]
            
           </li>
          </ul>
          <div class="share-text">
           <span class="title">
            Share
           </span>
           <span class="subtitle">
            this page
           </span>
          </div>
         </div>
        </div>
       </div>
       <div class="right-bck">
       </div>
      </div>
     </div>
    </div>
    <div class="main-sections">
     <div class="elements-with-sidebar">
      <div class="grid-main">
       <div class="elements-sidebar-wrap">
        <div class="right-bck">
        </div>
        <div class="elements-area">
         <section class="elm-main elm-items-main elm-item-organizer-main" id="elm-items-_e6818dce9f29bb-main">
          <div class="elm-wrapper elm-items-wrapper">
           <div class="elm-item-organizer elm-items" id="elm-items-_e6818dce9f29bb">
            <div class="elm-item-organizer-container column-3 layout-box carousel-disabled" data-cols="3" data-first="1" data-last="6">
             <div class="item item1 item-first image-present align-left noinfo icons-enabled" data-id="1">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                나폴레옹과 장군들의 유해가 안치된 곳 프랑스 군대와 무기, 전쟁, 역사를 전시
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item2 image-present align-left noinfo icons-disabled" data-id="2">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                에펠탑이 가장 잘 보이는 넓은 잔디 밭으로 다양한 문화행사를 펼쳐진다.
               </span>
              </div>
             </div>
             <div class="item item3 item-last image-present align-left noinfo icons-disabled" data-id="3">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                몽쥬약국 근처에 위치한 로마 정복시대 목숨을 건 검투사들의 경기장
               </span>
              </div>
             </div>
             <div class="item item4 item-first image-present align-left noinfo icons-enabled" data-id="4">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                야외 조각전시장을 방물케하는 왕실 전용정원[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][keywordx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][keywordx][keywordx][linkx][ahref][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref]
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item5 image-present align-left noinfo icons-enabled" data-id="5">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                왕과 왕비도 목이 잘리고, 혁명 주도세력도 처형된 단두대가 설치한 곳
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item6 item-last image-present align-left noinfo icons-enabled" data-id="6">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                보석 상점들이 밀집해 있는 곳으로 '다이아나'가 마지막으로 묵었던 ‘리츠호텔’
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item7 item-first image-present align-left noinfo icons-enabled" data-id="7">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                1848년부터 1914년 사이 근대예술 거장들의 회화, 조각, 가구를 감상한다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item8 image-present align-left noinfo icons-enabled" data-id="8">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                Eglise Saint Germain l`Auxerrois 교회 종소리에 맞추어 신교도들을 학살
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item9 item-last image-present align-left noinfo icons-enabled" data-id="9">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                퐁뇌프의 연인들이라는 영화로 잘 알려진 교량으로 "새로운 스타일의 다리"
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item10 item-first image-present align-left noinfo icons-enabled" data-id="10">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                비운의 왕비 마리 앙투와네트를 위해 지은 성으로 전 세계의 장미공원
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item11 image-present align-left noinfo icons-disabled" data-id="11">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                <a href="/item/palais-royal/">
                 <h3>
                  <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                 </h3>
                </a>
               </div>
               <span class="subtitle">
                루브르 박물관 근처에 위치하면서도 조용하고 아늑한 분위기의 왕실 궁전
               </span>
              </div>
             </div>
             <div class="item item12 item-last image-present align-left noinfo icons-enabled" data-id="12">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                <a href="/item/parc-monceau/">
                 <h3>
                  [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
                 </h3>
                </a>
               </div>
               <span class="subtitle">
                파리지앵이 찾는 곳으로 마르셀 푸르스트의 '잃어버린 시간을 찾아서' 산책로
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item13 item-first image-present align-left noinfo icons-enabled" data-id="13">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                예술사를 각 장르별로 감상할 수 있는 보고, 과거와 미래를 연결하는 피라미드
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item14 image-present align-left noinfo icons-enabled" data-id="14">
              <div class="item-thumbnail">
               <a href="/item/conciergerie/">
                <div class="item-thumbnail-wrap">
                </div>
                <div class="item-text-wrap">
                 <div class="item-text">
                  <div class="item-excerpt txtrows-3">
                   <p>
                    센느 강을 지나다 보면 ‘노트르담 대성당’ 근처에 꼬깔 모자 모양의 지붕을 갖고 있는 독특한 건물이 있다. 중세의 요새처럼 생긴 ‘꽁씨에흐즈리’라는 이 건물은, 14세기 초에 건립되어, 왕궁의 고문서 및 보물을 보관하고 관리하는 곳으로 사용되었다. 바또 무슈 – 파리 센느강 유람선 크루즈 Bateaux Mouches [유뷰브 보기] 15세기부터 죄수를 가두는 감옥으로 사용되던 곳 이란다. 이 아름다운 곳에 감옥이라니….. 1789년 7월 14일 ‘프랑스 대혁명‘ 때에는 피의 공포정치를 하던 곳으로, 1,200 명의 죄수를 수감하였었단다. 1793년1월부터, 다급해진 혁명정부가 대 숙청 작업에 들어가면서, 이 곳에 설치된 혁명 재판소에서 사형 언도를 받으면, 죄수를 ‘꽁꼬흐드 광장’이나 ‘바스티유 광장’으로 이송하고, 만인이 보는 가운데 ‘기요틴 Guillotine’ (단두대) 처형을 행하던 공포의 역사를 간직하고 있다고….. ‘마리 앙뜨와네트 Marie Antoinette’, ‘루이 16세’의 여동생 ‘엘리자벹트 Elisabeth’를 비롯하여, 초기 혁명의 지도자들이었던 ‘당똥 Danton’, ‘로베스피에르 Robespierre’도 이곳에 수감 되었다가 단두대에서 사라진다.감옥의 내부  꽁씨에흐즈리 안에는 14세기에 지어진 ‘경비병의 방 Salle des Gardes’, ‘근위병의 방 Salle des Gens d’Armes’ 그리고 ‘주방 Salle des Cuisines’이 있고, 사형을 집행하던 집행관이 지나가던 ‘파리의 거리 Rue de Paris’를 볼 수 있다. ‘경비병의 방 Salle des Gardes’은 현재의 모습은 19세기 대공사 이후의 모습이며, 동물들이 싸움을 벌이는 모습과 인간의 모습을 한 장식들로 되어 있다. 1350 년경에 만들어진 것으로 추정되는 ‘주방 Salle des Cuisines’은 21개의 기둥이 있고 8개의 창문이 있다. 그 창문 중 네 개는 공사 이후 봉해져서 벽으로 메워졌는데 아직도 그 흔적을 볼 […]
유익한 정보인가요? 공유하실 수 있습니다.
                   </p>
                  </div>
                 </div>
                </div>
               </a>
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                프랑스 대혁명 당시에 단두대 처형을 기다리던 죄수들을 수감한 감옥
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item15 item-last image-present align-left noinfo icons-enabled" data-id="15">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [keywordx][linkx][pkeyx][ahref][keywordx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][keywordx][ahref][mkey1][mkey1][keywordx]
               </div>
               <span class="subtitle">
                Chapelle de Médaille Miraculeuse 기적의 패, 기적의 메달 성당
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item16 item-first image-present align-left noinfo icons-enabled" data-id="16">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                서식지를 그대로 재현한 동물원, 각 대륙의 희귀한 동물들이 자연스럽다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item17 image-present align-left noinfo icons-enabled" data-id="17">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                <a href="/item/pont-des-arts/">
                 <h3>
                  <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                 </h3>
                </a>
               </div>
               <span class="subtitle">
                루브르와 학사원을 연결하는 파리 최초로 보행자를 위한 철교
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item18 item-last image-present align-left noinfo icons-enabled" data-id="18">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                Musée National d'Histoire Naturelle 식물원과 동물원, 광물, 진화 갤러리
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item19 item-first image-present align-left noinfo icons-enabled" data-id="19">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                대혁명 100 주년 기념하는 최초의 만국박람회, 프랑스 산업기술의 자존심
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item20 image-present align-left noinfo icons-enabled" data-id="20">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                공화국을 건설하는데 이바지한 위인들, 프랑스 대혁명 전사들에게 바친 영웅전
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item21 item-last image-present align-left noinfo icons-enabled" data-id="21">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                천재화가 피카소의 2백여 유화 작품과 조각, 1,500점의 판화와 데생 전시
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item22 item-first image-present align-left noinfo icons-enabled" data-id="22">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                프렌치 캉캉 춤과 다양한 스펙타클, 붉은 풍차와 몽마르트르의 낭만
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item23 image-present align-left noinfo icons-enabled" data-id="23">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                관능적이며 세련된 에로티즘으로 인체의 아름다움을 조명으로 승화시킨다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item24 item-last image-present align-left noinfo icons-disabled" data-id="24">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                에펠탑을 배경으로 사진 찍기에 적합하여 모든 관광객이 거쳐가는 장소
               </span>
              </div>
             </div>
             <div class="item item25 item-first image-present align-left noinfo icons-enabled" data-id="25">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                소르본 대학생들이 선호하는 정원과 마리 드 메디치 상원의회 건물
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item26 image-present align-left noinfo icons-enabled" data-id="26">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                신의 손 로댕 조각가의 아뜰리에와 정원에서 한적한 휴식과 작품 감상
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item27 item-last image-present align-left noinfo icons-disabled" data-id="27">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                노틀담 곱추의 배경지이며, 화려한 장미찬과 빛의 건축 고딕양식의 백미
               </span>
              </div>
             </div>
             <div class="item item28 item-first image-present align-left noinfo icons-disabled" data-id="28">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                예수의 가시 면류관과 십자가를 비롯한 성물을 보관한 성스러운 교회
               </span>
              </div>
             </div>
             <div class="item item29 image-present align-left noinfo icons-disabled" data-id="29">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                세계의 다양한 음식을 맛 볼 수 있는 먹자골목, 거대한 조각상과 분수
               </span>
              </div>
             </div>
             <div class="item item30 item-last image-present align-left noinfo icons-enabled" data-id="30">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                나폴레옹 1세가 오스텔리츠 전투에서 승리한 것을 기념하여 건설
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item31 item-first image-present align-left noinfo icons-enabled" data-id="31">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                한가함과 여유로움이 넘치는 곳으로 머리를 식히며 산책을 하기에 안성맞춤
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item32 image-present align-left noinfo icons-disabled" data-id="32">
              <div class="item-thumbnail">
               <a href="/item/mouffetard/">
                <div class="item-thumbnail-wrap">
                </div>
                <div class="item-text-wrap">
                 <div class="item-text">
                  <div class="item-excerpt txtrows-3">
                   <p>
                    우리나라 관광객이 찾는 몽쥬 약국에서 딱 3분 거리에 위치한 무프타르 거리는 파리에서 가장 오래된 길 중에 하나! 이 곳에는 가성비 좋은 식당들과 작은 상점들이 있어서 파리지앵들이 즐겨 찾는 가장 활력이 넘친다. 무프타르 – 몽쥬약국 근처 볼거리 , 우디 알렌의 영화촬영지 Rue Mouffetard [유튜브 보기] 유명한 치즈 전문점인 androuet 벽면에는 이탈리아의 시골모습을 묘사한 그림이 보이고, 멧돼지, 돼지, 사슴을 비롯한 꿩, 동물들이 묘사된 것이다. 생 매다르 Saint-Médard 교회는 118세기에 지어진 것으로, 쟝세니스트인 파스칼이 묻혀있는 곳이다. 1727년 François de Pâris 라는 부사제의 무덤에 기도를 하면서 많은 기적이 일어난다는 소문으로 시끌시끌하자, 민심이 흉흉하다는 이유를 들어서 ‘기적을 행하는 것을 금지한다 De par le Roi, défense à Dieu de faire miracle en ce lieu ‘라는 방을 왕명을 붙였다. 12세기 필립 오귀스트 왕이 파리를 보호하기 위하여 성벽을 쌓는데, 성벽 바깥쪽에 위치한 이 곳은 부랑자와 범죄인들이 모여든다. 지금은 없어진 ‘비에브흐 Bievre’ 강을 따라서 가축도살장과 물이 많이 필요한 가죽세공업자들이 자리를 잡는데, 이 곳에서 나오는 악취가 너무 심하여, 이 지역을 비하하는 의미로 스컹크의 일종인 ‘무페트 Mouffette’라고 부르던 것이 이 거리 이름의 유래이다. 아직도 옛날 가내수공업자들의 흔적을 엿 볼 수 있는데, 두 사람이 펌프질을 하는 모습의 부조는 포도주를 파는 가게를 알려주던 간판이다. 근처의 대학생들이 문학인, 예술가들이 어울려서 밤 늦도록 토론하던 콩트레스카프 광장 가까이에 가난하게 떠 돌던 헤밍웨이가 1922-923년 8월까지 거주하였던 집이다. […]
유익한 정보인가요? 공유하실 수 있습니다.[mkey1][ahref][pkeyx]<li>[ahref]</li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
                   </p>
                  </div>
                 </div>
                </div>
               </a>
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                <a href="/item/mouffetard/">
                 <h3>
                  [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                 </h3>
                </a>
               </div>
               <span class="subtitle">
                파리에서 가장 오래된 거리로 이 곳에서 파리지앵이 되어보자
               </span>
              </div>
             </div>
             <div class="item item33 item-last image-present align-left noinfo icons-enabled" data-id="33">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                시트로앵 자동차 조립공장에서 시민들이 선호하는 공원으로 탈바꿈
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item34 item-first image-present align-left noinfo icons-enabled" data-id="34">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                예술성을 극대화한 세계 최고 수준의 버라이티 쇼는 감탄의 연속이다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item35 image-present align-left noinfo icons-disabled" data-id="35">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                파리 시민들이 가장 좋아하는 곳으로 다양한 볼거리를 주는 휴식처
               </span>
              </div>
             </div>
             <div class="item item36 item-last image-present align-left noinfo icons-enabled" data-id="36">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                세계에서 가장 아름다운 거리에서 느껴보는 프랑스 여행의 낭만
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <li>[keywordx]</li>[mkey1][ahref]
              </div>
             </div>
             <div class="item item37 item-first image-present align-left noinfo icons-enabled" data-id="37">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                아침에는 저녁까지 가지 못 할 것을, 저녁에는 아침까지 못 갈 것을 생각해라
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item38 image-present align-left noinfo icons-disabled" data-id="38">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                다빈치 코드에서 지구의 배꼽 황동선, 로즈라인과 시온의 비밀수도회[pkeyx][ahref][mkey1]
               </span>
              </div>
             </div>
             <div class="item item39 item-last image-present align-left noinfo icons-enabled" data-id="39">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                영국 황태자비 사고 장소 근처에 다이애나를 추모하는 자유의 불꽃
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item40 item-first image-present align-left noinfo icons-enabled" data-id="40">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                ‘레 미제라블’에서 ‘쟝 발쟝’이 숨어든 파리의 하수도 시스템을 보여준다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item41 image-present align-left noinfo icons-enabled" data-id="41">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                아테네 파르테논 신전을 모방한 성당, 열주들이 늘어선 모습이 독특하다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 [keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][keywordx][pkeyx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx]
                </div>
               </div>
              </div>
             </div>
             <div class="item item42 item-last image-present align-left noinfo icons-enabled" data-id="42">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                파리의 연인을 촬영한 곳으로 센느강에서 가장 아름다운 다리, 야경 강추!
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item43 item-first image-present align-left noinfo icons-enabled" data-id="43">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx][keywordx][linkx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][linkx][keywordx][ahref]
               </div>
               <span class="subtitle">
                Arts d'Afrique et d’Océanie 이국적인 조각, 미술, 역사를 느껴보자.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item44 image-present align-left noinfo icons-enabled" data-id="44">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                파리 가장 중심에 위치한 나폴레옹 3세 양식의 화려한 오페라 가르니에
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item45 item-last image-present align-left noinfo icons-enabled" data-id="45">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                삶의 공간과 죽은자의 공간이 공존하는 묘지는 산책코스로 안성마춤이다.
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item46 item-first image-present align-left noinfo icons-enabled" data-id="46">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                버려진 암석 채취장을 시민들이 선호하는 공원으로 탈바꿈시킨 모델
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item47 image-present align-left noinfo icons-disabled" data-id="47">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                <a href="/item/pont-mirabeau/">
                 <h3>
                  [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                 </h3>
                </a>
               </div>
               <span class="subtitle">
                다리 밑으로 흐르는 강물처럼 세월이 바뀌어도 영원히 변치않을 사랑
               </span>
              </div>
             </div>
             <div class="item item48 item-last image-present align-left noinfo icons-enabled" data-id="48">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                적색, 청색, 녹색의 파이프가 드러난 외벽, 유리로 된 특이한 현대미술관
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item49 item-first image-present align-left noinfo icons-enabled" data-id="49">
              <div class="item-thumbnail">
               <a href="/item/musee-du-vin/">
                <div class="item-thumbnail-wrap">
                </div>
                <div class="item-text-wrap">
                 <div class="item-text">
                  <div class="item-excerpt txtrows-3">
                   <p>
                    박물관 관람자들에게 여러 종류의 정통 치즈를 맛보는 코스도 있고, 포도주 만드는 과정을 보여주며, 그럴듯한 포도주 지하 저장고 (동굴)에서 한잔의 포도주를 시음할 수 있는 곳이 파리에 있다면 얼마나 좋을까???? 알고가자, 파리의 포도주 박물관!!! 파리 16구의 지하철 ‘파시 역 Métro Passy’ 우측에 자리잡고 있는 포도주 박물관 Musée du Vin 은 본래 석회암 채취장 이었단다. 파리의 건물 외관에 사용한 석회암을 캐내던 채석장에, 1493년 ‘미님므 Minimes’ 수도사들의 지하 창고로 이용하기도 하였던 곳에 자리잡고 있다. 지금도 ‘몽마르트르’ 언덕에는 포도밭이 남아 있지만, 중세 시대의 다른 파리의 모습을 상상하며 프랑스의 자존심인 포도주에 대하여 간단하게 공부할 수 있는 장소가 바로 포도주 박물관!!! 포도주 박물관 역사 ’미님므 Minimes’ 수도회의 수도사들이‘트로카데로 광장’이 있는 ‘샤이요 Chaillot’ 언덕 근처의 ‘포도주 냄새가 나는 거리 Rue Vineuse’에 1만여 평의 포도밭을 가꾸어, 빛이 연하면서도 맑고 깨끗한 포도주를 생산하였단다. ‘루이 13세’는 자신의 사냥터이던 ‘불로뉴 숲‘ ‘Bois de Boulogne’에서 사냥을 하고, 루브르 궁전으로 돌아가는 길에 이 수도원에 들러 목마름을 달랬다고 한다. 언덕 위의 주막…. 17세기에는 온천수가 발견되어 약 200년 동안 온천장으로 각광 받았던 영광을 오늘날에도 남아 있는 ‘물의 거리 Rue des Eaux’라는 길 이름에서 상상해 볼 수 있다고…….. 1789년 ‘프랑스 대혁명’의 격동기를 지나면서 ‘미님므 수도원’의 활동은 막을 내리게 되고, 이 저장 창고는‘에펠탑’의 레스토랑에서 사용하는 포도주 지하 저장고로 이용되기도 하였단다. 고품질 포도주의 보존과 육성을 목적으로 1954년에 설립된 ‘프랑스 애주가 협회 Conseil des […]
유익한 정보인가요? 공유하실 수 있습니다.
                   </p>
                  </div>
                 </div>
                </div>
               </a>
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                포도주 생산하는 제조 기구 및 다양한 용품을 전시하며 식사도 가능
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item50 image-present align-left noinfo icons-enabled" data-id="50">
              <div class="item-thumbnail">
               [ahref]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [linkx]
                
               </div>
               <span class="subtitle">
                순교자의 산에서 자유를 꿈꾸던 예술가들의 낭만이 가득한 장소로.....
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
             <div class="item item51 item-last image-present align-left noinfo icons-disabled" data-id="51">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                과거와 현재의 문화가 조화롭게 공존하는 곳으로 파리에 신선한 활력소
               </span>
              </div>
             </div>
             <div class="item item52 item-first item-last image-present align-left noinfo icons-enabled" data-id="52">
              <div class="item-thumbnail">
               [linkx]
               
              </div>
              <div class="item-box-content-wrap">
               <div class="item-title">
                [ahref]
                
               </div>
               <span class="subtitle">
                호수, 경마장, 동물원, 산책로를 갖춘 파리지앵들의 편안한 휴식처
               </span>
              </div>
              <div class="item-social-icons-wrap">
               <div class="item-social-icons">
                <div class="content">
                 <ul>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </section>
        </div>
        <div class="sidebar-right-area" id="secondary-right" role="complementary">
         [mkey1][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][mkey1][mkey1][linkx]
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <footer class="footer" id="footer">
    <div class="footer-widgets">
     <div class="footer-widgets-wrap grid-main">
      <div class="footer-widgets-container">
       <div class="widget-area __footer-0 widget-area-1">
        <div class="widget-container widget_text" id="text-3">
         <div class="widget">
          <div class="widget-title">
          </div>
          <div class="widget-content">
           <div class="textwidget">
            <div>
             <h6>
              프랑스 공인 VIP 차량가이드 여행사
             </h6>
            </div>
            <div>
            </div>
            <div>
             [ahref]
             
            </div>
            <div>
             <li>[linkx]</li>[linkx]<li>[pkeyx]</li>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="widget-area __footer-1 widget-area-2">
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx][pkeyx]
       </div>
       <div class="widget-area __footer-2 widget-area-3">
        <div class="widget-container widget_media_image" id="media_image-8">
         <div class="widget">
          <div class="widget-title">
          </div>
          <div class="widget-content">
           [linkx]
           
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="site-footer">
     <div class="site-footer-wrap grid-main">
      <div class="nav-menu-container nav-menu-footer megaWrapper">
       <ul class="ait-megamenu" id="menu-footer-1">
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-17369">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-17370">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-17371">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-17372">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-12050">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-12051">
         <a href="/conditions/" target="_blank">
          계약 및 환불정책
         </a>
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-12052">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14201">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="footer-text">
       <p>
        Copyright ⓒ 알고가자 All rights reserved
       </p>
      </div>
     </div>
    </div>
   </footer>
  </div>
  <div id="um_upload_single" style="display:none">
  </div>
  <div id="um_view_photo" style="display:none">
   [ahref]
   
   <div class="um-modal-body photo">
    <div class="um-modal-photo">
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0161
  </b>
 </body>
</html>
|<---