--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.31.2" name="generator"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="website" property="og:type"/>
  <meta content="https://gamepedia.cursecdn.com/minecraft_ko_gamepedia/b/bc/Wiki.png?version=2ef7cae78dfce8c991f568461b72add7" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="Gamepedia" itemprop="author"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-도구 rootpage-도구 skin-hydra action-view site-minecraft-gamepedia show-ads">
  <div id="netbar">
   <div class="netbar-flex">
    <div class="netbar-box left logo">
     [linkx]
     
    </div>
    <div class="netbar-box left">
     <a href="/">
      Help
     </a>
    </div>
    <div class="netbar-box left officialwiki">
     <a href="/index.php?title=Special:AllSites&amp;filter=official">
     </a>
    </div>
    <div class="netbar-spacer">
    </div>
    <div class="netbar-box right">
     [ahref]
     
    </div>
    <div class="netbar-box right">
     <a class="aqua-link" href="/index.php?title=%ED%8A%B9%EC%88%98:%EA%B3%84%EC%A0%95%EB%A7%8C%EB%93%A4%EA%B8%B0&amp;returnto=%EB%8F%84%EA%B5%AC" id="register-link">
      Register
     </a>
    </div>
   </div>
  </div>
  <div class="with-siderail" id="global-wrapper">
   <div class="noprint" id="mw-page-base">
   </div>
   <div class="noprint" id="mw-head-base">
   </div>
   <div id="pageWrapper">
    <div class="mw-body" id="content" itemprop="articleBody" role="main">
     <a id="top">
     </a>
     <div class="mw-body-content" id="siteNotice">
      <div dir="ltr" id="localNotice" lang="ko">
       <div class="bigsign" style="text-align:center; line-height:100%; display: inline-block">
        <p>
         새로 오신 분들은
         <a href="/%EB%8F%84%EC%9B%80%EB%A7%90:%EA%B8%B8%EB%9D%BC%EC%9E%A1%EC%9D%B4" title="도움말:길라잡이">
          길라잡이
         </a>
         를 꼭 읽어주세요.
        </p>
        <p>
         문서의
         <a href="/%EB%B6%84%EB%A5%98:%EC%A0%95%EB%A6%AC%EA%B0%80_%ED%95%84%EC%9A%94%ED%95%9C_%EB%AC%B8%EC%84%9C" title="분류:정리가 필요한 문서">
          정리
         </a>
         ·
         [linkx]
         
         과
         <a href="/%EB%B6%84%EB%A5%98:%EC%99%B8%EA%B5%AD%EC%96%B4%EB%A5%BC_%ED%95%9C%EA%B5%AD%EC%96%B4%EB%A1%9C_%EB%B2%88%EC%97%AD%ED%95%B4%EC%95%BC_%ED%95%98%EB%8A%94_%EB%AC%B8%EC%84%9C" title="분류:외국어를 한국어로 번역해야 하는 문서">
          번역
         </a>
         을 도와주시면 마인크래프트 위키에 큰 힘이 됩니다.
        </p>
       </div>
      </div>
     </div>
     <div class="mw-indicators mw-body-content">
     </div>
     <div id="atflb">
      <div id="cdm-zone-01">
      </div>
     </div>
     <h1 class="firstHeading" id="firstHeading" itemprop="name" lang="ko">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h1>
     <div class="mw-body-content" id="bodyContent">
      <div class="noprint" id="siteSub">
       Minecraft Wiki
      </div>
      <div id="contentSub">
      </div>
      <div class="mw-jump" id="jump-to-nav">
       이동:
       [ahref]
       
       ,
       <a href="h">
        검색
       </a>
      </div>
      <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
       <div class="mw-parser-output">
        <p>
         <b>
          도구
         </b>
         (Tool)이란 플레이어가 들고 사용하면, 어떤 행동들을 더 빠르고 더 효율적으로 수행하거나, 맨손으로는 얻을 수 없는 재료를 수집할 수 있는 아이템이다. 또한 정보를 수집하는 아이템이나 완전히 새로운 행동을 수행할 수 있는 도구도 있다.
         [ahref]
         
         ,
         <a href="/%EB%82%98%EC%B9%A8%EB%B0%98" title="나침반">
          나침반
         </a>
         과
         [linkx]
         
         (비었을 때)를 제외하고, 도구는 보관함에서 쌓기가 불가능하다. 도구는 수리할 수 있다. 수리에 관한 자세한 정보는
         [linkx]
         
         를 볼 것.
        </p>
        <div class="toc" id="toc">
         <div class="toctitle" dir="ltr" lang="ko">
          <h2>
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h2>
         </div>
         <ul>
          <li class="toclevel-1 tocsection-1">
           [linkx]
           
           <ul>
            <li class="toclevel-2 tocsection-2">
             [ahref]
             
            </li>
            <li class="toclevel-2 tocsection-3">
             <a href="1">
              <span class="tocnumber">
               1.2
              </span>
              <span class="toctext">
               제작
              </span>
             </a>
            </li>
           </ul>
          </li>
          <li class="toclevel-1 tocsection-4">
           [ahref]
           
           <ul>
            <li class="toclevel-2 tocsection-5">
             [ahref]
             
            </li>
            <li class="toclevel-2 tocsection-6">
             <a href="4">
              <span class="tocnumber">
               2.2
              </span>
              <span class="toctext">
               아이템 내구도
              </span>
             </a>
            </li>
            <li class="toclevel-2 tocsection-7">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li class="toclevel-1 tocsection-8">
           <a href="1">
            <span class="tocnumber">
             3
            </span>
            <span class="toctext">
             동영상
            </span>
           </a>
          </li>
          <li class="toclevel-1 tocsection-9">
           <a href="C">
            <span class="tocnumber">
             4
            </span>
            <span class="toctext">
             역사
            </span>
           </a>
          </li>
          <li class="toclevel-1 tocsection-10">
           [ahref]
           
          </li>
          <li class="toclevel-1 tocsection-11">
           <a href="4">
            [keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][linkx][ahref][mkey1][keywordx][mkey1][mkey1][mkey1][mkey1][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][pkeyx][pkeyx][keywordx][mkey1][mkey1][pkeyx][keywordx][ahref][ahref]
           </a>
          </li>
          <li class="toclevel-1 tocsection-12">
           <a href="0">
            <span class="tocnumber">
             7
            </span>
            <span class="toctext">
             함께 보기
            </span>
           </a>
          </li>
         </ul>
        </div>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <h3>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
         이 부분의 본문은
         <b>
          [linkx]
          
         </b>
         입니다.
        </div>
        <p>
         일부 도구는 해당 장비를 가지고 있는 몹을 죽여서 얻을 수 있다.
        </p>
        <h3>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <p>
         모든 도구는 제작을 통해 얻을 수 있다.
        </p>
        <table class="wikitable sortable collapsible" data-description="제작방법">
         <tbody>
          <tr>
           <th>
            이름
           </th>
           <th>
            재료
           </th>
           <th class="unsortable">
            [linkx]
            
            방법
           </th>
           <th class="unsortable">
            설명
           </th>
          </tr>
          <tr>
           <th>
            [linkx]
            
           </th>
           <td>
            <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
             철괴
            </a>
            +
            <br/>
            [linkx]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [linkx]
                 
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            [linkx]
            
           </th>
           <td>
            손상된
            [ahref]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Flint_and_Steel&amp;action=edit&amp;redlink=1" title="Damaged Flint and Steel (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-640px -3520px" title="Flint and Steel">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 <a href="/%EB%B6%80%EC%8B%AF%EB%8F%8C%EA%B3%BC_%EB%B6%80%EC%8B%9C" title="부싯돌과 부시">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-480px -3552px" title="부싯돌과 부시">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            부싯돌과 부시 두 개의 내구도가 합쳐진 뒤 5%의 내구도가 추가된다.
           </td>
          </tr>
          <tr>
           <th>
            [linkx]
            
           </th>
           <td>
            [ahref]
            
            +
            <br/>
            [ahref]
            
           </td>
           <td style="padding:1px">
            <li>[pkeyx]</li><li>[ahref]</li>[mkey1]<li>[linkx]</li>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            [ahref]
            
           </th>
           <td>
            <a href="/%EC%8B%A4" title="실">
             실
            </a>
            +
            <br/>
            [linkx]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EC%8B%A4" title="실">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-320px -3520px" title="실">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EC%8A%AC%EB%9D%BC%EC%9E%84%EB%B3%BC" title="슬라임볼">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-288px -3520px" title="슬라임볼">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EC%8B%A4" title="실">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-320px -3520px" title="실">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 <a href="/%EB%81%88" title="끈">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-800px -3552px" title="끈">
                   <br/>
                  </span>
                  <span class="invslot-stacksize" title="끈">
                   2
                  </span>
                 </a>
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            <a href="/%EB%82%9A%EC%8B%AF%EB%8C%80" title="낚싯대">
             낚싯대
            </a>
           </th>
           <td>
            [ahref]
            
            +
            <br/>
            <a href="/%EC%8B%A4" title="실">
             실
            </a>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -1120px" title="막대기">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EC%8B%A4" title="실">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-320px -3520px" title="실">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 <a href="/%EB%82%9A%EC%8B%AF%EB%8C%80" title="낚싯대">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-448px -3552px" title="낚싯대">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            [linkx]
            
           </th>
           <td>
            손상된
            [linkx]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 <a href="/%EB%82%9A%EC%8B%AF%EB%8C%80" title="낚싯대">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-448px -3552px" title="낚싯대">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            두 낚시대의 내구도가 합쳐지고, 추가로 5%의 내구도가 추가된다.
           </td>
          </tr>
          <tr>
           <th>
            [ahref]
            
           </th>
           <td>
            모든
            <a href="/%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="나무 판자">
             나무 판자
            </a>
            또는
            <br/>
            [linkx]
            
            또는
            <br/>
            [ahref]
            
            또는
            <br/>
            <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
             금괴
            </a>
            또는
            <br/>
            <a href="/%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C" title="다이아몬드">
             다이아몬드
            </a>
            +
            <br/>
            <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
             막대기
            </a>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EA%B0%80%EB%AC%B8%EB%B9%84%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="가문비나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-0px -928px" title="가문비나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EC%A1%B0%EC%95%BD%EB%8F%8C" title="조약돌">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-960px -3328px" title="조약돌">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-800px -3488px" title="금괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C" title="다이아몬드">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3488px" title="다이아몬드">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EA%B0%80%EB%AC%B8%EB%B9%84%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="가문비나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-0px -928px" title="가문비나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%9E%90%EC%9E%91%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="자작나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-832px -832px" title="자작나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%95%84%EC%B9%B4%EC%8B%9C%EC%95%84%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="아카시아나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -832px" title="아카시아나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-800px -3488px" title="금괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C" title="다이아몬드">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3488px" title="다이아몬드">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EA%B0%80%EB%AC%B8%EB%B9%84%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="가문비나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-0px -928px" title="가문비나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-800px -3488px" title="금괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -1120px" title="막대기">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;22 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;23 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-32px -3584px" title="Stone Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;24 Attack Damage">
                 [linkx]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;22 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3552px" title="Golden Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;25 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-256px -3552px" title="Diamond Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
             곡괭이
            </a>
           </th>
           <td>
            손상된 일치하는
            <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
             곡괭이
            </a>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Stone_Pickaxe&amp;action=edit&amp;redlink=1" title="Damaged Stone Pickaxe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-0px -3552px" title="Stone Pickaxe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Diamond_Pickaxe&amp;action=edit&amp;redlink=1" title="Damaged Diamond Pickaxe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-544px -3520px" title="Diamond Pickaxe">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  <a class="new" href="/index.php?title=Damaged_Wooden_Pickaxe&amp;action=edit&amp;redlink=1" title="Damaged Wooden Pickaxe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-128px -3552px" title="Wooden Pickaxe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Iron_Pickaxe&amp;action=edit&amp;redlink=1" title="Damaged Iron Pickaxe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-864px -3520px" title="Iron Pickaxe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Pickaxe&amp;action=edit&amp;redlink=1" title="Damaged Golden Pickaxe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-736px -3520px" title="Golden Pickaxe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Diamond_Pickaxe&amp;action=edit&amp;redlink=1" title="Damaged Diamond Pickaxe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-544px -3520px" title="Diamond Pickaxe">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;22 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-160px -3584px" title="Wooden Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;23 Attack Damage">
                 [linkx]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;24 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-736px -3552px" title="Iron Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;22 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;25 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-256px -3552px" title="Diamond Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            두 곡괭이의 내구도가 합쳐지고, 5% 가 추가된다.
           </td>
          </tr>
          <tr>
           <th>
            삽
           </th>
           <td>
            모든
            [linkx]
            
            또는
            <br>
             [mkey1][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[ahref]</li>
            </br>
            [ahref]
            
            또는
            <br/>
            [linkx]
            
            또는
            <br/>
            [ahref]
            
            또는
            <br/>
            [linkx]
            
            +
            <br/>
            [ahref]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%A7%99%EC%9D%80_%EC%B0%B8%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="짙은 참나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-512px -864px" title="짙은 참나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;22.5 Attack Damage">
                 [linkx]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;23.5 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;24.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-768px -3552px" title="Iron Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;22.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-640px -3552px" title="Golden Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;25.5 Attack Damage">
                 [ahref]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            [mkey1][ahref][keywordx][linkx][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][linkx][keywordx][pkeyx][mkey1][ahref][pkeyx][keywordx][pkeyx][ahref][keywordx][mkey1][ahref][pkeyx][linkx][mkey1][ahref][mkey1][linkx]
           </td>
          </tr>
          <tr>
           <th>
            삽
           </th>
           <td>
            손상된 일치하는 삽
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  <a class="new" href="/index.php?title=Damaged_Wooden_Shovel&amp;action=edit&amp;redlink=1" title="Damaged Wooden Shovel (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-160px -3552px" title="Wooden Shovel">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Stone_Shovel&amp;action=edit&amp;redlink=1" title="Damaged Stone Shovel (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-32px -3552px" title="Stone Shovel">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Shovel&amp;action=edit&amp;redlink=1" title="Damaged Golden Shovel (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-768px -3520px" title="Golden Shovel">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  <a class="new" href="/index.php?title=Damaged_Wooden_Shovel&amp;action=edit&amp;redlink=1" title="Damaged Wooden Shovel (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-160px -3552px" title="Wooden Shovel">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Shovel&amp;action=edit&amp;redlink=1" title="Damaged Golden Shovel (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-768px -3520px" title="Golden Shovel">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;22.5 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;23.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-64px -3584px" title="Stone Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;24.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-768px -3552px" title="Iron Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;22.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-640px -3552px" title="Golden Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;25.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-288px -3552px" title="Diamond Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            두 삽의 내구도가 합쳐지고, 보너스로 5%가 추가된다.
           </td>
          </tr>
          <tr>
           <th>
            도끼
           </th>
           <td>
            모든
            [ahref]
            
            또는
            <br/>
            [linkx]
            
            또는
            <br/>
            <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
             철괴
            </a>
            또는
            <br>
             <li>[ahref]</li>[linkx]<li>[linkx]</li><li>[pkeyx]</li><li>[keywordx]</li>
            </br>
            [linkx]
            
            또는
            <br/>
            [linkx]
            
            +
            <br/>
            <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
             막대기
            </a>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   <a class="mw-redirect" href="/%EC%B0%B8%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="참나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-192px -896px" title="참나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   <a class="mw-redirect" href="/%EC%B0%B8%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="참나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-192px -896px" title="참나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [keywordx][keywordx][linkx][keywordx][mkey1][pkeyx][ahref][mkey1][ahref][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][linkx]
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%95%84%EC%B9%B4%EC%8B%9C%EC%95%84%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="아카시아나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -832px" title="아카시아나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-800px -3488px" title="금괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a href="/%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C" title="다이아몬드">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3488px" title="다이아몬드">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   <a class="mw-redirect" href="/%EC%B0%B8%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="참나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-192px -896px" title="참나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EA%B0%80%EB%AC%B8%EB%B9%84%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="가문비나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-0px -928px" title="가문비나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%9E%90%EC%9E%91%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="자작나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-832px -832px" title="자작나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -1120px" title="막대기">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.8 Attack Speed/&amp;#160;&amp;27 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-96px -3584px" title="Wooden Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.8 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -3552px" title="Stone Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.9 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -3552px" title="Iron Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;27 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 [linkx]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            도끼
           </th>
           <td>
            손상된, 일치하는 도끼
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Axe&amp;action=edit&amp;redlink=1" title="Damaged Golden Axe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -3520px" title="Golden Axe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  <a class="new" href="/index.php?title=Damaged_Wooden_Axe&amp;action=edit&amp;redlink=1" title="Damaged Wooden Axe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-64px -3552px" title="Wooden Axe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Stone_Axe&amp;action=edit&amp;redlink=1" title="Damaged Stone Axe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-960px -3520px" title="Stone Axe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Axe&amp;action=edit&amp;redlink=1" title="Damaged Golden Axe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -3520px" title="Golden Axe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Diamond_Axe&amp;action=edit&amp;redlink=1" title="Damaged Diamond Axe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-480px -3520px" title="Diamond Axe">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 [keywordx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx][mkey1]
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.8 Attack Speed/&amp;#160;&amp;27 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-96px -3584px" title="Wooden Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.8 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.9 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -3552px" title="Iron Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;27 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-192px -3552px" title="Diamond Axe">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            두 도끼의 내구도가 합쳐지고, 보너스로 5% 가 추가된다.
           </td>
          </tr>
          <tr>
           <th>
            <a href="/%EC%8B%9C%EA%B3%84" title="시계">
             시계
            </a>
           </th>
           <td>
            <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
             금괴
            </a>
            +
            <br/>
            <a href="/%EB%A0%88%EB%93%9C%EC%8A%A4%ED%86%A4_%EA%B0%80%EB%A3%A8" title="레드스톤 가루">
             레드스톤 가루
            </a>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EB%A0%88%EB%93%9C%EC%8A%A4%ED%86%A4_%EA%B0%80%EB%A3%A8" title="레드스톤 가루">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-224px -3520px" title="레드스톤 가루">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EA%B8%88%EA%B4%B4" title="금괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-800px -3488px" title="금괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [linkx]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            <a href="/%EA%B4%AD%EC%9D%B4" title="괭이">
             괭이
            </a>
           </th>
           <td>
            모든
            <a href="/%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="나무 판자">
             나무 판자
            </a>
            또는
            <br/>
            <a href="/%EC%A1%B0%EC%95%BD%EB%8F%8C" title="조약돌">
             조약돌
            </a>
            또는
            <br/>
            <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
             철괴
            </a>
            또는
            <br/>
            [linkx]
            
            또는
            <br/>
            [ahref]
            
            +
            <br/>
            <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
             막대기
            </a>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="animated-subframe animated-active">
                  <span class="invslot-item animated-active">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   [ahref]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%9E%90%EC%9E%91%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="자작나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-832px -832px" title="자작나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   <a class="new" href="/index.php?title=%EC%A0%95%EA%B8%80_%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90&amp;action=edit&amp;redlink=1" title="정글 나무 판자 (없는 문서)">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -864px" title="정글 나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                  <span class="invslot-item">
                   [linkx]
                   
                  </span>
                  <span class="invslot-item">
                   <a class="mw-redirect" href="/%EC%A7%99%EC%9D%80_%EC%B0%B8%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="짙은 참나무 판자">
                    <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-512px -864px" title="짙은 참나무 판자">
                     <br/>
                    </span>
                   </a>
                  </span>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  <a href="/%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C" title="다이아몬드">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3488px" title="다이아몬드">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EB%A7%89%EB%8C%80%EA%B8%B0" title="막대기">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -1120px" title="막대기">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;22 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [linkx]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;23 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [linkx]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 <a href="/%EA%B4%AD%EC%9D%B4" title="괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-576px -3552px" title="Golden Hoe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;24 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 <a href="/%EA%B4%AD%EC%9D%B4" title="괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-224px -3552px" title="Diamond Hoe">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            [ahref]
            
           </th>
           <td>
            손상된, 일치하는 괭이
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                 <li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx]<li>[pkeyx]</li>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  <a class="new" href="/index.php?title=Damaged_Wooden_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Wooden Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-96px -3552px" title="Wooden Hoe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Golden Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-704px -3520px" title="Golden Hoe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Diamond_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Diamond Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-512px -3520px" title="Diamond Hoe">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot animated">
                 <span class="invslot-item animated-active">
                  <a class="new" href="/index.php?title=Damaged_Wooden_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Wooden Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-96px -3552px" title="Wooden Hoe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Stone_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Stone Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-992px -3520px" title="Stone Hoe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Iron_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Iron Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-832px -3520px" title="Iron Hoe">
                    [ahref][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[ahref]</li><li>[keywordx]</li><li>[mkey1]</li>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  <a class="new" href="/index.php?title=Damaged_Golden_Hoe&amp;action=edit&amp;redlink=1" title="Damaged Golden Hoe (없는 문서)">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-704px -3520px" title="Golden Hoe">
                    <br/>
                   </span>
                  </a>
                 </span>
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot animated invslot-large">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [linkx]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;22 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 <a href="/%EA%B4%AD%EC%9D%B4" title="괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-0px -3584px" title="Stone Hoe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;23 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [ahref]
                 
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 <a href="/%EA%B4%AD%EC%9D%B4" title="괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-576px -3552px" title="Golden Hoe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;24 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [linkx]
                 
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            두 괭이의 내구도가 합쳐지고, 보너스로 5%가 추가된다.
           </td>
          </tr>
          <tr>
           <th>
            <a href="/%EA%B0%80%EC%9C%84" title="가위">
             가위
            </a>
           </th>
           <td>
            [ahref]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EC%B2%A0%EA%B4%B4" title="철괴">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-896px -3488px" title="철괴">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [ahref]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th>
            [linkx]
            
           </th>
           <td>
            <li>[linkx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx]<li>[pkeyx]</li>
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  [linkx]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
                <span class="invslot">
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [linkx]
                 
                </span>
               </span>
              </span>
              <span class="mcui-icons">
               <span class="mcui-shapeless" title="이 제작법은 일정한 형태가 없으므로, 재료 아이템을 제작 격자 내의 아무 곳에 배치할 수 있습니다.">
                <br/>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            두 가위의 내구도가 합쳐지고, 추가로 5%의 내구도가 더해된다.
            <sup class="nowrap">
             [
             <i>
              <span title="이 문장은 마인크래프트 다음 버전에는 적용되지 않는다.">
              </span>
              [ahref]
              
              이전에만
             </i>
             ]
            </sup>
           </td>
          </tr>
         </tbody>
        </table>
        <p>
         <br/>
        </p>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
         이 부분의 본문은
         <b>
          [linkx]
          
         </b>
         입니다.
        </div>
        <p>
         많은 블록은 채굴에 가장 효율적인 도구가 있다. 일부 블록은 특정 도구가 있어야만 채굴할 수 있다. 도구의 재질도 채굴 속도에 영향을 미친다. 효율은 일반적으로 나무, 돌, 철, 다이아몬드, 황금 순으로 높아진다.
        </p>
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
         이 부분의 본문은
         <b>
          [ahref]
          
         </b>
         입니다.
        </div>
        <p>
         모든 도구는 각각 내구도가 다르다. 도구의 내구도는 재료에 의해 영향을 받는다. 내구도는 일반적으로 황금, 나무, 돌, 철, 다이아몬드 순으로 좋다.
        </p>
        <p>
         일부 도구는 블록 채굴 도구가 아니다. 괭이, 활, 낚싯대, 당근 낚싯대, 부싯돌과 부시, 양동이 등이 이에 해당한다. 이들 도구를 사용하여 블록을 깨뜨리는 것은 효율이 맨손과 동일하지만, 이런 도구를 사용한다고 별도로 내구도가 줄지는 않는다. 즉, 도구는 올바른 용도에 사용할 때만 내구도가 줄어든다.
        </p>
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
         이 부분의 본문은
         <b>
          [linkx]
          
         </b>
         입니다.
        </div>
        <p>
         모든 철 도구 또는 금 도구는 화로에서 제련하면 각각
         <a href="/%EC%B2%A0_%EC%A1%B0%EA%B0%81" title="철 조각">
          철 조각
         </a>
         과
         <a href="/%EA%B8%88_%EC%A1%B0%EA%B0%81" title="금 조각">
          금 조각[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][ahref][linkx][ahref][ahref][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx][ahref][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][mkey1]
         </a>
         이 만들어진다.
        </p>
        <table class="wikitable sortable collapsible" data-description="제련방법">
         <tbody>
          <tr>
           <th>
            이름
           </th>
           <th>
            재료
           </th>
           <th class="unsortable">
            [linkx]
            
            방법
           </th>
          </tr>
          <tr>
           <th>
            <a href="/%EC%B2%A0_%EC%A1%B0%EA%B0%81" title="철 조각">
             철 조각
            </a>
           </th>
           <td>
            모든
            <a class="mw-selflink selflink">
             철 도구
            </a>
            +
            <br>
             <li>[linkx]</li><li>[pkeyx]</li>[pkeyx][pkeyx]<li>[ahref]</li>
            </br>
            모든
            [ahref]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Furnace">
              <span class="mcui-input">
               <span class="invslot animated">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;24 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-736px -3552px" title="Iron Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;20.9 Attack Speed/&amp;#160;&amp;29 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-672px -3552px" title="Iron Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;24.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-768px -3552px" title="Iron Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;23 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 <a href="/%EA%B4%AD%EC%9D%B4" title="괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-704px -3552px" title="Iron Hoe">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
               <span class="mcui-fuel">
                <br/>
               </span>
               <span class="invslot animated">
                <span class="invslot-item animated-active">
                 <a href="/%EC%84%9D%ED%83%84" title="석탄">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-576px -3488px" title="석탄">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item">
                 <a href="/%EC%84%9D%ED%83%84" title="석탄">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-512px -3488px" title="숯">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item">
                 [linkx]
                 
                </span>
                <span class="invslot-item">
                 <a class="mw-redirect" href="/%EC%B0%B8%EB%82%98%EB%AC%B4_%ED%8C%90%EC%9E%90" title="참나무 판자">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-192px -896px" title="Wood Planks">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item">
                 [keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[mkey1]</li>
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [ahref]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
          </tr>
          <tr>
           <th>
            <a href="/%EA%B8%88_%EC%A1%B0%EA%B0%81" title="금 조각">
             금 조각
            </a>
           </th>
           <td>
            모든
            [ahref]
            
            +
            <br/>
            모든
            [linkx]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Furnace">
              <span class="mcui-input">
               <span class="invslot animated">
                <span class="invslot-item animated-active" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21.2 Attack Speed/&amp;#160;&amp;22 Attack Damage">
                 <a href="/%EA%B3%A1%EA%B4%AD%EC%9D%B4" title="곡괭이">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3552px" title="Golden Pickaxe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;27 Attack Damage">
                 <a href="/%EB%8F%84%EB%81%BC" title="도끼">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-544px -3552px" title="Golden Axe">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;22.5 Attack Damage">
                 <a href="/%EC%82%BD" title="삽">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-640px -3552px" title="Golden Shovel">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item" data-minetip-text="/&amp;7When in main hand:/&amp;#160;&amp;21 Attack Speed/&amp;#160;&amp;21 Attack Damage">
                 [ahref]
                 
                </span>
               </span>
               <span class="mcui-fuel">
                <br/>
               </span>
               <span class="invslot animated">
                <span class="invslot-item animated-active">
                 [ahref]
                 
                </span>
                <span class="invslot-item">
                 <a href="/%EC%84%9D%ED%83%84" title="석탄">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-512px -3488px" title="숯">
                   <br/>
                  </span>
                 </a>
                </span>
                <span class="invslot-item">
                 [ahref]
                 
                </span>
                <span class="invslot-item">
                 [ahref]
                 
                </span>
                <span class="invslot-item">
                 <a href="/%EC%84%9D%ED%83%84_%EB%B8%94%EB%A1%9D" title="석탄 블록">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-32px -3232px" title="석탄 블록">
                   <br/>
                  </span>
                 </a>
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [linkx]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
          </tr>
         </tbody>
        </table>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
         참고 : 이 동영상은 오래되었다. 1.6.1에서
         [linkx]
         
         이 도구로 추가되었다.
        </div>
        <div style="text-align:center">
         <div class="thumb embedvideo autoResize" style="width: 433px;">
          <div class="embedvideo autoResize" style="">
           <div class="embedvideowrap" style="width: 425px;">
            <iframe allowfullscreen="true" frameborder="0" height="239" src="//www.youtube.com/embed/7kl83Bzt7ZA?" width="425">
            </iframe>
           </div>
          </div>
         </div>
        </div>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <table class="wikitable" data-description="History">
         <tbody>
          <tr>
           <th colspan="6">
            [linkx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Wooden tools became able to be used as
            [linkx]
            
            for
            <a class="mw-redirect" href="/Furnace" title="Furnace">
             furnaces
            </a>
            in case players didn't want to repair them or finish using them.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Instead of replacing the barehanded damage (
            <span class="nowrap">
             1 (
             <span class="nowrap" title="1">
              <a class="image" href="/%ED%8C%8C%EC%9D%BC:Half_Heart.svg">
              </a>
             </span>
             )
            </span>
            ), pickaxes, shovels, axes and swords now add their damage onto the barehanded damage.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            <a class="new" href="/index.php?title=Java_1.11.1&amp;action=edit&amp;redlink=1" title="Java 1.11.1 (없는 문서)">
             1.11.1
            </a>
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            <a class="new" href="/index.php?title=Java_16w50a&amp;action=edit&amp;redlink=1" title="Java 16w50a (없는 문서)">
             16w50a
            </a>
           </th>
           <td>
            Golden and iron tools now smelt down into one of their respective nuggets.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [ahref]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            ?
           </th>
           <td>
            Tools cannot be repaired by crafting.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            <a href="/%EB%B2%A0%EB%93%9C%EB%9D%BD_%EC%97%90%EB%94%94%EC%85%98_%EB%B2%84%EC%A0%84_%EC%97%AD%EC%82%AC#.ED.8F.AC.EC.BC.93_.EC.97.90.EB.94.94.EC.85.98_.EC.95.8C.ED.8C.8C" title="베드락 에디션 버전 역사">
             포켓 에디션 알파
            </a>
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added stone tools and shears.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            <a class="new" href="/index.php?title=%ED%8F%AC%EC%BC%93_%EC%97%90%EB%94%94%EC%85%98_%EC%95%8C%ED%8C%8C_0.3.0&amp;action=edit&amp;redlink=1" title="포켓 에디션 알파 0.3.0 (없는 문서)">
             0.3.0
            </a>
           </th>
           <td>
            Added wooden tools.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added iron, diamond, and golden tools.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [linkx]
            
           </th>
           <td>
            Added bows.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added flint and steel and all hoe types.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added buckets.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [linkx]
            
           </th>
           <td>
            Flint and steel will now ignite creepers.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added flint and steel and shears to the creative inventory.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added fishing rod.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [linkx]
            
           </th>
           <td>
            Added carrot on a stick and leads.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [linkx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            <a class="new" href="/index.php?title=%ED%8F%AC%EC%BC%93_%EC%97%90%EB%94%94%EC%85%98_%EC%95%8C%ED%8C%8C_1.1.0.0&amp;action=edit&amp;redlink=1" title="포켓 에디션 알파 1.1.0.0 (없는 문서)">
             alpha 1.1.0.0
            </a>
           </th>
           <td>
            Golden and iron tools now smelt down into one of their respective nuggets.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [ahref]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" rowspan="1">
            [linkx]
            
           </th>
           <td>
            Golden and iron tools now smelt down into one of their respective nuggets.
           </td>
          </tr>
         </tbody>
        </table>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         “도구”에 관련된 문제점은
         [linkx]
         
         에서 관리된다. 그곳에서 문제점을 보고하면 된다.
        </p>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <ul>
         <li>
          콘솔 에디션 제작 화면에서는 황금 도구가 다이아몬드 도구보다 더 높이 위치한다.
         </li>
         <li>
          나무 도구는 내구도에 관계없이 화로에서 연료로 사용할 수 있다. 즉, 내구도가 1만 남은 나무 도구도 화로에서 연료로 사용할 수 있다.
         </li>
        </ul>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <ul>
         <li>
          <a href="/%EC%95%84%EC%9D%B4%ED%85%9C_%EC%88%98%EB%A6%AC" title="아이템 수리">
           아이템 수리
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
        <div class="load-page loadbox-navbox" data-page="Template:Items/content" style="background-color: white; border: 1px solid #CCC; margin-bottom: 0.5em; padding: 0 0.5em;">
         <p>
          <span id=".5B.5B.EC.95.84.EC.9D.B4.ED.85.9C.5D.5D">
           <b>
            <a href="/%EC%95%84%EC%9D%B4%ED%85%9C" title="아이템">
             아이템
            </a>
           </b>
          </span>
         </p>
         <div class="load-page-content noscript">
          <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
           참조:
           [ahref]
           
           <span class="mw-editsection-like" title="편집: Template:Items/content">
            [
            <a class="external text" href="/index.php?title=%ED%8B%80:Items/content&amp;action=edit" target="_self">
             편집
            </a>
            ]
           </span>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="printfooter">
       원본 주소 "
       [linkx]
       
       "
      </div>
      <div class="catlinks" data-mw="interface" id="catlinks">
       <div class="mw-normal-catlinks" id="mw-normal-catlinks">
        <a href="/%ED%8A%B9%EC%88%98:%EB%B6%84%EB%A5%98" title="특수:분류">
         분류
        </a>
        :
        <ul>
         <li>
          <a class="new" href="/index.php?title=%EB%B6%84%EB%A5%98:Upcoming&amp;action=edit&amp;redlink=1" title="분류:Upcoming (없는 문서)">
           Upcoming
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="new" href="/index.php?title=%EB%B6%84%EB%A5%98:Inaccurate_videos&amp;action=edit&amp;redlink=1" title="분류:Inaccurate videos (없는 문서)">
           Inaccurate videos
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="new" href="/index.php?title=%EB%B6%84%EB%A5%98:Tools&amp;action=edit&amp;redlink=1" title="분류:Tools (없는 문서)">
           Tools
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="visualClear">
      </div>
     </div>
     <div id="siderail_minecraft_ko_gamepedia">
      <div id="atfmrec_minecraft_ko_gamepedia">
       <div id="cdm-zone-02">
       </div>
      </div>
      <div id="middlemrec_minecraft_ko_gamepedia">
       [ahref]
       
      </div>
      <div id="btfmrec_minecraft_ko_gamepedia">
       <div id="cdm-zone-06">
       </div>
      </div>
     </div>
     <div class="visualClear">
     </div>
     <div id="btfheroContainer">
      <div id="btfhero_container">
       <div id="twitchnet-liveontwitch" style="margin: 0 auto; width: 90%; max-width: 776px; height: 270px;">
       </div>
      </div>
     </div>
     <div id="btflb">
      <div id="cdm-zone-04">
      </div>
     </div>
    </div>
    <div id="mw-navigation">
     <h2>
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h2>
     <div id="mw-head">
      <div id="left-navigation">
       <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
        <h3 id="p-namespaces-label">
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <ul>
         <li class="selected" id="ca-nstab-main">
          <span>
           [linkx]
           
          </span>
         </li>
         <li class="new" id="ca-talk">
          <span>
           [ahref]
           
          </span>
         </li>
        </ul>
       </div>
       <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
        <h3 id="p-variants-label">
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="menu">
         <ul>
         </ul>
        </div>
       </div>
       <div aria-labelledby="p-sharing-label" class="vectorMenu" id="p-sharing" role="navigation">
        <h3 id="p-cactions-label">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="menu">
         <div id="socialIconImages">
          <a href="/intent/tweet?text=Check+out+%EB%8F%84%EA%B5%AC+on+Minecraft+Wiki+--&amp;via=CurseGamepedia&amp;url=https%3A%2F%2Fminecraft-ko.gamepedia.com%2F%25EB%258F%2584%25EA%25B5%25AC" target="_blank">
          </a>
          [linkx]
          
          <a href="/submit?url=https%3A%2F%2Fminecraft-ko.gamepedia.com%2F%25EB%258F%2584%25EA%25B5%25AC&amp;title=Check+out+%EB%8F%84%EA%B5%AC+on+Minecraft+Wiki+via+%40CurseGamepedia%3A+https%3A%2F%2Fminecraft-ko.gamepedia.com%2F%25EB%258F%2584%25EA%25B5%25AC" target="_blank">
          </a>
          [linkx]
          
          <a href="/share.php?url=https%3A%2F%2Fminecraft-ko.gamepedia.com%2F%25EB%258F%2584%25EA%25B5%25AC" target="_blank">
          </a>
         </div>
        </div>
       </div>
      </div>
      <div id="right-navigation">
       <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
        <h3 id="p-views-label">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <ul>
         <li class="collapsible selected" id="ca-view">
          <span>
           <a href="/%EB%8F%84%EA%B5%AC">
            보기
           </a>
          </span>
         </li>
         <li class="collapsible" id="ca-ve-edit">
          <span>
           <a accesskey="v" href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;veaction=edit" title="이 문서 편집 [v]">
            편집
           </a>
          </span>
         </li>
         <li class="collapsible" id="ca-edit">
          <span>
           [linkx]
           
          </span>
         </li>
         <li class="collapsible" id="ca-history">
          <span>
           <a accesskey="h" href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;action=history" title="문서의 과거 판 [h]">
            역사[ahref][pkeyx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][keywordx][ahref][mkey1][linkx][mkey1][pkeyx][pkeyx][ahref][linkx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][mkey1][linkx][pkeyx][linkx][keywordx][linkx][ahref][pkeyx][pkeyx]
           </a>
          </span>
         </li>
        </ul>
       </div>
       <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
        <h3 id="p-cactions-label">
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="menu">
         <ul>
         </ul>
        </div>
       </div>
       <div id="p-search" role="search">
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <form action="/index.php" id="searchform">
         <div id="simpleSearch">
         </div>
        </form>
       </div>
      </div>
     </div>
     <div id="mw-panel">
      <div id="p-logo" role="banner">
       <a class="mw-wiki-logo" href="/Minecraft_Wiki" title="대문으로 가기 - Minecraft Wiki">
       </a>
      </div>
      <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
       <h3 id="p-navigation-label">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="body">
        <ul>
         <li id="n-mainpage-description">
          [linkx]
          
         </li>
         <li id="n-recentchanges">
          [linkx]
          
         </li>
         <li id="n-randompage">
          <a accesskey="x" href="/%ED%8A%B9%EC%88%98:%EC%9E%84%EC%9D%98%EB%AC%B8%EC%84%9C" title="임의 문서 불러오기 [x]">
           임의 문서로
          </a>
         </li>
         <li id="n-portal">
          <a href="/Minecraft_Wiki%ED%86%A0%EB%A1%A0:%EC%82%AC%EC%9A%A9%EC%9E%90_%EB%AA%A8%EC%9E%84" title="프로젝트에 대해 여러분이 할 수 있고, 정보를 찾을 수 있는 곳">
           사용자 모임
          </a>
         </li>
         <li id="n-.EA.B4.80.EB.A6.AC.EC.9E.90-.EC.9A.94.EC.B2.AD">
          [ahref]
          
         </li>
         <li id="n-.EC.9C.84.ED.82.A4-.EA.B7.9C.EC.A0.95">
          [ahref]
          
         </li>
         <li id="n-help">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-.EC.9C.A0.EC.9A.A9.ED.95.9C_.EB.AC.B8.EC.84.9C-label" class="portal" id="p-.EC.9C.A0.EC.9A.A9.ED.95.9C_.EB.AC.B8.EC.84.9C" role="navigation">
       <h3 id="p-.EC.9C.A0.EC.9A.A9.ED.95.9C_.EB.AC.B8.EC.84.9C-label">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="body">
        <ul>
         <li id="n-.EB.B8.94.EB.A1.9D">
          [linkx]
          
         </li>
         <li id="n-.EC.95.84.EC.9D.B4.ED.85.9C">
          <a href="/%EC%95%84%EC%9D%B4%ED%85%9C">
           아이템
          </a>
         </li>
         <li id="n-.EC.A0.9C.EC.9E.91.EB.B2.95">
          [ahref]
          
         </li>
         <li id="n-.EC.A0.9C.EB.A0.A8">
          [linkx]
          
         </li>
         <li id="n-.EB.A7.88.EB.B2.95.EB.B6.80.EC.97.AC">
          <a href="/%EB%A7%88%EB%B2%95%EB%B6%80%EC%97%AC">
           마법부여
          </a>
         </li>
         <li id="n-.EB.AC.BC.EC.95.BD-.EC.96.91.EC.A1.B0">
          [linkx]
          
         </li>
         <li id="n-.EB.AA.B9">
          [ahref]
          
         </li>
         <li id="n-.EA.B1.B0.EB.9E.98">
          <a href="/%EA%B1%B0%EB%9E%98">
           거래
          </a>
         </li>
         <li id="n-.EB.A0.88.EB.93.9C.EC.8A.A4.ED.86.A4-.ED.9A.8C.EB.A1.9C">
          [linkx]
          
         </li>
         <li id="n-.EB.A6.AC.EC.86.8C.EC.8A.A4-.ED.8C.A9">
          <a href="/%EB%A6%AC%EC%86%8C%EC%8A%A4_%ED%8C%A9">
           리소스 팩
          </a>
         </li>
         <li id="n-.EB.AA.A8.EB.93.9C">
          <a href="/%EB%AA%A8%EB%93%9C">
           모드
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-Gamepedia-label" class="portal" id="p-Gamepedia" role="navigation">
       <h3 id="p-Gamepedia-label">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="body">
        <ul>
         <li id="n-.EC.A7.80.EC.9B.90">
          <a href="m" rel="nofollow" target="_self">
           지원
          </a>
         </li>
         <li id="n-.EB.B6.80.EC.A0.81.EC.A0.88-.EA.B4.91.EA.B3.A0-.EC.8B.A0.EA.B3.A0">
          [ahref]
          
         </li>
         <li id="n-.EB.8F.84.EC.9B.80.EB.A7.90-.EC.9C.84.ED.82.A4">
          [linkx]
          
         </li>
         <li id="n-.EC.97.B0.EB.9D.BD">
          <a href="/How_to_contact_Gamepedia">
           연락
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
       <h3 id="p-tb-label">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="body">
        <ul>
         <li id="t-whatlinkshere">
          <a accesskey="j" href="/%ED%8A%B9%EC%88%98:%EA%B0%80%EB%A6%AC%ED%82%A4%EB%8A%94%EB%AC%B8%EC%84%9C/%EB%8F%84%EA%B5%AC" title="여기를 가리키는 모든 위키 문서의 목록 [j]">
           여기를 가리키는 문서
          </a>
         </li>
         <li id="t-recentchangeslinked">
          <a accesskey="k" href="/%ED%8A%B9%EC%88%98:%EB%A7%81%ED%81%AC%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C/%EB%8F%84%EA%B5%AC" rel="nofollow" title="이 문서에서 링크한 문서의 최근 바뀜 [k]">
           가리키는 글의 최근 바뀜
          </a>
         </li>
         <li id="t-specialpages">
          [linkx]
          
         </li>
         <li id="t-print">
          <a accesskey="p" href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;printable=yes" rel="alternate" title="이 문서의 인쇄용 판 [p]">
           인쇄용 판
          </a>
         </li>
         <li id="t-permalink">
          <a href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;oldid=52163" title="문서의 이 판에 대한 고유링크">
           고유 링크
          </a>
         </li>
         <li id="t-info">
          <a href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;action=info" title="이 문서에 대한 자세한 정보">
           문서 정보
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
       <h3 id="p-lang-label">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="body">
        <ul>
         <li class="interlanguage-link interwiki-en">
          <a class="interlanguage-link-target" href="/tools" hreflang="en" lang="en" title="tools – English">
           English
          </a>
         </li>
         <li class="interlanguage-link interwiki-cs">
          <a class="interlanguage-link-target" href="/N%C3%A1stroje" hreflang="cs" lang="cs" title="Nástroje – čeština">
           Čeština
          </a>
         </li>
         <li class="interlanguage-link interwiki-de">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-es">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-fr">
          <a class="interlanguage-link-target" href="/Outils" hreflang="fr" lang="fr" title="Outils – français">
           Français
          </a>
         </li>
         <li class="interlanguage-link interwiki-hu">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-it">
          <a class="interlanguage-link-target" href="/Strumenti" hreflang="it" lang="it" title="Strumenti – italiano">
           Italiano
          </a>
         </li>
         <li class="interlanguage-link interwiki-ja">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-nl">
          <a class="interlanguage-link-target" href="/Gereedschap" hreflang="nl" lang="nl" title="Gereedschap – Nederlands">
           Nederlands
          </a>
         </li>
         <li class="interlanguage-link interwiki-pl">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-pt">
          <a class="interlanguage-link-target" href="/Ferramentas" hreflang="pt" lang="pt" title="Ferramentas – português">
           Português
          </a>
         </li>
         <li class="interlanguage-link interwiki-ru">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-zh">
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-socialProfiles-label" class="portal" id="p-socialProfiles" role="navigation">
       <h3 id="p-socialProfiles-label">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="body">
        <div class="socialSidebar">
         <div class="socialLink twitter">
          <a href="/CurseGamepedia" target="_blank">
          </a>
         </div>
         <div class="socialLink facebook">
          <a href="/CurseGamepedia" target="_blank">
          </a>
         </div>
         <div class="socialLink twitch">
          <a href="/gamepedia/videos" target="_blank">
          </a>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div id="footer" role="contentinfo">
     <ul id="footer-info">
      <li id="footer-info-lastmod">
       이 문서는 2019년 4월 2일 (화) 17:11에 마지막으로 편집되었습니다.
      </li>
      <li id="footer-info-copyright">
       별도로 명시하지 않은 경우, 내용은
       [ahref]
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[ahref][keywordx]<li>[mkey1]</li>
       
       에 따라 사용할 수 있습니다.
       <br/>
       Minecraft content and materials are trademarks and copyrights of Mojang and its licensors.  All rights reserved.
       <br/>
       This site is a part of Wikia, Inc. and is not affiliated with Mojang.
      </li>
     </ul>
     <ul id="footer-places">
      <li id="footer-places-about">
       [ahref]
       
      </li>
      <li id="footer-places-disclaimer">
       [ahref]
       
      </li>
      <li id="footer-places-mobileview">
       <a class="noprint stopMobileRedirectToggle" href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;mobileaction=toggle_view_mobile">
        모바일 보기
       </a>
      </li>
     </ul>
     <ul class="noprint" id="footer-icons">
      <li id="footer-copyrightico">
       [linkx]
       
      </li>
      <li id="footer-poweredbyico">
       [ahref]
       
       <a href="/What_is_Hydra" target="_self">
       </a>
      </li>
     </ul>
     <div style="clear: both;">
     </div>
    </div>
   </div>
   <div id="footer-push">
   </div>
  </div>
  <div id="footer-and-prefooter">
   <div id="gamepedia-footer">
    <div class="footer-wrapper-gp">
     <div class="footer-box footer-logo">
      [linkx]
      
     </div>
     <div class="footer-box footer-social">
      <ul class="social">
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/CurseGamepedia" title="Twitter">
         <svg height="18" width="23" xmlns="http://www.w3.org/2000/svg">
          <path d="M19.822727 4.2972696v.5729693c0 5.8729351-4.518416 12.6053241-12.826471 12.6053241-2.623596 0-4.955681-.7162116-6.996256-2.0053925.437266 0 .728777.1432423 1.166043.1432423 2.040575 0 4.081149-.7162116 5.684458-1.8621501-1.894819 0-3.643883-1.2891809-4.226905-3.151331.291511 0 .583022.1432423.874532.1432423.437266 0 .437266 0 1.020288-.1432423-2.186331-.429727-4.08115-2.2918772-4.08115-4.440512 0 .429727 1.603309.429727 2.332086.5729693C1.603309 5.8729351.874532 4.5837542.874532 3.0080887c0-.8594539.291511-1.5756655.728777-2.2918771 2.18633 2.7216041 5.684458 4.4405119 9.328342 4.7269965-.145756-.4297269-.145756-.7162116-.145756-1.0026962C10.785895 2.0053925 12.82647 0 15.304311 0c1.311798 0 2.477841.429727 3.352373 1.4324232 1.020287-.2864846 1.894819-.5729693 2.769351-1.1459386-.437266 1.1459386-1.166042 1.8621502-1.894819 2.4351195.874532-.1432423 1.894819-.429727 2.623596-.7162116-.728777.8594539-1.457553 1.7189078-2.332085 2.2918771z" fill-rule="evenodd">
          </path>
         </svg>
        </a>
       </li>
       <li>
        <a href="/CurseEntertainment" title="Youtube">
         <svg height="17" width="24" xmlns="http://www.w3.org/2000/svg">
          <path d="M23.8 3.6s-.2-1.7-1-2.4c-.9-1-1.9-1-2.4-1C17 0 12 0 12 0S7 0 3.6.2c-.5.1-1.5.1-2.4 1-.7.7-1 2.4-1 2.4S0 5.5 0 7.5v1.8c0 1.9.2 3.9.2 3.9s.2 1.7 1 2.4c.9 1 2.1.9 2.6 1 1.9.2 8.2.2 8.2.2s5 0 8.4-.3c.5-.1 1.5-.1 2.4-1 .7-.7 1-2.4 1-2.4s.2-1.9.2-3.9V7.4c0-1.9-.2-3.8-.2-3.8zM9.5 11.5V4.8L16 8.2l-6.5 3.3z" fill-rule="evenodd">
          </path>
         </svg>
        </a>
       </li>
      </ul>
     </div>
     <div class="footer-box footer-links mobile-split">
      <ul>
       <li>
        <a href="m">
         Support
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/pro">
         PRO
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <footer class="show-ads" id="curse-footer" role="complimentary">
    <div class="footer-wrapper">
     <div class="footer-box footer-ad">
      <div class="ad-placement ad-main-med-rect-footer">
       <div id="cdm-zone-03">
       </div>
      </div>
     </div>
     <div class="footer-box footer-logo">
      <a href="m" target="_blank">
      </a>
     </div>
     <div class="footer-box footer-properties">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <ul class="properties mobile-split">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="m">
         D&amp;D Beyond
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-social">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <ul class="social">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/getfandom" title="Twitter">
         <svg height="19" width="24" xmlns="http://www.w3.org/2000/svg">
          <path d="M20.957 4.543v.606c0 6.209-4.777 13.327-13.56 13.327-2.774 0-5.24-.758-7.397-2.12.462 0 .77.15 1.233.15 2.157 0 4.314-.756 6.01-1.968-2.004 0-3.853-1.363-4.47-3.332.309 0 .617.152.925.152.463 0 .463 0 1.079-.152C2.466 10.752.462 8.783.462 6.512c0 .454 1.695.454 2.466.606C1.695 6.209.925 4.846.925 3.18c0-.908.308-1.666.77-2.423 2.311 2.878 6.01 4.695 9.862 4.998-.154-.455-.154-.758-.154-1.06C11.403 2.12 13.56 0 16.18 0c1.387 0 2.62.454 3.544 1.514 1.079-.302 2.004-.605 2.928-1.211-.462 1.211-1.233 1.969-2.003 2.574a14.785 14.785 0 0 0 2.774-.757c-.77.909-1.541 1.817-2.466 2.423z" fill-rule="evenodd">
          </path>
         </svg>
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/getfandom/" title="Instagram">
         <svg height="20" width="20" xmlns="http://www.w3.org/2000/svg">
          <path d="M17.510373 0H2.406639C1.078838 0 0 1.0788382 0 2.3236515v15.1867219c0 1.3278009 1.078838 2.406639 2.406639 2.406639h15.186722C18.921162 19.9170124 20 18.8381743 20 17.593361V2.3236515C19.917012 1.0788382 18.838174 0 17.510373 0zm-2.572614 2.4896266h1.659751c.497926 0 .829876.3319502.829876.8298755v1.659751c0 .4979253-.33195.8298755-.829876.8298755h-1.659751c-.497925 0-.829875-.3319502-.829875-.8298755v-1.659751c0-.4979253.33195-.8298755.829875-.8298755zM9.958506 6.1410788c2.074689 0 3.817428 1.7427386 3.817428 3.8174274s-1.742739 3.8174274-3.817428 3.8174274c-2.074689 0-3.817427-1.7427386-3.817427-3.8174274s1.742738-3.8174274 3.817427-3.8174274zm6.639004 11.2863071H3.319502c-.497925 0-.829875-.3319502-.829875-.8298755V8.2987552h1.659751c-.248963.9128631-.331951 1.9917012-.082988 2.9875519.497925 2.3236514 2.406639 4.1493775 4.73029 4.5643153 3.900415.746888 7.302905-2.1576763 7.302905-5.8921162 0-.5809128-.165975-1.1618257-.248963-1.659751h1.659751v8.2987552c-.082987.4979253-.414937.8298755-.912863.8298755z" fill-rule="evenodd">
          </path>
         </svg>
        </a>
       </li>
       <li>
        <a href="/company/fandomwikia/" title="LinkedIn">
         <svg height="19" width="19" xmlns="http://www.w3.org/2000/svg">
          <path d="M3.859375 19h-3.5625V5.9375h3.5625V19zM2.078125 4.43175C.931 4.43175 0 3.493625 0 2.337S.931.24225 2.078125.24225 4.15625 1.180375 4.15625 2.337s-.929812 2.09475-2.078125 2.09475zM18.109375 19h-3.5625v-6.65475c0-3.9995-4.75-3.6966875-4.75 0V19h-3.5625V5.9375h3.5625v2.0959375c1.65775-3.070875 8.3125-3.2976875 8.3125 2.94025V19z" fill-rule="nonzero">
          </path>
         </svg>
        </a>
       </li>
      </ul>
     </div>
     <div class="footer-box footer-overview">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <ul class="mobile-split">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/careers">
         Careers
        </a>
       </li>
       <li>
        <a href="/press">
         Press
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/curse-privacy-policy">
         Privacy Policy
        </a>
       </li>
      </ul>
     </div>
     <div class="footer-box footer-community">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="mobile-split">
       <li>
        <a href="/wiki/Community_Central">
         Community Central
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-advertise">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="mobile-split">
       <li>
        <a href="/mediakit">
         Media Kit
        </a>
       </li>
       <li>
        <a href="/mediakit#contact">
         Contact Us
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div class="footer-post">
     Minecraft Wiki is a Fandom Gaming Community.
     <hr/>
     <span class="footer-post-mobile">
      <a href="/index.php?title=%EB%8F%84%EA%B5%AC&amp;mobileaction=toggle_view_mobile">
       View Mobile Site
      </a>
     </span>
    </div>
   </footer>
  </div>
  <noscript>
  </noscript>
  <noscript>
   <div>
   </div>
  </noscript>
  <div id="cdm-zone-end">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0438
  </b>
 </body>
</html>
|<---