--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-여우 rootpage-여우 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
    <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="en">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     Definition from Wiktionary, the free dictionary
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [linkx]
    
    [ahref]
     <li>[area1][mkey1]</li>[area1][keywordx][area1][keywordx]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en">
     <div class="mw-parser-output">
      <div class="toc" id="toc">
       <div class="toctitle" dir="ltr" lang="en">
        <h2>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <span class="toctogglespan">
         <label class="toctogglelabel" for="toctogglecheckbox">
         </label>
        </span>
       </div>
       <ul>
        <li class="toclevel-1 tocsection-1">
         <a href="n">
          <span class="tocnumber">
           1
          </span>
          <span class="toctext">
           Korean
          </span>
         </a>
         <ul>
          <li class="toclevel-2 tocsection-2">
           [ahref]
           
          </li>
          <li class="toclevel-2 tocsection-3">
           [ahref]
           
          </li>
          <li class="toclevel-2 tocsection-4">
           [linkx]
           
           <ul>
            <li class="toclevel-3 tocsection-5">
             <a href="s">
              <span class="tocnumber">
               1.3.1
              </span>
              <span class="toctext">
               Derived terms
              </span>
             </a>
            </li>
           </ul>
          </li>
          <li class="toclevel-2 tocsection-6">
           [ahref]
           
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <h2>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <p>
       From
       <span class="etyl">
        [linkx]
        
       </span>
       <i class="Kore mention" lang="okm">
        <a class="new" href="/w/index.php?title=%EC%97%AC%E1%85%80%E1%86%9E&amp;action=edit&amp;redlink=1" title="여ᅀᆞ (page does not exist)">
         여ᅀᆞ
        </a>
       </i>
       <span class="mention-gloss-paren annotation-paren">
        (
       </span>
       <span class="mention-tr tr Latn" lang="okm-Latn">
        yezo
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )
       </span>
       . First attested in the
       <i>
        Hunmin jeongeum haerye
       </i>
       (
       <span class="Kore" lang="ko">
        訓民正音解例 / 훈민정음해례
       </span>
       ), 1446, as a connective form
       <i class="Kore mention" lang="okm">
        여ᇫㅇ
       </i>
       <span class="mention-gloss-paren annotation-paren">
        (
       </span>
       <span class="mention-tr tr Latn" lang="okm-Latn">
        yezG
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )
       </span>
       .
Presumed classical word stem
       <i>
        *jɔzɦ
       </i>
       or
       <i>
        *jɔzɣ
       </i>
       still have influence on some dialects (compare dialectal forms
       <span class="Kore" lang="ko">
        <a class="new" href="/w/index.php?title=%EC%97%AC%EC%88%98&amp;action=edit&amp;redlink=1" title="여수 (page does not exist)">
         여수
        </a>
       </span>
       <span class="mention-gloss-paren annotation-paren">
        (
       </span>
       <span class="tr Latn" lang="ko-Latn">
        yeosu
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )
       </span>
       ,
       <span class="Kore" lang="ko">
        <a class="new" href="/w/index.php?title=%EC%97%AC%EC%8B%9C&amp;action=edit&amp;redlink=1" title="여시 (page does not exist)">
         여시
        </a>
       </span>
       <span class="mention-gloss-paren annotation-paren">
        ([pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][ahref][area1][keywordx][area1][mkey1]
       </span>
       <span class="tr Latn" lang="ko-Latn">
        yeosi
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )[linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][ahref][area1][mkey1][pkeyx][area1][mkey1][linkx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][area1][mkey1][area1][keywordx][ahref][linkx][ahref][area1][keywordx][area1][keywordx][area1][keywordx][linkx][area1][keywordx][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx]
       </span>
       ,
       <span class="Kore" lang="ko">
        [ahref]
        
       </span>
       <span class="mention-gloss-paren annotation-paren">
        (
       </span>
       <span class="tr Latn" lang="ko-Latn">
        yeokki
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )
       </span>
       ,
       <span class="Kore" lang="ko">
        [ahref]
        
       </span>
       <span class="mention-gloss-paren annotation-paren">
        (
       </span>
       <span class="tr Latn" lang="ko-Latn">
        yeong
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )
       </span>
       ,
       <span class="Kore" lang="ko">
        <a class="new" href="/w/index.php?title=%EC%98%81%EB%81%BC&amp;action=edit&amp;redlink=1" title="영끼 (page does not exist)">
         영끼
        </a>
       </span>
       <span class="mention-gloss-paren annotation-paren">
        (
       </span>
       <span class="tr Latn" lang="ko-Latn">
        yeongkki
       </span>
       <span class="mention-gloss-paren annotation-paren">
        )
       </span>
       , etc.).
       <sup class="reference" id="cite_ref-1">
        <a href="1">
         [1]
        </a>
       </sup>
      </p>
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul>
       <li>
        <span style="padding-right:.5em;color:#8F390A;font-family:DejaVu Sans, sans-serif;font-weight:bold">
         <a href="/wiki/Wiktionary:International_Phonetic_Alphabet" title="Wiktionary:International Phonetic Alphabet">
          IPA
         </a>
         <sup>
          (
          <a href="/wiki/Appendix:Korean_pronunciation" title="Appendix:Korean pronunciation">
           key
          </a>
          )
         </sup>
        </span>
        <span class="IPA">
         [jʌ̹u]
        </span>
       </li>
       <li>
        <span style="padding-right:.5em;color:#8F390A;font-family:DejaVu Sans, sans-serif;font-weight:bold">
         Phonetic Hangul
        </span>
        [
        <span class="Kore" lang="ko">
         <span style="font-size:110%">
          여
         </span>
         <span style="font-size:110%">
          우
         </span>
        </span>
        ]
       </li>
      </ul>
      <table style="margin: 0 1em .5em 1.6em">
       <tbody>
        <tr>
         <td>
          <table cellpadding="1" style="border: 1px solid #DFDFDF; line-height: 25pt; padding: .1em .3em .1em .3em">
           <tbody>
            <tr>
             <td style="padding-right:.5em;font-size:10pt;font-family:DejaVu Sans, sans-serif;color:#555;font-weight:bold;background-color:#F8F9F8">
              Revised Romanization
              <sup>
               <small>
                <a href="/wiki/Wiktionary:About_Korean/Romanization" title="Wiktionary:About Korean/Romanization">
                 ?
                </a>
               </small>
              </sup>
             </td>
             <td class="IPA" style="padding-left:.7em;padding-right:.7em;font-size:100%">
              yeou
             </td>
            </tr>
            <tr>
             <td style="padding-right:.5em;font-size:10pt;font-family:DejaVu Sans, sans-serif;color:#555;font-weight:bold;background-color:#F8F9F8">
              Revised Romanization (translit.)
              <sup>
               <small>
                [linkx]
                
               </small>
              </sup>
             </td>
             <td class="IPA" style="padding-left:.7em;padding-right:.7em;font-size:100%">
              yeou
             </td>
            </tr>
            <tr>
             <td style="padding-right:.5em;font-size:10pt;font-family:DejaVu Sans, sans-serif;color:#555;font-weight:bold;background-color:#F8F9F8">
              McCune–Reischauer
              <sup>
               [ahref]<li>[area1][mkey1]</li>[area1][keywordx]<li>[area1][mkey1]</li><li>[area1][mkey1]</li>
              </sup>
             </td>
             <td class="IPA" style="padding-left:.7em;padding-right:.7em;font-size:100%">
              yŏu
             </td>
            </tr>
            <tr>
             <td style="padding-right:.5em;font-size:10pt;font-family:DejaVu Sans, sans-serif;color:#555;font-weight:bold;background-color:#F8F9F8">
              Yale Romanization
              <sup>
               <small>
                [linkx]
                
               </small>
              </sup>
             </td>
             <td class="IPA" style="padding-left:.7em;padding-right:.7em;font-size:100%">
              yewu
             </td>
            </tr>
           </tbody>
          </table>
         </td>
        </tr>
       </tbody>
      </table>
      <h3>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <p>
       <strong class="Kore headword" lang="ko">
        여우
       </strong>
       [ahref]
       
       (
       <span class="headword-tr manual-tr tr Latn" dir="ltr" lang="ko-Latn">
        yeou
       </span>
       ) (
       <i>
        counter
       </i>
       <b class="Kore" lang="ko">
        <a href="/wiki/%EB%A7%88%EB%A6%AC#Korean" title="마리">
         마리
        </a>
       </b>
       )
      </p>
      <ol>
       <li>
        <a href="/wiki/fox" title="fox">
         fox
        </a>
        ,
        [linkx]
         <li>[linkx]</li><li>[ahref]</li><li>[area1][mkey1]</li>
        
       </li>
      </ol>
      <h4>
       <span class="mw-headline" id="Derived_terms">
        Derived terms
       </span>
       <span class="mw-editsection">
        <li>[ahref]</li>[area1][keywordx]<li>[ahref]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
       </span>
      </h4>
      <ul>
       <li>
        <span class="Kore" lang="ko">
         [ahref]
         
        </span>
        <span class="mention-gloss-paren annotation-paren">
         (
        </span>
        <span class="tr Latn" lang="ko-Latn">
         yeoubi
        </span>
        <span class="mention-gloss-paren annotation-paren">
         )
        </span>
       </li>
      </ul>
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <div class="mw-references-wrap">
       <ol class="references">
        <li id="cite_note-1">
         <a href="1">
          ^
         </a>
         <span class="reference-text">
          Rei Fukui (
          <span class="mw-formatted-date" title="2017-03-28">
           2017-03-28
          </span>
          )
          <cite>
           小倉進平『朝鮮語方言の研究』所載資料による言語地図とその解釈―第１集
          </cite>
          ‎
          <sup>
           [linkx]
           
          </sup>
          , 東京大学人文社会系研究科 韓国朝鮮文化研究室, page 105-108
         </span>
        </li>
       </ol>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     Retrieved from "
     [ahref]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [linkx]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/wiki/Category:Korean_terms_derived_from_Middle_Korean" title="Category:Korean terms derived from Middle Korean">
         Korean terms derived from Middle Korean[pkeyx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][linkx][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][pkeyx][area1][mkey1][ahref][ahref][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref]<li>[area1][keywordx]</li><li>[area1][mkey1]</li>[area1][mkey1]
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/wiki/Category:Korean_nouns" title="Category:Korean nouns">
         Korean nouns
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      Hidden category:
      <ul>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       Not logged in[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx]
      </li>
      <li id="pt-anontalk">
       <a accesskey="n" href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]">
        Talk
       </a>
      </li>
      <li id="pt-anoncontribs">
       <a accesskey="y" href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]">
        Contributions
       </a>
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]<li>[area1][mkey1]</li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         <a accesskey="h" href="/w/index.php?title=%EC%97%AC%EC%9A%B0&amp;action=history" title="Past revisions of this page [h]">
          History
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-text">
        <a href="/wiki/Wiktionary:Main_Page">
         Main Page
        </a>
       </li>
       <li id="n-portal">
        <a href="/wiki/Wiktionary:Community_portal" title="About the project, what you can do, where to find things">
         Community portal
        </a>
       </li>
       <li id="n-wiktprefs">
        [linkx]
        
       </li>
       <li id="n-requestedarticles">
        [linkx]
        
       </li>
       <li id="n-recentchanges">
        [linkx]
        
       </li>
       <li id="n-randompage">
        [ahref]
        
       </li>
       <li id="n-help">
        [ahref]
        
       </li>
       <li id="n-Glossary">
        <a href="/wiki/Appendix:Glossary">
         Glossary
        </a>
       </li>
       <li id="n-sitesupport">
        [ahref]
        
       </li>
       <li id="n-contact">
        <a href="/wiki/Wiktionary:Contact_us">
         Contact us
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        <li>[area1][mkey1]</li><li>[linkx]</li><li>[linkx]</li>
       </li>
       <li id="t-recentchangeslinked">
        <a accesskey="k" href="/wiki/Special:RecentChangesLinked/%EC%97%AC%EC%9A%B0" rel="nofollow" title="Recent changes in pages linked from this page [k]">
         Related changes
        </a>
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        [ahref]
        
       </li>
       <li id="t-permalink">
        [linkx]
        
       </li>
       <li id="t-info">
        [ahref]
        
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-az">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="az" lang="az" title="여우 – Azerbaijani">
         Azərbaycanca
        </a>
       </li>
       <li class="interlanguage-link interwiki-cs">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="cs" lang="cs" title="여우 – Czech">
         Čeština
        </a>
       </li>
       <li class="interlanguage-link interwiki-el">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="el" lang="el" title="여우 – Greek">
         Ελληνικά
        </a>
       </li>
       <li class="interlanguage-link interwiki-eu">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-fr">
        [area1][keywordx]<li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]
       </li>
       <li class="interlanguage-link interwiki-gl">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="gl" lang="gl" title="여우 – Galician">
         Galego
        </a>
       </li>
       <li class="interlanguage-link interwiki-ko">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="ko" lang="ko" title="여우 – Korean">
         한국어
        </a>
       </li>
       <li class="interlanguage-link interwiki-sw">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="sw" lang="sw" title="여우 – Swahili">
         Kiswahili
        </a>
       </li>
       <li class="interlanguage-link interwiki-ku">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ky">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="ky" lang="ky" title="여우 – Kyrgyz">
         Кыргызча
        </a>
       </li>
       <li class="interlanguage-link interwiki-lo">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lt">
        Lietuvių[pkeyx]<li>[area1][mkey1]</li>[area1][mkey1]
       </li>
       <li class="interlanguage-link interwiki-hu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-mg">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="mg" lang="mg" title="여우 – Malagasy">
         Malagasy
        </a>
       </li>
       <li class="interlanguage-link interwiki-nl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ja">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pl">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ro">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sk">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="sk" lang="sk" title="여우 – Slovak">
         Slovenčina
        </a>
       </li>
       <li class="interlanguage-link interwiki-sv">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="sv" lang="sv" title="여우 – Swedish">
         Svenska
        </a>
       </li>
       <li class="interlanguage-link interwiki-th">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="th" lang="th" title="여우 – Thai">
         ไทย
        </a>
       </li>
       <li class="interlanguage-link interwiki-chr">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="chr" lang="chr" title="여우 – Cherokee">
         ᏣᎳᎩ
        </a>
       </li>
       <li class="interlanguage-link interwiki-tr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ug">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-vi">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-zh">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="zh" lang="zh" title="여우 – Chinese">
         中文
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      [linkx]
      
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     This page was last edited on 27 October 2018, at 09:36.
    </li>
    <li id="footer-info-copyright">
     Text is available under the
     [linkx]
     
     ; additional terms may apply.  By using this site, you agree to the
     [linkx]
     
     and
     [ahref]
     
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [linkx]
     
    </li>
    <li id="footer-places-about">
     [pkeyx][pkeyx][pkeyx][area1][mkey1][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][mkey1][pkeyx]
    </li>
    <li id="footer-places-disclaimer">
     [ahref]
     
    </li>
    <li id="footer-places-developers">
     <a href="/wiki/Special:MyLanguage/How_to_contribute">
      Developers
     </a>
    </li>
    <li id="footer-places-cookiestatement">
     [linkx]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [linkx]
     
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0493
  </b>
 </body>
</html>
|<---