--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="IE=Edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
 </head>
 <body>
  <div id="wrap">
   <div id="header">
    <div class="skip_navi">
     [ahref]
     
     [ahref]
     
    </div>
    <div class="top_menu">
     <div class="in">
      <div class="logo">
       [ahref]
       
      </div>
      <div class="culturing_menu">
       <div class="logo">
        <a href="/main.do" target="_blank" title="컬처링홈페이지 새창이동">
        </a>
       </div>
       <ul>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div class="wrapper">
     <h1>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h1>
     <div class="total_search">
      <form action="/search/search.jsp" method="post" name="search">
       <div class="selectbox">
        <div class="select" id="select_box">
         [linkx]
         
         <ul class="select_option">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div id="search_auto">
        <div class="auto">
         <div id="ark_wrap">
          <div id="ark_up">
           <span id="ark_img_up">
            자동완성 닫기
           </span>
          </div>
          <div id="ark_down">
           <span id="ark_img_down">
            자동완성 열기
           </span>
          </div>
          <div id="ark_sub_wrap">
          </div>
         </div>
        </div>
       </div>
      </form>
     </div>
     <ul class="lnb">
      <li class="lnb1">
       [ahref]
       
      </li>
      <li class="lnb3">
       [linkx]
       
      </li>
      <li class="lnb4">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="gnb">
     <ul id="gnb">
      <li class="gnb4">
       <a href="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE001">
        문화원형 라이브러리
       </a>
       <ul>
        <li class="gnb4_1">
         [ahref]
         
        </li>
        <li class="gnb4_2">
         <a href="/content/contentList.do?search_div=CP_AGE&amp;search_div_id=CP_AGE001">
          시대별 문화원형
         </a>
        </li>
        <li class="gnb4_3">
         [ahref]
         
        </li>
        <li class="gnb4_4">
         <a href="/html/htmlPage.do?page=contentDataList">
          멀티미디어별 문화원형
         </a>
        </li>
        <li class="gnb4_5">
         <a href="/html/htmlPage.do?page=library/unesco.html">
          유네스코 등재 콘텐츠
         </a>
        </li>
       </ul>
      </li>
      <li class="gnb5">
       [linkx]
       
       <ul>
        <li class="gnb5_1">
         [linkx]
         
        </li>
        <li class="gnb5_2">
         <a href="/html/htmlPage.do?page=case/design_01.html">
          게임 / 캐릭터 / 디자인
         </a>
        </li>
        <li class="gnb5_3">
         [linkx]
         
        </li>
        <li class="gnb5_4">
         [ahref]
         
        </li>
        <li class="gnb5_5">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="gnb1">
       [linkx]
       
       <ul>
        <li class="gnb1_1">
         [linkx]
         
        </li>
        <li class="gnb1_2">
         [ahref]
         
        </li>
        <li class="gnb1_3">
         <a href="/html/htmlPage.do?page=info/history.html">
          문화원형 디지털콘텐츠 개발연혁
         </a>
        </li>
       </ul>
      </li>
      <li class="gnb2">
       [ahref]
       
       <ul>
        <li class="gnb2_1">
         [ahref]
         
        </li>
        <li class="gnb2_2">
         <a href="/board/boardList.do?board_id=BOARD001">
          공지사항
         </a>
        </li>
        <li class="gnb2_3">
         <a href="/board/boardList.do?board_id=BOARD005">
          홍보갤러리
         </a>
        </li>
        <li class="gnb2_4">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="gnb3">
       [linkx]
       
       <ul>
        <li class="gnb3_1">
         [ahref]
         
        </li>
        <li class="gnb3_2">
         <a href="/board/faqList.do?board_id=BOARD002">
          도움말
         </a>
        </li>
        <li class="gnb3_3">
         [linkx]
         
        </li>
        <li class="gnb3_4">
         [linkx]
         
        </li>
       </ul>
      </li>
     </ul>
    </div>
   </div>
   <div class="quick" id="quick">
    <ul>
     <li class="quick1">
      <a href="#">
       TOP
      </a>
     </li>
     <li class="quick2">
      [linkx]
      
     </li>
     <li class="quick3">
      [linkx]
      
     </li>
     <li class="quick4">
      <a href="/board/faqList.do?board_id=BOARD002">
       도움말
      </a>
     </li>
     <li class="quick5">
      [ahref]
      
     </li>
    </ul>
   </div>
   <div id="container">
    <div class="wrapper library">
     <ul class="category">
      <li class="cate1">
       [ahref]
       
      </li>
      <li class="cate2">
       [linkx]
       
      </li>
      <li class="cate3">
       <a href="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE003">
        인물
       </a>
      </li>
      <li class="cate4 current">
       <a href="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE004">
        문학
       </a>
      </li>
      <li class="cate5">
       <a href="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE005">
        의·식·주
       </a>
      </li>
      <li class="cate6">
       [ahref]
       
      </li>
      <li class="cate7">
       [ahref]
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>[link]
       
      </li>
      <li class="cate8">
       [ahref]
       
      </li>
      <li class="cate9">
       [ahref]
       
      </li>
      <li class="cate10">
       [linkx]
       
      </li>
      <li class="cate11">
       [linkx]
       
      </li>
      <li class="cate12">
       [linkx]
       
      </li>
      <li class="cate13">
       <a href="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE013">
        의례·놀이·연회
       </a>
      </li>
      <li class="cate14">
       [linkx]
       
      </li>
     </ul>
     <div class="top">
      <ul class="path">
       <li>
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
       </li>
       <li>
        문화원형 라이브러리
       </li>
       <li>
        <select class="path_select selectbox-option-width:150" onchange="goWeb(this);" title="메뉴를 선택하세요">
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE001">
          주제별 문화원형
         </option>
         <option value="/content/contentList.do?search_div=CP_AGE&amp;search_div_id=CP_AGE001">
          시대별 문화원형
         </option>
         <option value="/content/metaList.do">
          교과서에 나온 문화원형
         </option>
         <option value="/contentdata/contentDataList.do?search_upper_category_id=&amp;search_category_id=100001&amp;search_category_level=1&amp;search_left_menu=0">
          멀티미디어별 문화원형
         </option>
         <option value="">
          유네스코 등재 콘텐츠
         </option>
        </select>
       </li>
       <li>
        <select class="path_select selectbox-option-width:110" onchange="goWeb(this);" title="메뉴를 선택하세요">
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE001">
          정치/경제/생업
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE002">
          종교/신앙
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE003">
          인물
         </option>
         <option selected="" value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE004">
          문학
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE005">
          의/식/주
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE006">
          회화
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE007">
          미술/공예
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE008">
          음악
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE009">
          군사/외교
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE010">
          교통/통신/지리
         </option>
         [linkx]
         
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE012">
          천문/풍수
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE013">
          의례/놀이/연회
         </option>
         <option value="/content/contentList.do?search_div=CP_THE&amp;search_div_id=CP_THE014">
          문화/기타
         </option>
        </select>
       </li>
       <li class="end">
        <select class="path_select selectbox-option-width:310" onchange="goWeb(this);" title="메뉴를 선택하세요">
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp1006">
          한국의 온천이야기
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0704">
          삼국유사 판타지소재
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=rp0703">
          삼국유사 키워드사전
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0701">
          처용설화와 처용무
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0618">
          한국적 감성이야기
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0615">
          삼국사기 인물열전
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0602">
          표류문학, 표해록
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0535">
          명산여행기, 유산기
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0532">
          정령 애니메이션 창작기
         </option>
         <option selected="" value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521">
          한국 설화 속 인물
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0513">
          용궁이야기
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0433">
          불교설화
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0417">
          건국설화[content11[linkx]content12[linkx]content13[linkx]content14[linkx]content15]
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0416">
          구전신화의 세계
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0415">
          인귀설화
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0321">
          중국 판타지 원류
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0239">
          연오랑 세오녀
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0238">
          바리공주 서사창작기
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0218">
          조선대하소설소재
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0202">
          한국 신화 이야기
         </option>
         <option value="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0201">
          신화의 섬, 제주
         </option>
        </select>
       </li>
      </ul>
      [linkx]
      
      [ahref]
      
     </div>
     <div class="content detail">
      <div class="tit">
       <h2>
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="list" id="list">
        [link][link][link]
       </div>
      </div>
      <div class="section">
       <div class="group">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <p>
         갈래 : 민담
         <br/>
         시대 : 시대미상
         <br/>
         신분 : 일반
         <br/>
         지역 : 기타
         <br/>
         출처 : 한국구전  (6, 102)
         <br/>
         내용 :옛날에 어떤 소년이 있었는데 어느 날 글방 수업을 마치고 집에 돌아오기 위해 고개를 넘다가 아리따운 처녀를 보게 되었다. 처녀는 소년에게 쉬어가라고 청하였는데 소년은 모르는 사람이라 머뭇거렸다. 그러자 처녀가 소년의 손을 잡고 등나무에 걸터앉기를 권하였는데 소년은 마력에 홀린 것처럼 앉게 되었다. 처녀는 소년에게 기분 좋게 해주겠다며 입을 맞추었는데 소년은 ‘이래서는 안 되지’하고 생각하면서도 기분이 좋아져 처녀가 하는 대로 내버려두었다. 처녀는 입을 맞추며 구슬 같은 것을 소년의 입에 넣어주었다가 다시 자신의 입으로 가져가기를 반복하였고, 소년은 아주 기분이 좋아졌다. 그 후에도 며칠마다 한 번씩 그 처녀가 나타나서, 같은 시간에, 같은 장소에서 그런 일을 되풀이 하였는데, 소년은 점점 야위어갔다. 글방 훈장님은 소년에게 몸이 야위어가는 이유를 물었지만 소년은 끝내 말하지 않았다. 그러다가 몇 달이 지난 후 소년이 아주 바싹 말라 기운이 많이 빠졌을 때, 훈장에게 그 처녀와의 일을 말했다. 그러자 훈장은, 집에 돌아갈 때 그 여자가 입을 맞추고 구슬을 입에 넣거든, 그것을 삼켜야 살 수 있다고 말해 주었다. 소년은 훈장의 말을 새겨듣고 집에 돌아갔다. 그날 집에 가는 중에 그 고개에서 처녀가 나타나 입을 맞추고 구슬을 소년의 입에 넣어 주었을 때, 소년이 눈을 딱 감고 구슬을 삼켜버렸다. 그러자 처녀의 얼굴이 새파래지면서 재주를 세 번 넘더니 죽어버렸는데 죽은 뒤에 보니 꼬리가 아홉 달린 여우였다. 그 여우는 소년의 정기를 빼앗아 죽게 만들려고 했던 것이다.
        </p>
       </div>
      </div>
     </div>
     <div class="menu_list">
      <div class="download">
       <h2>
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <ul>
        <li>
         [linkx]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li>
         [ahref]
         
         <ul>
          <li>
           <a href="/content/contentDataList.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;search_upper_category_id=100008&amp;search_category_id=100008&amp;search_category_level=2&amp;search_cp_code=cp0521&amp;search_left_menu=6">
            3D/VR/파노라마 (28)
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </li>
        <li>
         [linkx]
         
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li>
         <a href="/content/contentDataList.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;search_upper_category_id=&amp;search_category_id=100004&amp;search_category_level=1&amp;search_cp_code=cp0521&amp;search_left_menu=6">
          텍스트 (1,432)
         </a>
         <ul>
          <li>
           <a href="/content/contentDataList.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;search_upper_category_id=100020&amp;search_category_id=100020&amp;search_category_level=2&amp;search_cp_code=cp0521&amp;search_left_menu=6">
            이야기 (1,413)
           </a>
          </li>
          <li>
           <a href="/content/contentDataList.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;search_upper_category_id=100015&amp;search_category_id=100015&amp;search_category_level=2&amp;search_cp_code=cp0521&amp;search_left_menu=6">
            시나리오 (19)
           </a>
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <div class="related">
       <h2>
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <ul>
        <li>
         <a href="/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521" onclick="javascript:document.location.href='/content/contentMain.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521';">
          문화원형 개요
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <span>
          초월적인물형
         </span>
         <ul>
          <li>
           [linkx]
           
           <ul>
           </ul>
           <li>
            [ahref]
            
            <ul>
            </ul>
            <li>
             <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05210105&amp;content_id=cp052101050001&amp;search_left_menu=2">
              도승(道僧)형
             </a>
             <ul>
             </ul>
             <li>
              [ahref]
              
              <ul>
               <li>
                <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05210204&amp;content_id=cp052102040001&amp;search_left_menu=2">
                 관왕묘
                </a>
                <li>
                 <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05210205&amp;content_id=cp052102050001&amp;search_left_menu=2">
                  광양당
                 </a>
                 <li>
                  <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05210206&amp;content_id=cp052102060001&amp;search_left_menu=2">
                   김수로 왕릉
                  </a>
                  <li>
                   [linkx]
                   
                   <li>
                    <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05211374&amp;content_id=cp052102080001&amp;search_left_menu=2">
                     두창신-1
                    </a>
                    <li>
                     <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05210208&amp;content_id=cp052102080002&amp;search_left_menu=2">
                      두창신-2
                     </a>
                     <li>
                      [linkx]
                      
                      <li>
                       [ahref]
                       
                       <li>
                        [keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
                       </li>
                      </li>
                     </li>
                    </li>
                   </li>
                  </li>
                 </li>
                </li>
               </li>
              </ul>
             </li>
             <li>
              [ahref]
              
              <ul>
              </ul>
             </li>
            </li>
           </li>
          </li>
         </ul>
        </li>
        <li>
         <span>
          이상적인물형
         </span>
         <ul>
          <li>
           [ahref]
           
           <ul>
           </ul>
           <li>
            [linkx]
            
            <ul>
            </ul>
            <li>
             [ahref]
             
             <ul>
             </ul>
             <li>
              <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05210655&amp;content_id=cp052106550001&amp;search_left_menu=3">
               보은(報恩)형
              </a>
              <ul>
              </ul>
              <li>
               [ahref]
               
               <ul>
               </ul>
               <li>
                [ahref]
                
                <ul>
                </ul>
                <li>
                 [linkx]
                 
                 <ul>
                 </ul>
                </li>
               </li>
              </li>
             </li>
            </li>
           </li>
          </li>
         </ul>
        </li>
        <li>
         <span>
          현실적인물형
         </span>
         <ul>
          <li>
           [linkx]
           
           <ul>
           </ul>
           <li>
            [ahref]
            
            <ul>
             [content10[linkx]content11[linkx]content12[linkx]content13]
            </ul>
            <li>
             [linkx]
             
             <ul>
             </ul>
             <li>
              [linkx]
              
              <ul>
              </ul>
              <li>
               [linkx]
               
               <ul>
               </ul>
               <li>
                [linkx]
                
                <ul>
                </ul>
                <li>
                 [linkx]
                 
                 <ul>
                 </ul>
                </li>
               </li>
              </li>
             </li>
            </li>
           </li>
          </li>
         </ul>
        </li>
        <li>
         <span>
          부정적인물형
         </span>
         <ul>
          <li>
           <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05211254&amp;content_id=cp052112540001&amp;search_left_menu=5">
            횡포(橫暴)형
           </a>
           <ul>
           </ul>
           <li>
            <a href="/content/contentView.do?search_div=CP_THE&amp;search_div_id=CP_THE004&amp;cp_code=cp0521&amp;index_id=cp05211289&amp;content_id=cp052112890001&amp;search_left_menu=5">
             편벽(偏僻)형
            </a>
            <ul>
            </ul>
            <li>
             [linkx]
             
             <ul>
             </ul>
            </li>
           </li>
          </li>
         </ul>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
   <div id="footer">
    <div class="wrapper">
     <h1>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h1>
     <ul>
      <li class="menu1">
       <a href="/html/htmlPage.do?page=privacy/privacy.html">
        개인정보처리방침
       </a>
      </li>
      <li class="menu3">
       <a href="/html/htmlPage.do?page=sitemap/sitemap.html">
        사이트맵
       </a>
      </li>
     </ul>
     <address>
     </address>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0508
  </b>
 </body>
</html>
<noscript>
</noscript>
|<---