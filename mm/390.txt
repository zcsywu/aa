--->|<!DOCTYPE html>
<html class="ko ko-kr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description">
   <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
   <meta content="website" name="og:type" property="og:type"/>
   <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="og:url" property="og:url"/>
   <meta content="https://azurecomcdn.azureedge.net/cvt-624f93a81e7b35abad18e1b036d2ebe71588e28873122007ace27f68a66e3d3b/images/shared/social/azure-icon-250x250.png" name="og:image" property="og:image"/>
   <meta content="summary" name="twitter:card" property="twitter:card"/>
   <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:url" property="twitter:url"/>
   <meta content="https://azurecomcdn.azureedge.net/cvt-624f93a81e7b35abad18e1b036d2ebe71588e28873122007ace27f68a66e3d3b/images/shared/social/azure-icon-250x250.png" name="twitter:image" property="twitter:image"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title" property="twitter:title"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="og:title" property="og:title"/>
   <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description" property="twitter:description"/>
   <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="og:description" property="og:description"/>
   <meta content="anonymous" name="request.authenticated" property="anonymous"/>
   <meta content="3D522357F84D0700D2C4AD6A4113B4DF" name="msvalidate.01"/>
   <meta content="zpXHUgaFUrSU9uhguHYkk9WZEfYBE-XMt2c4B6GPQMA" name="google-site-verification"/>
   <meta content="azure" name="awa-product"/>
   <meta content="20190702-1810-61365" name="awa-stv"/>
   <meta content="ko-kr" name="awa-market"/>
   <meta content="East Asia" name="awa-region"/>
   <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="application-name"/>
   <meta content="#00abec" name="msapplication-TileColor"/>
   <meta content="//azurecomcdn.azureedge.net/cvt-624f93a81e7b35abad18e1b036d2ebe71588e28873122007ace27f68a66e3d3b/images/icon/live-tile/azure-70x70.png" name="msapplication-square70x70logo"/>
   <meta content="//azurecomcdn.azureedge.net/cvt-624f93a81e7b35abad18e1b036d2ebe71588e28873122007ace27f68a66e3d3b/images/icon/live-tile/azure-150x150.png" name="msapplication-square150x150logo"/>
   <meta content="//azurecomcdn.azureedge.net/cvt-624f93a81e7b35abad18e1b036d2ebe71588e28873122007ace27f68a66e3d3b/images/icon/live-tile/azure-310x150.png" name="msapplication-wide310x150logo"/>
   <meta content="//azurecomcdn.azureedge.net/cvt-624f93a81e7b35abad18e1b036d2ebe71588e28873122007ace27f68a66e3d3b/images/icon/live-tile/azure-310x310.png" name="msapplication-square310x310logo"/>
   <title>
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </title>
  </meta>
 </head>
 <body id="top">
  <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="sso-killswitch" style="display: none;">
  </div>
  <div class="header-container">
   <header class="azure-header" id="azure-header">
    <div class="skip-nav-container">
     <a class="skip-nav" href="n" title="탐색 건너뛰기">
      탐색 건너뛰기
     </a>
    </div>
    <nav aria-label="유틸리티 탐색" class="nav-basic">
     <form action="/ko-kr/search/" aria-label="Azure 메뉴 사이트 검색 양식" id="nav-search-form" method="get" onsubmit="event.stopPropagation();" role="search">
      <div class="logo-container">
       <a aria-label="Microsoft Azure" data-event="global-navigation-header-clicked-msazurelogo" href="/ko-kr/">
        <svg style="display:none; visibility:hidden;">
         <defs>
          <symbol id="svg-msazure-logo" viewbox="0 0 506 72">
           <path clip-rule="evenodd" d="M20.244 8.014L13.857 26.209H26.811L20.455 8.014H20.244ZM24.702 0L40.97 43.201H32.716L28.89 32.476H11.869L8.194 43.201H0L16.267 0H24.702Z" fill="white" fill-rule="evenodd" transform="translate(350.999 14.3985)">
           </path>
           <path clip-rule="evenodd" d="M1.145 0H25.878V2.923L9.64 25.186H25.968V30.97H0V27.505L15.997 5.784H1.145V0Z" fill="white" fill-rule="evenodd" transform="translate(394.539 26.6293)">
           </path>
           <path clip-rule="evenodd" d="M27.806 0V30.97H20.455V26.902H20.335C19.371 28.309 18.08 29.408 16.464 30.201C14.847 30.994 13.035 31.392 11.027 31.392C7.431 31.392 4.695 30.372 2.817 28.333C0.939 26.295 0 23.127 0 18.829V0H7.381V17.955C7.381 20.566 7.898 22.529 8.933 23.845C9.967 25.16 11.528 25.818 13.618 25.818C15.686 25.818 17.342 25.09 18.588 23.634C19.833 22.178 20.455 20.274 20.455 17.925V0H27.806Z" fill="white" fill-rule="evenodd" transform="translate(424.786 26.6293)">
           </path>
           <path clip-rule="evenodd" d="M15.274 0C15.856 0 16.378 0.04 16.84 0.12C17.302 0.201 17.694 0.301 18.015 0.422V7.803C17.633 7.521 17.076 7.256 16.343 7.004C15.61 6.753 14.721 6.628 13.677 6.628C11.889 6.628 10.378 7.381 9.143 8.887C7.908 10.394 7.291 12.713 7.291 15.846V31.481H0V0.512H7.291V5.393H7.411C8.074 3.705 9.078 2.385 10.423 1.431C11.769 0.478 13.385 0 15.274 0Z" fill="white" fill-rule="evenodd" transform="translate(458.27 26.1176)">
           </path>
           <path clip-rule="evenodd" d="M21.238 12.983C21.238 10.573 20.68 8.736 19.566 7.47C18.451 6.205 16.88 5.573 14.851 5.573C13.104 5.573 11.538 6.201 10.152 7.456C8.76601 8.711 7.84201 10.553 7.38101 12.983H21.238ZM25.908 23.798V29.794C24.703 30.557 23.126 31.174 21.177 31.646C19.229 32.118 17.151 32.354 14.942 32.354C10.221 32.354 6.551 30.959 3.93 28.167C1.31 25.376 0 21.489 0 16.508C0 11.709 1.4 7.756 4.202 4.654C7.004 1.55 10.553 0 14.851 0C19.13 0 22.458 1.309 24.838 3.93C27.217 6.551 28.408 10.171 28.408 14.791V18.316H7.2C7.52 21.429 8.52 23.602 10.197 24.837C11.874 26.073 14.038 26.69 16.689 26.69C18.436 26.69 20.103 26.424 21.69 25.892C23.276 25.36 24.682 24.662 25.908 23.798Z" fill="white" fill-rule="evenodd" transform="translate(476.741 25.9979)">
           </path>
           <path clip-rule="evenodd" d="M229.35 21.39H218.492V46.394H211.112V21.39H205.93V15.425H211.112V11.117C211.112 7.863 212.17 5.197 214.29 3.119C216.408 1.039 219.124 0 222.438 0C223.322 0 224.105 0.045 224.788 0.136C225.471 0.227 226.074 0.362 226.596 0.542V6.839C226.354 6.699 225.933 6.528 225.33 6.327C224.728 6.126 224.035 6.026 223.252 6.026C221.725 6.026 220.551 6.502 219.727 7.456C218.903 8.411 218.492 9.822 218.492 11.689V15.425H229.35V8.465L236.67 6.237V15.425H244.052V21.39H236.67V35.879C236.67 37.788 237.017 39.134 237.71 39.916C238.403 40.7 239.492 41.091 240.978 41.091C241.4 41.091 241.907 40.992 242.5 40.79C243.092 40.59 243.609 40.349 244.052 40.068V46.092C243.589 46.354 242.821 46.594 241.746 46.816C240.672 47.036 239.613 47.147 238.568 47.147C235.495 47.147 233.191 46.329 231.655 44.692C230.118 43.055 229.35 40.59 229.35 37.295V21.39ZM180.943 31.12C180.943 34.354 181.676 36.824 183.142 38.532C184.607 40.239 186.706 41.091 189.438 41.091C192.089 41.091 194.108 40.239 195.493 38.532C196.879 36.824 197.572 34.293 197.572 30.939C197.572 27.606 196.854 25.09 195.418 23.393C193.982 21.696 191.968 20.848 189.378 20.848C186.706 20.848 184.633 21.736 183.157 23.514C181.68 25.29 180.943 27.827 180.943 31.12ZM173.351 31.361C173.351 26.24 174.797 22.183 177.689 19.19C180.581 16.198 184.598 14.702 189.739 14.702C194.579 14.702 198.36 16.143 201.082 19.025C203.803 21.908 205.163 25.798 205.163 30.699C205.163 35.72 203.717 39.716 200.826 42.688C197.933 45.661 193.997 47.147 189.016 47.147C184.216 47.147 180.405 45.737 177.584 42.914C174.762 40.093 173.351 36.242 173.351 31.361ZM156.933 23.559C156.933 24.603 157.265 25.421 157.928 26.014C158.59 26.606 160.056 27.354 162.326 28.258C165.238 29.423 167.282 30.734 168.456 32.19C169.631 33.646 170.219 35.408 170.219 37.477C170.219 40.389 169.099 42.729 166.86 44.495C164.62 46.264 161.593 47.147 157.777 47.147C156.492 47.147 155.07 46.992 153.514 46.68C151.957 46.369 150.637 45.972 149.552 45.49V38.321C150.878 39.244 152.304 39.977 153.83 40.519C155.357 41.062 156.742 41.333 157.988 41.333C159.634 41.333 160.85 41.102 161.633 40.64C162.416 40.178 162.808 39.405 162.808 38.321C162.808 37.316 162.401 36.467 161.588 35.775C160.775 35.081 159.233 34.283 156.963 33.379C154.272 32.255 152.365 30.99 151.24 29.584C150.115 28.178 149.552 26.391 149.552 24.221C149.552 21.43 150.662 19.135 152.881 17.337C155.1 15.54 157.978 14.642 161.513 14.642C162.597 14.642 163.812 14.762 165.158 15.002C166.503 15.244 167.628 15.556 168.532 15.937V22.866C167.568 22.223 166.443 21.671 165.158 21.208C163.872 20.746 162.597 20.516 161.332 20.516C159.946 20.516 158.866 20.787 158.093 21.329C157.32 21.871 156.933 22.615 156.933 23.559ZM121.868 31.12C121.868 34.354 122.6 36.824 124.067 38.532C125.533 40.239 127.632 41.091 130.363 41.091C133.015 41.091 135.033 40.239 136.418 38.532C137.804 36.824 138.497 34.293 138.497 30.939C138.497 27.606 137.779 25.09 136.343 23.393C134.907 21.696 132.893 20.848 130.303 20.848C127.632 20.848 125.558 21.736 124.082 23.514C122.605 25.29 121.868 27.827 121.868 31.12ZM114.276 31.361C114.276 26.24 115.722 22.183 118.614 19.19C121.506 16.198 125.523 14.702 130.664 14.702C135.505 14.702 139.285 16.143 142.007 19.025C144.728 21.908 146.089 25.798 146.089 30.699C146.089 35.72 144.642 39.716 141.751 42.688C138.859 45.661 134.922 47.147 129.941 47.147C125.141 47.147 121.33 45.737 118.509 42.914C115.687 40.093 114.276 36.242 114.276 31.361ZM111.14 14.912C111.722 14.912 112.245 14.953 112.706 15.034C113.168 15.114 113.56 15.213 113.882 15.334V22.715C113.5 22.434 112.942 22.168 112.21 21.917C111.476 21.665 110.587 21.54 109.544 21.54C107.756 21.54 106.245 22.293 105.01 23.799C103.775 25.306 103.157 27.625 103.157 30.758V46.394H95.866V15.425H103.157V20.305H103.277C103.94 18.618 104.944 17.298 106.29 16.343C107.635 15.39 109.252 14.912 111.14 14.912ZM83.184 41.091C84.268 41.091 85.463 40.841 86.768 40.339C88.074 39.836 89.279 39.174 90.384 38.35V45.128C89.219 45.791 87.898 46.293 86.422 46.634C84.947 46.976 83.324 47.147 81.557 47.147C76.997 47.147 73.292 45.706 70.441 42.824C67.588 39.942 66.163 36.262 66.163 31.784C66.163 26.802 67.619 22.701 70.531 19.476C73.443 16.253 77.57 14.642 82.913 14.642C84.279 14.642 85.659 14.818 87.055 15.169C88.451 15.52 89.56 15.926 90.384 16.388V23.378C89.259 22.554 88.109 21.917 86.934 21.464C85.76 21.013 84.559 20.787 83.334 20.787C80.462 20.787 78.143 21.721 76.375 23.589C74.608 25.456 73.724 27.977 73.724 31.15C73.724 34.283 74.572 36.724 76.27 38.471C77.967 40.218 80.272 41.091 83.184 41.091ZM53.781 46.394H61.071V15.425H53.781V46.394ZM53.028 6.478C53.028 5.273 53.465 4.263 54.339 3.45C55.212 2.636 56.251 2.23 57.456 2.23C58.741 2.23 59.807 2.647 60.65 3.48C61.494 4.313 61.915 5.313 61.915 6.478C61.915 7.662 61.483 8.657 60.62 9.459C59.756 10.263 58.702 10.664 57.456 10.664C56.211 10.664 55.162 10.258 54.309 9.445C53.454 8.631 53.028 7.642 53.028 6.478ZM46.755 3.194V46.394H39.254V12.533H39.133L25.727 46.394H20.757L7.019 12.533H6.929V46.394H0V3.194H10.755L23.167 35.217H23.347L36.452 3.194H46.755Z" fill="white" fill-rule="evenodd" transform="translate(93.5977 11.2052)">
           </path>
           <path clip-rule="evenodd" d="M0 34.219H34.219V0H0V34.219Z" fill="#F25022" fill-rule="evenodd" transform="translate(0.00499725 0.00601196)">
           </path>
           <path clip-rule="evenodd" d="M0 34.219H34.219V0H0V34.219Z" fill="#7FBA00" fill-rule="evenodd" transform="translate(37.779)">
           </path>
           <path clip-rule="evenodd" d="M0 34.219H34.219V0H0V34.219Z" fill="#00A4EF" fill-rule="evenodd" transform="translate(0 37.779)">
           </path>
           <path clip-rule="evenodd" d="M0 34.219H34.219V0H0V34.219Z" fill="#FFB900" fill-rule="evenodd" transform="translate(37.779 37.779)">
           </path>
          </symbol>
         </defs>
        </svg>
        <svg aria-hidden="true" role="presentation">
         <use xlink:href="#svg-msazure-logo">
         </use>
        </svg>
       </a>
      </div>
      <button aria-label="주 메뉴 확장" class="subnav-toggle-button" data-event="global-navigation-menu-expanded-menu" id="subnav-toggle-button" type="button">
      </button>
      <ul class="nav-basic-links">
       <li class="contact-sales">
        <a data-event="global-navigation-header-clicked-saleslink" href="/ko-kr/overview/sales-number/" title="영업팀에 문의">
         영업팀에 문의:
         <span data-control="geophone">
          1-800-867-1389
         </span>
         <[keywordx]>
         </[keywordx]>
        </a>
       </li>
       <li class="nav-site-search" id="nav-site-search">
        <button aria-label="검색" id="nav-site-search-submit" tabindex="0" title="검색" type="submit">
         <span class="text">
          검색
         </span>
         <span class="icon icon-search">
          <svg style="display:none; visibility:hidden;">
           <defs>
            <symbol id="svg-nav-search" viewbox="0 0 13 14">
             <g fill="none" fill-rule="evenodd" stroke-width="1.5" transform="translate(1 1)">
              <path d="M11.1143362,9.69887875 L8.91949589,11.9557202" stroke-linecap="round" transform="matrix(-1 0 0 1 20.034 0)">
              </path>
              <ellipse cx="5.122" cy="5.257" rx="5.112" ry="5.257" transform="matrix(-1 0 0 1 10.245 0)">
              </ellipse>
             </g>
            </symbol>
           </defs>
          </svg>
          <svg aria-hidden="true" role="presentation">
           <use xlink:href="#svg-nav-search">
           </use>
          </svg>
         </span>
        </button>
        <div class="clear-button-container" id="clear-button-container">
         <button aria-label="검색 지우기" id="clear-site-search-input" type="reset">
          <span class="icon">
           <svg style="display:none; visibility:hidden;">
            <defs>
             <symbol id="svg-nav-search-close" viewbox="0 0 32 32">
              <path d="M 2591.95 2735.04L 2735.04 2591.95L 1510.62 1367.52L 2735.04 143.097L 2591.95 0L 1367.52 1224.42L 143.097 0L 0 143.097L 1224.42 1367.52L 0 2591.95L 143.097 2735.04L 1367.52 1510.62L 2591.95 2735.04Z" transform="translate(-3818 18) matrix(0.0117 0 0 -0.0117 3818 14)">
              </path>
             </symbol>
            </defs>
           </svg>
           <svg aria-hidden="true" role="presentation">
            <use xlink:href="#svg-nav-search-close">
            </use>
           </svg>
          </span>
         </button>
        </div>
       </li>
       <li class="search" id="nav-search">
        <a aria-label="검색" data-event="global-navigation-header-clicked-sitesearch" href="/ko-kr/search/" id="nav-site-search-button">
         검색
         <span class="icon">
          <svg aria-hidden="true" role="presentation">
           <use xlink:href="#svg-nav-search">
           </use>
          </svg>
         </span>
        </a>
       </li>
       <li class="my-account">
        <a data-event="global-navigation-header-clicked-myaccountlink" href="/ko-kr/account/" title="내 계정">
         내 계정
        </a>
       </li>
       <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="header-new-freeaccount" style="display: none;">
       </div>
       <li class="portal">
        <a data-event="global-navigation-header-clicked-portallink" href="/" title="포털">
         포털
        </a>
       </li>
       <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="header-visitors-abandoned-signup-freeaccount" style="display: none;">
       </div>
       <li class="auth auth-container">
        <span class="sign-in">
         [ahref]
         
        </span>
       </li>
       <li class="mobile-hamburger">
        <button aria-label="메뉴 설정/해제" type="button">
         <span class="icon-hamburger">
         </span>
        </button>
       </li>
       <li class="mobile-search" id="nav-mobile-search">
        <button aria-label="검색" id="mobile-nav-site-search-button" title="검색" type="button">
         <span class="icon icon-search">
          <svg aria-hidden="true" role="presentation">
           <use xlink:href="#svg-nav-search">
           </use>
          </svg>
         </span>
        </button>
       </li>
       <li class="close-mobile-search" id="close-mobile-search">
        <button aria-label="닫기" id="close-mobile-nav-site-search-button" tabindex="1" title="닫기" type="button">
         <span class="text">
          닫기
         </span>
         <span class="icon">
          <svg aria-hidden="true" role="presentation">
           <use xlink:href="#svg-nav-search-close">
           </use>
          </svg>
         </span>
        </button>
       </li>
      </ul>
     </form>
    </nav>
    <nav aria-label="사이트 탐색" class="nav-main">
     <ul class="nav-main-links" id="nav-main-links">
      <li class="no-border mobile-nested-link mobile-only">
       <span>
        [linkx]
        
        :
        <a class="arrowLink" data-event="global-navigation-header-clicked-saleslink" href="/ko-kr/overview/sales-number/" title="전화 번호 찾기">
         전화 번호 찾기
        </a>
       </span>
      </li>
      <li class="mobile-only mobile-navigation-my-account-container">
       <a class="text-center" data-event="global-navigation-header-clicked-myaccountlink" data-event-property="My account" href="/ko-kr/account/" id="mobile-navigation-my-account" title="내 계정">
        내 계정
       </a>
      </li>
      <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="header-new-freeaccount" style="display: none;">
      </div>
      <li class="mobile-only">
       [linkx]
       
      </li>
      <li class="mobile-only mobile-nested-link auth-container">
       <span class="sign-in">
        [ahref]
        
       </span>
      </li>
      <li class="no-border mobile-only header-button-primary-container">
       <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="main-header-go-to-portal" style="display: none;">
       </div>
       [linkx]
       
      </li>
      <li id="navigation-overview">
       [linkx]
       
      </li>
      <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="main-header-solutions-dropdown" style="display: none;">
      </div>
      <li>
       [linkx]
       
      </li>
      <li class="azure-products">
       <button aria-controls="products-menu" aria-expanded="false" aria-haspopup="true" class="expand-menu-link " data-event="global-navigation-menu-clicked-topnav" data-event-property="Products" id="navigation-products" title="제품" type="button">
        제품
       </button>
       <nav aria-labelledby="products-menu" class="shadow-size1">
        <ul class="menu-drop" data-event="global-navigation-menu-clicked-productsmenu" id="products-menu">
         <li class="category-column">
          <ul>
           <li>
            <button aria-controls="Featured-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Featured", "CommonMenuCategory": "Products"}' id="menu-category-featured" type="button">
             <span class="icon">
              <svg style="display:none; visibility:hidden;">
               <defs>
                <symbol id="svg-nav-featured" viewbox="0 0 50 100">
                 <path d="M26.4679583,42 L50,42 L25,100 L23.9406114,58.1428571 L0,58.1428571 L26.4679583,0 L26.4679583,42 Z" fill-rule="evenodd">
                 </path>
                </symbol>
               </defs>
              </svg>
              <svg aria-hidden="true" role="presentation">
               <use xlink:href="#svg-nav-featured">
               </use>
              </svg>
             </span>
             추천
            </button>
            <nav>
             <span class="menu-pop-heading">
              추천
             </span>
             <span class="menu-pop-subheading">
              Azure 인기 제품 살펴보기
             </span>
             <ul class="menu-pop" id="Featured-category">
              <li data-product-slug="virtual-machines">
               [ahref]
               
              </li>
              <li data-product-slug="virtual-desktop">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "virtual-desktop", "CommonMenuCategory": "Products - Featured"}' href="/ko-kr/services/virtual-desktop/" title="Windows Virtual Desktop">
                <span class="label">
                 Windows Virtual Desktop
                </span>
                <span class="sub">
                 모든 장치에 클라우드 규모의 가상 데스크톱 환경 제공
                </span>
               </a>
              </li>
              <li data-product-slug="sql-database">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "sql-database", "CommonMenuCategory": "Products - Featured"}' href="/ko-kr/services/sql-database/" title="Azure SQL Database">
                <span class="label">
                 Azure SQL Database
                </span>
                <span class="sub">
                 관리되는 관계형 SQL Database 서비스 제공
                </span>
               </a>
              </li>
              <li data-product-slug="app-service">
               [linkx]
               
              </li>
              <li data-product-slug="cosmos-db">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "cosmos-db", "CommonMenuCategory": "Products - Featured"}' href="/ko-kr/services/cosmos-db/" title="Azure Cosmos DB">
                <span class="label">
                 Azure Cosmos DB
                </span>
                <span class="sub">
                 모든 규모에 맞게 전역 배포된 다중 모델 데이터베이스
                </span>
               </a>
              </li>
              <li data-product-slug="playfab">
               [linkx]
               
              </li>
              <li data-product-slug="kubernetes-service">
               [linkx]
               
              </li>
              <li data-product-slug="functions">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "functions", "CommonMenuCategory": "Products - Featured"}' href="/ko-kr/services/functions/" title="Azure Function">
                <span class="label">
                 Azure Function
                </span>
                <span class="sub">
                 서버를 사용하지 않는 코드로 이벤트 처리
                </span>
               </a>
              </li>
              <li data-product-slug="cognitive-services">
               [ahref]
               
              </li>
              <li data-product-slug="blockchain-service">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "blockchain-service", "CommonMenuCategory": "Products - Featured"}' href="/ko-kr/services/blockchain-service/" title="Azure Blockchain 서비스">
                <span class="label">
                 Azure Blockchain 서비스
                </span>
                <span class="sub">
                 컨소시엄 블록체인 네트워크 빌드, 관리 및 확장
                </span>
               </a>
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Featured" href="/ko-kr/services/#featured" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="AiMachineLearning-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "AI + Machine Learning", "CommonMenuCategory": "Products"}' id="menu-category-ai-machine-learning" type="button">
             AI + 머신 러닝
            </button>
            <nav>
             <span class="menu-pop-heading">
              [linkx]
              
             </span>
             <span class="menu-pop-subheading">
              모든 개발자 및 시나리오를 위한 인공 지능 기능을 활용하여 차세대 응용 프로그램 개발
             </span>
             <ul class="menu-pop" id="AiMachineLearning-category">
              <li data-product-slug="cognitive-services">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "cognitive-services", "CommonMenuCategory": "Products - AI + Machine Learning"}' href="/ko-kr/services/cognitive-services/" title="Cognitive Services">
                <span class="label">
                 Cognitive Services
                </span>
                <span class="sub">
                 스마트 API 기능을 추가하여 상황에 맞는 상호 작용 가능
                </span>
               </a>
              </li>
              <li data-product-slug="bot-service">
               [ahref]
               
              </li>
              <li data-product-slug="databricks">
               [ahref]
               
              </li>
              <li data-product-slug="machine-learning-overview">
               [ahref]
               
              </li>
              <li class="category-see-more-tablet">
               [linkx]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Blockchain-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Blockchain", "CommonMenuCategory": "Products"}' id="menu-category-blockchain" type="button">
             Blockchain
            </button>
            <nav>
             <span class="menu-pop-heading">
              Blockchain
             </span>
             <span class="menu-pop-subheading">
              Build and manage blockchain based applications with a suite of integrated tools
             </span>
             <ul class="menu-pop" id="Blockchain-category">
              <li data-product-slug="blockchain-service">
               [linkx]
               
              </li>
              <li data-product-slug="blockchain-workbench">
               [linkx]
               
              </li>
              <li data-product-slug="logic-apps">
               [linkx]
               
              </li>
              <li data-product-slug="cosmos-db">
               [ahref]
               
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Blockchain" href="/ko-kr/services/#blockchain" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="DevOps-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "DevOps", "CommonMenuCategory": "Products"}' id="menu-category-devops" type="button">
             DevOps
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="DevOps" href="/ko-kr/product-categories/devops/" title="DevOps">
               DevOps
              </a>
             </span>
             <span class="menu-pop-subheading">
              지속적인 업데이트를 위한 간단하고 안정적인 도구를 사용하여 더 빠르게 혁신 제공
             </span>
             <ul class="menu-pop" id="DevOps-category">
              <li data-product-slug="azure-devops">
               <li>[pkeyx]</li>[ahref]<li>[linkx]</li>
              </li>
              <li data-product-slug="azure-devops\pipelines">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-devops-pipelines", "CommonMenuCategory": "Products - DevOps"}' href="/ko-kr/services/devops/pipelines/" title="Azure Pipelines">
                <li>[keywordx]</li><li>[keywordx]</li>[ahref]
               </a>
              </li>
              <li data-product-slug="azure-devops\boards">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-devops-boards", "CommonMenuCategory": "Products - DevOps"}' href="/ko-kr/services/devops/boards/" title="Azure Boards">
                <span class="label">
                 Azure Boards
                </span>
                <span class="sub">
                 팀에서 작업 계획, 추적 및 논의
                </span>
               </a>
              </li>
              <li data-product-slug="azure-devops\repos">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-devops-repos", "CommonMenuCategory": "Products - DevOps"}' href="/ko-kr/services/devops/repos/" title="Azure Repos">
                <span class="label">
                 Azure Repos
                </span>
                <span class="sub">
                 프로젝트에 적합한 무제한 클라우드 기반 개인 Git 리포지토리 사용
                </span>
               </a>
              </li>
              <li data-product-slug="azure-devops\artifacts">
               [ahref]
               
              </li>
              <li data-product-slug="azure-devops\test-plans">
               [linkx]
               
              </li>
              <li data-product-slug="devtest-lab">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "devtest-lab", "CommonMenuCategory": "Products - DevOps"}' href="/ko-kr/services/devtest-lab/" title="Azure DevTest Lab">
                <span class="label">
                 Azure DevTest Lab
                </span>
                <span class="sub">
                 재사용 가능 템플릿 및 아티팩트를 사용하는 환경을 신속하게 조성
                </span>
               </a>
              </li>
              <li data-product-slug="devops-tool-integrations">
               [linkx]
               
              </li>
              <li data-product-slug="monitor">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               [linkx]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Identity-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Identity", "CommonMenuCategory": "Products"}' id="menu-category-identity" type="button">
             ID
            </button>
            <nav>
             <span class="menu-pop-heading">
              [ahref]
              
             </span>
             <span class="menu-pop-subheading">
              사용자 ID 및 액세스를 관리하여 장치, 데이터, 앱 및 인프라에서 고급 위협으로부터 보호
             </span>
             <ul class="menu-pop" id="Identity-category">
              <li data-product-slug="active-directory">
               [ahref]
               
              </li>
              <li data-product-slug="active-directory-b2c">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "active-directory-b2c", "CommonMenuCategory": "Products - Identity"}' href="/ko-kr/services/active-directory-b2c/" title="Azure Active Directory B2C">
                <span class="label">
                 Azure Active Directory B2C
                </span>
                <span class="sub">
                 클라우드에서 소비자 ID 및 액세스 관리
                </span>
               </a>
              </li>
              <li data-product-slug="active-directory-ds">
               [linkx]
               
              </li>
              <li data-product-slug="information-protection">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               [ahref]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="IoT-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Internet of Things", "CommonMenuCategory": "Products"}' id="menu-category-iot" type="button">
             IOT (INTERNET OF THINGS)
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Internet of Things" href="/ko-kr/product-categories/iot/" title="IOT (INTERNET OF THINGS)">
               IOT (INTERNET OF THINGS)
              </a>
             </span>
             <span class="menu-pop-subheading">
              인프라를 변경하지 않고 모든 디바이스 및 플랫폼에 IoT 사용
             </span>
             <ul class="menu-pop" id="IoT-category">
              <li data-product-slug="iot-hub">
               [linkx]
               
              </li>
              <li data-product-slug="iot-edge">
               [linkx]
               
              </li>
              <li data-product-slug="iot-central">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "iot-central", "CommonMenuCategory": "Products - Internet of Things"}' href="/ko-kr/services/iot-central/" title="Azure IoT Central">
                <span class="label">
                 Azure IoT Central
                </span>
                <span class="sub">
                 클라우드 전문 지식이 없어도 편리하게 사용할 수 있는 IoT용 SAAS 지원
                </span>
               </a>
              </li>
              <li data-product-slug="iot-accelerators">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "iot-accelerators", "CommonMenuCategory": "Products - Internet of Things"}' href="/ko-kr/features/iot-accelerators/" title="Azure IoT 솔루션 가속기">
                <span class="label">
                 Azure IoT 솔루션 가속기
                </span>
                <span class="sub">
                 일반적인 IoT 시나리오용 템플릿을 사용하여 완전 맞춤형 솔루션 만들기
                </span>
               </a>
              </li>
              <li data-product-slug="azure-sphere">
               [linkx]
               
              </li>
              <li data-product-slug="digital-twins">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "digital-twins", "CommonMenuCategory": "Products - Internet of Things"}' href="/ko-kr/services/digital-twins/" title="Azure Digital Twins">
                <span class="label">
                 Azure Digital Twins
                </span>
                <span class="sub">
                 차세대 IoT 공간 인텔리전스 솔루션 빌드
                </span>
               </a>
              </li>
              <li data-product-slug="time-series-insights">
               [linkx]
               
              </li>
              <li data-product-slug="azure-maps">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-maps", "CommonMenuCategory": "Products - Internet of Things"}' href="/ko-kr/services/azure-maps/" title="Azure Maps">
                <span class="label">
                 Azure Maps
                </span>
                <span class="sub">
                 데이터에 지리적 컨텍스트를 제공하는 간단하고 안전한 위치 인식 API
                </span>
               </a>
              </li>
              <li data-product-slug="machine-learning-service">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "machine-learning-service", "CommonMenuCategory": "Products - Internet of Things"}' href="/ko-kr/services/machine-learning-service/" title="Azure Machine Learning 서비스">
                <span class="label">
                 Azure Machine Learning 서비스
                </span>
                <span class="sub">
                 실험 및 모델 관리를 갖춘 포괄적이고 확장 가능하며 신뢰성 있는 플랫폼으로 모든 사용자에게 AI 제공
                </span>
               </a>
              </li>
              <li class="category-see-more">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Internet of Things" href="/ko-kr/services/#iot" title="자세히 보기">
                자세히 보기
               </a>
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Internet of Things" href="/ko-kr/services/#iot" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="MicrosoftAzureStack-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Microsoft Azure Stack", "CommonMenuCategory": "Products"}' id="menu-category-microsoft-azure-stack" type="button">
             Microsoft Azure Stack
            </button>
            <nav>
             <span class="menu-pop-heading">
              [ahref]
              
             </span>
             <span class="menu-pop-subheading">
              모든 환경에 Azure 혁신 실현 - 클라우드 컴퓨팅의 민첩성과 혁신을 온-프레미스 워크로드에 적용합니다.
             </span>
             <ul class="menu-pop" id="MicrosoftAzureStack-category">
              <li data-product-slug="azure-stack">
               [linkx]
               
              </li>
              <li data-product-slug="hci">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Microsoft Azure Stack" href="/ko-kr/services/#microsoft-azure-stack" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Storage-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Storage", "CommonMenuCategory": "Products"}' id="menu-category-storage" type="button">
             Storage
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Storage" href="/ko-kr/product-categories/storage/" title="Storage">
               Storage
              </a>
             </span>
             <span class="menu-pop-subheading">
              데이터, 앱 및 워크로드에 대한 대규모로 확장 가능한 보안 클라우드 저장소
             </span>
             <ul class="menu-pop" id="Storage-category">
              <li data-product-slug="storage\files">
               [ahref]
               
              </li>
              <li data-product-slug="blob-storage">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "blob-storage", "CommonMenuCategory": "Products - Storage"}' href="/ko-kr/services/storage/blobs/" title="Blob Storage">
                <span class="label">
                 Blob Storage
                </span>
                <span class="sub">
                 비정형 데이터용 REST 기반 개체 스토리지
                </span>
               </a>
              </li>
              <li data-product-slug="archive-storage">
               [linkx]
               
              </li>
              <li data-product-slug="storage\queues">
               [ahref]
               
              </li>
              <li data-product-slug="premium-storage">
               [ahref]
               
              </li>
              <li data-product-slug="data-lake-storage">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "data-lake-storage", "CommonMenuCategory": "Products - Storage"}' href="/ko-kr/services/storage/data-lake-storage/" title="Azure Data Lake Storage">
                <span class="label">
                 Azure Data Lake Storage
                </span>
                <span class="sub">
                 Azure Blob Storage에서 빌드된 확장성이 매우 뛰어나고 안전한 Data Lake 기능
                </span>
               </a>
              </li>
              <li data-product-slug="databox">
               [ahref]
               
              </li>
              <li data-product-slug="storage-explorer">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "storage-explorer", "CommonMenuCategory": "Products - Storage"}' href="/ko-kr/features/storage-explorer/" title="Storage Explorer">
                <span class="label">
                 Storage Explorer
                </span>
                <span class="sub">
                 Azure Storage 리소스 탐색 및 체험
                </span>
               </a>
              </li>
              <li data-product-slug="backup">
               [ahref]
               
              </li>
              <li class="category-see-more">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Storage" href="/ko-kr/services/#storage" title="자세히 보기">
                자세히 보기
               </a>
              </li>
              <li class="category-see-more-tablet">
               [ahref]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Web-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Web", "CommonMenuCategory": "Products"}' id="menu-category-web" type="button">
             Web
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Web" href="/ko-kr/product-categories/web/" title="Web">
               Web
              </a>
             </span>
             <span class="menu-pop-subheading">
              강력한 웹 응용 프로그램을 빠르고 효율적으로 빌드, 배포 및 확장
             </span>
             <ul class="menu-pop" id="Web-category">
              <li data-product-slug="app-service\web">
               [ahref]
               
              </li>
              <li data-product-slug="api-management">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "api-management", "CommonMenuCategory": "Products - Web"}' href="/ko-kr/services/api-management/" title="API Management">
                <span class="label">
                 API Management
                </span>
                <span class="sub">
                 개발자, 파트너 및 직원에게 안전하게 대규모로 API를 게시
                </span>
               </a>
              </li>
              <li data-product-slug="cdn">
               [linkx]
               
              </li>
              <li data-product-slug="search">
               [ahref]
               
              </li>
              <li data-product-slug="signalr-service">
               [linkx]
               
              </li>
              <li data-product-slug="azure-maps">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               [ahref]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="DeveloperTools-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Developer Tools", "CommonMenuCategory": "Products"}' id="menu-category-developer-tools" type="button">
             개발자 도구
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Developer Tools" href="/ko-kr/product-categories/developer-tools/" title="개발자 도구">
               개발자 도구
              </a>
             </span>
             <span class="menu-pop-subheading">
              플랫폼 또는 언어를 사용하여 클라우드 응용 프로그램 빌드, 관리 및 지속적으로 제공
             </span>
             <ul class="menu-pop" id="DeveloperTools-category">
              <li data-product-slug="visual-studio">
               [ahref]
               
              </li>
              <li data-product-slug="visual-studio-code">
               [linkx]
               
              </li>
              <li data-product-slug="sdk">
               [linkx]
               
              </li>
              <li data-product-slug="azure-devops">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-devops", "CommonMenuCategory": "Products - Developer Tools"}' href="/ko-kr/services/devops/" title="Azure DevOps">
                <span class="label">
                 Azure DevOps
                </span>
                <span class="sub">
                 팀 간의 코드 공유, 작업 추적 및 소프트웨어 전송을 위한 서비스
                </span>
               </a>
              </li>
              <li data-product-slug="tools">
               [linkx]
               
              </li>
              <li data-product-slug="azure-devops\pipelines">
               [linkx][linkx][linkx][pkeyx][pkeyx][mkey1][keywordx][ahref][ahref][linkx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][mkey1][pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
              </li>
              <li data-product-slug="lab-services">
               [ahref]
               
              </li>
              <li data-product-slug="devtest-lab">
               [ahref]
               
              </li>
              <li data-product-slug="developer-tool-integrations">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "developer-tool-integrations", "CommonMenuCategory": "Products - Developer Tools"}' href="/ko-kr/products/developer-tool-integrations/" title="개발자 도구 통합">
                <span class="label">
                 개발자 도구 통합
                </span>
                <span class="sub">
                 Azure에서 Eclipse, IntelliJ, Maven 등 익숙한 개발 도구 사용
                </span>
               </a>
              </li>
              <li class="category-see-more">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Developer Tools" href="/ko-kr/services/#developer-tools" title="자세히 보기">
                자세히 보기
               </a>
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Developer Tools" href="/ko-kr/services/#developer-tools" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="ManagementTools-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Management and Governance", "CommonMenuCategory": "Products"}' id="menu-category-management-tools" type="button">
             관리
            </button>
            <nav>
             <span class="menu-pop-heading">
              [ahref]
              
             </span>
             <span class="menu-pop-subheading">
              클라우드 리소스의 관리 및 규정 준수를 단순화, 자동화 및 최적화
             </span>
             <ul class="menu-pop" id="ManagementTools-category">
              <li data-product-slug="azure-portal">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-portal", "CommonMenuCategory": "Products - Management and Governance"}' href="/ko-kr/features/azure-portal/" title="Microsoft Azure Portal">
                <span class="label">
                 Microsoft Azure Portal
                </span>
                <span class="sub">
                 통합된 단일 콘솔에서 모든 Azure 제품을 구축, 관리, 모니터링
                </span>
               </a>
              </li>
              <li data-product-slug="cloud-shell">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "cloud-shell", "CommonMenuCategory": "Products - Management and Governance"}' href="/ko-kr/features/cloud-shell/" title="Cloud Shell">
                <span class="label">
                 Cloud Shell
                </span>
                <span class="sub">
                 브라우저 기반 셸 (shell)로 Azure 관리 간소화
                </span>
               </a>
              </li>
              <li data-product-slug="advisor">
               [ahref]
               
              </li>
              <li data-product-slug="backup">
               [ahref]
               
              </li>
              <li data-product-slug="cost-management">
               [linkx]
               
              </li>
              <li data-product-slug="azure-policy">
               [ahref]
               
              </li>
              <li data-product-slug="monitor">
               [ahref]
               
              </li>
              <li data-product-slug="site-recovery">
               [linkx]
               
              </li>
              <li data-product-slug="scheduler">
               <li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx][ahref]
              </li>
              <li class="category-see-more">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Management and Governance" href="/ko-kr/services/#management-tools" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
          </ul>
         </li>
         <li class="category-column">
          <ul>
           <li>
            <button aria-controls="Networking-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Networking", "CommonMenuCategory": "Products"}' id="menu-category-networking" type="button">
             네트워킹
            </button>
            <nav>
             <span class="menu-pop-heading">
              [linkx]
              
             </span>
             <span class="menu-pop-subheading">
              클라우드 및 온-프레미스 인프라와 서비스를 연결하여 고객과 사용자에게 가능한 최고의 환경 제공
             </span>
             <ul class="menu-pop" id="Networking-category">
              <li data-product-slug="virtual-network">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "virtual-network", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/virtual-network/" title="Virtual Network">
                <span class="label">
                 Virtual Network
                </span>
                <span class="sub">
                 프라이빗 네트워크 프로비전, 온-프레미스 데이터 센터에 선택적으로 연결
                </span>
               </a>
              </li>
              <li data-product-slug="load-balancer">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "load-balancer", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/load-balancer/" title="Load Balancer">
                <span class="label">
                 Load Balancer
                </span>
                <span class="sub">
                 애플리케이션에 높은 가용성 및 네트워크 성능 제공
                </span>
               </a>
              </li>
              <li data-product-slug="application-gateway">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "application-gateway", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/application-gateway/" title="Application Gateway">
                <span class="label">
                 Application Gateway
                </span>
                <span class="sub">
                 Azure에서 안전하고 확장 가능하며 고가용성의 웹 프론트엔드 구축
                </span>
               </a>
              </li>
              <li data-product-slug="vpn-gateway">
               [linkx]
               
              </li>
              <li data-product-slug="dns">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "dns", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/dns/" title="Azure DNS">
                <span class="label">
                 Azure DNS
                </span>
                <span class="sub">
                 Azure에서 DNS 도메인 호스트
                </span>
               </a>
              </li>
              <li data-product-slug="cdn">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "cdn", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/cdn/" title="Content Delivery Network">
                <span class="label">
                 Content Delivery Network
                </span>
                <span class="sub">
                 전 세계 광범위한 고객에게 안전하고 신뢰할 수 있는 콘텐츠 전송 보장
                </span>
               </a>
              </li>
              <li data-product-slug="ddos-protection">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "ddos-protection", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/ddos-protection/" title="Azure DDoS Protection">
                <span class="label">
                 Azure DDoS Protection
                </span>
                <span class="sub">
                 분산된 서비스 거부(DDoS) 공격으로부터 애플리케이션 보호
                </span>
               </a>
              </li>
              <li data-product-slug="traffic-manager">
               [ahref]
               
              </li>
              <li data-product-slug="expressroute">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "expressroute", "CommonMenuCategory": "Products - Networking"}' href="/ko-kr/services/expressroute/" title="Express Route">
                <span class="label">
                 Express Route
                </span>
                <span class="sub">
                 Azure로 연결되는 전용 프라이빗 네트워크 파이버 커넥션
                </span>
               </a>
              </li>
              <li class="category-see-more">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Networking" href="/ko-kr/services/#networking" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Databases-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Databases", "CommonMenuCategory": "Products"}' id="menu-category-databases" type="button">
             데이터베이스
            </button>
            <nav>
             <span class="menu-pop-heading">
              [ahref]
               [mkey1][keywordx]<li>[ahref]</li>[pkeyx][keywordx]
              
             </span>
             <span class="menu-pop-subheading">
              완전히 관리되는 안전한 엔터프라이즈급 데이터베이스 서비스를 통한 빠른 성장과 혁신
             </span>
             <ul class="menu-pop" id="Databases-category">
              <li data-product-slug="cosmos-db">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "cosmos-db", "CommonMenuCategory": "Products - Databases"}' href="/ko-kr/services/cosmos-db/" title="Azure Cosmos DB">
                <span class="label">
                 Azure Cosmos DB
                </span>
                <span class="sub">
                 모든 규모에 맞게 전역 배포된 다중 모델 데이터베이스
                </span>
               </a>
              </li>
              <li data-product-slug="sql-database">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "sql-database", "CommonMenuCategory": "Products - Databases"}' href="/ko-kr/services/sql-database/" title="Azure SQL Database">
                <span class="label">
                 Azure SQL Database
                </span>
                <span class="sub">
                 관리되는 관계형 SQL Database 서비스 제공
                </span>
               </a>
              </li>
              <li data-product-slug="mysql">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "mysql", "CommonMenuCategory": "Products - Databases"}' href="/ko-kr/services/mysql/" title="Azure Database for MySQL">
                <span class="label">
                 Azure Database for MySQL
                </span>
                <span class="sub">
                 앱 개발자용 MySQL 데이터베이스 관리 서비스
                </span>
               </a>
              </li>
              <li data-product-slug="postgresql">
               [linkx]
               
              </li>
              <li data-product-slug="mariadb">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "mariadb", "CommonMenuCategory": "Products - Databases"}' href="/ko-kr/services/mariadb/" title="Azure Database for MariaDB">
                <span class="label">
                 Azure Database for MariaDB[ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][linkx][ahref][pkeyx][ahref][ahref][keywordx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx][pkeyx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][linkx][linkx][linkx][pkeyx][mkey1][linkx]
                </span>
                <span class="sub">
                 앱 개발자를 위한 관리 MariaDB 데이터베이스 서비스
                </span>
               </a>
              </li>
              <li data-product-slug="virtual-machines\sql-server">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "virtual-machines-sql-server", "CommonMenuCategory": "Products - Databases"}' href="/ko-kr/services/virtual-machines/sql-server/" title="Virtual Machines의 SQL Server">
                <span class="label">
                 Virtual Machines의 SQL Server
                </span>
                <span class="sub">
                 클라우드에서 엔터프라이즈 SQL Server 앱 호스트
                </span>
               </a>
              </li>
              <li data-product-slug="database-migration">
               [linkx]
               
              </li>
              <li data-product-slug="redis-cache">
               [ahref]
               
              </li>
              <li data-product-slug="sql-server-stretch-database">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "sql-server-stretch-database", "CommonMenuCategory": "Products - Databases"}' href="/ko-kr/services/sql-server-stretch-database/" title="SQL Server Stretch Database">
                <span class="label">
                 SQL Server Stretch Database
                </span>
                <span class="sub">
                 온-프레미스 SQL Server 데이터베이스를 Azure로 동적으로 확장
                </span>
               </a>
              </li>
              <li data-product-slug="storage\tables">
               [mkey1][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][mkey1][mkey1][mkey1][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][mkey1][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][mkey1][mkey1][keywordx][pkeyx][ahref]
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Databases" href="/ko-kr/services/#databases" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Migration-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Migration", "CommonMenuCategory": "Products"}' id="menu-category-migration" type="button">
             마이그레이션
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Migration" href="/ko-kr/migration/" title="마이그레이션">
               마이그레이션
              </a>
             </span>
             <span class="menu-pop-subheading">
              지침, 도구 및 리소스를 통해 클라우드로의 마이그레이션 간소화 및 가속화
             </span>
             <ul class="menu-pop" id="Migration-category">
              <li data-product-slug="azure-migrate">
               [linkx]
               
              </li>
              <li data-product-slug="site-recovery">
               [ahref]
               
              </li>
              <li data-product-slug="database-migration">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "database-migration", "CommonMenuCategory": "Products - Azure migration center"}' href="/ko-kr/services/database-migration/" title="Azure Database Migration Service">
                <span class="label">
                 Azure Database Migration Service
                </span>
                <span class="sub">
                 클라우드로 온-프레미스 데이터베이스 마이그레이션 간소화
                </span>
               </a>
              </li>
              <li data-product-slug="databox">
               [ahref]
               
              </li>
              <li data-product-slug="cost-management">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Migration" href="/ko-kr/services/#migration" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Mobile-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Mobile", "CommonMenuCategory": "Products"}' id="menu-category-mobile" type="button">
             모바일
            </button>
            <nav>
             <span class="menu-pop-heading">
              [linkx]
              
             </span>
             <span class="menu-pop-subheading">
              모든 모바일 디바이스를 위한 플랫폼 간 및 네이티브 앱 빌드 및 배포[keywordx]<li>[linkx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
             </span>
             <ul class="menu-pop" id="Mobile-category">
              <li data-product-slug="app-service\mobile">
               [linkx]
               
              </li>
              <li data-product-slug="notification-hubs">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "notification-hubs", "CommonMenuCategory": "Products - Mobile"}' href="/ko-kr/services/notification-hubs/" title="Notification Hubs">
                <span class="label">
                 Notification Hubs
                </span>
                <span class="sub">
                 모든 백엔드에서 모든 종류의 플랫폼으로 푸시 알림을 전송할 수 있습니다.
                </span>
               </a>
              </li>
              <li data-product-slug="app-center">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "app-center", "CommonMenuCategory": "Products - Mobile"}' href="/ko-kr/services/app-center/" title="Visual Studio App Center">
                <span class="label">
                 Visual Studio App Center
                </span>
                <span class="sub">
                 지속적으로 앱 빌드, 테스트, 릴리스 및 모니터링
                </span>
               </a>
              </li>
              <li data-product-slug="xamarin">
               [linkx]
               
              </li>
              <li data-product-slug="azure-maps">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "azure-maps", "CommonMenuCategory": "Products - Mobile"}' href="/ko-kr/services/azure-maps/" title="Azure Maps">
                <span class="label">
                 Azure Maps
                </span>
                <span class="sub">
                 데이터에 지리적 컨텍스트를 제공하는 간단하고 안전한 위치 인식 API
                </span>
               </a>
              </li>
              <li data-product-slug="app-service\api">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "app-service-api", "CommonMenuCategory": "Products - Mobile"}' href="/ko-kr/services/app-service/api/" title="API Apps">
                <span class="label">
                 API Apps
                </span>
                <span class="sub">
                 클라우드 API를 간편하게 빌드하고 사용
                </span>
               </a>
              </li>
              <li data-product-slug="api-management">
               [ahref]
               
              </li>
              <li class="category-see-more-tablet">
               [ahref]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Media-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Media", "CommonMenuCategory": "Products"}' id="menu-category-media" type="button">
             미디어
            </button>
            <nav>
             <span class="menu-pop-heading">
              미디어
             </span>
             <span class="menu-pop-subheading">
              언제 어디서나 어떤 디바이스에서도 고품질 동영상 콘텐츠 제공
             </span>
             <ul class="menu-pop" id="Media-category">
              <li data-product-slug="media-services">
               [ahref]
               
              </li>
              <li data-product-slug="media-services\encoding">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "media-services-encoding", "CommonMenuCategory": "Products - Media"}' href="/ko-kr/services/media-services/encoding/" title="Encoding">
                <span class="label">
                 Encoding
                </span>
                <span class="sub">
                 클라우드 규모의 스튜디오 등급 인코딩
                </span>
               </a>
              </li>
              <li data-product-slug="media-services\media-player">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "media-services-media-player", "CommonMenuCategory": "Products - Media"}' href="/ko-kr/services/media-services/media-player/" title="Azure Media Player">
                <span class="label">
                 Azure Media Player
                </span>
                <span class="sub">
                 모든 재생 요구를 충족하는 단일 플레이어
                </span>
               </a>
              </li>
              <li data-product-slug="media-services\on-demand-streaming">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "media-services-on-demand-streaming", "CommonMenuCategory": "Products - Media"}' href="/ko-kr/services/media-services/live-on-demand/" title="Live and On-Demand Streaming">
                <span class="label">
                 Live and On-Demand Streaming
                </span>
                <span class="sub">
                 비즈니스 요구를 충족시킬 수 있는 규모로 거의 모든 디바이스에 콘텐츠 전달
                </span>
               </a>
              </li>
              <li data-product-slug="media-services\media-analytics">
               [ahref]
               
              </li>
              <li data-product-slug="media-services\content-protection">
               [ahref]
               
              </li>
              <li data-product-slug="media-services\video-indexer">
               [linkx]
               
              </li>
              <li data-product-slug="cdn">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "cdn", "CommonMenuCategory": "Products - Media"}' href="/ko-kr/services/cdn/" title="Content Delivery Network">
                <span class="label">
                 Content Delivery Network
                </span>
                <span class="sub">
                 전 세계 광범위한 고객에게 안전하고 신뢰할 수 있는 콘텐츠 전송 보장
                </span>
               </a>
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Media" href="/ko-kr/services/#media" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Security-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Security", "CommonMenuCategory": "Products"}' id="menu-category-security" type="button">
             보안
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Security" href="/ko-kr/product-categories/security/" title="보안">
               보안
              </a>
             </span>
             <span class="menu-pop-subheading">
              하이브리드 클라우드 워크로드에서 고급 위협으로부터 엔터프라이즈 보호
             </span>
             <ul class="menu-pop" id="Security-category">
              <li data-product-slug="azure-sentinel">
               [ahref]
               
              </li>
              <li data-product-slug="security-center">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "security-center", "CommonMenuCategory": "Products - Security"}' href="/ko-kr/services/security-center/" title="Security Center">
                <span class="label">
                 Security Center
                </span>
                <span class="sub">
                 하이브리드 클라우드 워크로드 전체 내 보안 관리 통합 및 지능형 공격 보호 사용
                </span>
               </a>
              </li>
              <li data-product-slug="key-vault">
               [ahref]
               
              </li>
              <li data-product-slug="application-gateway">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "application-gateway", "CommonMenuCategory": "Products - Security"}' href="/ko-kr/services/application-gateway/" title="Application Gateway">
                <span class="label">
                 Application Gateway
                </span>
                <span class="sub">
                 Azure에서 안전하고 확장 가능하며 고가용성의 웹 프론트엔드 구축
                </span>
               </a>
              </li>
              <li data-product-slug="information-protection">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "information-protection", "CommonMenuCategory": "Products - Security"}' href="/ko-kr/services/information-protection/" title="Azure Information Protection">
                <span class="label">
                 Azure Information Protection
                </span>
                <span class="sub">
                 민감한 정보를 언제 어디서나 더 효과적으로 보호
                </span>
               </a>
              </li>
              <li data-product-slug="vpn-gateway">
               [ahref]
               
              </li>
              <li data-product-slug="active-directory">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "active-directory", "CommonMenuCategory": "Products - Security"}' href="/ko-kr/services/active-directory/" title="Azure Active Directory">
                <span class="label">
                 Azure Active Directory
                </span>
                <span class="sub">
                 온-프레미스 디렉터리 동기화 및 Single Sign-On 활성화
                </span>
               </a>
              </li>
              <li data-product-slug="ddos-protection">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "ddos-protection", "CommonMenuCategory": "Products - Security"}' href="/ko-kr/services/ddos-protection/" title="Azure DDoS Protection">
                <span class="label">
                 Azure DDoS Protection
                </span>
                <span class="sub">
                 분산된 서비스 거부(DDoS) 공격으로부터 애플리케이션 보호
                </span>
               </a>
              </li>
              <li data-product-slug="azure-dedicated-hsm">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               [ahref]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Analytics-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Analytics", "CommonMenuCategory": "Products"}' id="menu-category-analytics" type="button">
             분석기능
            </button>
            <nav>
             <span class="menu-pop-heading">
              [linkx]
              
             </span>
             <span class="menu-pop-subheading">
              다양한 종류, 양, 개발속도의 데이터를 수집, 저장, 처리, 분석 및 시각화
             </span>
             <ul class="menu-pop" id="Analytics-category">
              <li data-product-slug="sql-data-warehouse">
               [ahref]
               
              </li>
              <li data-product-slug="databricks">
               [linkx]
               
              </li>
              <li data-product-slug="hdinsight">
               [linkx]
               
              </li>
              <li data-product-slug="data-factory">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "data-factory", "CommonMenuCategory": "Products - Analytics"}' href="/ko-kr/services/data-factory/" title="Data Factory">
                <span class="label">
                 Data Factory
                </span>
                <span class="sub">
                 편리해진 엔터프라이즈급 하이브리드 데이터 통합
                </span>
               </a>
              </li>
              <li data-product-slug="machine-learning-overview">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "machine-learning-overview", "CommonMenuCategory": "Products - Analytics"}' href="/ko-kr/services/machine-learning-service/" title="머신 러닝">
                <span class="label">
                 머신 러닝
                </span>
                <span class="sub">
                 기계 학습 모델을 빌드 및 학습하고 클라우드에서 에지로 배포
                </span>
               </a>
              </li>
              <li data-product-slug="stream-analytics">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "stream-analytics", "CommonMenuCategory": "Products - Analytics"}' href="/ko-kr/services/stream-analytics/" title="Azure Stream Analytics">
                <span class="label">
                 Azure Stream Analytics
                </span>
                <span class="sub">
                 수백만 개의 IoT 장치에서 실시간 데이터 스트림 처리
                </span>
               </a>
              </li>
              <li data-product-slug="data-lake-storage">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "data-lake-storage", "CommonMenuCategory": "Products - Analytics"}' href="/ko-kr/services/storage/data-lake-storage/" title="Azure Data Lake Storage">
                <span class="label">
                 Azure Data Lake Storage
                </span>
                <span class="sub">
                 Azure Blob Storage에서 빌드된 확장성이 매우 뛰어나고 안전한 Data Lake 기능
                </span>
               </a>
              </li>
              <li data-product-slug="analysis-services">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "analysis-services", "CommonMenuCategory": "Products - Analytics"}' href="/ko-kr/services/analysis-services/" title="Azure Analysis Services">
                <span class="label">
                 Azure Analysis Services
                </span>
                <span class="sub">
                 엔터프라이즈급 분석 엔진 서비스
                </span>
               </a>
              </li>
              <li data-product-slug="event-hubs">
               [ahref]
               
              </li>
              <li data-product-slug="power-bi-embedded">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "power-bi-embedded", "CommonMenuCategory": "Products - Analytics"}' href="/ko-kr/services/power-bi-embedded/" title="Power BI Embedded">
                <span class="label">
                 Power BI Embedded
                </span>
                <span class="sub">
                 완벽하고 뛰어난 대화형의 데이터 시각화 기능을 애플리케이션에 포함
                </span>
               </a>
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Analytics" href="/ko-kr/services/#analytics" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Containers-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Containers", "CommonMenuCategory": "Products"}' id="menu-category-containers" type="button">
             컨테이너
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Containers" href="/ko-kr/overview/containers/" title="컨테이너">
               컨테이너
              </a>
             </span>
             <span class="menu-pop-subheading">
              통합 도구를 사용하여 컨테이너화된 응용 프로그램을 더 빠르게 개발 및 관리
             </span>
             <ul class="menu-pop" id="Containers-category">
              <li data-product-slug="kubernetes-service">
               [ahref]
               
              </li>
              <li data-product-slug="container-instances">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "container-instances", "CommonMenuCategory": "Products - Containers"}' href="/ko-kr/services/container-instances/" title="Container Instances">
                <span class="label">
                 Container Instances
                </span>
                <span class="sub">
                 서버를 관리할 필요 없이 손쉽게 Azure에서 컨테이너 실행
                </span>
               </a>
              </li>
              <li data-product-slug="service-fabric">
               [linkx]
               
              </li>
              <li data-product-slug="container-registry">
               [linkx]
               
              </li>
              <li data-product-slug="app-service\containers">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "app-service-containers", "CommonMenuCategory": "Products - Containers"}' href="/ko-kr/services/app-service/containers/" title="Web App for Containers ">
                <span class="label">
                 Web App for Containers
                </span>
                <span class="sub">
                 비즈니스와 함께 확장하는 컨테이너화된 웹앱을 쉽게 배포 및 실행
                </span>
               </a>
              </li>
              <li data-product-slug="functions">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "functions", "CommonMenuCategory": "Products - Containers"}' href="/ko-kr/services/functions/" title="Azure Function">
                <span class="label">
                 Azure Function
                </span>
                <span class="sub">
                 서버를 사용하지 않는 코드로 이벤트 처리
                </span>
               </a>
              </li>
              <li data-product-slug="openshift">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               [linkx]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Compute-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Compute", "CommonMenuCategory": "Products"}' id="menu-category-compute" type="button">
             컴퓨팅
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Compute" href="/ko-kr/product-categories/compute/" title="컴퓨팅 ">
               컴퓨팅
              </a>
             </span>
             <span class="menu-pop-subheading">
              클라우드 계산 용량 및 요청 시 확장에 액세스하고 사용한 리소스에 대한 비용만 지급
             </span>
             <ul class="menu-pop" id="Compute-category">
              <li data-product-slug="virtual-machines">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "virtual-machines", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/virtual-machines/" title="Virtual Machines">
                <span class="label">
                 Virtual Machines
                </span>
                <span class="sub">
                 빠른 속도로 Windows 및 Linux 가상 머신 프로비전
                </span>
               </a>
              </li>
              <li data-product-slug="virtual-machine-scale-sets">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "virtual-machine-scale-sets", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/virtual-machine-scale-sets/" title="Virtual Machine Scale Sets">
                <span class="label">
                 Virtual Machine Scale Sets
                </span>
                <span class="sub">
                 최대 수천 대의 Linux 및 Windows 가상 머신의 관리 및 확장
                </span>
               </a>
              </li>
              <li data-product-slug="kubernetes-service">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "kubernetes-service", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/kubernetes-service/" title="Azure Kubernetes Service(AKS)">
                <span class="label">
                 Azure Kubernetes Service(AKS)
                </span>
                <span class="sub">
                 Kubernetes의 배치, 관리, 운용 간소화
                </span>
               </a>
              </li>
              <li data-product-slug="functions">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "functions", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/functions/" title="Azure Function">
                <span class="label">
                 Azure Function
                </span>
                <span class="sub">
                 서버를 사용하지 않는 코드로 이벤트 처리
                </span>
               </a>
              </li>
              <li data-product-slug="service-fabric">
               [linkx]
               
              </li>
              <li data-product-slug="app-service">
               [linkx]
               
              </li>
              <li data-product-slug="container-instances">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "container-instances", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/container-instances/" title="Container Instances">
                <span class="label">
                 Container Instances
                </span>
                <span class="sub">
                 서버를 관리할 필요 없이 손쉽게 Azure에서 컨테이너 실행
                </span>
               </a>
              </li>
              <li data-product-slug="batch">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "batch", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/batch/" title="Batch">
                <span class="label">
                 Batch
                </span>
                <span class="sub">
                 작업 예약 및 컴퓨팅 관리를 클라우드에서 크기 조정
                </span>
               </a>
              </li>
              <li data-product-slug="virtual-machines\sql-server">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "virtual-machines-sql-server", "CommonMenuCategory": "Products - Compute"}' href="/ko-kr/services/virtual-machines/sql-server/" title="Virtual Machines의 SQL Server">
                <span class="label">
                 Virtual Machines의 SQL Server
                </span>
                <span class="sub">
                 클라우드에서 엔터프라이즈 SQL Server 앱 호스트
                </span>
               </a>
              </li>
              <li class="category-see-more">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Compute" href="/ko-kr/services/#compute" title="자세히 보기">
                자세히 보기
               </a>
              </li>
              <li class="category-see-more-tablet">
               [linkx]
               
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="Integration-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Integration", "CommonMenuCategory": "Products"}' id="menu-category-integration" type="button">
             통합
            </button>
            <nav>
             <span class="menu-pop-heading">
              <a data-event="global-navigation-menu-clicked-categoryheading" data-event-property="Integration" href="/ko-kr/product-categories/integration/" title="통합">
               통합
              </a>
             </span>
             <span class="menu-pop-subheading">
              엔터프라이즈 전체에서 온-프레미스 및 클라우드 기반 응용 프로그램, 데이터 및 프로세스를 원활하게 통합
             </span>
             <ul class="menu-pop" id="Integration-category">
              <li data-product-slug="logic-apps">
               [ahref]
               
              </li>
              <li data-product-slug="service-bus">
               [linkx]
               
              </li>
              <li data-product-slug="api-management">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "api-management", "CommonMenuCategory": "Products - Integration"}' href="/ko-kr/services/api-management/" title="API Management">
                <span class="label">
                 API Management
                </span>
                <span class="sub">
                 개발자, 파트너 및 직원에게 안전하게 대규모로 API를 게시
                </span>
               </a>
              </li>
              <li data-product-slug="event-grid">
               [linkx]
               
              </li>
              <li class="category-see-more-tablet">
               <a class="arrowLink no-description" data-event="global-navigation-menu-clicked-item" data-event-property="Menu Category See More - Integration" href="/ko-kr/services/#integration" title="자세히 보기">
                자세히 보기
               </a>
              </li>
             </ul>
            </nav>
           </li>
           <li>
            <button aria-controls="MixedReality-category" aria-expanded="false" aria-haspopup="true" class="product-category-button expand-menu-link" data-event="global-navigation-menu-clicked-category" data-event-property='{"Target": "Mixed Reality", "CommonMenuCategory": "Products"}' id="menu-category-mixed-reality" type="button">
             혼합 현실
            </button>
            <nav>
             <span class="menu-pop-heading">
              [ahref]
              
             </span>
             <span class="menu-pop-subheading">
              실제 세계와 디지털 세계를 혼합하여 몰입형 공동 작업 경험 만들기
             </span>
             <ul class="menu-pop" id="MixedReality-category">
              <li data-product-slug="spatial-anchors">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "spatial-anchors", "CommonMenuCategory": "Products - Mixed Reality"}' href="/ko-kr/services/spatial-anchors/" title="Spatial Anchors">
                <span class="label">
                 Spatial Anchors
                </span>
                <span class="sub">
                 다중 사용자 공간 인식 혼합 현실 경험 만들기
                </span>
               </a>
              </li>
              <li data-product-slug="remote-rendering">
               [ahref]
               
              </li>
              <li data-product-slug="digital-twins">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "digital-twins", "CommonMenuCategory": "Products - Mixed Reality"}' href="/ko-kr/services/digital-twins/" title="Azure Digital Twins">
                <span class="label">
                 Azure Digital Twins
                </span>
                <span class="sub">
                 차세대 IoT 공간 인텔리전스 솔루션 빌드
                </span>
               </a>
              </li>
              <li data-product-slug="kinect-dk">
               <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "kinect-dk", "CommonMenuCategory": "Products - Mixed Reality"}' href="/ko-kr/services/kinect-dk/" title="Kinect DK">
                <span class="label">
                 Kinect DK
                </span>
                <span class="sub">
                 고급 AI 센서가 포함된 개발자 키트를 사용하여 Computer Vision 및 음성 모델 빌드
                </span>
               </a>
              </li>
              <li class="category-see-more-tablet">
               [linkx]
               
              </li>
             </ul>
            </nav>
           </li>
          </ul>
         </li>
         <li class="tablet-desktop-only menu-search">
          <form action="/ko-kr/menu/search/" aria-label="Azure 메뉴 제품 검색 양식" id="menu-product-search" method="get">
           <button aria-label="제출" id="menu-search-submit" type="submit">
            <span class="icon icon-search">
             <svg aria-hidden="true" role="presentation">
              <use xlink:href="#svg-nav-search">
              </use>
             </svg>
            </span>
           </button>
           <button aria-label="검색 지우기" class="clear-menu-search" id="clear-menu-search" type="reset">
            <span class="icon">
             <svg aria-hidden="true" role="presentation">
              <use xlink:href="#svg-nav-search-close">
              </use>
             </svg>
            </span>
           </button>
          </form>
          [linkx]
          
          <nav>
           <div aria-live="polite" id="menu-search-result-container" role="region">
            <span class="menu-pop-heading menu-pop-heading-searchresults">
             검색 결과:
             <span class="menu-pop-heading-searchresults-query">
              "
              <span id="menu-search-query">
              </span>
              "
             </span>
            </span>
           </div>
           <div id="menu-search-loader-container">
           </div>
          </nav>
         </li>
         <li class="mobile-only">
          [ahref]
          
         </li>
        </ul>
       </nav>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="" data-event="global-navigation-menu-clicked-topnav" data-event-property="Pricing" href="/ko-kr/pricing/" id="navigation-pricing" title="가격">
        가격
       </a>
      </li>
      <li>
       <a data-event="global-navigation-menu-clicked-topnav" data-event-property="Training" href="/ko-kr/learn/azure/" id="navigation-training" title="교육">
        교육
        <span class="sub">
         동영상에서 실습 교육까지 무료 온라인 학습 리소스를 살펴보기
        </span>
       </a>
      </li>
      <li>
       <button aria-controls="marketplace-menu" aria-expanded="false" aria-haspopup="true" class="expand-menu-link " data-event="global-navigation-menu-clicked-topnav" data-event-property="Marketplace" id="navigation-marketplace" title="Marketplace" type="button">
        Marketplace
       </button>
       <nav aria-labelledby="navigation-marketplace" class="nav-centered">
        <ul class="menu-drop menu-drop-marketplace" id="marketplace-menu">
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "AppSource", "CommonMenuCategory": "Marketplace"}' href="/" title="AppSource">
           <span class="label">
            AppSource
           </span>
           <span class="sub">
            산업별 기간 업무 및 생산성 앱 찾기 및 체험
           </span>
          </a>
         </li>
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Azure Marketplace", "CommonMenuCategory": "Marketplace"}' href="/" title="Azure Marketplace">
           <span class="label">
            Azure Marketplace
           </span>
           <span class="sub">
            Azure 구성 요소 및 완료된 소프트웨어 솔루션 찾기, 체험 및 구매
           </span>
          </a>
         </li>
        </ul>
       </nav>
      </li>
      <li>
       <button aria-controls="partners-menu" aria-expanded="false" aria-haspopup="true" class="expand-menu-link " data-event="global-navigation-menu-clicked-topnav" data-event-property="Partners" id="navigation-partners" title="파트너" type="button">
        파트너
       </button>
       <nav aria-labelledby="navigation-partners" class="nav-centered">
        <ul class="menu-drop menu-drop-partners" id="partners-menu">
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Find a partner", "CommonMenuCategory": "Partners"}' href="/ko-kr/partners/" title="파트너 찾기">
           <span class="label">
            파트너 찾기
           </span>
           <span class="sub">
            숙련된 파트너의 지원을 받아 클라우드에서 시작 및 실행
           </span>
          </a>
         </li>
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Become a partner", "CommonMenuCategory": "Partners"}' href="/ko-kr/partners/become-a-partner/" title="파트너 되기">
           <span class="label">
            파트너 되기
           </span>
           <span class="sub">
            업계에서 가장 광범위한 파트너 네트워크를 사용하여 더 많은 성공 구축
           </span>
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Connect with the Microsoft Partner Community", "CommonMenuCategory": "Partners"}' href="/t5/Cloud-AI/ct-p/cloud-ai" title="Microsoft 파트너 커뮤니티와 연결">
           <span class="label">
            Microsoft 파트너 커뮤니티와 연결
           </span>
           <span class="sub">
            Microsoft 파트너 에코시스템을 통해 파트너 연결 가속화 및 성공 확대
           </span>
          </a>
         </li>
        </ul>
       </nav>
      </li>
      <li>
       <button aria-controls="azure-support" aria-expanded="false" aria-haspopup="true" class="expand-menu-link " data-event="global-navigation-menu-clicked-topnav" data-event-property="Support" id="navigation-support" title="지원" type="button">
        지원
       </button>
       <nav aria-labelledby="navigation-support" class="nav-centered">
        <ul class="menu-drop menu-drop-support" id="azure-support">
         <li>
          [linkx]
          
         </li>
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Compare Support Plans", "CommonMenuCategory": "Support"}' href="/ko-kr/support/plans/" title="지원 플랜 비교">
           <span class="label">
            지원 플랜 비교
           </span>
           <span class="sub">
            기술 지원 탐색 및 구입
           </span>
          </a>
         </li>
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Support Community", "CommonMenuCategory": "Support"}' href="/ko-kr/support/community/" title="지원 커뮤니티">
           <span class="label">
            지원 커뮤니티
           </span>
           <span class="sub">
            질문하고 Microsoft 및 커뮤니티 전문가의 답변 얻기
           </span>
          </a>
         </li>
         <li>
          <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Knowledge Center", "CommonMenuCategory": "Support"}' href="/ko-kr/resources/knowledge-center/" title="지식 센터">
           <span class="label">
            지식 센터
           </span>
           <span class="sub">
            일반적인 지원 질문에 대한 답변 얻기
           </span>
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </nav>
      </li>
      <li>
       [ahref]
       
      </li>
      <li class="overflow" id="main-nav-resources">
       [ahref]
       
      </li>
      <li class="overflow" id="main-nav-trust-center">
       [ahref]
       
      </li>
      <li class="overflow" id="main-nav-legal">
       <a data-event="global-navigation-menu-clicked-item" data-event-property='{"Target": "Legal", "CommonMenuCategory": "More"}' href="/ko-kr/support/legal/" title="법적 고지 사항">
        <span class="label">
         법적 고지 사항
        </span>
        <span class="sub">
         사용 약관 보기
        </span>
       </a>
      </li>
      <li id="navigation-more">
       <button aria-controls="more-menu" aria-expanded="false" aria-haspopup="true" class="expand-menu-link nav-more-link" data-event="global-navigation-menu-clicked-topnav" data-event-property="More" id="nav-more-link" title="기타" type="button">
        기타
       </button>
       <nav aria-labelledby="nav-more-link" class="nav-centered">
        <ul class="menu-drop menu-drop-more" id="more-menu">
        </ul>
       </nav>
      </li>
     </ul>
     <div class="onyx-variation" data-active="control" data-cohorts="null" data-name="main-header-go-to-portal" style="display: none;">
     </div>
     <a class="header-button-primary" data-event="global-navigation-header-clicked-primarycta" href="/ko-kr/free/" id="header-main-cta" title="체험 계정">
      체험 계정
     </a>
     <ul class="nav-collapsed-links" id="nav-collapsed-links">
      [keywordx][mkey1][keywordx][keywordx][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][linkx][linkx][pkeyx][linkx][keywordx][linkx][pkeyx][pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx][linkx][ahref][linkx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]
     </ul>
    </nav>
   </header>
  </div>
  <main class="wa-container" data-tag-area="content" data-tag-group="body" id="main" tabindex="-1">
   <div class="section section-palette06">
    <div class="row">
     <div class="column">
      <h1>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h1>
     </div>
    </div>
    <div class="row row-size3">
     <div class="column">
      <p class="text-heading3">
       다중 플랫폼 확장 가능 앱 및 서비스를 손쉽게 빌드, 디버그, 배포, 진단 및 관리
      </p>
     </div>
    </div>
    <div class="row">
     <div class="column medium-6">
      <ul class="wa-checkList wa-checkList-light">
       <li>
        IaaS와 PaaS에서 사용 가능한 앱 빌드
       </li>
       <li>
        엔터프라이즈, 웹, 모바일 및 IoT 앱의 개발 가속화
       </li>
       <li>
        Visual Studio와 기타 독립 실행형 및 명령줄 도구에서 직접 클라우드 액세스
       </li>
      </ul>
     </div>
     <div class="column medium-6">
      <ul class="wa-checkList wa-checkList-light">
       <li>
        Java, Node, Python, Ruby, PHP 또는 .NET용 클라우드 앱 빌드
       </li>
       <li>
        명령줄 인터페이스에서 Azure 명령 실행
       </li>
       <li>
        세계적 수준의 디버거, 프로파일러, 진단 도구 및 탐색기를 사용하여 라이브 앱 진단
       </li>
      </ul>
     </div>
    </div>
   </div>
   <section aria-label="개발자 도구에 대해 알아보기" class="section">
    <div class="row">
     <div class="column large-6">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <p>
       Azure 서비스를 최대로 활용하기 위한 다중 플랫폼 앱을 빌드하고 배포합니다. 앱을 Azure 서비스와 통합하고 Azure Resource Manager용 템플릿을 작성하는 데 도움이 되는 수백 개의 확장 및 테마를 사용할 수 있습니다. 간단한 다중 플랫폼 스크립트로 앱 및 템플릿을 Azure에 배포할 수 있습니다.
      </p>
      <p>
       <a class="button button-tiny button-carrot" data-event="area-tools-root-clicked-cta" href="/items?itemName=msazurermtools.azurerm-vscode-tools">
        Azure Resource Manager 도구 확장 받기
       </a>
      </p>
      <p>
       [linkx]
       
      </p>
     </div>
     <div class="column large-6">
     </div>
    </div>
    <div class="row row-divided">
     <div class="column">
      <div class="row">
       <div class="column">
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <p>
         Visual Studio에서 직접 Azure 개발 환경을 향상시킬 수 있는 더 다양한 클라우드 리소스 및 서비스에 액세스하는 데 도움이 되는 추가적인 템플릿 및 도구 모음을 사용하려면 Azure SDK를 설치하세요. 이러한 도구를 사용하여 무한 확장 가능한 응용 프로그램 및 API를 배포하고, 진단을 구성하고, 앱 서비스 리소스를 생성 및 관리하고, 데이터를 통합하는 등의 작업을 수행할 수 있습니다.
        </p>
       </div>
      </div>
      <div class="row column category-list category-list-arrows">
       <div class="category-container">
        <button class="active" type="button">
         .NET SDK
        </button>
        <div aria-hidden="false" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1 large-4">
           <p>
            [linkx]
            
           </p>
           <p>
            [linkx]
            
           </p>
           <p>
            <a class="arrowLink" href="/packages?q=windowsazureofficial">
             NuGet 패키지
            </a>
           </p>
          </div>
          <div class="column large-4 end">
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/ko-kr/develop/net/">
             설명서
            </a>
           </p>
           <p>
            [linkx]
            
           </p>
           <p>
            [linkx]
            
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Java SDK
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1 large-4">
           <p>
            <a class="arrowLink" href="/ko-kr/azure/java-download-azure-sdk" rel="nofollow">
             Windows용 Azure Java SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/api/Redirect/ko-kr/documentation/articles/java-download-linux/" rel="nofollow">
             Linux용 Azure Java SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            [linkx]
            
           </p>
           <p>
            [linkx]
             <li>[pkeyx]</li>[keywordx][pkeyx][linkx][ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/plugin/7981">
             IntelliJ용 Visual Studio 팀 서비스 플러그 인
            </a>
           </p>
          </div>
          <div class="column large-4 end">
           <p>
            <a class="arrowLink" href="/Azure/azure-sdk-for-java">
             GitHub의 소스
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/ko-kr/develop/java/">
             설명서
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         노드 SDK
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            [linkx]
            
           </p>
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=253471&amp;clcid=0x412">
             Mac용 Azure Node SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Azure/azure-sdk-for-node">
             GitHub의 소스
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/ko-kr/develop/nodejs/">
             설명서
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Python SDK
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=254281&amp;clcid=0x412">
             Windows용 Azure Python SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=253471&amp;clcid=0x412">
             Mac용 Azure Python SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Azure/azure-sdk-for-python">
             GitHub의 소스
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/ko-kr/develop/python/">
             설명서
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-Face-Python">
             Face Python SDK
            </a>
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Ruby SDK
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=254280&amp;clcid=0x412">
             Windows용 Azure Ruby SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=253471&amp;clcid=0x412">
             Mac용 Azure Ruby SDK
            </a>
           </p>
           <p>
            [linkx]
            
           </p>
           <p>
            <a class="arrowLink" href="/Azure/azure-sdk-for-ruby">
             GitHub의 소스
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/ko-kr/develop/ruby/">
             설명서
            </a>
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         PHP SDK
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            [linkx]
            
           </p>
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=253471&amp;clcid=0x412">
             Mac용 Azure PHP SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/fwlink/?LinkId=253472&amp;clcid=0x412">
             Linux용 Azure PHP SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/Azure/azure-sdk-for-php">
             GitHub의 소스
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/ko-kr/develop/php/">
             설명서
            </a>
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Xamarin
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/NateRickard/Xamarin.Cognitive.BingSpeech">
             Bing Speech-to-Text Xamarin SDK
            </a>
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Android
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-Speech-STT-Android">
             Bing Speech-to-Text Android SDK
            </a>
           </p>
           <p>
            [linkx]
            
           </p>
           <p>
            [linkx]
             <li>[linkx]</li>[ahref][keywordx]<li>[ahref]</li>
            
           </p>
           <p>
            [linkx]
             [keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[linkx]</li>[pkeyx][ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-LUIS-Android">
             Language Understanding Intelligent Service Android SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-SpeakerRecognition-Android">
             Speaker Recognition Android SDK
            </a>
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         iOS
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-Speech-STT-iOS">
             Bing Speech-to-Text iOS SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-face-ios">
             Face iOS SDK
            </a>
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Swift
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1">
           <p>
            [linkx]
            
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="category-container">
        <button type="button">
         Windows
        </button>
        <div aria-hidden="true" class="tabbed-product-container">
         <div class="row link-row">
          <div class="column large-offset-1 large-4">
           <p>
            [linkx]
            
           </p>
           <p>
            [linkx]
            
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-emotion-windows">
             Emotion Windows SDK
            </a>
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-face-windows">
             Face Windows SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-linguisticanalysis-windows">
             Linguistic Analysis Windows SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
          </div>
          <div class="column large-4 end">
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-video-windows">
             Video Windows SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            [ahref]
            
           </p>
           <p>
            <a class="arrowLink" href="/Microsoft/Cognitive-LUIS-Windows">
             Language Understanding Intelligent Service C# SDK
            </a>
           </p>
           <p>
            [ahref]
            
           </p>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="row row-divided">
     <div class="column">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
     </div>
    </div>
    <div class="row row-size3">
     <div class="column large-6">
      <h3>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <p>
       Azure 플랫폼을 통해 제공되는 솔루션과 서비스를 만들고, 테스트하고, 배포하고, 관리하기 위한 cmdlet입니다.
      </p>
      [ahref]
      
     </div>
     <div class="column large-6">
      <h3>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <p>
       서비스를 관리하고 자주 수행하는 작업을 처리하는 경량 교차 플랫폼 명령줄 도구입니다.
      </p>
      <a class="button button-tiny button-carrot" data-event="area-tools-root-clicked-cta" href="/ko-kr/cli/azure/install-az-cli2" rel="nofollow">
       Azure CLI 설치 및 구성
      </a>
     </div>
    </div>
    <div class="row">
     <div class="column large-6">
      <h3>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <p>
       PowerShell에서 Visual Studio 개발 환경을 사용할 수 있습니다.  즉, 스크립트 및 모듈에 Visual Studio의 로컬, 조사식, 호출 스택을 활용하여 PowerShell 스크립트를 로컬 및 원격으로 편집, 실행 및 디버그합니다.
      </p>
      [ahref]
      
     </div>
     <div class="column large-6">
     </div>
    </div>
    <div class="row row-divided">
     <div class="column large-6 text-center">
     </div>
     <div class="column large-6">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <p>
       Microsoft Azure Storage 탐색기 프리뷰는 장소에 상관 없이 모든 플랫폼에서 Azure Storage 데이터로 손쉽게 작업할 수 있도록 해주는 독립 실행형 앱입니다. Blob, 테이블, 쿼리를 만들고 관리하며 SAS 키를 생성하는 등의 작업이 가능합니다.
      </p>
      <p>
       다음을 지원하는 Storage 탐색기 다운로드:
      </p>
      <p>
       [ahref]
       
       <a class="button button-tiny button-carrot" data-event="area-tools-root-clicked-cta" href="/fwlink/?LinkId=708342&amp;clcid=0x412">
        Mac
       </a>
       <a class="button button-tiny button-carrot" data-event="area-tools-root-clicked-cta" href="/fwlink/?LinkId=722418&amp;clcid=0x412">
        Linux
       </a>
      </p>
      <p>
       [linkx]
       
      </p>
     </div>
    </div>
    <div class="row row-divided">
     <div class="column large-6">
      <div class="row">
       <div class="column">
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         Visual Studio에서 직접 Azure의 클라우드 규모 응용 프로그램을 쉽게 빌드, 관리 및 배포하는 데 필요한 모든 기능을 가져오세요.
        </p>
        <p>
         <a href="/downloads/">
          Visual Studio 2019
         </a>
         의 Azure Workload에는 애플리케이션에서 Azure를 활용하는 데 필요한 모든 도구와 기능이 포함되어 있습니다.
        </p>
        <p>
         [linkx]
         
        </p>
       </div>
      </div>
     </div>
     <div class="column large-6 text-center">
     </div>
    </div>
    <div class="row row-divided">
     <li>[mkey1]</li>[linkx]<li>[pkeyx]</li>[linkx]
    </div>
    <div class="row row-divided">
     <div class="column large-6">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]<li>[ahref]</li>[keywordx][ahref][linkx][ahref]
      </h2>
      <p>
       로컬에서 호스트되거나 Azure에서 호스트되는 Docker 컨테이너에서 응용 프로그램을 빌드하고 디버그합니다. 다양한 도구 및 확장을 사용하여 Docker 컨테이너로 작업합니다.
      </p>
      <p>
       Visual Studio 2019용 Docker 도구는 .NET Core 플랫폼 간 개발 워크로드에 포함되어 있습니다.
      </p>
      <p>
       [ahref]
       
      </p>
      <p>
       [linkx]
       
      </p>
      <p>
       [linkx]
       
      </p>
      <p>
       [linkx]
       
      </p>
     </div>
     <div class="column large-6 text-center">
     </div>
    </div>
    <div class="row row-divided">
     <div class="column large-6 text-center">
     </div>
     <div class="column large-6">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      Azure Service Fabric 및 Visual Studio를 사용하여 마이크로 서비스의 구축을 시작하세요. 이러한 도구는 다양한 서비스 템플릿을 사용하여 새로운 Service Fabric 응용 프로그램을 만들기 때문에 이를 손쉽게 디버그하고 배포하고 버전 지정하고 업그레이드할 수 있습니다.
      <p>
       [ahref]
       
      </p>
      <p>
       [linkx]
       
      </p>
     </div>
    </div>
   </section>
   <section aria-label="체험 계정 Visual Studio 스타트업" class="section section-palette03 section-size3" data-tag-group="member-offers">
    <div class="row">
     <div class="column medium-3">
      <h3>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <p>
       Azure 체험 계정을 사용하여 멋진 아이디어 실현
      </p>
      [linkx]
      
     </div>
     <div class="column medium-3 medium-offset-1">
      <h3>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <p>
       구독자에게 연간 최대
       <span class="price-data " data-amount='{"currencies":{"USD":1800.0,"ARS":70200.0,"AUD":2480.0,"BRL":6690.0,"CAD":2310.0,"CHF":1780.0,"DKK":10200.0,"EUR":1380.0,"GBP":1140.0,"IDR":28160000.0,"INR":96800.0,"JPY":202000.0,"KRW":2024370.0,"NOK":15000.0,"NZD":2730.0,"RUB":62400.0,"SAR":6840.0,"SEK":15750.0,"TRY":10090.0,"TWD":56400.0,"ZAR":27900.0}}' data-decimals="3">
        $1800
       </span>
       의 추가 Azure 서비스 제공
      </p>
      [linkx]
      
     </div>
     <div class="column medium-3 medium-offset-1 end">
      <h3>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <p>
       BizSpark 프로그램에 가입하고 무료 Azure 서비스를 이용하십시오.
      </p>
      <a class="arrowLink hide-for-large" href="/ko-kr/pricing/member-offers/bizspark-startups/">
       자세한 정보
      </a>
     </div>
    </div>
    <div class="row row-size2 show-for-large">
     <div class="column medium-3">
      [linkx]
      
     </div>
     <div class="column medium-3 medium-offset-1">
      [linkx]
      
     </div>
     <div class="column medium-3 medium-offset-1 end">
      <a class="arrowLink" href="/ko-kr/pricing/member-offers/bizspark-startups/">
       자세한 정보
      </a>
     </div>
    </div>
   </section>
  </main>
  <footer class="section-footer" data-tag-area="footer" data-tag-group="footer">
   <div class="row">
    <nav aria-label="소셜로 이동" class="column medium-3">
     <p class="text-heading6">
      소셜로 이동
     </p>
     <ul aria-label="소셜로 이동" class="linkList linkList-social">
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/company/16188386">
        <span class="icon icon-size3">
         <svg style="display:none; visibility:hidden;">
          <defs>
           <symbol id="svg-linkedin" viewbox="0 0 23 23">
            <rect fill="#0080B5" height="23" width="23">
            </rect>
            <rect fill="#FFFFFF" height="7.7391968" width="2.5723877" x="5.6520386" y="9.2667236">
            </rect>
            <path d="M6.9552612,5.5358887C6.0753174,5.5358887,5.5,6.1136475,5.5,6.8730469 c0,0.7426758,0.5582275,1.3369751,1.4215088,1.3369751h0.0166626h0.000061c0.8970337,0,1.4553833-0.5942993,1.4553833-1.3369751 C8.3768921,6.1136475,7.8352661,5.5358887,6.9552612,5.5358887z" fill="#FFFFFF">
            </path>
            <path d="M14.5385132,9.085083c-1.3665161,0-1.9766235,0.7510986-2.3182373,1.2785645V9.2667236H9.6478882 c0.0337524,0.7261963,0,7.7391968,0,7.7391968h2.5722656V12.684021c0-0.2313232,0.0167236-0.4624023,0.0846558-0.6277466 c0.1859741-0.4620972,0.6092529-0.9407349,1.3198853-0.9407349c0.9307861,0,1.3031616,0.7097168,1.3031616,1.750061v4.1403198H17.5 v-4.437561C17.5,10.1912231,16.230896,9.085083,14.5385132,9.085083z" fill="#FFFFFF">
            </path>
           </symbol>
          </defs>
         </svg>
         <svg aria-hidden="true" role="presentation">
          <use xlink:href="#svg-linkedin">
          </use>
         </svg>
        </span>
        <span class="show-for-medium">
         LinkedIn
        </span>
       </a>
      </li>
      <li>
       <a href="/ko-kr/blog/feed/">
        <span class="icon icon-size3">
         <svg style="display:none; visibility:hidden;">
          <defs>
           <symbol id="svg-rss" viewbox="0 0 50 50">
            <rect fill="#ea8335" height="50" width="50" x="0">
            </rect>
            <path d="M31.5,41.3h-5.6c0-9.5-7.7-17.2-17.2-17.2v-5.6C21.3,18.5,31.5,28.7,31.5,41.3z" fill="#FFFFFF">
            </path>
            <path d="M41.3,41.3h-5.6c0-14.9-12.2-27-27-27V8.7C26.7,8.7,41.3,23.3,41.3,41.3z" fill="#FFFFFF">
            </path>
            <circle cx="14.2" cy="35.8" fill="#FFFFFF" r="5.5">
            </circle>
           </symbol>
          </defs>
         </svg>
         <svg aria-hidden="true" role="presentation">
          <use xlink:href="#svg-rss">
          </use>
         </svg>
        </span>
        <span class="show-for-medium">
         RSS
        </span>
       </a>
      </li>
     </ul>
    </nav>
    <div class="column medium-3">
     <nav aria-label="Microsoft Azure" data-control="toggle">
      <button aria-controls="footer-microsoft-azure" aria-expanded="false" class="text-heading6 toggler hide-for-large" type="button">
       Microsoft Azure
      </button>
      <p class="text-heading6 show-for-large">
       [linkx]
       
      </p>
      <ul aria-label="Microsoft Azure" class="linkList toggled" id="footer-microsoft-azure">
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/ko-kr/services/">
         제품
        </a>
       </li>
       <li>
        <a href="/ko-kr/global-infrastructure/regions/">
         지역
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/ko-kr/pricing/calculator/">
         계산기
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/ko-kr/downloads/?sdk=net">
         다운로드
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/ko-kr/marketplace/">
         Marketplace
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </nav>
    </div>
    <div class="column medium-3">
     <nav aria-label="커뮤니티" data-control="toggle">
      <button aria-controls="footer-community" aria-expanded="false" class="text-heading6 toggler hide-for-large" type="button">
       커뮤니티
      </button>
      <p class="text-heading6 show-for-large">
       [ahref]
       
      </p>
      <ul aria-label="커뮤니티" class="linkList toggled" id="footer-community">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/ko-kr/updates/">
         Azure 업데이트
        </a>
       </li>
       <li>
        <a href="/t5/Azure/ct-p/Azure">
         기술 커뮤니티
        </a>
       </li>
       <li>
        이벤트[keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][keywordx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][ahref][ahref][pkeyx][linkx][mkey1][keywordx]
       </li>
       <li>
        <a href="/features/azure/?wt.mc_id=azuremktg_hp_careers">
         커리어
        </a>
       </li>
       <li>
        <a href="/ko-kr/education/">
         교육
        </a>
       </li>
       <li>
        <a href="/ko-kr/free/students/">
         학생
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </nav>
     <nav aria-label="지원" data-control="toggle">
      <button aria-controls="footer-support" aria-expanded="false" class="text-heading6 toggler hide-for-large" type="button">
       지원
      </button>
      <p class="text-heading6 show-for-large">
       [ahref]
       
      </p>
      <ul aria-label="지원" class="linkList toggled" id="footer-support">
       <li>
        <a href="/ko-kr/support/community/">
         포럼
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </nav>
    </div>
    <div class="column medium-3">
     <nav aria-label="계정" data-control="toggle">
      <button aria-controls="footer-account" aria-expanded="false" class="text-heading6 toggler hide-for-large" type="button">
       계정
      </button>
      <p class="text-heading6 show-for-large">
       <a href="/ko-kr/account/">
        계정
       </a>
      </p>
      <ul aria-label="계정" class="linkList toggled" id="footer-account">
       <li>
        <a href="/">
         Microsoft Azure Portal
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/ko-kr/privacy-data-management/">
         프라이버시 데이터 관리
        </a>
       </li>
      </ul>
     </nav>
     <nav aria-label="신뢰성" data-control="toggle">
      <button aria-controls="footer-trust-center" aria-expanded="false" class="text-heading6 toggler hide-for-large" type="button">
       신뢰성
      </button>
      <p class="text-heading6 show-for-large">
       [linkx]
       
      </p>
      <ul aria-label="신뢰성" class="linkList toggled" id="footer-trust-center">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </nav>
    </div>
   </div>
   <div class="row row-divided row-size2">
    <div class="column medium-2">
     <p class="footer-hello">
      안녕하세요.
     </p>
    </div>
    <div class="column medium-2">
     <div id="dropdown-cultures">
      <select aria-label="문화권" data-dropdown-event="global-footer-dropdownmenu-changed-language" data-dropdown-property="CommonLanguageDropdownValue" title="문화권">
       <option value="en-us">
        English (US)
       </option>
       <option value="cs-cz">
        Čeština
       </option>
       <option value="da-dk">
        Dansk
       </option>
       <option value="de-de">
        Deutsch
       </option>
       <option value="en-au">
        English (Australia)
       </option>
       <option value="en-ca">
        English (Canada)
       </option>
       <option value="en-in">
        English (India)
       </option>
       <option value="en-gb">
        English (UK)
       </option>
       <option value="es-es">
        Español
       </option>
       <option value="es-mx">
        Español (MX)
       </option>
       <option value="fr-fr">
        Français
       </option>
       <option value="fr-ca">
        Français (Canada)
       </option>
       <option value="is-is">
        Íslensku
       </option>
       <option value="th-th">
        ประเทศไทย
       </option>
       <option value="id-id">
        Bahasa Indonesia
       </option>
       <option value="it-it">
        Italiano
       </option>
       <option value="hu-hu">
        Magyar
       </option>
       <option value="nb-no">
        Norsk
       </option>
       <option value="nl-nl">
        Nederlands
       </option>
       <option value="pl-pl">
        Polski
       </option>
       <option value="pt-br">
        Português (Brasil)
       </option>
       <option value="pt-pt">
        Português
       </option>
       <option value="sv-se">
        Svenska
       </option>
       <option value="tr-tr">
        Türkçe
       </option>
       <option value="ru-ru">
        Pусский
       </option>
       <option value="ja-jp">
        日本語
       </option>
       <option selected="selected" value="ko-kr">
        한국어
       </option>
       <option value="zh-cn">
        中文(简体)
       </option>
       <option value="zh-tw">
        中文(繁體)
       </option>
      </select>
     </div>
    </div>
    <div class="column medium-2">
     <div id="dropdown-currency">
      <select aria-label="통화" class="currency-selector " data-dropdown-event="global-footer-dropdownmenu-changed-currency" data-dropdown-property="CommonCurrencyDropdownValue" id="currency-dropdown" title="통화">
       <optgroup label="자주 사용">
        <option value="USD">
         미국 달러($)
        </option>
        <option value="EUR">
         유로(€)
        </option>
        <option value="GBP">
         영국 파운드(£)
        </option>
        <option value="AUD">
         호주 달러($)
        </option>
        <option value="INR">
         인도 루피(₹)
        </option>
        <option value="CAD">
         캐나다 달러($)
        </option>
       </optgroup>
       <optgroup label="전체">
        <option value="ZAR">
         남아프리카공화국 랜드(R)
        </option>
        <option value="NOK">
         노르웨이 크론(kr)
        </option>
        <option value="NZD">
         뉴질랜드 달러($)
        </option>
        <option value="TWD">
         대만 달러(NT$)
        </option>
        <option value="DKK">
         덴마크 크론(kr)
        </option>
        <option value="RUB">
         러시아 루블(руб)
        </option>
        <option value="MYR">
         말레이시아 링깃(RM$)
        </option>
        <option value="MXN">
         멕시코 페소(MXN$)
        </option>
        <option value="USD">
         미국 달러($)
        </option>
        <option value="BRL">
         브라질 헤알(R$)
        </option>
        <option value="SAR">
         사우디아라비아 리얄(SR)
        </option>
        <option value="SEK">
         스웨덴 크로나(kr)
        </option>
        <option value="CHF">
         스위스 프랑(chf)
        </option>
        <option value="ARS">
         아르헨티나 페소($)
        </option>
        <option value="GBP">
         영국 파운드(£)
        </option>
        <option value="EUR">
         유로(€)
        </option>
        <option value="INR">
         인도 루피(₹)
        </option>
        <option value="IDR">
         인도네시아 루피아(Rp)
        </option>
        <option value="JPY">
         일본 엔(¥)
        </option>
        <option value="CAD">
         캐나다 달러($)
        </option>
        <option value="TRY">
         터키 리라(TL)
        </option>
        <option value="KRW">
         한국 원(₩)
        </option>
        <option value="AUD">
         호주 달러($)
        </option>
        <option value="HKD">
         홍콩 달러(HK$)
        </option>
       </optgroup>
      </select>
     </div>
    </div>
    <div class="column medium-4">
     <ul class="linkList linkList-legal">
      <li class="german-legal">
       <a href="/de-de/rechtliche-hinweise/nutzungsbedingungen">
        Nutzungsbedingungen
       </a>
      </li>
      <li class="german-legal">
       <a href="/de-de/rechtliche-hinweise/impressum">
        Impressum
       </a>
      </li>
      <li>
       <a href="/ko-kr/overview/sales-number/">
        문의하기
       </a>
      </li>
      <li class="feedback">
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       <a href="/fwlink/?LinkId=248681&amp;clcid=0x412">
        <span class="privacy-link">
         개인정보처리방침
        </span>
       </a>
      </li>
     </ul>
    </div>
    <div class="column medium-2">
     <div class="footer-copyright pull-right">
      [linkx]
      
      <span>
       © 2019 Microsoft
      </span>
     </div>
    </div>
   </div>
   <div class="row row-size2 column">
    한국마이크로소프트(유)
    <br/>
    대표이사: 고순동
    <br/>
    주소: (우)110-150 서울 종로구 종로1길 50 더 케이트윈타워 A동 12층
    <br/>
    전화번호: 02-531-4500
    <br/>
    사업자등록번호: 120-81-05948
    <br/>
    통신판매신고: 제2013-서울종로-1009호
   </div>
  </footer>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0421
  </b>
 </body>
</html>
|<---