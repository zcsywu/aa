--->|<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="ko">
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no" name="viewport"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
 </head>
 <body>
  <div id="skipNavigation">
   [ahref]
   
  </div>
  <div class="mobileNavgation" id="mobile">
  </div>
  <div class="wrap searchP">
   <div class="header" id="header">
    <div id="skipNavigation">
     [ahref]
     
    </div>
    <div class="mobileNavgation">
     <div class="menuButton">
      <span>
      </span>
     </div>
     <nav class="menuPanel">
      <div class="menuHead">
       <p class="login" id="pub_login_moblie">
        <a href="/member/login">
         <span class="mainColor">
          로그인
         </span>
         을 해주세요.
        </a>
       </p>
      </div>
      <div class="menuBody">
       <ul class="menu">
        <li class="label eToggleSectionMobile">
         <a class="mm m01" href="#">
          마이페이지
         </a>
         <ul class="list eHideSecMobile" style="display: none;">
          <li class="item">
           [linkx]
            [content15][content16][content17][content18][linkx][content19]
           
          </li>
          <li class="item">
           <a class="sm" href="/mypage/informSetting">
            내소식 설정
           </a>
          </li>
          <li class="item">
           [ahref]
           
          </li>
          <li class="item">
           <a class="sm" href="/mypage/buyList">
            구매내역
           </a>
          </li>
          <li class="item">
           <a class="sm" href="/mypage/moneyUsageList">
            DBpia 머니
           </a>
          </li>
          <li class="item">
           [ahref]
           
          </li>
          <li class="item">
           [linkx]
           
          </li>
          <li class="item">
           [linkx]
           
          </li>
          <li class="item">
           [ahref]
           
          </li>
          <li class="item">
           <a class="sm" href="/mypage/authorInfoView">
            저자등록정보[content5][content6][linkx][content7][linkx][content8][content9]
           </a>
          </li>
         </ul>
        </li>
        <li class="label eToggleSectionMobile">
         [ahref]
         
         <ul class="list eHideSecMobile" style="display: none;">
          [content10][content11][linkx][content12][content13][linkx][content14]
         </ul>
        </li>
        <li class="label eToggleSectionMobile">
         [ahref]
         
         <ul class="list eHideSecMobile" style="display: none;">
          <li class="item">
           [content14[linkx]content15]
          </li>
          <li class="item">
           <a class="sm" href="/notice/noticeList">
            공지사항
           </a>
          </li>
          <li class="item">
           <a class="sm" href="/notice/newsList">
            학회소식
           </a>
          </li>
          <li class="item">
           [ahref]
           
          </li>
          <li class="item">
           [ahref]
           
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <div class="menuFoot">
       <ul>
        <li>
         <a href="/member/b2bLogin">
          기관인증
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <div class="gRight">
        <button class="btn btnText lightGrayColor medium btnLine btnEnglish" onclick="resolveLocal();" type="button">
         English
        </button>
       </div>
      </div>
     </nav>
     <div class="menuPanelOverlay">
      [content11][content12][linkx][content13][linkx]
     </div>
    </div>
    <div class="notification" id="pub_notification" style="display: none;">
     <div class="inner">
      <div class="txtWrap">
       <span class="txtBold">
        (이)가 구독하지 않는 논문으로 ‘미리보기’만 가능합니다.
       </span>
       <span>
        도서관의 ‘원문복사 서비스’를 통해 원문을 이용하실 수 있습니다. 원문복사 서비스 이용방법은 도서관 사이트를 확인해 주세요.
       </span>
       <a href="#" onclick="">
        원문복사 서비스 이용하기
       </a>
      </div>
     </div>
    </div>
    <div class="inner">
     <div class="hdTop">
      <ul id="pub_loginDefault">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/join/joinAgree">
         회원가입
        </a>
       </li>
       <li>
        <a href="/notice/noticeList">
         고객센터
        </a>
       </li>
       <li>
        <a href="#" onclick="resolveLocal();">
         English
        </a>
       </li>
      </ul>
     </div>
     <div class="hdWrap">
      <h1 class="logo">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h1>
      <div class="gSearch">
       <div class="searchFrom">
        <span class="fSelect">
         <label>
          <span>
           전체
          </span>
          <select id="dev_srchOpt" title="검색 필드 선택">
           <option value="*">
            전체
           </option>
           <option value="NODE_NM_2">
            논문명
           </option>
           <option value="NODE_NM_2 | NODE_ABST">
            논문명+초록
           </option>
           <option value="SRCH_AUTR_NM">
            저자명
           </option>
           <option value="SRCH_NODE_KYWD">
            키워드명
           </option>
          </select>
         </label>
        </span>
        <span class="gInputText">
         <span class="placeholder">
          키워드, 저널, 학회, 저자 등을 입력해 주세요.
         </span>
        </span>
        <a class="btnSearch" href="e" onclick="searchGo();">
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
        </a>
       </div>
       <div class="atcmpLayer" id="pub_atcmpLayer">
        <ul class="atcmpList">
        </ul>
       </div>
       [linkx]
       
      </div>
      <div class="gUtil">
       <ul class="list">
        <li class="item">
         <a class="link mystudy" href="/member/login">
          <span>
           내서재
          </span>
         </a>
        </li>
        <li class="item">
         <a class="link alarm" href="/member/login">
          <span>
           내소식
          </span>
         </a>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
    <form action="/search/topSearch" id="search" method="GET">
    </form>
    <form action="/search/topSearch" id="detailSearch" method="GET">
    </form>
    <div class="modal" id="pub_modalAdvancedSearch" style="max-width:700px;">
     <span class="modalScreen opacity">
     </span>
     <div class="modalContent">
      <div class="modalHeader">
       <p class="tit">
        상세검색
       </p>
       <button class="closeModal" id="#pub_modalAdvancedSearch">
        <span class="blind">
         닫기
        </span>
       </button>
      </div>
      <div class="modalBody type07 eToggleSection">
       <h5 class="mb1">
        검색어 입력
        <span class="desc">
         검색어는 최대 5개까지 추가하실 수 있습니다.
        </span>
        <button class="btn btnText darkGrayColor medium btnLine fs12 btnMultiLangInput" type="button">
         <span>
          다국어입력
         </span>
        </button>
       </h5>
       <form id="topfrm" name="form">
        <div class="multiLangInputBox eHideSec" id="topinfodiv">
         <table>
          <tbody>
           <tr>
            <td align="absmiddle" class="small" style="height:31px;">
             <table>
              <tbody>
               <tr>
                <td class="small" style="height:22px; vertical-align:middle; text-align:left;">
                 <span id="data_list1">
                 </span>
                 <a href=";" style="margin-left:5px;margin-top:0px;">
                 </a>
                 [ahref]
                 
                </td>
               </tr>
              </tbody>
             </table>
            </td>
           </tr>
           <tr>
            <td class="small" style="height:25px; background:url(/images/language/3rd_tab_bg.gif) repeat;">
             <div id="menu_tab">
              <table style="height:25px;">
               <tbody>
                <tr style="text-align:center;">
                 <td style="width:11px; background:url(/images/language/3rd_tab_over1.gif) no-repeat;">
                 </td>
                 <td class="small" style="padding-top:6px; background:url(/images/language/3rd_tab_over2.gif) repeat;">
                  <a class="default" href=";">
                   <strong>
                    한자 음가로 찾기
                   </strong>
                  </a>
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_over3.gif) no-repeat;">
                 </td>
                 <td style="width:1px;">
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_1.gif) no-repeat;">
                 </td>
                 <td class="small" style="padding-top:6px; background:url(/images/language/3rd_tab_2.gif) repeat;">
                  [linkx]
                  
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_3.gif) no-repeat;">
                 </td>
                 <td style="width:1px;">
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_1.gif) no-repeat;">
                 </td>
                 <td class="small" style="padding-top:6px; background:url(/images/language/3rd_tab_2.gif) repeat;">
                  [linkx]
                  
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_3.gif) no-repeat;">
                 </td>
                 <td style="width:1px;">
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_1.gif) no-repeat;">
                 </td>
                 <td class="small" style="padding-top:6px; background:url(/images/language/3rd_tab_2.gif) repeat;">
                  [ahref]
                  
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_3.gif) no-repeat;">
                 </td>
                 <td style="width:1px;">
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_1.gif) no-repeat;">
                 </td>
                 <td class="small" style="padding-top:6px; background:url(/images/language/3rd_tab_2.gif) repeat;">
                  <a class="default" href=";">
                   일본어
                  </a>
                 </td>
                 <td style="width:11px; background:url(/images/language/3rd_tab_3.gif) no-repeat;">
                 </td>
                </tr>
               </tbody>
              </table>
             </div>
            </td>
           </tr>
           <tr>
            <td style="height:18px;">
            </td>
           </tr>
           <tr>
            <td>
             <div id="view_eumga">
              <a class="left1" href=";">
               가
              </a>
              <a class="left1" href=";">
               나
              </a>
              [linkx]
              
              [ahref]
              
              <a class="left1" href=";">
               마
              </a>
              <a class="left1" href=";">
               바
              </a>
              [linkx]
              
              [linkx]
              
              <a class="left1" href=";">
               자
              </a>
              <a class="left1" href=";">
               차
              </a>
              <a class="left1" href=";">
               카
              </a>
              <a class="left1" href=";">
               타
              </a>
              [ahref]
              
              [linkx]
              
             </div>
            </td>
           </tr>
           <tr>
            <td style="height:10px;">
            </td>
           </tr>
           <tr>
            <td>
             <div id="view_sub">
             </div>
            </td>
           </tr>
           <tr>
            <td style="height:10px;">
            </td>
           </tr>
           <tr>
            <td class="large">
             <div id="insert_list">
             </div>
            </td>
           </tr>
           <tr>
            <td style="height:20px;">
            </td>
           </tr>
           <tr>
            <td style="height:1px; background:#d7d7d7;">
            </td>
           </tr>
           <tr>
            <td style="height:10px;">
            </td>
           </tr>
           <tr>
            <td style="text-align:center;">
             <div id="info_view">
             </div>
            </td>
           </tr>
          </tbody>
         </table>
        </div>
        <div class="advancedSearchBox">
         <ul id="pub_advancedSearchBox">
          <li>
           <span class="fSelect">
            <label>
             <span>
              전체
             </span>
             <select name="select_search" title="범위">
              <option selected="selected" value="*">
               전체
              </option>
              <option value="NODE_NM_2">
               논문명
              </option>
              <option value="SRCH_PLCT_NM">
               저널명
              </option>
              <option value="SRCH_IPRD_NM">
               발행기관명
              </option>
              <option value="SRCH_AUTR_NM">
               저자명
              </option>
             </select>
            </label>
           </span>
           <span class="gInputText">
           </span>
           <span class="fSelect">
            <label>
             <span>
              AND
             </span>
             <select name="search_option" title="조건">
              <option value=" ">
               AND
              </option>
              <option value="|">
               OR
              </option>
              <option value="!">
               AND NOT
              </option>
             </select>
            </label>
           </span>
           <button class="btn btnIcon subColor plus" id="pub_btnAddRowAdvanced" type="button">
            <span>
             추가
            </span>
           </button>
          </li>
          <li>
           <span class="fSelect">
            <label>
             <span>
              전체
             </span>
             <select name="select_search" title="범위">
              <option selected="selected" value="*">
               전체
              </option>
              <option value="NODE_NM_2">
               논문명
              </option>
              <option value="SRCH_PLCT_NM">
               저널명
              </option>
              <option value="SRCH_IPRD_NM">
               발행기관명
              </option>
              <option value="SRCH_AUTR_NM">
               저자명
              </option>
             </select>
            </label>
           </span>
           <span class="gInputText">
           </span>
           <span class="fSelect">
            <label>
             <span>
              AND
             </span>
             <select name="search_option" title="조건">
              <option value=" ">
               AND
              </option>
              <option value="|">
               OR
              </option>
              <option value="!">
               AND NOT
              </option>
             </select>
            </label>
           </span>
           <button class="btn btnIcon subColor minus" id="pub_btnRemoveRowAdvanced" type="button">
            <span>
             삭제
            </span>
           </button>
          </li>
         </ul>
        </div>
        <div class="advancedCateBox">
         <p class="tit">
          언어
         </p>
         <ul class="checkBox">
          <li>
           <span class="fCheck">
            <label for="pub_cate_lang_check_01">
             전체
            </label>
           </span>
          </li>
          <li>
           <span class="fCheck">
            <label for="pub_cate_lang_check_02">
             한국어
            </label>
           </span>
          </li>
          <li>
           <span class="fCheck">
            <label for="pub_cate_lang_check_03">
             영어
            </label>
           </span>
          </li>
          <li>
           <span class="fCheck">
            <label for="pub_cate_lang_check_04">
             중국어
            </label>
           </span>
          </li>
          <li>
           <span class="fCheck">
            <label for="pub_cate_lang_check_05">
             일본어
            </label>
           </span>
          </li>
          <li>
           <span class="fCheck">
            <label for="pub_cate_lang_check_06">
             기타
            </label>
           </span>
          </li>
         </ul>
        </div>
        <div class="advancedCateBox">
         <p class="tit">
          서비스 중지 콘텐츠
         </p>
         <ul class="checkBox">
          <li>
           <span class="fCheck">
            <label for="pub_cate_stop_check_01">
             제외
            </label>
           </span>
          </li>
         </ul>
        </div>
        <div class="advancedCateBox">
         <p class="tit">
          이용형태
         </p>
         <ul class="checkBox">
          <li>
           <span class="fCheck">
            <label for="pub_cate_type_check_01">
             원문이용
            </label>
           </span>
          </li>
          <li>
           <span class="fCheck">
            <label for="pub_cate_type_check_02">
             서지이용
            </label>
           </span>
          </li>
         </ul>
        </div>
       </form>
      </div>
      <div class="modalFooter" id="pub_modalFooter">
       [ahref]
       
       <button class="btn btnText pointColor large closeModal" id="#pub_modalAdvancedSearch" onclick="search_dsend();" type="button">
        <span>
         검색
        </span>
       </button>
      </div>
     </div>
    </div>
    <div class="modal" id="pub_modalChangePwRegular" style="max-width:526px;">
     <span class="modalScreen">
     </span>
     <div class="modalContent">
      <div class="modalHeader">
       <p class="tit">
        비밀번호 변경 안내
       </p>
       <button class="closeModal" id="#pub_modalChangePwRegular">
        <span class="blind">
         닫기
        </span>
       </button>
      </div>
      <div class="modalBody">
       <p class="comtBox">
        비밀번호를 변경하신 지 90일 이상 지났습니다.
        <br/>
        개인정보 보호를 위해 비밀번호를 변경해 주세요.
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0368
  </b>
 </body>
</html>
<div class="modalFooter halfBtn">
 <button class="btn btnText subColor large" onclick="chgNext()">
  <span>
   다음에 변경하기
  </span>
 </button>
 <button class="btn btnText mainColor large btnConfirm" onclick="chgNow()">
  <span>
   지금 변경하기
  </span>
 </button>
</div>
<div class="modal" id="pub_modalChangePwRegular2" style="max-width:526px;">
 <span class="modalScreen">
 </span>
 <div class="modalContent">
  <div class="modalHeader">
   <p class="tit">
    비밀번호 변경 안내
   </p>
   <button class="closeModal" id="#pub_modalChangePwRegular2" onclick="fnReloadModal();">
    <span class="blind">
     닫기
    </span>
   </button>
  </div>
  <div class="modalBody">
   <p class="comtBox">
    비밀번호를 변경하신 지 90일 이상 지났습니다.
    <br/>
    개인정보 보호를 위해 비밀번호를 변경해 주세요.
   </p>
  </div>
 </div>
</div>
<div class="modalFooter halfBtn">
 <button class="btn btnText subColor large" onclick="fnReloadModal();">
  <span>
   다음에 변경하기
  </span>
 </button>
 <button class="btn btnText mainColor large btnConfirm" onclick="chgNow()">
  <span>
   지금 변경하기
  </span>
 </button>
</div>
<div class="container">
 <div class="contents inner" id="contents">
  <div class="contLeft" id="sidebar">
   <form onsubmit="return false;">
    <div class="pcAppendArea">
     <div class="detachNodeWrap">
      <div class="filterGroup detachNodePublication1">
       <p class="tit">
        이 저널의 논문 검색
								<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
       </p>
       <p class="searchBox">
        <span class="gInputText w120">
         <span class="placeholder">
          Search…
         </span>
        </span>
        <button class="btn btnText darkGrayColor medium fs12 btnLine" onclick="searchNode();" type="button">
         <span>
          검색
         </span>
        </button>
       </p>
      </div>
      <div class="filterGroup bb detachNodePublication2">
       <p class="tit">
        동일 발행기관의 다른 저널
       </p>
       <p class="searchBox">
        <span class="fSelect filtering">
         <label>
          <span class="txtEllipsis">
           나라사랑
          </span>
          <select onchange="fnChangePlct(this);" title="찾기 옵션">
           <option selected="" value="PLCT00001258">
            나라사랑
           </option>
          </select>
         </label>
        </span>
       </p>
       <ul class="volume" id="voisList">
       </ul>
       <p class="selectBox" style="margin-top: 20px;">
        <span class="fSelect filtering">
         <label>
          <span class="txtEllipsis" id="dev_pbshYY">
           발행연도
          </span>
          <select id="pbshYY" onchange="fnPbshVoisList()" title="찾기 옵션">
          </select>
         </label>
        </span>
        <span class="fSelect filtering">
         <label>
          <span class="txtEllipsis" id="dev_vois" onchange="fnVoisChange()">
           권 호
          </span>
          <select id="pbshVoisList" title="찾기 옵션">
          </select>
         </label>
        </span>
        <button class="btn btnText subColor large" onclick="fnVoisSearch()" type="button">
         <span>
          조회하기[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>[link]
         </span>
        </button>
       </p>
      </div>
     </div>
    </div>
   </form>
  </div>
  <div class="contRight">
   <div class="section">
    <div class="headingArea schDetail">
     <h2>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h2>
     <button class="btn btnIconB darkGrayColor medium btnLine btnAlarm" id="dev_plctAlarm" name="plct" type="button" value="PLCT00001258">
      <span class="bell">
       관심저널 신청
      </span>
     </button>
    </div>
    <div class="mobileAppendArea">
    </div>
   </div>
   <div class="section">
    <div class="searchDetailArea coverImage">
     <div class="imgWrap">
     </div>
     <div class="infoWrap">
      <dl>
       <dt>
        자료유형
       </dt>
       <dd>
        전문잡지
       </dd>
      </dl>
      <dl>
       <dt>
        발행기관명
       </dt>
       <dd>
        [ahref]
        
       </dd>
      </dl>
      <dl>
       <dt>
        ISSN
       </dt>
       <dd>
        1739-7855(Print)
       </dd>
      </dl>
      <dl>
       <dt>
        주제분류
       </dt>
       <dd>
        <a class="link" href="e" onclick="window.open('/subject/subjectList?subjCode=NA06', '_self')">
         인문학 > 한국어문학
        </a>
       </dd>
      </dl>
      <dl>
       <dt>
        발행주기
       </dt>
       <dd>
        연간
       </dd>
      </dl>
      <dl>
       <dt>
        등재정보
       </dt>
       -
      </dl>
      <button class="btnReport btnModal" id="dev_pub_modalReportErrorPublication" type="button">
       오류제보하기
      </button>
     </div>
    </div>
    <div class="journalInfoArea">
     <div class="journalInfoWrap">
      <div class="tableLayout">
       <table>
        <caption>
         게시판 목록
        </caption>
        <colgroup>
         <col style="width:135px"/>
         <col style="width:auto"/>
         <col style="width:135px"/>
         <col style="width:auto"/>
        </colgroup>
        <tbody>
         <tr>
          <th>
           저널 발행기간
          </th>
          <td colspan="3">
           1971 ~ 2018
          </td>
         </tr>
         <tr>
          <th>
           총 발행 권호수
          </th>
          <td>
           127
          </td>
          <th>
           총 수록 논문수
          </th>
          <td>
           4,022
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <div class="stats">
       <div class="grouping">
        <p class="use">
         <span class="text">
          이용수
         </span>
         <span class="count">
          12,368
         </span>
         <small>
          회
         </small>
        </p>
        <p class="quote">
         <span class="text">
          피인용수
         </span>
         <span class="count">
          0
         </span>
         <small>
          회
         </small>
        </p>
       </div>
       <div class="tooltipWrap">
        <span class="blind">
         도움말
        </span>
        <div class="tooltip">
         <button class="btn btnIconB darkGrayColor medium btnLine btnRelatedInfo btnTooltip" id="modalRelatedInfo" type="button">
          <span class="book">
           저널
           <br/>
           인용정보
          </span>
         </button>
         <p class="desc topRight">
          외솔회과(와) 다른 저널들 간 인용 관계를 제공해 드립니다.
										[link]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="section">
    <div class="thesisDetailArea eToggleSection">
     <h3>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="tableWrap eHideSec">
      <div class="comtBox btnArea">
       <span class="text">
        이 저널에서 가장 많이 이용된 논문 10편입니다.
       </span>
       <div class="gRight">
        <span class="text">
         기간
        </span>
        <span class="fSelect filtering">
         <label>
          <span>
           최근1년
          </span>
          <select onchange="fnChangeDate(this, 1);" title="찾기 옵션">
           <option selected="selected" value="1">
            최근1년
           </option>
           <option value="3">
            최근3년
           </option>
           <option value="5">
            최근5년
           </option>
          </select>
         </label>
        </span>
       </div>
      </div>
      <div class="tableLayout">
       <table class="schDetail publication1" id="useNodeTable">
        <caption>
         게시판 목록
        </caption>
        <colgroup>
         <col style="width:60px"/>
         <col style="width:auto"/>
         <col style="width:200px"/>
         <col style="width:110px"/>
        </colgroup>
        <thead>
         <tr>
          <th scope="col">
           No.
          </th>
          <th scope="col">
           제목
          </th>
          <th scope="col">
           저자명
          </th>
          <th scope="col">
           이용수
          </th>
         </tr>
        </thead>
        <tbody id="useNodeTop10">
        </tbody>
        <tbody class="nodata">
         <tr>
          <td colspan="4">
           등록된 정보가 없습니다.
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
    </div>
   </div>
   <div class="section">
    <div class="thesisDetailArea eToggleSection">
     <h3>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="tableWrap eHideSec">
      <div class="comtBox btnArea">
       <span class="text">
        이 저널에서 논문을 가장 많이 게재한 저자 10명입니다.
       </span>
       <div class="gRight">
        <span class="text">
         기간
        </span>
        <span class="fSelect filtering">
         <label>
          <span>
           최근1년
          </span>
          <select onchange="fnChangeDate(this, 2);" title="찾기 옵션">
           <option selected="selected" value="1">
            최근1년
           </option>
           <option value="3">
            최근3년
           </option>
           <option value="5">
            최근5년
           </option>
          </select>
         </label>
        </span>
       </div>
      </div>
      <div class="tableLayout">
       <table class="schDetail publication2" id="nodeAurtTable">
        <caption>
         게시판 목록
        </caption>
        <colgroup>
         <col style="width:60px"/>
         <col style="width:160px"/>
         <col style="width:auto"/>
         <col style="width:170px"/>
         <col style="width:170px"/>
        </colgroup>
        <thead>
         <tr>
          <th scope="col">
           No.
          </th>
          <th scope="col">
           저자명
          </th>
          <th scope="col">
           소속기관
          </th>
          <th scope="col">
           이 저널에 게재된 논문수
          </th>
          <th scope="col">
           이 저널에 게재된 논문의
           <br/>
           이용수
          </th>
         </tr>
        </thead>
        <tbody id="nodeAurtTop10">
        </tbody>
        <tbody class="nodata" id="nodeAurtNodata">
         <tr>
          <td colspan="5">
           등록된 정보가 없습니다.
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
    </div>
   </div>
   <div class="section">
    <div class="thesisDetailArea eToggleSection">
     <h3>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="tableWrap eHideSec">
      <div class="comtBox btnArea">
       <span class="text">
        이 저널에서 논문이 가장 많이 이용된 저자 10명입니다.
       </span>
       <div class="gRight">
        <span class="text">
         기간
        </span>
        <span class="fSelect filtering">
         <label>
          <span>
           최근1년
          </span>
          <select onchange="fnChangeDate(this, 3);" title="찾기 옵션">
           <option selected="selected" value="1">
            최근1년
           </option>
           <option value="3">
            최근3년
           </option>
           <option value="5">
            최근5년
           </option>
          </select>
         </label>
        </span>
       </div>
      </div>
      <div class="tableLayout">
       <table class="schDetail publication3" id="nodeUseAurtTable">
        <caption>
         게시판 목록
        </caption>
        <colgroup>
         <col style="width:60px"/>
         <col style="width:160px"/>
         <col style="width:auto"/>
         <col style="width:170px"/>
         <col style="width:205px"/>
        </colgroup>
        <thead>
         <tr>
          <th scope="col">
           No.
          </th>
          <th scope="col">
           저자명
          </th>
          <th scope="col">
           소속기관
          </th>
          <th scope="col">
           이 저널에 게재된 논문수
          </th>
          <th scope="col">
           이 저널에 게재된 논문의
           <br/>
           이용수
          </th>
         </tr>
        </thead>
        <tbody id="nodeUseAurtTop10">
        </tbody>
        <tbody class="nodata">
         <tr>
          <td colspan="5">
           등록된 정보가 없습니다.
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
    </div>
   </div>
   <div class="section">
    <div class="thesisDetailArea eToggleSection">
     <h3>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="tableWrap eHideSec">
      <div class="comtBox btnArea">
       <span class="text">
        이 저널을 가장 많이 이용한 기관 10개입니다.
       </span>
       <div class="gRight">
        <span class="text">
         기간
        </span>
        <span class="fSelect filtering">
         <label>
          <span>
           최근1년
          </span>
          <select onchange="fnChangeDate(this, 4);" title="찾기 옵션">
           <option selected="selected" value="1">
            최근1년
           </option>
           <option value="3">
            최근3년
           </option>
           <option value="5">
            최근5년
           </option>
          </select>
         </label>
        </span>
       </div>
      </div>
      <div class="tableLayout">
       <table class="schDetail publication4" id="icstUseTable">
        <caption>
         게시판 목록
        </caption>
        <colgroup>
         <col style="width:60px"/>
         <col style="width:auto"/>
         <col style="width:205px"/>
        </colgroup>
        <thead>
         <tr>
          <th scope="col">
           No.
          </th>
          <th scope="col">
           이용기관명
          </th>
          <th scope="col">
           이용수
          </th>
         </tr>
        </thead>
        <tbody id="icstUseTop20">
        </tbody>
        <tbody class="nodata">
         <tr>
          <td colspan="3">
           등록된 정보가 없습니다.
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="footer" id="footer">
 <div class="ftWrap">
  <div class="ftTop">
   <div class="inner">
    <div class="ftLeft">
     <ul class="ftMenu">
      <li class="menu">
       [linkx]
       
      </li>
      <li class="menu">
       [ahref]
       
      </li>
      <li class="menu">
       [ahref]
       
      </li>
      <li class="menu">
       <a href="e" onclick="fnContact();">
        제휴문의
       </a>
      </li>
      <li class="menu">
       <a href="/trial/trial">
        트라이얼신청
       </a>
      </li>
     </ul>
     <div class="infoWrap">
      <p class="logo">
       <a href="e">
        <span class="blind">
         닫기
        </span>
       </a>
      </p>
      <ul class="info">
       <li>
        ㈜누리미디어 대표이사: 최순일 사업자등록번호: 816-81-00840
       </li>
       <li>
        <span>
         통신판매업신고번호: 제2017-서울영등포-0801호
        </span>
        <span>
         대표전화:
         [linkx]
         
         팩스: 02-717-4305
        </span>
       </li>
       <li>
        <span>
         이메일:
         <a href="r">
          dbpia@nurimedia.co.kr
         </a>
        </span>
        <span>
         주소: (07281) 서울특별시 영등포구 선유로 63, 4층 (문래동 6가)
        </span>
       </li>
      </ul>
     </div>
    </div>
    <div class="ftRight">
     <p class="helpTit">
      고객센터
     </p>
     <ul class="helpCont">
      <li class="contact">
       <span class="phone">
        [ahref]
        
       </span>
       <span class="email">
        [linkx]
        
       </span>
      </li>
      <li class="operation">
       <span class="subtit">
        운영시간
       </span>
       <span class="time">
        평일 09시 ~18시
        <br/>
        주말, 공휴일 휴무
       </span>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div class="ftBot">
   <div class="inner">
    <div class="ftRight">
     <ul class="bn">
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="bnKRpia" href="/" target="_blank">
        <span class="blind">
         배너
        </span>
       </a>
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="ftLeft">
     <p class="copyright">
      Copyright (c) 1997-2018 NURIMEDIA. ALL RIGHTS RESERVED.
     </p>
    </div>
   </div>
  </div>
 </div>
 <div class="gTopNavi">
  <button class="btn btnIcon top" id="pub_btnTop" type="button">
   <span>
    top
   </span>
  </button>
 </div>
 <div class="modal" id="pub_modalContact" style="max-width:526px;">
  <span class="modalScreen">
  </span>
  <div class="modalContent">
   <div class="modalHeader">
    <p class="tit">
     제휴문의
    </p>
    <button class="closeModal" id="#pub_modalContact">
     <span class="blind">
      닫기
     </span>
    </button>
   </div>
   <div class="modalBody type02">
    <p class="comtBox type02">
     DBpia와 구독·저작권 계약, 기타 제휴를 원하시면 해당 부서로 연락 바랍니다.
    </p>
    <dl class="contactBox">
     <dt class="tit">
      콘텐츠 구독 계약 문의
     </dt>
     <dd class="cont">
      <p class="w50per">
       <span class="text">
        담당부서 : 영업기획팀
       </span>
       <span class="text">
        (4년제 대학교, 해외 도서관)
       </span>
       <a href="r">
        sales@nurimedia.co.kr
       </a>
      </p>
      <p class="w50per">
       <span class="text">
        담당부서 : 전문영업팀
       </span>
       <span class="text">
        (공공기관, 국책연구원, 기업, 전문대학)
       </span>
       <a href="r">
        gnc@nurimedia.co.kr
       </a>
      </p>
     </dd>
    </dl>
    <dl class="contactBox half br">
     <dt class="tit">
      저작권 계약 문의
     </dt>
     <dd class="cont">
      <p>
       <span class="text">
        담당부서 : 콘텐츠 영업팀
       </span>
       [linkx]
       
      </p>
     </dd>
    </dl>
    <dl class="contactBox half">
     <dt class="tit">
      기타 제휴 문의
     </dt>
     <dd class="cont">
      <p>
       <span class="text">
        담당부서 : 서비스 기획팀
       </span>
       [ahref]
       
      </p>
     </dd>
    </dl>
   </div>
  </div>
 </div>
</div>
<form action="/journal/errReport/plct" id="dev_plctErrorForm" method="POST">
 <div class="modal" id="pub_modalReportErrorPublication" style="max-width:526px;">
  <span class="modalScreen">
  </span>
  <div class="modalContent">
   <div class="modalHeader">
    <p class="tit">
     저널 오류신고
    </p>
    <button class="closeModal" id="#pub_modalReportErrorPublication">
     <span class="blind">
      닫기
     </span>
    </button>
   </div>
   <div class="modalBody type02">
    <div class="comtBox type06">
     <ul>
      <li>
       저널의 정보가 잘못되었나요?
       <br/>
       오류신고를 통해 잘못된 정보를 바로 잡아 주세요.
      </li>
     </ul>
    </div>
    <span class="gInputText w100per">
    </span>
   </div>
   <div class="modalFooter" id="pub_modalFooter">
    <button class="btn btnText subColor large closeModal" id="#pub_modalReportErrorPublication" type="button">
     <span>
      취소
     </span>
    </button>
    <button class="btn btnText mainColor large closeModal" id="dev_plctErrorFormBtn" type="button">
     <span>
      확인
     </span>
    </button>
   </div>
  </div>
 </div>
</form>
<div class="modal" id="pub_modalRelatedInfo" style="max-width:1080px;">
 <span class="modalScreen">
 </span>
 <div class="modalContent">
  <div class="modalHeader">
   <p class="tit">
    저널 인용정보
   </p>
   <button class="closeModal" id="#pub_modalRelatedInfo">
    <span class="blind">
     닫기
    </span>
   </button>
  </div>
  <div class="modalBody type02">
   <div class="listBlockWrap">
    <div class="listBlockGroup left">
     <p class="tit txtEllipsis2L">
      <span>
       나라사랑 을(를) 인용한 저널
      </span>
     </p>
     <ul class="listBlock" id="plctUsePlctTop5">
     </ul>
    </div>
    <div class="listBlockGroup center">
     <span class="publicaton txtEllipsis">
      나라사랑
     </span>
    </div>
    <div class="listBlockGroup right">
     <p class="tit txtEllipsis2L">
      <span>
       나라사랑 이(가) 인용한 저널
      </span>
     </p>
     <ul class="listBlock" id="plctNotnCntsPlctTop5">
     </ul>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="modal" id="pub_modalOrganPop" style="max-width:526px;">
 <span class="modalScreen">
 </span>
 <div class="modalContent">
  <div class="modalHeader">
   <p class="tit">
    기관인증
   </p>
   <button class="closeModal" id="#pub_modalOrganPop" onclick="b2bClose(this)">
    <span class="blind">
     닫기
    </span>
   </button>
  </div>
  <div class="modalBody type02">
   <h4>
    혹시 재학/재직 중이신가요? 소속기관의 DBpia 구독 여부를 확인해 보세요.
   </h4>
   <div class="comtBox">
    <ul>
     <li>
      DBpia를 구독하는 학교, 공공기관, 기업 소속이시면 기관인증을 통해 논문을 무료로 이용하실 수 있습니다. 기관인증 후 DBpia 로그인하시면 90일간 인증 상태가 유지됩니다.
     </li>
    </ul>
   </div>
   <form action="/member/b2bLoginProc" id="b2bLoginForm" method="post">
    <h4>
     소속기관 조회
    </h4>
    <div class="gInputText schBox w100per">
    </div>
    <div class="alertMsg" id="dev_sub">
     <span class="confirm">
     </span>
    </div>
    <div class="alertMsg" id="dev_noSub">
     <span class="warn">
      <span class="txtBold" id="dev_noSub_lib">
      </span>
      <span class="warn">
       은 DBpia를 구독 중이 아닙니다.
      </span>
     </span>
    </div>
    <div class="loginWrap" id="pub_loginOpen">
     <div class="tit">
      기관 계정
     </div>
     <div class="loginBox">
      <span class="gInputText">
      </span>
      <span class="gInputText">
      </span>
      <button class="btn btnText mainColor large login" id="dev_loginBtn" type="button">
       <span>
        인증
       </span>
      </button>
     </div>
    </div>
   </form>
  </div>
  <div class="modalFooter info">
   <span>
    DBpia 구독을 원하시는 기관 관계자신가요? 고객센터로 문의해 주세요.
   </span>
   [ahref]
   
   <a class="call" href="6">
    02-707-0496
   </a>
  </div>
 </div>
</div>
<div class="modal loginModal" id="pub_modalLoginPop" style="max-width:526px; display:none;">
 <span class="modalScreen">
 </span>
 <div class="modalContent">
  <div class="modalHeader">
   <p class="tit">
    로그인
   </p>
   <button class="closeModal" id="#pub_modalLoginPop" onclick="b2cClose(this)">
    <span class="blind">
     닫기
    </span>
   </button>
  </div>
  <div class="modalBody">
   <h4>
    DBpia 로그인으로 연구 활동에 가장 편리한 서비스를 만나보세요!
   </h4>
   <div class="comtBox type04">
    <ul>
     <li>
      로그인하시면 소속기관의 구독 논문을 어디서든 무료로 이용하실 수 있습니다.
      <br/>
      내서재에서 논문 관리부터 참고문헌 작성까지 간편하게 해보세요.
     </li>
    </ul>
   </div>
   <div class="loginArea">
    <div class="gLeft">
     <div class="snsLogin">
      <div class="tit blind">
       소셜 로그인
      </div>
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        <a class="google" href="/member/login/google">
         <span>
          구글 아이디로 로그인
         </span>
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="gRight">
     <div class="loginWrap">
      <div class="tit">
       DBpia 로그인
      </div>
      <form action="/member/b2cLoginProc" id="dev_loginForm" method="POST">
       <div class="loginBox">
        <span class="gInputText">
         <span class="placeholder">
          아이디
         </span>
        </span>
        <span class="gInputText">
         <span class="placeholder">
          비밀번호
         </span>
        </span>
       </div>
       <div class="opt">
        <span class="fCheck">
         <label for="dev_pub_check_01">
          아이디 저장
         </label>
        </span>
        <span class="fCheck">
         <label for="dev_pub_autoLogin">
          로그인 상태 유지
         </label>
        </span>
        <div class="tooltip">
         <p class="desc topLeft" id="dev_pub_tooltip_autoLogin">
          개인정보 보호를 위해 반드시 개인PC에서만 이용하세요.
         </p>
        </div>
        <button class="btn btnText mainColor large login" onclick="loginProc()" type="button">
         <span>
          로그인
         </span>
        </button>
       </div>
      </form>
      <div class="comtBox last">
       <ul>
        <li>
         <a href="/member/accFind">
          아이디·비밀번호 찾기
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <button class="btn btnText subColor large join" onclick="location.href='/join/joinAgree'">
        <span>
         회원가입[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>
        </span>
       </button>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
|<---