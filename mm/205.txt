--->|﻿
<!DOCTYPE html PUBLIC "" "">
<html class="no-js" lang="fr" xml:lang="fr" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="2017-10-17T16:07:34.43Z" name="DC.date"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="application-name"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-starturl"/>
  <meta content="Démarrer Salon Livre Paris
" name="msapplication-tooltip"/>
  <meta content="core" name="css-links"/>
  <meta content="additional" name="css-links"/>
  <meta content="hacks" name="css-links"/>
  <meta content="custom" name="css-links"/>
  <meta content="/ScriptsV4/libraries/jquery-3.2.1.min.js|/ScriptsV4/libraries/jquery-ui/1.12.1/jquery-ui.min.js|/ScriptsV4/Libraries/jquery.hoverIntent.js|/ScriptsV4/Libraries/swfobject.js|/ScriptsV4/Core_v2.js|/ScriptsV4/Controls/Footer.js|~/ScriptsV4/Libraries/doubletaptogo/doubletaptogo.min.js|~/ScriptsV4/Controls/Autocomplete.js|~/ScriptsV4/Controls/Search.js|~/ScriptsV4/Controls/CookieComplianceMessage.js|~/ScriptsV4/Libraries/cookie/jquery.cookie.js|~/ScriptsV4/Controls/Analytics/Analytics.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.mousewheel.pack.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox.pack.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox-buttons.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox-media.js|/REF/Common/WebSite-RWD/plugins/fancybox/jquery.fancybox-thumbs.js|/REF/Common/WebSite-RWD/plugins/jssor/jssor.slider-26.1.5.min.js|/REF/Common/WebSite-RWD/plugins/owl-carousel-2/owl-carousel_override.js|/REF/Common/WebSite-RWD/js/enquire.js|/REF/REF_LivreParis/js/main-min.js" id="jslinks" name="js-links">
   [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx]
  </meta>
  <meta content="0mkndCkysHE3KrTh-0qLLLtzXPPLLCDjRT6r7pv3Jc4" name="verify-v1"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="a9sZ9aakLyOA3E6liaxoavvwsFA06YeKQTjbRfQyle8" name="google-site-verification"/>
 </head>
 <noscript>
 </noscript>
 <body class="twoColumn sidebars-none fr" id="MasterBodyTag">
  <form action="/zoom-sur/russie-pays-honneur/" id="aspnetForm" method="post" name="aspnetForm">
   <div>
   </div>
   <div>
   </div>
   <div class="noindex" id="skip">
    <p>
     [linkx]
     
    </p>
   </div>
   <div class="top-bar-wrapper">
    <div class="top-bar clearfix centered-page">
     <ul class="toolbar toolbar-horizontal toolbar-dock-left">
      <li class="toolbar-item toolbar-item-languages bodyText">
       [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][area1][mkey1][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][pkeyx][linkx][ahref][pkeyx][linkx]<li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][mkey1]</li>[pkeyx]
      </li>
     </ul>
     <ul class="toolbar toolbar-horizontal toolbar-dock-right">
      <li class="toolbar-item toolbar-item-search bodyText">
       <div class="noindex" id="search">
        <div id="ctl00_uab_searchControl1_SearchFormPanel">
         <button class="button mainButton " id="ctl00_uab_searchControl1_searchButton" name="ctl00$uab$searchControl1$searchButton" type="submit" value="Rechercher">
          <span>
           Rechercher
          </span>
         </button>
        </div>
       </div>
      </li>
      <li class="toolbar-item bodyText">
       <a class="toolbar-link" href="/fr/login/" title="">
        <span>
         Mon réseau Livre Paris
        </span>
       </a>
      </li>
     </ul>
    </div>
   </div>
   <div class="centered-page" id="wrapper">
    <header class=" topNavDepth3 multiLevelNav" id="header">
     <div class="noindex" id="brand">
      <div class="unmanagedContent">
       <div>
        <div class="header header--md-1">
         <div class="header__col-01">
          [ahref]
          
         </div>
         <div class="header__col-02">
          <div class="header__col-02__base-line">
           20-23 MARS
           <span>
            2020
           </span>
           <br>
            [ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][linkx][area1][mkey1][linkx][pkeyx][linkx][area1][mkey1][area1][mkey1][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>[linkx][area1][keywordx]
           </br>
           <p>
            PORTE DE VERSAILLES
           </p>
          </div>
          <ul class="header__col-02__btn">
           <li class="header__col-02__btn__exhibit">
            <i class="far fa-id-badge">
            </i>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
      [ahref]
      
     </div>
     <div class="no-js selectedHasNoChildren" id="topNavigation">
      <ul class="level1">
       <li class=" leaf first" id="navTreeItem-176352">
        <a href="/accueil/" title="LIVRE PARIS">
         LIVRE PARIS[area1][keywordx]<li>[ahref]</li>[area1][mkey1][ahref]
        </a>
       </li>
       <li class=" hasChildren " id="navTreeItem-172394">
        [linkx]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-172396">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-172398">
          <a href="/lesalon/actualites/" title="Actualités">
           Actualités
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-198234">
          <a href="m" target="_blank" title="Visite Virtuelle">
           Visite Virtuelle
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-198242">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-172589">
          <a href="/lesalon/nos-partenaires/" title="Partenaires">
           Partenaires
          </a>
         </li>
         <li class=" last leaf " id="navTreeItem-236310">
          [linkx]
          
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172657">
        [linkx][pkeyx][linkx][pkeyx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][ahref][area1][mkey1][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
       </li>
       <li class=" hasChildren " id="navTreeItem-172976">
        [ahref]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-172978">
          <a href="/scenes-thematiques/grande-scene/" title="Grande scène">
           Grande scène
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-224298">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-172985">
          <a href="/scenes-thematiques/scene-polar/" title="Scène Polar">
           Scène Polar
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172997">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-172989">
          <a href="/scenes-thematiques/scene-bd-manga-comics/" title="Scène BD, Manga et Comics">
           Scène BD, Manga et Comics
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172993">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-173005">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-173018">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-173009">
          <a href="/scenes-thematiques/scene-sciences-pour-tous/" title="Scène sciences pour tous">
           Scène sciences pour tous
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-241523">
          [linkx]
          
         </li>
         <li class=" last leaf " id="navTreeItem-181143">
          <a href="/scenes-thematiques/une-fete-partagee/" title="Les événements des exposants">
           Les événements des exposants
          </a>
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172778">
        <a href="/zoom-sur/" title="ZOOM SUR">
         ZOOM SUR
        </a>
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-174840">
          [ahref]
          
         </li>
         <li class=" leaf " id="navTreeItem-174934">
          [linkx]
          
         </li>
         <li class=" leaf " id="navTreeItem-174927">
          <a href="/zoom-sur/espace-ile-de-france/" title="Espace Île-de-France">
           Espace Île-de-France
          </a>
         </li>
         <li class=" last leaf " id="navTreeItem-237211">
          <a href="/zoom-sur/hors-les-murs/" title="Rencontres Hors les murs">
           Rencontres Hors les murs
          </a>
         </li>
        </ul>
       </li>
       <li class=" hasChildren " id="navTreeItem-172788">
        [ahref]
        
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-172800">
          [ahref]
          
         </li>
         <li class=" last leaf " id="navTreeItem-172848">
          [linkx]
          
         </li>
        </ul>
       </li>
       <li class=" last hasChildren " id="navTreeItem-172905">
        <a href="/infos-pratiques/" title="INFOS PRATIQUES">
         INFOS PRATIQUES
        </a>
        <ul class="level2">
         <li class=" leaf first" id="navTreeItem-219998">
          <a href="/infos-pratiques/preparer-sa-venue/" title="Préparer sa venue">
           Préparer sa venue
          </a>
         </li>
         <li class=" leaf " id="navTreeItem-172954">
          [ahref]
           [pkeyx]<li>[area1][keywordx]</li><li>[pkeyx]</li><li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          
         </li>
         <li class=" last leaf " id="navTreeItem-173374">
          [linkx]
          
         </li>
        </ul>
       </li>
      </ul>
     </div>
    </header>
    <div class="contentLayoutBox clearfix">
     <div id="pageTopContainer">
      <div class="noindex" id="breadcrumb">
       <span class="breadcrumbStart">
        Vous êtes ici
       </span>
       <ol>
        <li class="level1 first">
         [linkx]
         
        </li>
        <li class="level2">
         [ahref]
         
        </li>
        <li class="level3 last">
         <span>
          Russie, pays à l'honneur
         </span>
        </li>
       </ol>
      </div>
     </div>
     <div class="centered-page" id="content">
      <div id="contentHook1">
      </div>
      <div class="unmanagedContent">
       <div>
        <ul class="btn-mobile">
         <li class="mobile-menu" id="mobile-menu">
         </li>
        </ul>
        <ol class="top-bar-wrapper__reseaux">
         <li class="top-bar-wrapper__reseaux__fa">
          [linkx]
          
         </li>
         <li class="top-bar-wrapper__reseaux__tw">
          [ahref]
          
         </li>
         <li class="top-bar-wrapper__reseaux__lk">
          [ahref]
          
         </li>
         <li class="top-bar-wrapper__reseaux__it">
          [linkx]
          
         </li>
         <li class="top-bar-wrapper__reseaux__yt">
          <a href="/channel/UCc-NNnn1trZuDxvO8rLJZkw" target="_blank">
           youtube
          </a>
         </li>
        </ol>
        <ol class="top-bar-wrapper__partners">
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ol>
       </div>
      </div>
      <h1 id="pageName">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h1>
      <ul class="twoColumnList" id="ctlChildPageList">
       <li class="childPageList layoutBlocks c-100 eole--left">
        <div class="layoutBlockContainer layoutBlockContainer1Col">
         <div class="layoutBlock layoutBlock-1">
          <h2>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks c-75-ad anubis--second">
        <div class="layoutBlockContainer layoutBlockContainer2Col">
         <div class="layoutBlock layoutBlock-1">
          <div class="unmanagedContent">
           <div>
            <p>
             En 2018, le Salon LIVRE PARIS a accueilli la
             <strong>
              Russie en pays invité d’honneur.[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>[ahref][linkx]
             </strong>
             <br/>
             <br/>
             Du 16 au 19 mars, LIVRE PARIS a reçu
             <strong>
              38 auteurs russes
             </strong>
             , reflets de la diversité et du dynamisme de la création littéraire contemporaine de la Russie : des
             <strong>
              auteurs reconnus internationalement
             </strong>
             , mais également de
             <strong>
              nouveaux talents, émergents et prometteurs.
             </strong>
             <br/>
             <br/>
             <i>
              « Les liens historiques, culturels et littéraires entre la France et la Russie sont privilégiés, uniques même. Nos littératures, et au-delà nos cultures, s’écoutent et se répondent. L’édition 2018 du Salon Livre Paris célébrera ce dialogue intense entre les lettres de nos deux pays. »
             </i>
             <br/>
             <br/>
             Vincent Montagne, Président du SNE
            </p>
           </div>
          </div>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="layoutBlock layoutBlock-2">
          <li>[area1][mkey1]</li><li>[area1][keywordx]</li>[pkeyx]<li>[area1][mkey1]</li><li>[area1][mkey1]</li>
         </div>
         <div class="clear">
          [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks lego50">
        <div class="layoutBlockContainer layoutBlockContainer">
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks c-75-adp triton--second">
        <div class="layoutBlockContainer layoutBlockContainer2Col">
         <div class="layoutBlock layoutBlock-1">
          <div class="unmanagedContent">
           <div>
            <h2>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h2>
            <br/>
            <table>
             <tr>
              <td width="25%">
               <ul>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Oliax$sp$xAprelska%C3%AFa&amp;startRecord=1#" target="_blank">
                  Olia Aprelskaïa
                 </a>
                </li>
                <li>
                 <a href="/fr/Salon-du-livre-2018/Evenements/?kw=Pavelx$sp$xBassinski&amp;startRecord=1#" target="_blank">
                  Pavel Bassinski
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 <a href="/fr/Salon-du-livre-2018/Evenements/?kw=Iourix$sp$xBou%C3%AFda&amp;startRecord=1#" target="_blank">
                  Iouri Bouïda
                 </a>
                </li>
                <li>
                 <a href="/fr/Salon-du-livre-2018/Evenements/?kw=Sergue%C3%AFx$sp$xChargounov&amp;startRecord=1#" target="_blank">
                  Sergueï Chargounov
                 </a>
                </li>
                <li>
                 Vladimir Charov
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/fr/Salon-du-livre-2018/Evenements/?kw=Sachax$sp$xFilipenko&amp;startRecord=1#" target="_blank">
                  Sacha Filipenko
                 </a>
                </li>
                <li>
                 <a href="/fr/Salon-du-livre-2018/Evenements/?kw=Mariax$sp$xGalina&amp;startRecord=1#" target="_blank">
                  Maria Galina
                 </a>
                </li>
                <li>
                 <h3>
                  [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                 </h3>
                 [linkx]
                 
                </li>
                <li>
                 <[area1][keywordx]>
                 </[area1][keywordx]>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
               </ul>
              </td>
              <td width="25%">
               <ul>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Gouzelx$sp$xIakhina&amp;startRecord=1#" target="_blank">
                  Gouzel Iakhina
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Iourix$sp$xKoublanovski&amp;startRecord=1#" target="_blank">
                  Iouri Koublanovski
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Vadimx$sp$xLeventalx$sp$x&amp;startRecord=1#" target="_blank">
                  Vadim Levental
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Dmitryx$sp$xLipskerov&amp;startRecord=1#" target="_blank">
                  Dmitry Lipskerov
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexandrax$sp$xLitvinax$sp$x&amp;startRecord=1#" target="_blank">
                  Alexandra Litvina
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexe%C3%AFx$sp$xMakouchinski&amp;startRecord=1#" target="_blank">
                  Alexeï Makouchinski
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Vladislavx$sp$xOtrochenko&amp;startRecord=1#" target="_blank">
                  Vladislav Otrochenko
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Zakharx$sp$xPrilepine&amp;startRecord=1#" target="_blank">
                  Zakhar Prilepine
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Victorx$sp$xRemizov&amp;startRecord=1#" target="_blank">
                  Victor Remizov
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Romanx$sp$xSentchine&amp;startRecord=1#" target="_blank">
                  Roman Sentchine
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Alexe%C3%AFx$sp$xVarlamov&amp;startRecord=1#" target="_blank">
                  Alexeï Varlamov
                 </a>
                </li>
                <li>
                 <a href="/Salon-du-livre-2018/Evenements/?kw=Evguenix$sp$xVodolazkine&amp;startRecord=1#" target="_blank">
                  Evgueni Vodolazkine
                 </a>
                </li>
               </ul>
              </td>
             </tr>
            </table>
            <p class="btn">
             <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li><li>[ahref]</li>[area1][mkey1]<li>[ahref]</li>
            </p>
            <br/>
           </div>
          </div>
          <div class="feedItems layoutBlock-1">
          </div>
         </div>
         <div class="layoutBlock layoutBlock-2">
          [linkx]
          
          <div class="feedItems layoutBlock-2">
          </div>
         </div>
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks lego1 color-secondary">
        <div class="layoutBlockContainer layoutBlockContainer">
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks lego50">
        <div class="layoutBlockContainer layoutBlockContainer">
         <div class="clear">
         </div>
        </div>
       </li>
       <li class="childPageList layoutBlocks c-33-33-33 cronos">
        <div class="layoutBlockContainer layoutBlockContainer2Col">
         [area1][keywordx][ahref][linkx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][linkx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx]
        </div>
       </li>
      </ul>
      <div id="contentHook2">
      </div>
     </div>
    </div>
    <div class="noindex " id="footer">
     <div class="extendedContainer oneNavLevel vertical" id="ctl00_pageFooter_extendedContent">
      <div class="no-js selectedHasNoChildren" id="footerNavigation">
       <ul class="level1">
        <li class=" leaf first" id="navTreeItem-footer-176352">
         [linkx]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172394">
         [ahref]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172657">
         [ahref]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172976">
         [ahref]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172778">
         [linkx]
         
        </li>
        <li class=" hasChildren " id="navTreeItem-footer-172788">
         [linkx]
         
        </li>
        <li class=" last hasChildren " id="navTreeItem-footer-172905">
         <a href="/infos-pratiques/" title="INFOS PRATIQUES">
          INFOS PRATIQUES
         </a>
        </li>
       </ul>
      </div>
      <div class="unmanagedContent">
       <div>
        <div class="footer">
         <ul class="footer__links">
          <li class="footer__links__title">
          </li>
          <li class="footer-img">
          </li>
         </ul>
         <ul class="footer__links">
          <li class="footer__links__title">
           <h4>
            Dates, horaires et accès
           </h4>
          </li>
          <li>
           Vendredi 20 mars de 10h00 à 20h00
          </li>
          <li>
           Samedi 21 mars de 10h00 à 20h00
          </li>
          <li>
           Dimanche 22 mars de 10h00 à 19h00
          </li>
          <li>
           Lundi 23 mars de 9h00 à 18h00*
          </li>
          <li style="font-size: 10px">
           * Accès réservé aux professionnels de 9h à 12h,
           <br/>
           ouverture au public à partir de 12h.
          </li>
          <br/>
          <li>
           Porte de Versailles - Pavillon 1 - Paris, France
          </li>
         </ul>
         <ul class="footer__links">
          <li class="footer__links__title">
           <h4>
            Liens
           </h4>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/" target="_blank">
            Blog
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/donnees-personnelles" target="_blank">
            Données personnelles
           </a>
          </li>
         </ul>
        </div>
        <noscript>
         <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-NMN5JQN" style="display:none;visibility:hidden" width="0">
         </iframe>
        </noscript>
       </div>
      </div>
     </div>
     <span class="copyright">
      <div class="footerBottom">
       <ul class="footerBottom__company">
        <li>
         <a href="/" target="_blank">
         </a>
        </li>
        <li>
         <a href="/" target="_blank">
         </a>
        </li>
       </ul>
       <ul class="footerBottom__reseaux">
        <li class="footerBottom__reseaux__fa">
         <a href="/salondulivre/" target="_blank">
          facebook
         </a>
        </li>
        <li class="footerBottom__reseaux__tw">
         <a href="/salondulivre" target="_blank">
          twitter
         </a>
        </li>
        <li class="footerBottom__reseaux__lk">
         [ahref]
         
        </li>
        <li class="footerBottom__reseaux__it">
         <a href="/livre_paris/" target="_blank">
          Instagram
         </a>
        </li>
        <li class="footerBottom__reseaux__yt">
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="footerBottom__last">
       <ul>
        <li>
         [ahref]
          <li>[linkx]</li>[pkeyx]<li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
         
        </li>
       </ul>
      </div>
     </span>
    </div>
   </div>
   <div id="UserMessageContainer">
    <div id="cookieComplianceMessage">
     <p>
      Nous utilisons des cookies pour faire fonctionner ce site Internet, améliorer son utilisation et vous proposer des offres et services adaptés à vos centres d'intérêt. Veuillez noter qu'en utilisant ce site, vous consentez à l'utilisation de cookies.
      [linkx]
      
     </p>
     <div id="cookieComplianceMessageAction">
      <button class="button mainButton " id="btnCloseComplianceMessage" name="ctl00$CookieComplianceMessage$btnCloseComplianceMessage" type="submit" value=" ">
      </button>
     </div>
    </div>
   </div>
  </form>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KRPNFS" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0217
  </b>
 </body>
</html>
|<---