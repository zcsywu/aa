--->|<!DOCTYPE doctype html>
<html class="no-js" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="rYkLMFujoKMjalW-LbirCW7wY4uqHO8Xukt5NK7OVrk" name="google-site-verification">
   <title>
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </title>
   <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
   <meta content="width=device-width, initial-scale=1, minimum-scale=0.5, maximum-scale=1, user-scalable=yes" id="resResponsiveViewport" name="viewport"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
   <meta content="K2Web Wizard" name="generator"/>
   <meta content="website" property="og:type"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
   <c:if test="true">
   </c:if>
  </meta>
 </head>
 <body class="sub _responsiveObj">
  <div id="_wrap">
   <div id="_wrapHeader">
    <header id="_header">
     <h2 id="_logo">
      <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h2>
     <div id="wrapGnavi">
      <ul class="wrapGnaviUl _wizOdr">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <form action="/book/ewhapress/list.do" method="post" name="all">
       [content8[linkx]content9[linkx]content10[linkx]content11]
      </form>
     </div>
     <div id="mMenu">
      <button class="mMenuButton" id="mMenuOpen">
       메뉴열기
      </button>
      <button class="mMenuButton hidden" id="mMenuClose">
       메뉴닫기
      </button>
     </div>
     <div id="wrapGnb">
      <nav class="menuUItop " id="menuUItop">
       <div class="top_div div_1" id="top_div">
        <ul class="top_k2wiz_GNB _wizOdr ul_1" id="top_k2wiz_GNB">
         <li class="li_1_139 li_1" id="li_1_139">
          [linkx]
          
          <div class="top_div_139 div_2" id="top_div_139">
           <ul class="top_k2wiz_GNB_ul_139 _wizOdr ul_2" id="top_k2wiz_GNB_ul_139">
            <li class="li_2_143 li_2" id="li_2_143">
             [ahref]
             
            </li>
            <li class="li_2_144 li_2" id="li_2_144">
             [linkx]
             
             <div class="top_div_144 div_3" id="top_div_144">
              <ul class="top_k2wiz_GNB_ul_144 _wizOdr ul_3" id="top_k2wiz_GNB_ul_144">
               <li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>[link]<li>[link]</li>
              </ul>
             </div>
            </li>
            <li class="li_2_145 li_2" id="li_2_145">
             [ahref]
             
             <div class="top_div_145 div_3" id="top_div_145">
              <ul class="top_k2wiz_GNB_ul_145 _wizOdr ul_3" id="top_k2wiz_GNB_ul_145">
               <li class="li_3_177 li_3" id="li_3_177">
                <a class="top_k2wiz_GNB_177 a_3 k2wiz_GNB_145" href="/ewhapress/177/subview.do" id="top_k2wiz_GNB_177" target="_self">
                 철학·심리학·윤리학
                </a>
               </li>
               <li class="li_3_178 li_3" id="li_3_178">
                [ahref]
                
               </li>
               <li class="li_3_179 li_3" id="li_3_179">
                [linkx]
                
               </li>
               <li class="li_3_180 li_3" id="li_3_180">
                [linkx]
                
               </li>
               <li class="li_3_181 li_3" id="li_3_181">
                [ahref]
                
               </li>
               <li class="li_3_182 li_3" id="li_3_182">
                [ahref]
                
               </li>
               <li class="li_3_183 li_3" id="li_3_183">
                <a class="top_k2wiz_GNB_183 a_3 k2wiz_GNB_145" href="/ewhapress/183/subview.do" id="top_k2wiz_GNB_183" target="_self">
                 문학
                </a>
               </li>
               <li class="li_3_184 li_3" id="li_3_184">
                [ahref]
                
               </li>
               <li class="li_3_185 li_3" id="li_3_185">
                [ahref]
                
               </li>
               <li class="li_3_186 li_3" id="li_3_186">
                [ahref]
                
               </li>
              </ul>
             </div>
            </li>
            <li class="li_2_146 li_2" id="li_2_146">
             [ahref]
             
             <div class="top_div_146 div_3" id="top_div_146">
              <ul class="top_k2wiz_GNB_ul_146 _wizOdr ul_3" id="top_k2wiz_GNB_ul_146">
               <li class="li_3_187 li_3" id="li_3_187">
                [linkx]
                
               </li>
               <li class="li_3_188 li_3" id="li_3_188">
                <a class="top_k2wiz_GNB_188 a_3 k2wiz_GNB_146" href="/ewhapress/188/subview.do" id="top_k2wiz_GNB_188" target="_self">
                 일본어
                </a>
               </li>
               <li class="li_3_189 li_3" id="li_3_189">
                [linkx]
                
               </li>
               <li class="li_3_190 li_3" id="li_3_190">
                [linkx]
                
               </li>
               <li class="li_3_191 li_3" id="li_3_191">
                <a class="top_k2wiz_GNB_191 a_3 k2wiz_GNB_146" href="/ewhapress/191/subview.do" id="top_k2wiz_GNB_191" target="_self">
                 독일어
                </a>
               </li>
               <li class="li_3_192 li_3" id="li_3_192">
                [content16[linkx]content17[linkx]content18]
               </li>
               <li class="li_3_193 li_3" id="li_3_193">
                [linkx]
                
               </li>
              </ul>
             </div>
            </li>
            <li class="li_2_147 li_2" id="li_2_147">
             [ahref]
             
            </li>
            <li class="li_2_148 li_2" id="li_2_148">
             [ahref]
             
             <div class="top_div_148 div_3" id="top_div_148">
              <ul class="top_k2wiz_GNB_ul_148 _wizOdr ul_3" id="top_k2wiz_GNB_ul_148">
               <li class="li_3_194 li_3" id="li_3_194">
                [linkx]
                
               </li>
               <li class="li_3_195 li_3" id="li_3_195">
                [ahref]
                
               </li>
               <li class="li_3_196 li_3" id="li_3_196">
                [ahref]
                
               </li>
               <li class="li_3_197 li_3" id="li_3_197">
                [linkx]
                
               </li>
               <li class="li_3_198 li_3" id="li_3_198">
                [ahref]
                
               </li>
               <li class="li_3_199 li_3" id="li_3_199">
                [linkx]
                
               </li>
               <li class="li_3_867 li_3" id="li_3_867">
                [ahref]
                
               </li>
              </ul>
             </div>
            </li>
            <li class="li_2_149 li_2" id="li_2_149">
             [linkx]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="li_1_140 li_1" id="li_1_140">
          <a class="top_k2wiz_GNB_140 a_1 k2wiz_GNB_118" href="/ewhapress/150/subview.do" id="top_k2wiz_GNB_140" target="_self">
           지원사업
          </a>
          <div class="top_div_140 div_2" id="top_div_140">
           <ul class="top_k2wiz_GNB_ul_140 _wizOdr ul_2" id="top_k2wiz_GNB_ul_140">
            <li class="li_2_150 li_2" id="li_2_150">
             [linkx]
             
            </li>
            <li class="li_2_151 li_2" id="li_2_151">
             [ahref]
             
            </li>
            <li class="li_2_152 li_2" id="li_2_152">
             [linkx]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="li_1_141 li_1" id="li_1_141">
          [ahref]
          
          <div class="top_div_141 div_2" id="top_div_141">
           <ul class="top_k2wiz_GNB_ul_141 _wizOdr ul_2" id="top_k2wiz_GNB_ul_141">
            <li class="li_2_153 li_2" id="li_2_153">
             [linkx]
             
            </li>
            <li class="li_2_154 li_2" id="li_2_154">
             [linkx]
             
            </li>
            <li class="li_2_155 li_2" id="li_2_155">
             [linkx]
             
            </li>
            <li class="li_2_156 li_2" id="li_2_156">
             [ahref]
             
            </li>
            <li class="li_2_157 li_2" id="li_2_157">
             [link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
            </li>
            <li class="li_2_158 li_2" id="li_2_158">
             [ahref]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="li_1_142 li_1" id="li_1_142">
          [linkx]
          
          <div class="top_div_142 div_2" id="top_div_142">
           <ul class="top_k2wiz_GNB_ul_142 _wizOdr ul_2" id="top_k2wiz_GNB_ul_142">
            <li class="li_2_159 li_2" id="li_2_159">
             [ahref]
             
            </li>
            <li class="li_2_160 li_2" id="li_2_160">
             [linkx]
             
            </li>
            <li class="li_2_161 li_2" id="li_2_161">
             <a class="top_k2wiz_GNB_161 a_2 k2wiz_GNB_142" href="/ewhapress/161/subview.do" id="top_k2wiz_GNB_161" target="_self">
              조직도
             </a>
            </li>
            <li class="li_2_162 li_2" id="li_2_162">
             [ahref]
             
            </li>
           </ul>
          </div>
         </li>
        </ul>
       </div>
      </nav>
     </div>
    </header>
    <div id="wrapGnbSub">
    </div>
   </div>
   <div id="_wrapArticle">
    <div id="submenuNavigation">
     <div class="inner">
      <div id="masterNavigation">
       <ul id="_pageNavigation">
        <li class="home">
         HOME
        </li>
        <li class="pageLocation">
         <span class="gt">
          >
         </span>
         도서안내
        </li>
        <li class="pageLocation">
         <span class="gt">
          >
         </span>
         기획총서
        </li>
        <li class="pageName">
         <span class="gt">
          >
         </span>
         <strong>
          우리 문화의 뿌리를 찾아서
         </strong>
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div id="_container">
     <div id="_aside">
      <div id="wrapLnb">
       <nav class="menuUIsub " id="menuUIsub">
        <div class="menuSubTitleUI menuSubTitleUI139" id="menuSubTitleUI139">
         <h2>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h2>
        </div>
        <div class="sub_div div_2" id="sub_div">
         <ul class="sub_k2wiz_GNB _wizOdr ul_2" id="sub_k2wiz_GNB">
          <li class="li_2_143 li_2" id="li_2_143">
           [ahref]
           
          </li>
          <li class="li_2_144 li_2" id="li_2_144">
           <a class="sub_k2wiz_GNB_144 a_2 k2wiz_GNB_139" href="/ewhapress/163/subview.do" id="sub_k2wiz_GNB_144" target="_self">
            기획총서
           </a>
           <div class="sub_div_144 div_3" id="sub_div_144">
            [content20][content1][linkx][content2][content3][content4][linkx]
           </div>
          </li>
          <li class="li_2_145 li_2" id="li_2_145">
           [linkx]
           
           <div class="sub_div_145 div_3" id="sub_div_145">
            <ul class="sub_k2wiz_GNB_ul_145 _wizOdr ul_3" id="sub_k2wiz_GNB_ul_145">
             <li class="li_3_177 li_3" id="li_3_177">
              [linkx]
              
             </li>
             <li class="li_3_178 li_3" id="li_3_178">
              [linkx]
              
             </li>
             <li class="li_3_179 li_3" id="li_3_179">
              [ahref]
              
             </li>
             <li class="li_3_180 li_3" id="li_3_180">
              [ahref]
              
             </li>
             <li class="li_3_181 li_3" id="li_3_181">
              [ahref]
              
             </li>
             <li class="li_3_182 li_3" id="li_3_182">
              <a class="sub_k2wiz_GNB_182 a_3 k2wiz_GNB_145" href="/ewhapress/182/subview.do" id="sub_k2wiz_GNB_182" target="_self">
               [keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]<li>[link]</li>
              </a>
             </li>
             <li class="li_3_183 li_3" id="li_3_183">
              [ahref]
              
             </li>
             <li class="li_3_184 li_3" id="li_3_184">
              [linkx]
              
             </li>
             <li class="li_3_185 li_3" id="li_3_185">
              [ahref]
              
             </li>
             <li class="li_3_186 li_3" id="li_3_186">
              <a class="sub_k2wiz_GNB_186 a_3 k2wiz_GNB_145" href="/ewhapress/186/subview.do" id="sub_k2wiz_GNB_186" target="_self">
               영문도서
              </a>
             </li>
            </ul>
           </div>
          </li>
          <li class="li_2_146 li_2" id="li_2_146">
           <li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
          </li>
          <li class="li_2_147 li_2" id="li_2_147">
           <a class="sub_k2wiz_GNB_147 a_2 k2wiz_GNB_139" href="/ewhapress/147/subview.do" id="sub_k2wiz_GNB_147" target="_self">
            EBOOK
           </a>
          </li>
          <li class="li_2_148 li_2" id="li_2_148">
           <a class="sub_k2wiz_GNB_148 a_2 k2wiz_GNB_139" href="/ewhapress/194/subview.do" id="sub_k2wiz_GNB_148" target="_self">
            이화아트
           </a>
           <div class="sub_div_148 div_3" id="sub_div_148">
            <ul class="sub_k2wiz_GNB_ul_148 _wizOdr ul_3" id="sub_k2wiz_GNB_ul_148">
             <li class="li_3_194 li_3" id="li_3_194">
              [linkx]
               [content14][content15][linkx]
              
             </li>
             <li class="li_3_195 li_3" id="li_3_195">
              [linkx]
              
             </li>
             <li class="li_3_196 li_3" id="li_3_196">
              [linkx]
              
             </li>
             <li class="li_3_197 li_3" id="li_3_197">
              [linkx]
              
             </li>
             <li class="li_3_198 li_3" id="li_3_198">
              [linkx]
              
             </li>
             <li class="li_3_199 li_3" id="li_3_199">
              [linkx]
              
             </li>
             <li class="li_3_867 li_3" id="li_3_867">
              <a class="sub_k2wiz_GNB_867 a_3 k2wiz_GNB_148" href="/ewhapress/867/subview.do" id="sub_k2wiz_GNB_867" target="_self">
               기타
              </a>
             </li>
            </ul>
           </div>
          </li>
          <li class="li_2_149 li_2" id="li_2_149">
           <a class="sub_k2wiz_GNB_149 a_2 k2wiz_GNB_139" href="/ewhapress/149/subview.do" id="sub_k2wiz_GNB_149" target="_self">
            전체도서
           </a>
          </li>
         </ul>
        </div>
       </nav>
      </div>
     </div>
     <div id="_content">
      <div id="masterTitle">
       <h1>
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h1>
      </div>
      <div id="masterTab">
       <nav class="menuUItab " id="menuUItab">
       </nav>
      </div>
      <div id="masterEditor">
       <div id="contentsEditHtml">
        <div class="contntMaster">
         /WEB-INF/jsp/k2web/com/cop/site/layout.jsp
         <br/>
         ewhapress_JW_MS_K2WT001_S
        </div>
        <article class="_contentBuilder" id="_contentBuilder">
         <div class="_obj _objWidget _active" id="menu163_obj539">
          <div class="hidden widgetInfo">
           fnctId=book,fnctNo=0
          </div>
          <div class="_fnctWrap bookList">
           <ul class="bookListUl">
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             <a class="bookAnc" href="/book/ewhapress/4717/view.do?layout=k0HnHB0Sy0sVZcj5CV8XXBiuTZSBt7rxXsD5oKqNae4%3D" onclick="jf_view('4717')">
              <div class="bookPic">
              </div>
              <div class="bookInfo">
               <strong>
                한글
                <span>
                 <우리 문화의 뿌리를 찾아서 30>
                </span>
               </strong>
               <em>
               </em>
               <div class="bookInfoDiv">
                <dl class="bookInfoDl">
                 <dt>
                  [link][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
                 </dt>
                 <dd>
                  박창원 지음
                 </dd>
                </dl>
                <dl class="bookInfoDl">
                 <dt>
                  발행일
                 </dt>
                 <dd>
                  2014-09-10
                 </dd>
                </dl>
                <dl class="bookInfoDl">
                 <dt>
                  정
                  <span class="gab">
                  </span>
                  가
                 </dt>
                 <dd>
                  12,000원
                  <span class="bookStatus onsale">
                   판매중
                  </span>
                 </dd>
                </dl>
               </div>
              </div>
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             <a class="bookAnc" href="/book/ewhapress/4510/view.do?layout=k0HnHB0Sy0sVZcj5CV8XXBiuTZSBt7rxXsD5oKqNae4%3D" onclick="jf_view('4510')">
              <div class="bookPic">
              </div>
              <div class="bookInfo">
               <strong>
                김치
                <span>
                 <우리 문화의 뿌리를 찾아서 28>
                </span>
               </strong>
               <em>
               </em>
               <div class="bookInfoDiv">
                <dl class="bookInfoDl">
                 <dt>
                  저
                  <span class="gab">
                  </span>
                  자
                 </dt>
                 <dd>
                  김숙희 지음
                 </dd>
                </dl>
                <dl class="bookInfoDl">
                 <dt>
                  발행일
                 </dt>
                 <dd>
                  2010-01-29
                 </dd>
                </dl>
                <dl class="bookInfoDl">
                 <dt>
                  정
                  <span class="gab">
                  </span>
                  가
                 </dt>
                 <dd>
                  12,000원
                  <span class="bookStatus onsale">
                   판매중
                  </span>
                 </dd>
                </dl>
               </div>
              </div>
             </a>
            </li>
            <li>
             [ahref]
              [content10[linkx]content11[linkx]content12]
             
            </li>
            <li>
             [linkx]
             
            </li>
           </ul>
           <div class="_paging">
            <div class="_inner">
             [ahref]
             
             <p class="_pageState">
              <span class="_curPage">
               1
              </span>
              <span class="_totPage">
               6
              </span>
             </p>
             <ul>
              <li>
               <strong title="현재 페이지">
                1
               </strong>
              </li>
              <li>
               <a href=")" title="2페이지">
                2
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
             [ahref]
             
             [ahref]
             
            </div>
           </div>
           <form action="/book/ewhapress/list.do" class="bookSearch" id="bookFrm" method="post">
           </form>
          </div>
         </div>
        </article>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div id="_wrapFooter">
    <div class="inner">
     <footer id="_footer">
      <div class="_directWrap">
       <div class="_direct">
        <h2>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <ul>
         <li>
          <a href="/mbs/ewhakr/html/popup_rules2.html" target="_blank">
           개인정보 처리방침
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="_jumpMenuWrap _sWidth">
       <div class="_jumpMenu">
        <h2>
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <div class="_jumpSelect">
         <select id="jumpMenuFooter" name="jumpMenuFooter" title="관련사이트선택">
          <option value="#">
           패밀리 사이트를 선택하세요
          </option>
          <option value="http://www.kyobobook.co.kr,_blank">
           교보문고
          </option>
          <option value="http://book.conects.com/,_blank">
           리브로을지서적
          </option>
          <option value="https://www.seoulselection.com,_blank">
           서울 셀렉션
          </option>
          <option value="http://www.bandinlunis.com,_blank">
           반디앤루니스
          </option>
          <option value="http://www.aladin.co.kr,_blank">
           알라딘
          </option>
          <option value="http://www.ypbooks.co.kr,_blank">
           영풍문고
          </option>
          <option value="http://www.interpark.com/malls/index.html?gateTp=1,_blank">
           인터파크
          </option>
          <option value="http://www.koreabook.or.kr/,_blank">
           한국출판협동조합
          </option>
          <option value="http://www.yes24.com/,_blank">
           YES24
          </option>
          <option value="http://www.ewhapress.com/popup/pop_20070329.html,_blank">
           기타거래처
          </option>
         </select>
        </div>
        <button onclick="javascript:jumpMenu('Footer');" title="새창열림">
         이동
        </button>
       </div>
      </div>
      <div class="address">
       <div class="adWrap">
        Copyright ⓒ 2017 EWHA WOMANS UNIVERSITY PRESS. All Right Reserved.
       </div>
       <div class="adWrap">
        <span>
         상호명: (학)이화학당이화여자대학교출판문화원
        </span>
        <span>
         대표: 김헌민
        </span>
        <span>
         사업자등록번호: 110-82-09852
        </span>
       </div>
       <div class="adWrap">
        <span>
         주소: 서울시 서대문구 이화여대길 52 (03760)
        </span>
        <span>
         서울시 서대문구 성산로 527 하늬솔 A 4층 (03721) (별관)
        </span>
       </div>
       <div class="adWrap">
        <span class="spTel">
         Tel : 02-362-6076
        </span>
        <span class="spFax">
         Fax : 02-312-4312
        </span>
       </div>
      </div>
     </footer>
    </div>
   </div>
   [ahref]
   
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0296
  </b>
 </body>
</html>
|<---