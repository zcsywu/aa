--->|<!DOCTYPE html>
<html class="no-js" lang="ko-KR">
 <head>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description" name="description">
  </meta>
 </head>
 <body class="page page-id-9879 page-child parent-pageid-201 page-template-default">
  <div class="site_wrap ">
   [ahref]
   
   <a class="screen-readerbox" href="t">
    주메뉴 바로가기
   </a>
   <a class="screen-readerbox" href="m">
    이용자 맞춤 서비스 바로가기
   </a>
   <div class="site_boxcontainer">
    <div class="m_target_sidebox">
     <div class="m_container">
      <div class="quick_m_nav">
       <ul class="main_menu">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="login_pop" href="/login/" id="web_login2">
          POVIS
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="target_m_nav">
       <ul class="main_menu">
        <li>
         <a href=";">
          학생
         </a>
         <ul class="sub_menu">
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="r" target="_blank" title="새창으로 열기">
            국제교류
           </a>
          </li>
          <li>
           <a href="/academics/academic-info/course-catalog/">
            대학요람
           </a>
          </li>
          <li>
           <a href="/campus-life/postechian-life/cultural-program/">
            문화행사
           </a>
          </li>
          <li>
           <a href="/campus-life/postechian-life/student-medical-coop-plan/">
            의료공제
           </a>
          </li>
          <li>
           <a href="/campus-life/scholarships/">
            장학제도
           </a>
          </li>
          <li>
           <a href="/academics/academic-info/certificate-request/">
            증명서발급
           </a>
          </li>
          <li>
           학사일정[pkeyx]<li>[area1][keywordx]</li><li>[ahref]</li>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li>
         [ahref]
         
         <ul class="sub_menu">
          <li>
           <a href="/about-postech/administration/rules-regulations/">
            규정집
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/e-postech/news/">
            새소식
           </a>
          </li>
         </ul>
        </li>
        <li>
         <li>[linkx]</li><li>[pkeyx]</li><li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
        </li>
        <li>
         <a href=";">
          동문
         </a>
         <ul class="sub_menu">
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/" target="_blank" title="새창으로 열기">
            포스텍 발전기금
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <div class="h_top_links h_top_unit">
       <ul>
        <li class="link1">
         [ahref]
         
        </li>
        <li class="link2">
         [linkx]
         
        </li>
        <li class="link6">
         [ahref]
         
        </li>
        <li class="link3">
         <a href="/user/postechvision2020" target="_blank" title="Youtube 새창열기">
          <i class="icon_item">
           Youtube
          </i>
         </a>
        </li>
        <li class="link5">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="rang_m_box">
       <ul>
        <li class="active">
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div class="site" id="page">
     <div class="site-inner">
      <div class="site-header" id="masthead" role="banner">
       <div class="header_wrap">
        <div class="box_bg">
         <div class="box_container">
          <div class="h_top_cont">
           <div class="h_top_container">
            <div class="h_top_box">
             <div class="h_top_links h_top_unit">
              <ul>
               <li class="link1">
                [ahref]
                
               </li>
               <li class="link2">
                <li>[pkeyx]</li>[ahref]<li>[area1][keywordx]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </li>
               <li class="link6">
                [ahref]
                
               </li>
               <li class="link3">
                [ahref]
                
               </li>
               <li class="link4">
                <a href=";" title="Search 바로가기">
                 <i class="icon_item">
                  Search
                 </i>
                </a>
               </li>
               <li class="link5 sitemap">
                <a href="/sitemap/" title="SITEMAP 바로가기">
                 SITEMAP
                </a>
               </li>
               <li class="link5">
                <a class="login_pop" href="/login/" id="web_login" title="POVIS 바로가기">
                 POVIS
                </a>
               </li>
              </ul>
             </div>
             <div class="lang_box h_top_unit">
              <ul>
               <li class="kor active">
                <a href="r">
                 한국어
                </a>
               </li>
               <li class="eng">
                [ahref]
                
               </li>
              </ul>
             </div>
            </div>
           </div>
          </div>
          <div class="h_bottom_cont">
           [pkeyx][pkeyx][area1][mkey1][pkeyx][ahref][area1][keywordx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][ahref][pkeyx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
          </div>
          <div class="target_menubox">
           <button class="menu_icon" id="taget_m" type="button">
            타켓메뉴 열기
           </button>
           <div class="target_itembox">
            <div class="box_container">
             <dl>
              <dt>
               <span class="title">
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx]
               </span>
               <span class="text">
                자신에게 맞는 서비스를 선택해주세요.
               </span>
              </dt>
              <dd>
               <ul>
                <li>
                 <div class="select_box">
                  <div class="textbox">
                   <a class="text" href=";" title="학생 맞춤 서비스 목록보기">
                    학생
                   </a>
                  </div>
                  <ul class="select_ul">
                   <li>
                    [ahref]
                    
                   </li>
                   <li>
                    <a href="r" target="_blank" title="새창으로 열기">
                     국제교류
                    </a>
                   </li>
                   <li>
                    [ahref]
                    
                   </li>
                   <li>
                    [linkx]
                    
                   </li>
                   <li>
                    [ahref]
                    
                   </li>
                   <li>
                    [linkx]
                    
                   </li>
                   <li>
                    <a href="/academics/academic-info/certificate-request/">
                     증명서발급
                    </a>
                   </li>
                   <li>
                    <a href="/academics/academic-info/academic-calendar/">
                     학사일정
                    </a>
                   </li>
                   <li>
                    [linkx]
                    
                   </li>
                  </ul>
                 </div>
                </li>
                <li>
                 [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                </li>
                <li>
                 <div class="select_box">
                  <div class="textbox">
                   [linkx]
                   
                  </div>
                  <ul class="select_ul">
                   <li>
                    <a href="/about-postech/introduction-to-postech/founding-tenets/">
                     대학소개
                    </a>
                   </li>
                   <li>
                    [ahref]
                    
                   </li>
                   <li>
                    [ahref]
                    
                   </li>
                   <li>
                    [linkx]
                    
                   </li>
                  </ul>
                 </div>
                </li>
                <li>
                 <div class="select_box">
                  <div class="textbox">
                   <a class="text" href=";" title="동문 맞춤 서비스 목록보기">
                    동문
                   </a>
                  </div>
                  <ul class="select_ul">
                   <li>
                    <a href="/" target="_blank" title="새창으로 열기">
                     총동창회
                    </a>
                   </li>
                   <li>
                    [linkx]
                    
                   </li>
                   <li>
                    <li>[ahref]</li><li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li>[area1][keywordx]
                   </li>
                  </ul>
                 </div>
                </li>
               </ul>
              </dd>
             </dl>
             [linkx]
             
            </div>
           </div>
          </div>
          <div class="quick_linkbox quick_off">
           [linkx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][linkx][ahref][linkx][ahref][area1][mkey1][linkx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][mkey1][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx]
          </div>
          <div class="search_ro">
           <div class="search_ro_container">
            [pkeyx][area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]<li>[area1][keywordx]</li>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="title_top_box welfare-facilities">
       <div class="top_box_container">
        <div class="thumbox">
         <div class="thum">
          <span class="back_bg">
          </span>
         </div>
        </div>
        <div class="box_container">
         <div class="contbox">
          <div class="parent_title">
           복지시설
          </div>
          <h1 class="entry-title">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h1>
         </div>
        </div>
       </div>
      </div>
      <div class="site-content" id="content">
       <div class="content-area" id="primary">
        <div class="site-main" id="main" role="main">
         <div class="site-contbox">
          [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][linkx][area1][mkey1][linkx][area1][keywordx][area1][keywordx][ahref][ahref]
         </div>
         <div class="sidebarbox common_sidebar">
          <div class="sidebar_textbox">
           <span class="text">
            대학원 아파트
           </span>
           <a class="menu_btn" href=";">
            menu
           </a>
           [ahref]
           
          </div>
          <div class="sidebarbox_container">
           <ul class="side_nav_list" id="menu-campus-life">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-335" id="menu-item-335">
             <a href="/campus-life/postechian-life/">
              포스테키안 생활
             </a>
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-827" id="menu-item-827">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-337" id="menu-item-337">
               <a href="/campus-life/postechian-life/research-program/">
                연구프로그램
               </a>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-338" id="menu-item-338">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-339" id="menu-item-339">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-340" id="menu-item-340">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-341" id="menu-item-341">
               <a href="/campus-life/postechian-life/student-medical-coop-plan/">
                학생의료공제회
               </a>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9582" id="menu-item-9582">
               <a href="/campus-life/postechian-life/counseling-center/">
                상담센터
               </a>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-343" id="menu-item-343">
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-12903" id="menu-item-12903">
             <a href="/campus-life/library/">
              도서관
             </a>
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current_page_ancestor menu-item-has-children menu-item-345" id="menu-item-345">
             [ahref]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-9883" id="menu-item-9883">
               [ahref]
               
               <ul class="sub-menu">
                <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-9879 current_page_item menu-item-13313" id="menu-item-13313">
                 <li>[pkeyx]</li><li>[linkx]</li>[pkeyx]<li>[area1][mkey1]</li>
                </li>
                <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-13314" id="menu-item-13314">
                 <a href="/campus-life/welfare-facilities/housing/etc/">
                  연구원 숙소(포스빌)
                 </a>
                </li>
               </ul>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-347" id="menu-item-347">
               <a href="/campus-life/welfare-facilities/health/">
                체육시설
               </a>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-348" id="menu-item-348">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-349" id="menu-item-349">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-350" id="menu-item-350">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-23118" id="menu-item-23118">
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-9577" id="menu-item-9577">
             [linkx]
             
             <ul class="sub-menu">
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-27131" id="menu-item-27131">
               [linkx]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11433" id="menu-item-11433">
               [ahref]
               
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11434" id="menu-item-11434">
               <a href="/campus-life/student-activities/club-activities/">
                동아리활동
               </a>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11435" id="menu-item-11435">
               <a href="/campus-life/student-activities/students-group/">
                주요학생단체
               </a>
              </li>
              <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-12847" id="menu-item-12847">
               <a href="/campus-life/student-activities/postech-kiaist-fastivals/">
                포카전
               </a>
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
       <div class="fwc_box">
        <div class="fc_box_container">
         [linkx]<li>[area1][keywordx]</li>[linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
        </div>
       </div>
      </div>
      <footer class="site-footer" id="colophon" role="contentinfo">
       [ahref]
       
       <div class="footer_wrap">
        <div class="footer_contentbox">
         <div class="box_container">
          <div class="f_top_cont">
           <div class="f_top_links">
            <ul class="f_links_nav" id="menu-footer">
             <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-10958" id="menu-item-10958">
              [linkx]
              
             </li>
             <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-29750" id="menu-item-29750">
              [linkx]
              
              <ul class="sub-menu">
               <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29749" id="menu-item-29749">
                [linkx]
                
               </li>
              </ul>
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
       </div>
      </footer>
     </div>
    </div>
   </div>
  </div>
  <div class="pop_layer_box" style="display:none;">
   <div class="pop_layer_bg" style="display:none;">
   </div>
   <div class="pop_layer_cont_box">
    <button class="pop_layer_close" data-focus="pop_layer_close" data-foucs-prev="" title="Close (Esc)" type="button">
     ×<li>[area1][keywordx]</li>[ahref]<li>[ahref]</li>[pkeyx]
    </button>
    <iframe allowfullscreen="" allowtransparency="true" class="mfp-iframe" frameborder="0" id="povis_iframe" src="http://www.postech.ac.kr/login/" title="POVIS 로그인">
    </iframe>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0007
  </b>
 </body>
</html>|<---