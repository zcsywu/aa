--->|<!DOCTYPE html>
<html class="noJS b_bot b_bot supports_fontface supports_hyphens " lang="ko" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# booking_com: http://ogp.me/ns/fb/booking_com#" xmlns:og="http://opengraphprotocol.org/schema/">
 <head profile="http://a9.com/-/spec/opensearch/1.1/">
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="origin" name="referrer"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type">
  </meta>
 </head>
 <body class="bookings2 b2 hotel ko lang_is_ltr lang_is_cjk header_reshuffle no_bg_img nobg user_center app_user_center sb_gradient_border b-sprite-3 lt bigblue_std_sm bigblue_std_lg iconfont_is_loading loc-searchbox-lighter hp_wishlists_bo_2 a11y-facilities-contrast iq-x-bar iq-x-bar-new " data-preload-assets='["https://secure.booking.com/favicon.ico","https://q.bstatic.com/favicon.ico","https://r.bstatic.com/favicon.ico","https://www.google-analytics.com/analytics.js"]' data-preload-assets-onload="false" id="b2hotelPage">
  <a class="a11y-skip-to-content" href="t">
   메인 콘텐츠로 바로 가기
  </a>
  <div class="" id="top" role="banner">
   <div class="header-wrapper">
    <a class="js-header__logo " href="/index.ko.html" style="text-decoration: none;">
    </a>
    <div class="ticker_space smaller_booking_nr_login user_center_bar" id="user_form">
     <ul class="user_center_nav">
      <li class=" user_center_option uc_currency js-uc-currency " data-id="currency_selector" data-priority="1">
       <a aria-label="통화를 선택해주세요. 현재 사용 중인 통화는 대한민국 원입니다" class="popover_trigger currency_va_middle" data-et-click="cCcCcCWZcbfdNJdDBKJGOGHRXMJGBAPdKePWOGAVfFfKeWXe:1" data-google-track="Click/Action: hotel/header_currency_link_box" data-title="통화 선택" href=";" role="button">
        ₩
       </a>
       <div aria-label="통화 선택" class="user_center_popover narrow center_arrow uc_currency" role="dialog" tabindex="0">
        <div class="uc_top_arrow">
        </div>
        <div class="popover_content" id="current_currency">
         <div style="padding:20px;">
          <p>
           로딩 중
          </p>
         </div>
        </div>
        <div class="uc_bottom_arrow">
        </div>
       </div>
      </li>
      <li class="user_center_option uc_language js-uc-language " data-id="language_selector" data-priority="1">
       [ahref]
       
       <div aria-describedby="language-popup-description" aria-label="사용 언어 선택" class="user_center_popover narrow center_arrow" role="dialog" tabindex="0">
        <div class="uc_top_arrow">
        </div>
        <div class="js-uc-language-content popover_content" id="current_language">
         <p class="popover_explain" id="language-popup-description">
          원하는 언어를 선택하십시오. 한국어 서비스 외에도 42개의 언어가 준비되어 있습니다.
         </p>
         <div class="select_foldout small_flags_foldout" id="current_language_foldout">
          <div class="select_foldout_wrap">
           <h4>
            대한민국 내 주로 사용되는 언어
           </h4>
           <div role="listbox">
            <ul class="language_flags" role="none">
             <li class="lang_ko selected_country" data-lang="ko">
              <a aria-selected="true" class="no_target_blank" href="/hotel/fr/ritz-paris-paris.ko.html" hreflang="ko" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-kr">
                </span>
               </span>
               <span class="seldescription">
                한국어
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_en-gb" data-lang="en-gb">
              [linkx]
              
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_en-us" data-lang="en-us">
              [ahref]
              
             </li>
             <li class="lang_zh-cn" data-lang="zh-cn">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.zh-cn.html" hreflang="zh-cn" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-cn">
                </span>
               </span>
               <span class="seldescription">
                简体中文
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_ja" data-lang="ja">
              [linkx]
              
             </li>
             <li class="lang_ru" data-lang="ru">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.ru.html" hreflang="ru" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-ru">
                </span>
               </span>
               <span class="seldescription">
                Русский
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
            </ul>
           </div>
          </div>
          <div class="select_foldout_wrap">
           <h4>
            모든 언어
           </h4>
           <div role="listbox">
            <ul class="language_flags" role="none">
             <li class="lang_en-gb" data-lang="en-gb">
              [linkx]
              
             </li>
             <li class="lang_en-us" data-lang="en-us">
              [linkx]
              
             </li>
             <li class="lang_de" data-lang="de">
              [linkx]
              
             </li>
             <li class="lang_nl" data-lang="nl">
              [ahref]
              
             </li>
             <li class="lang_fr" data-lang="fr">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.fr.html" hreflang="fr" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-fr">
                </span>
               </span>
               <span class="seldescription">
                Français
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_es" data-lang="es">
              [linkx]
              
             </li>
             <li class="lang_es-ar" data-lang="es-ar">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.es-ar.html" hreflang="es-ar" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-ar">
                </span>
               </span>
               <span class="seldescription">
                Español (AR)
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ca" data-lang="ca">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.ca.html" hreflang="ca" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-catalonia">
                </span>
               </span>
               <span class="seldescription">
                Català
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_it" data-lang="it">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.it.html" hreflang="it" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-it">
                </span>
               </span>
               <span class="seldescription">
                Italiano
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_pt-pt" data-lang="pt-pt">
              [linkx]
              
             </li>
             <li class="lang_pt-br" data-lang="pt-br">
              [linkx]
              
             </li>
             <li class="lang_no" data-lang="no">
              [linkx]
              
             </li>
             <li class="lang_fi" data-lang="fi">
              [linkx]
              
             </li>
             <li class="lang_sv" data-lang="sv">
              [linkx]
              
             </li>
             <li class="lang_da" data-lang="da">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.da.html" hreflang="da" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-dk">
                </span>
               </span>
               <span class="seldescription">
                Dansk
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_cs" data-lang="cs">
              [ahref]
              
             </li>
             <li class="lang_hu" data-lang="hu">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.hu.html" hreflang="hu" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-hu">
                </span>
               </span>
               <span class="seldescription">
                Magyar
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ro" data-lang="ro">
              [ahref]
              
             </li>
             <li class="lang_ja" data-lang="ja">
              [ahref]
              
             </li>
             <li class="lang_zh-cn" data-lang="zh-cn">
              [linkx]
              
             </li>
             <li class="lang_zh-tw" data-lang="zh-tw">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.zh-tw.html" hreflang="zh-tw" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-z4">
                </span>
               </span>
               <span class="seldescription">
                繁體中文
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_pl" data-lang="pl">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.pl.html" hreflang="pl" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-pl">
                </span>
               </span>
               <span class="seldescription">
                Polski
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_el" data-lang="el">
              [linkx]
              
             </li>
             <li class="lang_ru" data-lang="ru">
              [ahref]
              
             </li>
             <li class="lang_tr" data-lang="tr">
              [linkx]
              
             </li>
             <li class="lang_bg" data-lang="bg">
              [linkx]
              
             </li>
             <li class="lang_ar" data-lang="ar">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.ar.html" hreflang="ar" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-sa">
                </span>
               </span>
               <span class="seldescription">
                العربية
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ko selected_country" data-lang="ko">
              [ahref]
              
             </li>
             <li class="lang_he" data-lang="he">
              [linkx]
               [pkeyx][linkx][pkeyx][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx][keywordx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][keywordx][mkey1][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][ahref][linkx][keywordx][linkx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][keywordx][mkey1]
              
             </li>
             <li class="lang_lv" data-lang="lv">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.lv.html" hreflang="lv" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-lv">
                </span>
               </span>
               <span class="seldescription">
                Latviski
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_uk" data-lang="uk">
              [ahref]
              
             </li>
             <li class="lang_id" data-lang="id">
              [ahref]
              
             </li>
             <li class="lang_ms" data-lang="ms">
              [linkx]
              
             </li>
             <li class="lang_th" data-lang="th">
              [ahref]
              
             </li>
             <li class="lang_et" data-lang="et">
              [linkx]
              
             </li>
             <li class="lang_hr" data-lang="hr">
              [ahref]
              
             </li>
             <li class="lang_lt" data-lang="lt">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.lt.html" hreflang="lt" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-lt">
                </span>
               </span>
               <span class="seldescription">
                Lietuvių
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_sk" data-lang="sk">
              [linkx]
              
             </li>
             <li class="lang_sr" data-lang="sr">
              [linkx]
              
             </li>
             <li class="lang_sl" data-lang="sl">
              [linkx]
              
             </li>
             <li class="lang_vi" data-lang="vi">
              [linkx]
              
             </li>
             <li class="lang_tl" data-lang="tl">
              <a class="no_target_blank" href="/hotel/fr/ritz-paris-paris.tl.html" hreflang="tl" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-ph">
                </span>
               </span>
               <span class="seldescription">
                Filipino
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_is" data-lang="is">
              [linkx]
              
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
        <div class="uc_bottom_arrow">
        </div>
       </div>
      </li>
      <li class="user_center_option uc_account" data-priority="3" id="add_property_topbar">
       <a class="signin_cta profile_menu_trigger add-property__button js-disable-popover remove_hover_sign_in_btn remove_padding_register_btn_right" data-et-click="customGoal:HCZVfDaQPYcPJKPFYbOMFcZEANaT:1" data-ga-track="click|Top nav|Click - List your Property|hotel" href="/?lang=ko&amp;utm_source=topbar&amp;utm_medium=frontend&amp;amp;label=gen000nr-10CAsoTUIQcml0ei1wYXJpcy1wYXJpc0gXWARofYgBAZgBM7gBBcgBHtgBA-gBAfgBAYgCAagCAbgC4rLz6AXAAgE&amp;amp;aid=304142" target="_blank">
        <div class="sign_in_wrapper sign_in_wrapper-add-property">
         <span>
          내 숙소 등록
         </span>
        </div>
       </a>
      </li>
      <li class=" user_center_option uc_account uc_account-center-item " data-et-click="
" data-priority="2" id="current_account_create">
       <a class=" popover_trigger signin_cta profile_menu_trigger js-disable-popover remove_hover_sign_in_btn remove_padding_register_btn_right js-header-login-link header_link_register " data-google-track="Click/Action: hotel/header_logged_out_link_box" data-title="회원 전용 시크릿 특가를 누려보세요" href="/auth/oauth2?aid=304142&amp;response_type=code&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;prompt=register&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;lang=ko&amp;dt=1562171747&amp;state=UtwBJaY6DZQ5M6OzEErWqF44mP30lzBhbQNDjLrWtj2kCmUlWFimoCmtTfUqOK1RakiDPL2Q2RRJ-ZQv0Bhz3hj0bUXrFN_yhrYWffQDE9F0gjwDWGdS5yRbtEjMDZtKjwXh1EWz_CljpfGA7A8XXlwnjlIsKmH4JKdjt3sEgXlIb2NiCDscL_6VVAKryKelI0Sya1mdufhgPoGYgPaOHefeZ9-94oGUuDUSBM8AC2uw_8VLt6r8ywl51Sw_OoD_EM2G7rKK2CX46Ul2ankrouguyOXXHx5DIoAIGOVFhw">
        <div class="sign_in_wrapper">
         <span>
          가입하기
          <span class="invisible_spoken">
           - 새로운 대화 상자가 열립니다
          </span>
         </span>
        </div>
       </a>
      </li>
      <li class=" account_register_option user_center_option uc_account " data-component="dropdown-onload-shower" data-component-content="header_signin_prompt" data-component-delay="2000" data-component-ignore-clicks-class="#cookie_warning .close_warning" data-component-position="bottom right" data-component-show-once-key="header_signin_prompt" data-et-click="
" data-priority="2" id="current_account">
       [linkx]
       
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div class="" id="cross-product-bar">
   <div class="cross-product-bar__wrapper ">
    <span class="xpb__link selected" data-et-click="goal:xpb_accommodation goal:xpb_total_clicks" data-ga-track="click|Product Expansion|accommodation|booking (index)">
     <span>
      숙소 예약
     </span>
    </span>
    [ahref]
    
    [ahref]
    
    <a class="xpb__link" data-decider-header="rideways" data-et-click="goal:xpb_rideways goal:xpb_total_clicks fEGGBKSOPXAPEDEZRESDOYC:1 customGoal:cQDJGZaTaTaBYWEIFaKBGO:4" data-ga-track="click|Product Expansion|airport_taxis|rideways (index)" href="/taxi.ko.html" rel="nofollow" target="_blank">
     <span>
      공항 택시
     </span>
    </a>
   </div>
  </div>
  <div class=" bodyconstraint_increased-min-width " id="bodyconstraint">
   <div id="bodyconstraint-inner">
    <div class="" id="subheader-wrap" style="">
     <nav aria-label="현재 위치" class="bui-breadcrumb" data-et-click="IZALOLOLOCDOHJPBJXBHAPFPMdFO:1 customGoal:IZALOLOLOCDOHJPBJXBHAPFPMdFO:1" id="breadcrumb" role="navigation">
      <ol class=" bui-breadcrumb__list bui-inline-container hp-breadcrump__wrapper " typeof="BreadcrumbList" vocab="http://schema.org/">
       <li class="breadcrumb--link-on-top" data-google-track="Click/Breadcrumb/hotel -> home/1" property="itemListElement" typeof="ListItem">
        <div class="bui-breadcrumb__text">
         [ahref]
         
         <meta content="1" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
        </div>
       </li>
       <li class="breadcrumb--link-on-top" data-google-track="Click/Breadcrumb/hotel -> country/2" property="itemListElement" typeof="ListItem">
        <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
         <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
         </path>
        </svg>
        <div class="bui-breadcrumb__text">
         [ahref]
         
         <meta content="2" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
        </div>
       </li>
       <li class="breadcrumb--link-on-top" data-google-track="Click/Breadcrumb/hotel -> province/3" property="itemListElement" typeof="ListItem">
        <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
         <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
         </path>
        </svg>
        <div class="bui-breadcrumb__text">
         <a class=" bui-link bui-link--primary bui_breadcrumb__link " href="/region/fr/ile-de-france.ko.html" property="item" title="일드 프랑스 호텔 " typeof="WebPage">
          일드 프랑스
         </a>
         <meta content="3" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
        </div>
       </li>
       <li class="breadcrumb--link-on-top" data-google-track="Click/Breadcrumb/hotel -> city/4" property="itemListElement" typeof="ListItem">
        <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
         <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
         </path>
        </svg>
        <div class="bui-breadcrumb__text">
         <a class=" bui-link bui-link--primary bui_breadcrumb__link " href="/tourism/city/fr/paris.ko.html" property="item" title="파리 여행 호텔 " typeof="WebPage">
          파리 여행
         </a>
         <meta content="4" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
        </div>
       </li>
       <li class="breadcrumb--link-on-top" data-google-track="Click/Breadcrumb/hotel -> city/5" property="itemListElement" typeof="ListItem">
        <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
         <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
         </path>
        </svg>
        <div class="bui-breadcrumb__text">
         [linkx]
         
         <meta content="5" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
        </div>
       </li>
       <li class="breadcrumb--link-on-top" data-google-track="Click/Breadcrumb/hotel -> district/6" property="itemListElement" typeof="ListItem">
        <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
         <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          <li>[keywordx]</li><li>[keywordx]</li><li>[pkeyx]</li>[pkeyx][mkey1]
         </path>
        </svg>
        <div class="bui-breadcrumb__text">
         <a class=" bui-link bui-link--primary bui_breadcrumb__link " href="/district/fr/paris/louvre-chatelet.ko.html" property="item" title="1구 - 루브르 호텔 " typeof="WebPage">
          1구 - 루브르
         </a>
         <meta content="6" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
        </div>
       </li>
       <li class=" bui-breadcrumb__item hp-breadcrumb__item hp-breadcrumb__current breadcrumb--line-break" property="itemListElement" typeof="ListItem">
        <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
         <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
         </path>
        </svg>
        <div class="bui-breadcrumb__text">
         <h1 class="b-crumb__hp-current">
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h1>
         <meta content="7" property="position"/>
         <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="name"/>
         <meta href="/hotel/fr/ritz-paris-paris.ko.html" property="item" typeof="WebPage"/>
        </div>
       </li>
      </ol>
     </nav>
    </div>
    <div data-block-id="header_survey">
    </div>
    <div id="hotelTmpl">
     <div id="basiclayout">
      <div class="rlt-right" id="right" role="main">
       <div class="hp_nav_bar_wrapper_placeholder">
       </div>
       <div class="hp_nav_bar_wrapper hp-nav-bottom-border">
        <ul class="hp_nav_bar boldify_hp_nav">
         <li class="hp_nav_bar_item">
          [ahref]
          
         </li>
         <li class="hp_nav_bar_item">
          [linkx]
          
         </li>
         <li class="hp_nav_bar_item">
          <a class="hp_nav_policies_link" data-ref="hp_policies_box" data-scroll="a[name=policies]" data-tab-link="" href="s" rel="main">
           하우스 룰
          </a>
         </li>
         <li class="hp_nav_bar_item">
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="wrap-hotelpage-top" id="wrap-hotelpage-top">
        <form action="/book.html" class="wrap-hotelpage-top__book top-book-form form_wl_fix" id="top-book" method="post">
         <button class="b-button b-button_primary book_now_button_handler bui-u-pull-end" data-et-click="customGoal:AfPcCWbOTKMbIUONSFTUQODHXdRT:3" data-title="
요금 및 잔여 객실 보기
" data-url="" id="hcta" type="submit">
          <span class="b-button__text">
           지금 예약
          </span>
          <span class="b-button__from-text book_now_rt_summary g-hidden">
          </span>
         </button>
         <button aria-label="
리스트에 숙소 추가하기
" aria-live="assertive" class=" js-wl-dropdown-handle bui-button bui-button--secondary lists-hotel-dropdown-square-heart jq_tooltip " data-et-click="customGoal:AfPcCWbOTKMbIUONSFTUQODHXdRT:1" data-ga-label="small" data-hotel-id="1568729" data-loadingtext="로딩 중" data-placement="hp_tittle" data-position="bottom right" data-sr-comparison-mode="true" data-text-create="새 리스트 만들기" data-text-header="저장해두고<br>다시 예약하기" data-title="저장" role="button" type="button">
          <span class="bui-button__text">
           <svg class="bk-icon -iconset-heart saved_state" fill="#FF6C6C" height="16" viewbox="0 0 128 128" width="16">
            <path d="M64 112a3.6 3.6 0 0 1-2-.5 138.8 138.8 0 0 1-44.2-38c-10-14.4-10.6-26-9.4-33.2a29 29 0 0 1 22.9-23.7c11.9-2.4 24 2.5 32.7 13a33.7 33.7 0 0 1 32.7-13 29 29 0 0 1 22.8 23.7c1.3 7.2.6 18.8-9.3 33.3-9.1 13.1-24 25.9-44.2 37.9a3.6 3.6 0 0 1-2 .5z">
            </path>
           </svg>
           <svg class="bk-icon -iconset-heart_outline unsaved_state" fill="#0077CC" height="16" viewbox="0 0 128 128" width="16">
            <path d="M119.5 40.3a29 29 0 0 0-22.8-23.7 33.8 33.8 0 0 0-32.7 13 33.7 33.7 0 0 0-32.7-13A29 29 0 0 0 8.5 40.3c-1.3 7.2-.6 18.8 9.4 33.3A140 140 0 0 0 62 111.5a3.7 3.7 0 0 0 4 0c20.2-12 35-24.8 44.1-38 10-14.4 10.7-26 9.5-33.2zm-55.5 63c-33-20.1-50.8-43-47.7-61.6A20.7 20.7 0 0 1 33 24.3a22.3 22.3 0 0 1 4.5-.4c8.8 0 17.3 5.2 23.2 14.6a4 4 0 0 0 3.4 1.8 4 4 0 0 0 3.4-1.8c6-9.4 14.4-14.6 23.2-14.6a22.3 22.3 0 0 1 4.5.5 20.7 20.7 0 0 1 16.6 17.2c3 18.6-14.8 41.6-47.8 61.7z">
            </path>
           </svg>
          </span>
         </button>
         <span aria-label="
내 리스트
" aria-owns="hotel-wishlists">
         </span>
         <svg class="bk-icon -sprite-share_center_facebook g-hidden" height="36" viewbox="0 0 32 32" width="36">
          <path d="M31 28c0 1.7-1.3 3-3 3H4c-1.7 0-3-1.3-3-3V4c0-1.7 1.3-3 3-3h24c1.7 0 3 1.3 3 3v24z" fill="#3B5998">
          </path>
          <path d="M20.4 14V9.7c0-1 .9-.8.9-.8h2.5V5h-4c-4.2 0-4.4 3.7-4.4 3.7V14H13v4.1h2.4V29h4.9V18.1h3.1L24 14h-3.6z" fill="#003580">
          </path>
          <path d="M20.4 13V8.7c0-1 .9-.8.9-.8h2.5V4h-4c-4.2 0-4.4 3.7-4.4 3.7V13H13v4.1h2.4V28h4.9V17.1h3.1L24 13h-3.6z" fill="#FFF">
          </path>
         </svg>
         <svg class="bk-icon -sprite-share_center_twitter g-hidden" height="36" viewbox="0 0 32 32" width="36">
          <path d="M31 28c0 1.7-1.3 3-3 3H4c-1.7 0-3-1.3-3-3V4c0-1.7 1.3-3 3-3h24c1.7 0 3 1.3 3 3v24z" fill="#00ACED">
          </path>
          <path d="M26.5 9.5c-.8.3-1.6.6-2.4.7.9-.5 1.6-1.4 1.9-2.4-.8.5-1.7.8-2.7 1-.9-.8-2-1.3-3.3-1.3-2.3 0-4.3 1.9-4.3 4.3 0 .3 0 .7.1 1-3.6-.2-6.8-1.9-8.9-4.5-.4.6-.6 1.4-.6 2.1 0 1.5.7 2.8 1.9 3.6-.7 0-1.4-.2-1.9-.5v.1c0 2.1 1.5 3.8 3.4 4.2-.3.2-.6.2-1.1.2-.3 0-.5 0-.8-.1.5 1.7 2.1 2.9 4.1 3-1.5 1.1-3.3 1.8-5.4 1.8-.3 0-.7 0-1-.1 1.9 1.2 4.2 1.9 6.6 1.9 7.9 0 12.3-6.5 12.3-12.3v-.6c.8-.5 1.5-1.2 2.1-2.1" fill="#FFF">
          </path>
         </svg>
         <svg class="bk-icon -sprite-share_center_gplus g-hidden" height="36" viewbox="0 0 32 32" width="36">
          <path d="M31 28.3c0 1.5-1.2 2.7-2.7 2.7H3.7C2.2 31 1 29.8 1 28.3V3.7C1 2.2 2.2 1 3.7 1h24.5C29.8 1 31 2.2 31 3.7v24.6z" fill="#D34836">
          </path>
          <g fill="#FFF">
           <path d="M25.4 15v-3.6H29V8.6h-3.6V5h-2.6v3.6H19v2.8h3.8V15z">
           </path>
           <path d="M15.8 25.4c-.2-.5-.5-1-.7-1.4-.3-.4-.6-.8-1.1-1.2l-.2-.1c-.4-.4-.7-.6-1.2-1l-1.4-1.1c-.2-.2-.5-.4-.6-.6-.2-.2-.3-.4-.3-.9 0-.4.1-.7.3-.9.2-.3.5-.5.6-.7.5-.4.9-.7 1.3-1.1.4-.4.7-.7 1.1-1.2.4-.4.5-.9.8-1.5.2-.5.3-1.3.3-2s-.1-1.4-.4-2c-.2-.5-.5-1.1-.7-1.5-.1-.2-.4-.5-.6-.8l-.5-.6h1.8L17.6 5H8.5c-1 0-2.2.1-3.5.4-1 .2-2.1.6-3 1.3v11.2c.2.1.5.3.7.4.8.4 1.8.5 2.9.5h.8l-.2.4c-.1.2-.1.4-.1.7 0 .6.2 1.2.4 1.6l.5.8-1 .1c-.5.1-1.3.2-1.9.3-.7.1-1.5.3-2.1.6v2.3l.1-.1c.4-.3.7-.5 1.1-.7l.8-.4c.5-.1.8-.3 1.3-.4.5-.1.8-.2 1.3-.2.4 0 .7-.1 1-.1h1.3l.1.1c.6.4 1.3.9 1.8 1.3s1 .8 1.3 1.2c.4.4.5.7.7 1.1.2.4.3.8.3 1.3s-.1.9-.3 1.3h2.6c.5-.9.7-1.8.7-2.8 0-.7-.1-1.3-.3-1.8zm-7-8.4c-.5.2-.9.3-1.5.3-.7 0-1.5-.3-2-.6-.5-.4-1.1-1-1.5-1.7-.4-.6-.7-1.4-.9-2.2-.2-.8-.3-1.4-.3-2.1 0-.4.1-1 .2-1.4.2-.5.5-1 .7-1.3.3-.4.6-.7 1.2-.9.5-.2.9-.4 1.5-.4.7 0 1.5.2 2 .6.5.4 1 1.1 1.5 1.8.4.7.7 1.4.9 2.2.2.8.3 1.5.3 2.2 0 .4-.1.8-.2 1.3s-.4.9-.7 1.3c-.4.4-.7.7-1.2.9z">
           </path>
          </g>
         </svg>
         <div aria-role="button" class="share_center share_center_new_short_urls share_center_button share_center_svg share_center_square_cta" data-component="sharing/share-center/share-center" data-et-click="customGoal:AfPcCWbOTKMbIUONSFTUQODHXdRT:2" data-facebook-url="http://www.facebook.com/share.php?u=DATA" data-google-url="https://plus.google.com/share?url=DATA" data-hotel-image-url="https://t-ec.bstatic.com/images/hotel/max300/122/122502192.jpg" data-hotel-name="리츠 파리" data-raf-marketing-validation="1" data-twitter-url="http://twitter.com/home/?status=DATA" data-user-id="" tabindex="0">
          <i class="bicon-acshare jq_tooltip share_center_button_icon" title="공유하기">
          </i>
         </div>
         <div class="topbook_pricematch">
          <div class="bpg_hp_no_availability hp-availability-block-usp" id="rate_guarantee">
           <i class=" bpg_logo ">
           </i>
           [linkx]
           
          </div>
         </div>
        </form>
        <div class="hp__hotel-title">
         <h2 class="fn" id="hp_hotel_name">
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <span class="hp__hotel_ratings">
          <span class="hp__hotel_ratings__stars nowrap">
           <i class=" bk-icon-wrapper bk-icon-stars star_track " title="5성급 호텔">
            <svg aria-hidden="true" class="bk-icon -sprite-ratings_stars_5" focusable="false" height="10" viewbox="0 0 65 12" width="54">
             <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3zM52 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H49.6c.1-.1.1-.2.1-.3l-1.2-4.3L52 4.9v-.3zM65 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H62.6c.1-.1.1-.2.1-.3l-1.2-4.3L65 4.9v-.3z" fill="#FEBA02">
             </path>
            </svg>
            <span class="invisible_spoken">
             5성급 호텔
            </span>
           </i>
          </span>
          <span>
           <span class="">
            <span class="invisible_spoken">
             공항 셔틀. 별도 요금을 지불하여 공항 셔틀을 이용하실 수 있습니다. 필요시 다음 단계에서 신청해주세요.
            </span>
            <span aria-hidden="true" class="facility-badge__wrapper" data-et-mouseenter="  " data-et-view="  ">
             <span class=" facility-badge__title facility-badge__icon-hp jq_tooltip facility-badge__with-vicon " title="별도 요금을 지불하여 공항 셔틀을 이용하실 수 있습니다. 필요시 다음 단계에서 신청해주세요.">
              <span class="facility-badge__vicon-wrapper">
               <i class="facility-badge__vicon bicon-shuttlesmall">
               </i>
              </span>
              <span class="facility-badge__tooltip-title">
               공항 셔틀
              </span>
             </span>
            </span>
           </span>
          </span>
         </span>
        </div>
        [ahref]
        
        <p class="address address_clean" id="showMap2">
         <span class="show_map_endorsements_tooltip" data-tt_id="show_map_endorsements_tooltip">
          <span class="hp_map_link_endorsements">
           다음 테마에 관심 있는 여행객에게 최적인 이곳: 음식, 쇼핑, 박물관 – 위치 확인
          </span>
         </span>
         [ahref]
         
         <span class=" hp_address_subtitle js-hp_address_subtitle jq_tooltip " data-bbox="2.30141824031931,48.8499325356013,2.35614196338555,48.8858633687475" data-component="tooltip" data-coords="," data-et-click="adUTWALOLOLOOTEVdZMTUBPAcSWBRUDKe:3" data-et-mouseenter="adUTWALOLOLOOTEVdZMTUBPAcSWBRUDKe:2" data-et-view="adUTWALOLOLOOTEVdZMTUBPAcSWBRUDKe:1" data-node_tt_id="location_score_tooltip" data-source="top_link" data-tooltip-animation="false" data-tooltip-text="
<p><strong>탁월한</strong> 위치 — 점수 9.8/10! <small>(<strong>274</strong>개 후기 평점)</small></p>
<p>고객들이 리츠 파리에 <strong>투숙한 후</strong> 평가했습니다.</p>
" data-width="350" rel="14" tabindex="0" title="">
          15 Place Vendôme, 1구 - 루브르, 75001 파리, 프랑스
         </span>
         –
         <span class="show_map_endorsements_tooltip" data-tt_id="show_map_endorsements_tooltip">
          <span class="hp_map_link_endorsements">
           다음 테마에 관심 있는 여행객에게 최적인 이곳: 음식, 쇼핑, 박물관 – 위치 확인
          </span>
         </span>
         [linkx]
         
         –
         <span class="pub_trans metro-no-wrap jq_tooltip " title="Concorde에서 350 m 이내에 있습니다">
          지하철 연결
         </span>
        </p>
        <div class="location_score_tooltip" id="location_score_tooltip">
         <p>
          <strong>
           탁월한
          </strong>
          위치 — 점수 9.8/10!
          <small>
           (
           <strong>
            274
           </strong>
           개 후기 평점)
          </small>
         </p>
         <p>
          고객들이 리츠 파리에
          <strong>
           투숙한 후
          </strong>
          평가했습니다.
         </p>
        </div>
       </div>
       <div style="clear: both;">
       </div>
       <div class="hotelchars blockdisplay fbblock pretty_headers hp-consistent-vertical-rhythm" data-tab="main" id="blockdisplay1">
        <div class="nha_large_photo_main_content nha_large_photo_extra_height hp_gallery_buttons_redesign hp_gallery_buttons_redesign_var2" id="hotel_main_content">
         <div class="gallery-side-reviews-wrapper">
          <div class="bh-photo-modal bh-photo-modal--side-panel" data-component="bh-photo-modal" data-is-rtl="">
           <div class="bh-photo-modal-close bh-no-user-select">
            닫기
            <span class="bh-photo-modal-close-cross">
             ×
            </span>
           </div>
           <div class="bh-photo-modal-image-container">
           </div>
           <div class="bh-photo-modal-name-cta">
            <span class="bh-photo-modal-name">
             리츠 파리
            </span>
            <span>
             <button class="b-button b-button_primary bh-photo-modal-cta-reserve bh-photo-modal-cta-reserve--large ">
              <span class="b-button__text">
               지금 예약
              </span>
             </button>
            </span>
           </div>
           <div class="bh-photo-modal-prev">
           </div>
           <div class="bh-photo-modal-next">
           </div>
           <div class="bh-photo-modal-caption-thumbs">
            <div class="bh-photo-modal-caption bh-photo-modal-caption--bigger">
             <span class="bh-photo-modal-caption-inner">
             </span>
            </div>
            <div class="bh-photo-modal-thumbs-viewport">
             <div class="bh-photo-modal-thumbs-film">
              <div class="bh-photo-modal-thumbs-container bh-no-user-select">
              </div>
             </div>
            </div>
           </div>
           <div class="g-hidden bh-photo-modal-cta-slide-wrapper">
            <div class="bh-photo-modal-cta-slide">
             <div class="hp-gallery__slide gallery__last-item js-gallery__last-item js-no-reviews" data-gallery-insert-at="last" data-photoid="last_item_cta" style="background-image:url(https://s-ec.bstatic.com/images/hotel/840x460/122/122502192.jpg);">
              [pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][mkey1][ahref][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][pkeyx][pkeyx][mkey1][keywordx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][mkey1][linkx][linkx][mkey1]
             </div>
            </div>
           </div>
           <div class="bh-photo-modal-reviews g-hidden">
           </div>
          </div>
          <div class="hp-gallery-container gallery-corner-nav hp-gallery-higher_res hp-gallery-higher_res_fit_container ">
           <div class="hp-gallery" id="photo_wrapper">
            <div class=" hp-gallery-slides hp-gallery-top " data-gallery="">
             <div data-photoid="122502192">
              <div data-photo-created="2017-12-14 15:17:23">
              </div>
             </div>
             <div data-photoid="195276190">
              <div data-photo-created="2019-04-30 10:49:24">
              </div>
             </div>
             <div data-photoid="195276200">
              <div data-photo-created="2019-04-30 10:49:27">
              </div>
             </div>
             <div data-photoid="195276208">
              <div data-photo-created="2019-04-30 10:49:29">
              </div>
             </div>
             <div data-photoid="195274665">
              <div data-photo-created="2019-04-30 10:39:51">
              </div>
             </div>
             <div data-photoid="195274734">
              <div data-photo-created="2019-04-30 10:40:02">
              </div>
             </div>
             <div data-photoid="195274643">
              <div data-photo-created="2019-04-30 10:39:48">
              </div>
             </div>
             <div data-photoid="73790553">
              <div data-photo-created="2016-07-04 11:44:11">
              </div>
             </div>
             <div data-photoid="195275004">
              <div data-photo-created="2019-04-30 10:41:47">
              </div>
             </div>
             <div data-photoid="195274554">
              <div data-photo-created="2019-04-30 10:39:30">
              </div>
             </div>
             <div data-photoid="195274567">
              <div data-photo-created="2019-04-30 10:39:33">
              </div>
             </div>
             <div data-photoid="73790679">
              <div data-photo-created="2016-07-04 11:44:56">
              </div>
             </div>
             <div data-photoid="195274580">
              <div data-photo-created="2019-04-30 10:39:36">
              </div>
             </div>
             <div data-photoid="195274591">
              <div data-photo-created="2019-04-30 10:39:39">
              </div>
             </div>
             <div data-photoid="110732830">
              <div data-photo-created="2017-08-21 16:16:44">
              </div>
             </div>
             <div data-photoid="195274607">
              <div data-photo-created="2019-04-30 10:39:42">
              </div>
             </div>
             <div data-photoid="195274623">
              <div data-photo-created="2019-04-30 10:39:45">
              </div>
             </div>
             <div data-photoid="195274683">
              <div data-photo-created="2019-04-30 10:39:53">
              </div>
             </div>
             <div data-photoid="195274698">
              <div data-photo-created="2019-04-30 10:39:55">
              </div>
             </div>
             <div data-photoid="73790677">
              <div data-photo-created="2016-07-04 11:44:55">
              </div>
             </div>
             <div data-photoid="195274717">
              <div data-photo-created="2019-04-30 10:39:59">
              </div>
             </div>
             <div data-photoid="105791726">
              <div data-photo-created="2017-07-11 10:29:55">
              </div>
             </div>
             <div data-photoid="122504121">
              <div data-photo-created="2017-12-14 15:23:57">
              </div>
             </div>
             <div data-photoid="73790682">
              <div data-photo-created="2016-07-04 11:44:56">
              </div>
             </div>
             <div data-photoid="73789832">
              <div data-photo-created="2016-07-04 11:38:34">
              </div>
             </div>
             <div data-photoid="66908817">
              <div data-photo-created="2016-04-14 16:23:19">
              </div>
             </div>
             <div data-photoid="66903754">
              <div data-photo-created="2016-04-14 15:48:51">
              </div>
             </div>
             <div data-photoid="73791262">
              <div data-photo-created="2016-07-04 11:50:05">
              </div>
             </div>
             <div data-photoid="73789651">
              <div data-photo-created="2016-07-04 11:37:35">
              </div>
             </div>
             <div data-photoid="73791260">
              <div data-photo-created="2016-07-04 11:50:05">
              </div>
             </div>
             <div data-photoid="73791320">
              <div data-photo-created="2016-07-04 11:50:46">
              </div>
             </div>
             <div data-photoid="66909137">
              <div data-photo-created="2016-04-14 16:25:42">
               <li>[mkey1]</li>[linkx][keywordx]<li>[ahref]</li>
              </div>
             </div>
             <div data-photoid="73791292">
              <div data-photo-created="2016-07-04 11:50:28">
              </div>
             </div>
             <div data-photoid="73790683">
              <div data-photo-created="2016-07-04 11:44:56">
              </div>
             </div>
             <div data-photoid="73791268">
              <div data-photo-created="2016-07-04 11:50:08">
              </div>
             </div>
             <div data-photoid="195274909">
              <div data-photo-created="2019-04-30 10:41:12">
              </div>
             </div>
             <div data-photoid="73791259">
              <div data-photo-created="2016-07-04 11:50:04">
              </div>
             </div>
             <div data-photoid="73791267">
              <div data-photo-created="2016-07-04 11:50:08">
              </div>
             </div>
             <div data-photoid="73791319">
              <div data-photo-created="2016-07-04 11:50:44">
              </div>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-1009-1" data-photoid="1009">
              <p class="info">
               *8.7*
               <strong>
                오페라 가르니에
               </strong>
               : 단 6분 거리! (도보
               <span>
                461 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9475-2" data-photoid="9475">
              <p class="info">
               *8.6*
               <strong>
                마들렌 광장
               </strong>
               : 단 6분 거리! (도보
               <span>
                434 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9502-3" data-photoid="9502">
              <p class="info">
               *8.6*
               <strong>
                방돔 광장
               </strong>
               : 단 1분 거리! (도보
               <span>
                81 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9588-4" data-photoid="9588">
              <p class="info">
               *8.3*
               <strong>
                올림피아
               </strong>
               : 단 4분 거리! (도보
               <span>
                262 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9785-5" data-photoid="9785">
              <p class="info">
               <strong>
                마들렌 지하철역
               </strong>
               : 단 5분 거리! (도보
               <span>
                347 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9819-6" data-photoid="9819">
              <p class="info">
               <strong>
                오페라 지하철역
               </strong>
               : 단 5분 거리! (도보
               <span>
                402 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9864-7" data-photoid="9864">
              <p class="info">
               <strong>
                피라미드 지하철역
               </strong>
               : 단 6분 거리! (도보
               <span>
                433 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-9916-8" data-photoid="9916">
              <p class="info">
               <strong>
                튈르리 지하철역
               </strong>
               : 단 6분 거리! (도보
               <span>
                422 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-266770-9" data-photoid="266770">
              <p class="info">
               <strong>
                프랑스회계감사원
               </strong>
               : 단 3분 거리! (도보
               <span>
                247 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-266861-10" data-photoid="266861">
              <p class="info">
               *8.7*
               <strong>
                마들렌 성당
               </strong>
               : 단 5분 거리! (도보
               <span>
                390 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide hp-gallery__slide--landmark" data-landmarkid="landmark-900077382-11" data-photoid="900077382">
              <p class="info">
               *8.4*
               <strong>
                코미디 코마르탱 극장
               </strong>
               : 단 6분 거리! (도보
               <span>
                419 m
               </span>
               )
              </p>
             </div>
             <div class="hp-gallery__slide gallery__last-item js-gallery__last-item js-no-reviews" data-gallery-insert-at="last" data-photoid="last_item_cta" style="background-image:url(https://s-ec.bstatic.com/images/hotel/840x460/122/122502192.jpg);">
              <div class="gallery__last-item__wrapper facilities-slide--conditions">
               <p class="gallery__last-item__usp">
                최근 후기 평점 9.6점을 획득한 리츠 파리, 저렴한 요금으로 예약하세요!
               </p>
               <p class="gallery__last-item__usp">
                <button class="gallery__last-item__cta js-gallery__last-item__cta" data-scroll="a[name=availability]" rel="main">
                 날짜 입력
                </button>
                해서 확인하기
               </p>
              </div>
             </div>
            </div>
            <div aria-hidden="true" class="hp-gallery-discount-tag">
            </div>
            <div class="hp-gallery-review">
             <div class="tracked reviewFloater nha_large_photo_reviewFloater fixed_review_container fixed_review_container_not_ready reviewFloater--opaque" data-trans-more="더 보기" id="reviewFloater">
              <div class="hotel_large_photp_score featured_review_score js-fly-content-tooltip " data-content-tooltip-element=".review-breakdown-tooltip" data-extra-class-tooltip="fly-content-tooltip fly-content-tooltip--review-breakdown" data-require-tooltip-class="js-fly-content-tooltip" data-review-score="9.6" id="js--hp-gallery-scorecard">
               <a class="big_review_score_detailed js-big_review_score_detailed ind_rev_total hp_review_score js-hotel-review-score" data-et-click="customGoal:YSdPZPUMVBFUPCLSKUC:1" data-tab-link="" href="4" onclick="return false;" rel="reviews" style="">
                <div class="bui-review-score c-score bui-review-score--end">
                 <div aria-label="9.6" class="bui-review-score__badge">
                  9.6
                 </div>
                 <div class="bui-review-score__content">
                  <div class="bui-review-score__title">
                   강력 추천
                  </div>
                  <div class="bui-review-score__text">
                   274개 이용 후기
                  </div>
                 </div>
                </div>
               </a>
              </div>
              <div class="review-breakdown-tooltip" style="display: none;">
               <div class="" id="review_list_score">
                <span class=" review_list_score_breakdown_right">
                 <ul class="review_score_breakdown_list list_tighten clearfix" id="review_list_score_breakdown">
                  <li class="clearfix one_col" data-question="hotel_services">
                   <p class="review_score_name">
                    시설
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="97" style="width: 97%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    9.7
                   </p>
                  </li>
                  <li class="clearfix one_col" data-question="hotel_clean">
                   <p class="review_score_name">
                    청결도
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="98" style="width: 98%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    9.8
                   </p>
                  </li>
                  <li class="clearfix one_col" data-question="hotel_comfort">
                   <p class="review_score_name">
                    편안함
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="98" style="width: 98%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    9.8
                   </p>
                  </li>
                  <li class="clearfix one_col" data-question="hotel_value">
                   <p class="review_score_name">
                    가성비
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="88" style="width: 88%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    8.8
                   </p>
                  </li>
                  <li class="clearfix one_col" data-question="hotel_location">
                   <p class="review_score_name">
                    위치
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="98" style="width: 98%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    9.8
                   </p>
                  </li>
                  <li class="clearfix one_col" data-question="hotel_wifi">
                   <p class="review_score_name">
                    무료 Wi-Fi
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="91" style="width: 91%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    9.1
                   </p>
                  </li>
                  <li class="clearfix one_col" data-question="total">
                   <p class="review_score_name">
                    후기 점수
                   </p>
                   <div class="score_bar">
                    <div class="score_bar_value" data-score="96" style="width: 96%;">
                    </div>
                   </div>
                   <p class="review_score_value">
                    9.6
                   </p>
                  </li>
                 </ul>
                </span>
               </div>
              </div>
              <div class="hp_gallery_badges_container">
              </div>
              <div class="reviews-carousel-container">
               <div aria-hidden="true" class="tracked reviews-carousel">
                <div class="reviews-carousel-scroll">
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    It is a fabulous renovation of possibly the most iconic hotel in the world.
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Frank,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-ae ">
                     </span>
                     아랍에미리트
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Everything
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Tine,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-dk ">
                     </span>
                     덴마크
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    If you like staff greeting you every five meters you walk in the lobby, you will love the Ritz. If you like classic gold, white and blue wooden details, you will also love the place.
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Eric,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-se ">
                     </span>
                     스웨덴
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    The elegance and uniqueness, it’s an experience to stay in Ritz Paris
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Niveen,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-ae ">
                     </span>
                     아랍에미리트
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <li>[linkx]</li><li>[pkeyx]</li><li>[pkeyx]</li>[pkeyx]
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Iconic hotel that lived up to its reputation
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Mark,
                    <span class="reviewer_country">
                     <li>[pkeyx]</li>[linkx][linkx]
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Excellent staff, great room, luxury, great spa, the best afternoon tea, the best breakfast , BEST LOCATION
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Sophie,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-cy ">
                     </span>
                     키프로스
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Pretty much everything was lovely and exactly as it was before. Nice to see that the standards have not dropped and the Ritz is as special as ever !
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Pj,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-za ">
                     </span>
                     남아프리카 공화국
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Everything! This hotel is amazing. Prepare for an amazing experience!
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Henrik,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-gb ">
                     </span>
                     영국
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Everything
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Vince,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-gb ">
                     </span>
                     영국
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="althotelsDiv2 use_sprites_no_back featured_reviewer">
                  <p class="trackit althotelsReview2 fixed_review_height fixed_review_top_align review_content" data-url="/hotel/fr/ritz-paris-paris.ko.html;rurl=#hash-blockdisplay4" lang="en">
                   <span>
                    Everything ! At the heart of Paris but so calm, beautiful and traditional, the best service ever, the amazing pool
                   </span>
                  </p>
                  <p class="trackit altHotelsReviewer2 with_bui-avatar" style="font-size: 94%;">
                   <span class="fixed_review_user">
                    Stella,
                    <span class="reviewer_country">
                     <span class="reviewer_country_flag sflag slang-ie ">
                     </span>
                     아일랜드
                    </span>
                    <br/>
                   </span>
                  </p>
                  <div class="icon_user_back_container">
                   <div class="c-guest bui-avatar-block">
                    <div class="bui-avatar bui-avatar--small">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="reviews-carousel-control reviews-carousel-control-left _goalTracker_hp_featured_review_arrows_clicked ">
                 <span class="reviews-carousel-arrow-left">
                 </span>
                </div>
                <div class="reviews-carousel-control reviews-carousel-control-right _goalTracker_hp_featured_review_arrows_clicked ">
                 <span class="reviews-carousel-arrow-right">
                 </span>
                </div>
               </div>
              </div>
              <div aria-hidden="true" class="best-review-score best-review-score-with_best_ugc_highlight">
               <p class="best-review-score-label" data-review-topic="">
                최고의 위치!
               </p>
               <div class="bui-review-score c-score">
                <div aria-label="9.8" class="bui-review-score__badge">
                 9.8
                </div>
               </div>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="122502192">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 좋은 주변 환경
                </strong>
               </span>
               <svg class="bk-icon -iconset-geo_pin" height="32" viewbox="0 0 128 128" width="32">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="195276190">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="195276200">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="195274665">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 좋은 주변 환경
                </strong>
               </span>
               <svg class="bk-icon -iconset-geo_pin" height="32" viewbox="0 0 128 128" width="32">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="195274643">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 좋은 주변 환경
                </strong>
               </span>
               <svg class="bk-icon -iconset-geo_pin" height="32" viewbox="0 0 128 128" width="32">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="195275004">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73789832">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="66908817">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 아주 편안한 침대
                </strong>
               </span>
               <svg class="bk-icon -iconset-bed" height="32" viewbox="0 0 128 128" width="32">
                <path d="M120 96v11.8a4.1 4.1 0 0 1-3.6 4.2 4 4 0 0 1-4.4-4v-4H16v3.8a4.1 4.1 0 0 1-3.6 4.2 4 4 0 0 1-4.4-4V96a8 8 0 0 1 8-8h96a8 8 0 0 1 8 8zm-8-16a16 16 0 0 0-16-16H32a16 16 0 0 0-16 16v4h96zM24 36a4 4 0 0 1 4-4h72a4 4 0 0 1 4 4v16l8 8V36a12 12 0 0 0-12-12H28a12 12 0 0 0-12 12v24l8-8z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="66903754">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791262">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73789651">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791260">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                 [keywordx][linkx][ahref][keywordx][ahref][mkey1][ahref][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][linkx][keywordx][linkx][ahref]
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791320">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="66909137">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791292">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791268">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="195274909">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791259">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791267">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 객실 크기
                </strong>
               </span>
               <svg class="bk-icon -iconset-room_size" height="32" viewbox="0 0 128 128" width="32">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </div>
              <div aria-hidden="true" class="best-ugc-highlight-by-photo" data-photo-id="73791319">
               <span>
                호평 포인트:
                <br/>
                <strong>
                 좋은 주변 환경
                </strong>
               </span>
               <svg class="bk-icon -iconset-geo_pin" height="32" viewbox="0 0 128 128" width="32">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </div>
             </div>
            </div>
            <div aria-hidden="true" class="hp-gallery-controls landmark_photos_enabled hp-controls--visible">
             <a class="hp-gallery-control hp-gallery-control-with_best_ugc_highlight hp-gallery-control-prev" data-nav="prev" href="#">
              <span class="invisible_spoken">
               이전 사진
              </span>
             </a>
             <a class="hp-gallery-control hp-gallery-control-with_best_ugc_highlight hp-gallery-control-next" data-nav="next" href="#">
              <span class="invisible_spoken">
               다음 사진
              </span>
             </a>
            </div>
           </div>
           <div aria-hidden="true" class="hp-gallery-thumbs hp-gallery-thumbs_border">
            <div class="b_nha_hotel_small_images hp_thumbgallery_with_counter" id="photos_distinct">
             [ahref]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="195276190" href="/images/hotel/max400/195/195276190.jpg" onclick="return false;" target="_blank" title="리츠 파리 휴식 공간 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="195274734" href="/images/hotel/max400/195/195274734.jpg" onclick="return false;" target="_blank" title="숙소 사진 갤러리 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="73790553" href="/images/hotel/max400/737/73790553.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -280px no-repeat;" target="_blank" title="리츠 파리 파티오 또는 야외 공간 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [ahref]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="195274554" href="/images/hotel/max400/195/195274554.jpg" onclick="return false;" target="_blank" title="리츠 파리 레스토랑 또는 맛집 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="195274580" href="/images/hotel/max400/195/195274580.jpg" onclick="return false;" target="_blank" title="리츠 파리 내부 또는 인근 수영장 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="110732830" href="/images/hotel/max400/110/110732830.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -1000px no-repeat;" target="_blank" title="리츠 파리 내부 또는 인근 수영장 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [ahref]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="195274623" href="/images/hotel/max400/195/195274623.jpg" onclick="return false;" target="_blank" title="리츠 파리 레스토랑 또는 맛집 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="195274717" href="/images/hotel/max400/195/195274717.jpg" onclick="return false;" target="_blank" title="리츠 파리 레스토랑 또는 맛집 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="73790682" href="/images/hotel/max400/737/73790682.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -400px no-repeat;" target="_blank" title="리츠 파리 레스토랑 또는 맛집 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [linkx]
             
             [ahref]
             
             [ahref]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="73789651" href="/images/hotel/max400/737/73789651.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -200px no-repeat;" target="_blank" title="리츠 파리 객실 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="73791320" href="/images/hotel/max400/737/73791320.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -880px no-repeat;" target="_blank" title="리츠 파리 휴식 공간 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="73790683" href="/images/hotel/max400/737/73790683.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -440px no-repeat;" target="_blank" title="리츠 파리 레스토랑 또는 맛집 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             [linkx]
             
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector " data-photoid="73791319" href="/images/hotel/max400/737/73791319.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/images/hotel/sprite40/156/1568729.1513261696.jpg) 0 -840px no-repeat;" target="_blank" title="리츠 파리 파티오 또는 야외 공간 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector hotel_thumbs-landmark " data-landmarkid="landmark-1009-1" data-photoid="1009" href="/data/landmark/840x460/254/254750.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/data/landmark/square40/254/254750.jpg) 0 0 no-repeat;" target="_blank" title="숙소 사진 갤러리 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector hotel_thumbs-landmark " data-landmarkid="landmark-9475-2" data-photoid="9475" href="/data/landmark/840x460/228/228470.jpg" onclick="return false;" style="background: url(https://s-ec.bstatic.com/data/landmark/square40/228/228470.jpg) 0 0 no-repeat;" target="_blank" title="숙소 사진 갤러리 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector hotel_thumbs-landmark " data-landmarkid="landmark-9502-3" data-photoid="9502" href="/data/landmark/840x460/242/242984.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/data/landmark/square40/242/242984.jpg) 0 0 no-repeat;" target="_blank" title="숙소 사진 갤러리 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector hotel_thumbs-landmark " data-landmarkid="landmark-9819-6" data-photoid="9819" href="/data/landmark/840x460/211/211059.jpg" onclick="return false;" style="background: url(https://s-ec.bstatic.com/data/landmark/square40/211/211059.jpg) 0 0 no-repeat;" target="_blank" title="숙소 사진 갤러리 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             [ahref]
             
             [linkx]
             
             <a class=" js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover ephoto_info_collector hotel_thumbs-landmark " data-landmarkid="landmark-900077382-11" data-photoid="900077382" href="/data/landmark/840x460/203/203103.jpg" onclick="return false;" style="background: url(https://t-ec.bstatic.com/data/landmark/square40/203/203103.jpg) 0 0 no-repeat;" target="_blank" title="숙소 사진 갤러리 ">
              <span class="invisible_spoken">
               숙소 사진
              </span>
             </a>
             <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover gallery__last-item__thumb" data-photoid="last_item_cta" href="#" onclick="return false;" target="_blank">
              <span class="lock_icon">
              </span>
             </a>
            </div>
           </div>
          </div>
          <div class="gallery-side-reviews-wrapper__side">
           <div class="gallery-side-reviews-wrapper__header">
            <h2 class="gallery-side-reviews-wrapper__property">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
            <div class="bui-review-score gallery-side-reviews-wrapper__score">
             <div aria-label="9.6" class="bui-review-score__badge">
              9.6
             </div>
             <div class="bui-review-score__content">
              <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
               <span class=" high_score_word js--hp-scorecard-scoreword">
                강력 추천
               </span>
              </div>
              <div class="bui-review-score__text">
               274개 이용 후기
              </div>
             </div>
            </div>
           </div>
           <div class="gallery-side-reviews-wrapper__body">
            <ul class="bui-list bui-list--text bui-list--icon bui-list--divided">
             <li aria-hidden="true" class="bui-list__item">
              <span aria-role="presentation" class="bui-list__icon">
               <span class=" review-score-widget review-score-widget__exceptional review-score-widget__outlined review-score-widget__score-only review-score-widget__no-subtext ">
                <span aria-label="9.8" class="review-score-badge">
                 9.8
                </span>
               </span>
              </span>
              <div class="bui-list__body">
               <strong>
                <p class="best-review-score-label" data-review-topic="">
                 최고의 위치!
                </p>
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="122502192">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                좋은 주변 환경
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="195276190">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="195276200">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="195274665">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                좋은 주변 환경
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="195274643">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                좋은 주변 환경
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="195275004">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73789832">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="66908817">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-bed" height="20" viewbox="0 0 128 128" width="20">
                <path d="M120 96v11.8a4.1 4.1 0 0 1-3.6 4.2 4 4 0 0 1-4.4-4v-4H16v3.8a4.1 4.1 0 0 1-3.6 4.2 4 4 0 0 1-4.4-4V96a8 8 0 0 1 8-8h96a8 8 0 0 1 8 8zm-8-16a16 16 0 0 0-16-16H32a16 16 0 0 0-16 16v4h96zM24 36a4 4 0 0 1 4-4h72a4 4 0 0 1 4 4v16l8 8V36a12 12 0 0 0-12-12H28a12 12 0 0 0-12 12v24l8-8z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                아주 편안한 침대
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="66903754">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791262">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73789651">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791260">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791320">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="66909137">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791292">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791268">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="195274909">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791259">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791267">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-room_size" height="20" viewbox="0 0 128 128" width="20">
                <path d="M56 104L8 80V56l48 24zm0-80L16 44l40 20zm16 40l40-20-40-20zm48-8L72 80v24l48-24z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                객실 크기
               </strong>
              </div>
             </li>
             <li aria-hidden="true" class="bui-list__item best-ugc-highlight-by-photo" data-photo-id="73791319">
              <span aria-role="presentation" class="bui-list__icon">
               <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
                <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
                </path>
               </svg>
              </span>
              <div class="bui-list__body" style="display:block">
               호평 포인트:
               <br/>
               <strong>
                좋은 주변 환경
               </strong>
              </div>
             </li>
            </ul>
            <ul class="bui-list bui-list--text bui-list--divided">
             <li class="bui-list__item gallery-side-reviews-wrapper__title">
              투숙객이 꼽은 최고의 장점
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “It is a fabulous renovation of possibly the most iconic hotel in the world.”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Frank
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Everything”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Tine
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “If you like staff greeting you every five meters you walk in the lobby, you will love the Ritz. If you like classic gold, white and blue wooden details, you will also love the place.”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Eric
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “The elegance and uniqueness, it’s an experience to stay in Ritz Paris”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Niveen
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Iconic hotel that lived up to its reputation”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Mark
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Excellent staff, great room, luxury, great spa, the best afternoon tea, the best breakfast , BEST LOCATION”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Sophie
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Pretty much everything was lovely and exactly as it was before. Nice to see that the standards have not dropped and the Ritz is as special as ever !”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Pj
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Everything! This hotel is amazing. Prepare for an amazing experience!”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Henrik
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Everything”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Vince
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="ltr hp-social_proof-quote_bubble">
               “Everything ! At the heart of Paris but so calm, beautiful and traditional, the best service ever, the amazing pool”
              </div>
              <div class="gallery-side-reviews-wrapper__reviewer">
               <span class="gallery-side-reviews-wrapper__avatar">
               </span>
               <span class="gallery-side-reviews-wrapper__name">
                Stella
                <span class="gallery-side-reviews-wrapper__country">
                </span>
               </span>
              </div>
             </li>
            </ul>
           </div>
          </div>
         </div>
         <div class="hp_hotel_description_hightlights_wrapper ">
          <div class="hotel_description_wrapper_exp hp-description">
           [keywordx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[pkeyx]</li>
          </div>
          <div class="property_hightlights_wrapper ">
           <div class="property-highlights ph-icon-fill-color">
            <div data-et-view="adUAVGPCfRGOPAVAEXQC:1">
            </div>
            <div data-et-view="eDdQAOTCTbJARGHGaAC:1">
            </div>
            <div data-et-view="BUcPLHSIPeVcLcDYO:1">
            </div>
            <h3 class="ph-header">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h3>
            <div class="ph-section">
             <div class="jq_tooltip ph-content " data-title="다음 테마에 관심 있는 여행객에게 최적인 이곳: 음식, 쇼핑, 박물관">
              <p class="ph-item contextual-reviews-trigger">
               <span aria-hidden="true" class="ph-icon-container ph-icon-container-heart">
                <i class="ph-icon ph-icon-heart bicon-">
                 뀐
                </i>
               </span>
               <span class="ph-item-copy ">
                <span class="ph-item-copy-heart">
                 파리 중심부에 위치한 이 호텔은 최고의 위치 점수(9.8점)를 받았습니다
                </span>
               </span>
              </p>
             </div>
             <div class="ph-content ">
              <p class="ph-item contextual-reviews-trigger">
               <span aria-hidden="true" class="ph-icon-container ph-icon-container-Bed">
                <i class="ph-icon ph-icon-Bed bicon-">
                 끉
                </i>
               </span>
               <span class="ph-item-copy ">
                <span class="ph-item-copy-Bed">
                 여행 중에도 숙면은 필수! 이 호텔은 편안한 침대로 높은 평가를 받았습니다.
                </span>
               </span>
              </p>
             </div>
            </div>
            <div class="ph-section">
             <div class="ph-content">
              <p class="ph-item-header">
               조식 정보
              </p>
             </div>
             <div class="ph-content ">
              <p class="ph-item contextual-reviews-trigger">
               <span class="ph-item-copy ">
                <span class="ph-item-copy-breakfast-option">
                 유럽식, 아시안
                </span>
               </span>
              </p>
             </div>
             <div class="jq_tooltip ph-content " data-title="평점 9.4 – 후기 8개 바탕으로 집계">
              <p class="ph-item contextual-reviews-trigger">
               <span class="ph-item-copy ">
                <span class="ph-item-copy-coffee-option">
                 <strong class="ph-item-copy-with-tooltip">
                  환상적인
                 </strong>
                 커피!
                </span>
               </span>
              </p>
             </div>
            </div>
            <div class="ph-section">
             <div class="ph-content hp-ph-freebie droom_hp_freebie ">
              <p class="ph-item contextual-reviews-trigger">
               <span aria-hidden="true" class="ph-icon-container ph-icon-container-wifi">
                <i class="ph-icon ph-icon-wifi bicon-">
                 뀄
                </i>
               </span>
               <span class="ph-item-copy ">
                <span class="ph-item-copy-wifi">
                 무료 WiFi
                </span>
                <br/>
                <span class="ph-item-subtitle--contrast ph-item-subtitle-wifi">
                 투숙객들은 꾸준히 WiFi에 만족 평가를 주셨습니다
                </span>
               </span>
              </p>
             </div>
             <div class="ph-content " data-title="">
              <p class="ph-item contextual-reviews-trigger">
               <span aria-hidden="true" class="ph-icon-container ph-icon-container-parking">
                <i class="ph-icon ph-icon-parking bicon-">
                 끸
                </i>
               </span>
               <span class="ph-item-copy ">
                <span class="ph-item-copy-parking">
                 호텔 내 전용 주차
                </span>
               </span>
              </p>
             </div>
            </div>
            <div class="ph-section">
             <div class="jq_tooltip ph-content " data-title="다양한 인기 브랜드: Rolex, Cartier, Chanel, Louis Vuitton, Gucci, Hermès">
              <p class="ph-item contextual-reviews-trigger">
               <span aria-hidden="true" class="ph-icon-container ph-icon-container-shopping">
                <i class="ph-icon ph-icon-shopping bicon-">
                 넮
                </i>
               </span>
               <span class="ph-item-copy ph-item-copy-with-tooltip">
                <span class="ph-item-copy-shopping">
                 최고의 쇼핑 지역!
                </span>
               </span>
              </p>
             </div>
            </div>
            <div class="ph-footer">
             <button class="b-button b-button_primary call_to_action--wide js-ph__cta " data-title="
지금 바로 예약하세요!
" type="submit">
              <span class="b-button__text">
               지금 예약
              </span>
             </button>
             <div class="hp-lists-ph">
              <div class="hp-lists hp-lists--save-wl-below-ph hide" data-hotel-id="1568729">
               <button class=" hp-lists-save js-wl-dropdown-handle " data-ga-label="big_heart_btn" data-hotel-id="1568729" data-position="bottom center" data-text-create="새 리스트 만들기" data-text-header="
저장해두고<br>다시 예약하기
" style="" type="button">
                <i class="bicon-heart hp-lists-save-icon">
                </i>
                <span class="hp-lists-save-link js-wl-handle-text" data-text-saved="저장됨!" data-text-unsaved="
저장해두고<br>다시 예약하기
">
                 저장해두고
                 <br/>
                 다시 예약하기
                </span>
               </button>
               <span class="hp-lists-loader tfl-clicked-status-loading g-hidden">
               </span>
               <p class=" hp-lists-counter wishlist-social-count ">
                리스트에 
2794
회 저장됨
               </p>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div>
         <div class="var-1 has-no-dates " id="hp_availability_style_changes">
          <div class="bui-alert bui-alert--success bui-alert--large bui-u-bleed@small lock-price-banner lock-price-banner--no-button" role="status">
           <span class="icon--hint bui-alert__icon" role="presentation">
            <svg class="bk-icon -iconset-lock_open bui-banner__icon" fill="#0AB21B" height="32" viewbox="0 0 128 128" width="32">
             <path d="M104 48H44V36a20 20 0 0 1 36.7-11 4 4 0 1 0 6.6-4.5A28 28 0 0 0 36 36v12H24a8 8 0 0 0-8 8v56a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8zM64 96a12 12 0 1 1 12-12 12 12 0 0 1-12 12z">
             </path>
            </svg>
           </span>
           <div class="bui-alert__description">
            <span class="bui-alert__title">
             봉인 해제! 이보다 더 좋은 가격은 없다
            </span>
            <p class="bui-alert__text">
             즉시 예약 확정! 대부분의 객실 무료 취소 가능합니다.
            </p>
           </div>
          </div>
          <form action="/searchresults.html#sort_by" autocomplete="off" id="hotelpage_availform" method="get" role="form">
           <div class="g-hidden">
            <div class="b-form__dates b-form-group ">
             <div class="b-form-group__content">
              <div class="b-form-date-selectors b-form-group b-form-group_subgroup b-form-date-selectors__flexible b-form-date-selectors__month-before-day with_day">
               <div class="b-form-checkin b-form-group b-form-group_subgroup b-form-group_inline b-form-checkin__flexible">
                <label class="b-form-group__title">
                </label>
                <div class="b-form-group__controls b-date-selector b-date-selector-flexible" data-type="checkin">
                 <div class="b-date-selector__control b-date-selector__control-datepicker b-datepicker sb-dates__calendar-button bui-icon-svg hp_rt_av-calendar_icon" data-calendar2-type="checkin" id="first_calendar" type="button">
                  <svg class="bk-icon -sprite-calendar_icon" height="21" title="<TMPL_VAR ESCAPE=maybeXSS sbox_voice_choose_checkin>" viewbox="0 0 21 17" width="21">
                   <path d="M18 1v1h-1V1h-2v1h-1V1h-2v1h-1V1H9v1H8V1H6v1H5V1H3v1H2V1H0v4h21V1z" fill="#27AAE1">
                   </path>
                   <path d="M20 5v2h-3V5h-1v2h-3V5h-1v2H9V5H8v2H5V5H4v2H1V5H0v12h21V5h-1zm-4 3v2h-3V8h3zm-7 3h3v2H9v-2zm-1 2H5v-2h3v2zm5-2h3v2h-3v-2zm-1-3v2H9V8h3zM8 8v2H5V8h3zM1 8h3v2H1V8zm0 3h3v2H1v-2zm0 5v-2h3v2H1zm4 0v-2h3v2H5zm4 0v-2h3v2H9zm4 0v-2h3v2h-3zm7 0h-3v-2h3v2zm0-3h-3v-2h3v2zm0-3h-3V8h3v2z" fill="#A7A9AC">
                   </path>
                   <path d="M3 0H2v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M6 0H5v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M9 0H8v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M12 0h-1v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M15 0h-1v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M18 0h-1v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                  </svg>
                 </div>
                 <div class="b-date-selector__control b-date-selector__control-monthselector b-selectbox">
                  <label class="invisible_spoken" for="checkin_year_month">
                   Checkin month
                  </label>
                  <select class="b-selectbox__element" id="checkin_year_month" name="checkin_year_month">
                   <option selected="selected" value="0">
                    월
                   </option>
                   <option class="b_months" value="2019-7">
                    2019.7월
                   </option>
                   <option class="b_months" value="2019-8">
                    2019.8월
                   </option>
                   <option class="b_months" value="2019-9">
                    2019.9월
                   </option>
                   <option class="b_months" value="2019-10">
                    2019.10월
                   </option>
                   <option class="b_months" value="2019-11">
                    2019.11월
                   </option>
                   <option class="b_months" value="2019-12">
                    2019.12월
                   </option>
                   <option class="b_months" value="2020-1">
                    2020.1월
                   </option>
                   <option class="b_months" value="2020-2">
                    2020.2월
                   </option>
                   <option class="b_months" value="2020-3">
                    2020.3월
                   </option>
                   <option class="b_months" value="2020-4">
                    2020.4월
                   </option>
                   <option class="b_months" value="2020-5">
                    2020.5월
                   </option>
                   <option class="b_months" value="2020-6">
                    2020.6월
                   </option>
                   <option class="b_months" value="2020-7">
                    2020.7월
                   </option>
                   <option class="b_months" value="2020-8">
                    2020.8월
                   </option>
                   <option class="b_months" value="2020-9">
                    2020.9월
                   </option>
                   <option class="b_months" value="2020-10">
                    2020.10월
                   </option>
                  </select>
                 </div>
                 <div class="b-date-selector__control b-date-selector__control-dayselector b-selectbox">
                  <label class="invisible_spoken" for="checkin_monthday">
                   Checkin day
                  </label>
                  <select class="b-selectbox__element" id="checkin_monthday" name="checkin_monthday">
                   <option selected="selected" value="0">
                    일
                   </option>
                   <option value="1">
                    1
                   </option>
                   <option value="2">
                    2
                   </option>
                   <option value="3">
                    3
                   </option>
                   <option value="4">
                    4
                   </option>
                   <option value="5">
                    5
                   </option>
                   <option value="6">
                    6
                   </option>
                   <option value="7">
                    7
                   </option>
                   <option value="8">
                    8
                   </option>
                   <option value="9">
                    9
                   </option>
                   <option value="10">
                    10
                   </option>
                   <option value="11">
                    11
                   </option>
                   <option value="12">
                    12
                   </option>
                   <option value="13">
                    13
                   </option>
                   <option value="14">
                    14
                   </option>
                   <option value="15">
                    15
                   </option>
                   <option value="16">
                    16
                   </option>
                   <option value="17">
                    17
                   </option>
                   <option value="18">
                    18
                   </option>
                   <option value="19">
                    19
                   </option>
                   <option value="20">
                    20
                   </option>
                   <option value="21">
                    21
                   </option>
                   <option value="22">
                    22
                   </option>
                   <option value="23">
                    23
                   </option>
                   <option value="24">
                    24
                   </option>
                   <option value="25">
                    25
                   </option>
                   <option value="26">
                    26
                   </option>
                   <option value="27">
                    27
                   </option>
                   <option value="28">
                    28
                   </option>
                   <option value="29">
                    29
                   </option>
                   <option value="30">
                    30
                   </option>
                   <option value="31">
                    31
                   </option>
                  </select>
                 </div>
                </div>
               </div>
               <div class="b-form-checkout b-form-group b-form-group_subgroup b-form-group_inline b-form-checkin__flexible">
                <label class="b-form-group__title">
                </label>
                <div class="b-form-group__controls b-date-selector b-date-selector-flexible" data-type="checkout">
                 <div class="b-date-selector__control b-date-selector__control-datepicker b-datepicker sb-dates__calendar-button bui-icon-svg hp_rt_av-calendar_icon" data-calendar2-title="체크아웃 날짜" data-calendar2-type="checkout" type="button">
                  <svg class="bk-icon -sprite-calendar_icon" height="21" title="<TMPL_VAR ESCAPE=maybeXSS sbox_voice_choose_checkout>" viewbox="0 0 21 17" width="21">
                   <path d="M18 1v1h-1V1h-2v1h-1V1h-2v1h-1V1H9v1H8V1H6v1H5V1H3v1H2V1H0v4h21V1z" fill="#27AAE1">
                   </path>
                   <path d="M20 5v2h-3V5h-1v2h-3V5h-1v2H9V5H8v2H5V5H4v2H1V5H0v12h21V5h-1zm-4 3v2h-3V8h3zm-7 3h3v2H9v-2zm-1 2H5v-2h3v2zm5-2h3v2h-3v-2zm-1-3v2H9V8h3zM8 8v2H5V8h3zM1 8h3v2H1V8zm0 3h3v2H1v-2zm0 5v-2h3v2H1zm4 0v-2h3v2H5zm4 0v-2h3v2H9zm4 0v-2h3v2h-3zm7 0h-3v-2h3v2zm0-3h-3v-2h3v2zm0-3h-3V8h3v2z" fill="#A7A9AC">
                   </path>
                   <path d="M3 0H2v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M6 0H5v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M9 0H8v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M12 0h-1v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M15 0h-1v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                   <path d="M18 0h-1v1h1v2h1V0z" fill="#A7A9AC">
                   </path>
                  </svg>
                 </div>
                 <div class="b-date-selector__control b-date-selector__control-monthselector b-selectbox">
                  <label class="invisible_spoken" for="checkout_year_month">
                   Checkout month
                  </label>
                  <select class="b-selectbox__element" id="checkout_year_month" name="checkout_year_month">
                   <option selected="selected" value="0">
                    월
                   </option>
                   <option class="b_months" value="2019-7">
                    2019.7월
                   </option>
                   <option class="b_months" value="2019-8">
                    2019.8월
                   </option>
                   <option class="b_months" value="2019-9">
                    2019.9월
                   </option>
                   <option class="b_months" value="2019-10">
                    2019.10월
                   </option>
                   <option class="b_months" value="2019-11">
                    2019.11월
                   </option>
                   <option class="b_months" value="2019-12">
                    2019.12월
                   </option>
                   <option class="b_months" value="2020-1">
                    2020.1월
                   </option>
                   <option class="b_months" value="2020-2">
                    2020.2월
                   </option>
                   <option class="b_months" value="2020-3">
                    2020.3월
                   </option>
                   <option class="b_months" value="2020-4">
                    2020.4월
                   </option>
                   <option class="b_months" value="2020-5">
                    2020.5월
                   </option>
                   <option class="b_months" value="2020-6">
                    2020.6월
                   </option>
                   <option class="b_months" value="2020-7">
                    2020.7월
                   </option>
                   <option class="b_months" value="2020-8">
                    2020.8월
                   </option>
                   <option class="b_months" value="2020-9">
                    2020.9월
                   </option>
                   <option class="b_months" value="2020-10">
                    2020.10월
                   </option>
                  </select>
                 </div>
                 <div class="b-date-selector__control b-date-selector__control-dayselector b-selectbox">
                  <label class="invisible_spoken" for="checkout_monthday">
                   Checkout day
                  </label>
                  <select class="b-selectbox__element" id="checkout_monthday" name="checkout_monthday">
                   <option selected="selected" value="0">
                    일
                   </option>
                   <option value="1">
                    1
                   </option>
                   <option value="2">
                    2
                   </option>
                   <option value="3">
                    3
                   </option>
                   <option value="4">
                    4
                   </option>
                   <option value="5">
                    5
                   </option>
                   <option value="6">
                    6
                   </option>
                   <option value="7">
                    7
                   </option>
                   <option value="8">
                    8
                   </option>
                   <option value="9">
                    9
                   </option>
                   <option value="10">
                    10
                   </option>
                   <option value="11">
                    11
                   </option>
                   <option value="12">
                    12
                   </option>
                   <option value="13">
                    13
                   </option>
                   <option value="14">
                    14
                   </option>
                   <option value="15">
                    15
                   </option>
                   <option value="16">
                    16
                   </option>
                   <option value="17">
                    17
                   </option>
                   <option value="18">
                    18
                   </option>
                   <option value="19">
                    19
                   </option>
                   <option value="20">
                    20
                   </option>
                   <option value="21">
                    21
                   </option>
                   <option value="22">
                    22
                   </option>
                   <option value="23">
                    23
                   </option>
                   <option value="24">
                    24
                   </option>
                   <option value="25">
                    25
                   </option>
                   <option value="26">
                    26
                   </option>
                   <option value="27">
                    27
                   </option>
                   <option value="28">
                    28
                   </option>
                   <option value="29">
                    29
                   </option>
                   <option value="30">
                    30
                   </option>
                   <option value="31">
                    31
                   </option>
                  </select>
                 </div>
                </div>
               </div>
              </div>
              <p class="b-form-number-of-nights">
              </p>
             </div>
            </div>
           </div>
           <div class="hiddenInputSection">
           </div>
           <div class="hp-availability-section js-hp-availability-section" id="availability_target">
            [linkx]
            
            <div class="hp-section-header hp-section-header--with-badge">
             <h2 class="hp-dates-summary__header" id="availability_target" name="availability_target">
              <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
             </h2>
             <div class="bpg_hp_no_availability hp-availability-block-usp" id="rate_guarantee">
              <i class=" bpg_logo ">
              </i>
              [linkx]
              
             </div>
            </div>
            <div class="hp-section ">
             <div class="hp-section-row">
              <p class="availability-sub-header">
               이곳에서 머물 기간을 설정해주세요
              </p>
             </div>
             <div class="lp_bold_date_picker_error js-lp_bold_date_picker_error" style="display:none;">
              <div class="fe_banner fe_banner__accessible fe_banner__red ">
               <div class="fe_banner__message ">
                죄송합니다. 30박 이상의 예약은 불가능합니다.
               </div>
              </div>
             </div>
             <div class="lp_bold_date_picker_error--checkin js-lp_bold_date_picker_error" style="display:none;">
              <p class="availability-form-error">
               날짜를 입력하여 예약 가능 여부를 확인해주세요.
              </p>
             </div>
             <div class="lp_bold_date_picker_error--checkout js-lp_bold_date_picker_error" style="display:none;">
              <p class="availability-form-error">
               출발일 날짜가 유효하지 않습니다.
              </p>
             </div>
             <div class="lp_bold_date_picker_wrapper">
              <div class="hp-section-3-col">
               <div class="hp-section-row hp-input-label">
                <label class="rt-av-input-label-checkin" for="checkin-input">
                 체크인 날짜
                </label>
               </div>
               <div class="hp-section-row hp-date-input lp_bold_date_picker_select lp_bold_date_picker_checkin placeholder">
                <svg class="bk-icon -experiments-calendar_checkin hp-date-picker-icon" height="16" viewbox="0 0 128 128" width="16">
                 <path d="M112 16H96V8h-8v8H40V8h-8v8H16c-4.4 0-8 3.9-8 8.7v86.6c0 4.8 3.6 8.7 8 8.7h96c4.4 0 8-3.9 8-8.7V24.7c0-4.8-3.6-8.7-8-8.7zm0 95.3a1.1 1.1 0 0 1-.2.7H16.2a1.1 1.1 0 0 1-.2-.7V40h96zM32 84h12v12H32zm38-16H58V56h12zm0 28H58V84h12zm26 0H84V84h12zm0-28H84V56h12zM48 52H28v20h20zm-6 14h-8v-8h8z">
                 </path>
                </svg>
                <span>
                 체크인 날짜
                </span>
                <i class="bicon-downchevron">
                </i>
               </div>
              </div>
              <div class="hp-section-3-col">
               <div class="hp-section-row hp-input-label">
                <label class="rt-av-input-label-checkout" for="checkout-input">
                 체크아웃 날짜
                </label>
               </div>
               <div class="hp-section-row hp-date-input lp_bold_date_picker_select lp_bold_date_picker_checkout placeholder">
                <svg class="bk-icon -experiments-calendar_checkout hp-date-picker-icon" height="16" viewbox="0 0 128 128" width="16">
                 <path d="M112 16H96V8h-8v8H40V8h-8v8H16c-4.4 0-8 3.9-8 8.7v86.6c0 4.8 3.6 8.7 8 8.7h96c4.4 0 8-3.9 8-8.7V24.7c0-4.8-3.6-8.7-8-8.7zm0 95.3a1.1 1.1 0 0 1-.2.7H16.2a1.1 1.1 0 0 1-.2-.7V40h96zM44 68H32V56h12zm0 28H32V84h12zm26-28H58V56h12zm0 28H58V84h12zm26-28H84V56h12zm4 12H80v20h20zm-6 14h-8v-8h8z">
                 </path>
                </svg>
                <span>
                 체크아웃 날짜
                </span>
                <i class="bicon-downchevron">
                </i>
               </div>
              </div>
              <div class="hp-section-3-col">
               <div class="hp-section-row">
               </div>
               <button class="b-button b-button_primary hp-section-row lp_bold_date_picker_btn " type="submit">
                <span class="b-button__text">
                 객실 확인
                </span>
               </button>
              </div>
             </div>
             <div class="clear">
             </div>
             <div>
             </div>
             <div class="hp-section-row hp-section-row__group-search">
              <div data-component="search/group/group" data-fe_remove_duplicate_ids="0" data-fe_sb_group_descriptive_dropdowns="0" data-fe_sb_unique_id="" data-fe_sb_universal_design="0" data-fe_sb_xpi="0" data-sb-bbtool-searchbox="0" data-sb-group-always-expanded="1" data-sb-group-block-labels="0" data-sb-group-children-ages-hide="0" data-sb-group-children-hide="0" data-sb-group-infants-hide="1" data-sb-group-pets-hide="0" data-sb-group-rooms-hide="0" data-sb-group-use-bui-stepper="0" data-sb-group-use_adults_label="0" data-sb-id="main" data-sb-width="medium" data-sb_reorder_rooms_block="0">
               <div class="u-clearfix" data-render="">
                <div class="sb-group__field sb-group__field-rooms">
                 <label class="sb-searchbox__label sb-group__field__label -inline -small " for="no_rooms">
                  객실
                 </label>
                 <select aria-label="객실 수" data-group-rooms-count="" id="no_rooms" name="no_rooms">
                  <option selected="selected" value="1">
                   1
                  </option>
                  <option value="2">
                   2
                  </option>
                  <option value="3">
                   3
                  </option>
                  <option value="4">
                   4
                  </option>
                  <option value="5">
                   5
                  </option>
                  <option value="6">
                   6
                  </option>
                  <option value="7">
                   7
                  </option>
                  <option value="8">
                   8
                  </option>
                  <option value="9">
                   9
                  </option>
                  <option value="10">
                   10
                  </option>
                  <option value="11">
                   11
                  </option>
                  <option value="12">
                   12
                  </option>
                  <option value="13">
                   13
                  </option>
                  <option value="14">
                   14
                  </option>
                  <option value="15">
                   15
                  </option>
                  <option value="16">
                   16
                  </option>
                  <option value="17">
                   17
                  </option>
                  <option value="18">
                   18
                  </option>
                  <option value="19">
                   19
                  </option>
                  <option value="20">
                   20
                  </option>
                  <option value="21">
                   21
                  </option>
                  <option value="22">
                   22
                  </option>
                  <option value="23">
                   23
                  </option>
                  <option value="24">
                   24
                  </option>
                  <option value="25">
                   25
                  </option>
                  <option value="26">
                   26
                  </option>
                  <option value="27">
                   27
                  </option>
                  <option value="28">
                   28
                  </option>
                  <option value="29">
                   29
                  </option>
                  <option value="30">
                   30
                  </option>
                 </select>
                </div>
                <div class="sb-group__field sb-group__field-adults">
                 <label class="sb-searchbox__label sb-group__field__label -inline -small " for="group_adults">
                  성인
                 </label>
                 <select aria-label="성인 수" data-group-adults-count="" id="group_adults" name="group_adults">
                  <option value="1">
                   1
                  </option>
                  <option selected="selected" value="2">
                   2
                  </option>
                  <option value="3">
                   3
                  </option>
                  <option value="4">
                   4
                  </option>
                  <option value="5">
                   5
                  </option>
                  <option value="6">
                   6
                  </option>
                  <option value="7">
                   7
                  </option>
                  <option value="8">
                   8
                  </option>
                  <option value="9">
                   9
                  </option>
                  <option value="10">
                   10
                  </option>
                  <option value="11">
                   11
                  </option>
                  <option value="12">
                   12
                  </option>
                  <option value="13">
                   13
                  </option>
                  <option value="14">
                   14
                  </option>
                  <option value="15">
                   15
                  </option>
                  <option value="16">
                   16
                  </option>
                  <option value="17">
                   17
                  </option>
                  <option value="18">
                   18
                  </option>
                  <option value="19">
                   19
                  </option>
                  <option value="20">
                   20
                  </option>
                  <option value="21">
                   21
                  </option>
                  <option value="22">
                   22
                  </option>
                  <option value="23">
                   23
                  </option>
                  <option value="24">
                   24
                  </option>
                  <option value="25">
                   25
                  </option>
                  <option value="26">
                   26
                  </option>
                  <option value="27">
                   27
                  </option>
                  <option value="28">
                   28
                  </option>
                  <option value="29">
                   29
                  </option>
                  <option value="30">
                   30
                  </option>
                 </select>
                </div>
                <div class="sb-group__field sb-group-children ">
                 <label class="sb-searchbox__label sb-group__field__label -inline -small " for="group_children">
                  어린이
                 </label>
                 <select aria-label="아동 수" data-add-children-tooltip="" data-component="search/group/children-ages-tooltip search/group/add-children-tooltip" data-group-children-count="" id="group_children" name="group_children">
                  <option selected="selected" value="0">
                   0
                  </option>
                  <option value="1">
                   1
                  </option>
                  <option value="2">
                   2
                  </option>
                  <option value="3">
                   3
                  </option>
                  <option value="4">
                   4
                  </option>
                  <option value="5">
                   5
                  </option>
                  <option value="6">
                   6
                  </option>
                  <option value="7">
                   7
                  </option>
                  <option value="8">
                   8
                  </option>
                  <option value="9">
                   9
                  </option>
                  <option value="10">
                   10
                  </option>
                 </select>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </form>
          <div style="height:1px; overflow:hidden;">
          </div>
          <div class="description urt rooms_table_nodates rooms_table_noavailability" id="rooms_table" style="margin: 0;">
           <div style="height:1px; overflow:hidden;">
           </div>
           <table border="2" cellspacing="0" class="roomstable rt_no_dates dr_rt_no_dates js-dr_rt_no_dates __big-buttons rt_lightbox_enabled roomstable-no-dates-expanded" id="maxotel_rooms">
            <thead data-has="">
             <tr id="maxotel_table_header">
              <th class="figure">
               정원
              </th>
              <th>
               객실 유형
              </th>
              <th class="figure">
              </th>
             </tr>
            </thead>
            <tbody>
             <tr class="odd">
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872901">
                <div class="room-info" id="RD156872901">
                 [ahref]
                 
                 <div class="bed-types-wrapper ">
                  <ul class="rt-bed-types">
                   <li class="rt-bed-type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872901" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872901">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div aria-hidden="true" class=" hp-lightbox-gallery-container gallery-corner-nav xl_photo ">
                 <div>
                  <div class="hp-gallery">
                   <div class="hp-gallery-slides" data-gallery="">
                    <div data-photoid="66903754">
                    </div>
                   </div>
                   <div class="hp-gallery-controls hp-controls--visible">
                    <button aria-label="이전 사진" class="hp-gallery-control hp-gallery-control-prev" data-nav="prev">
                    </button>
                    <button aria-label="다음 사진" class="hp-gallery-control hp-gallery-control-next" data-nav="next">
                    </button>
                   </div>
                  </div>
                  <div class="b_nha_hotel_small_images">
                   <div class="hp-gallery-thumbs hp-gallery-thumbs_border">
                    <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover" data-photoid="66903754" onclick="return false" target="_blank">
                    </a>
                    <div class="clearfix">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  35 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  이 더블룸은 위성 및 개별 프로그램 유료 시청 시스템(PPV)이 구비된 평면 TV를 갖추고 있고, 미니바도 제공됩니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다.
                  <br>
                   <br>
                    이 객실에서는 정원의 전경을 조망하실 수 있습니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="42">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872901" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   <a class="feedback-loop__secondary-cta" data-close="" href=";">
                    닫기
                   </a>
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   <a class="feedback-loop__secondary-cta" data-action="reset showView" data-view="index" href=";">
                    재시도
                   </a>
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   <div>
                    <span class="inline-feedback__title">
                     혹시 찾지 못하신 정보가 있나요?
                    </span>
                   </div>
                   <div>
                    <span class="inline-feedback__link" data-action="close_lightbox submit modal hide hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: yes" data-model="missing_info" data-model-value="1" data-show-form=".LB_156872901" role="button" tabindex="0">
                     예
                    </span>
                    <span class="inline-feedback__separator">
                     /
                    </span>
                    <span class="inline-feedback__link" data-action="submit showView hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: no" data-model="not_missing_info" data-model-value="1" data-show-view="thankyou" role="button" tabindex="0">
                     아니요
                    </span>
                   </div>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
             <tr>
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872902">
                <div class="room-info" id="RD156872902">
                 [linkx]
                 
                 <div class="bed-types-wrapper ">
                  <ul class="rt-bed-types">
                   <li class="rt-bed-type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872902" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872902">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities rt__lightbox__description__meta--no-gallery">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                  </h2>
                  40 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  이 더블룸은 위성 및 개별 프로그램 유료 시청 시스템(PPV)이 구비된 평면 TV를 갖추고 있고, 소파와 미니바도 마련되어 있습니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다.
                  <br>
                   <br>
                    이 객실에서는 정원의 전경을 조망하실 수 있습니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="42">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872902" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                   <div class="feedback-loop__title">
                    숙소에 대해 더 알고 싶은 내용이 있으신가요?
                   </div>
                   <p class="feedback-loop__subtitle">
                    (보내주신 답변은 서비스 향상에 큰 도움이 됩니다)
                   </p>
                   <ul class="feedback-loop__group-body feedback-loop__list" style="display: block;">
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주방
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       조식
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 정원
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 전망
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 시설
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주차
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       흡연 가능 여부
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       기타
                      </span>
                     </label>
                    </li>
                   </ul>
                   <div class="feedback-loop-extra__question g-hidden" style="display:none;">
                    <label class="feedback-loop-extra__checkbox" style="color: #707070;">
                     선택하신 항목들에 대해 무엇을 알고 싶으신가요?
                    </label>
                    <label>
                     <span class="invisible_spoken">
                      의견을 입력해주세요
                     </span>
                    </label>
                   </div>
                   <div class="feedback-loop__options feedback-loop__submit">
                    [ahref]
                    
                   </div>
                   [linkx]
                   
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   [ahref]
                   
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   [ahref]
                   
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   <div>
                    <span class="inline-feedback__title">
                     혹시 찾지 못하신 정보가 있나요?
                    </span>
                   </div>
                   <div>
                    <span class="inline-feedback__link" data-action="close_lightbox submit modal hide hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: yes" data-model="missing_info" data-model-value="1" data-show-form=".LB_156872902" role="button" tabindex="0">
                     예
                    </span>
                    <span class="inline-feedback__separator">
                     /
                    </span>
                    <span class="inline-feedback__link" data-action="submit showView hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: no" data-model="not_missing_info" data-model-value="1" data-show-view="thankyou" role="button" tabindex="0">
                     아니요
                    </span>
                   </div>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
             <tr class="odd">
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872903">
                <div class="room-info" id="RD156872903">
                 <a class="jqrt togglelink" data-room-name-en="Deluxe Double Room" href="3">
                  <i class="rt_room_type_ico bicon-triangleright">
                  </i>
                  디럭스 더블룸
                 </a>
                 <div class="bed-types-wrapper ">
                  <ul class="rt-bed-types">
                   <li class="rt-bed-type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872903" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872903">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div aria-hidden="true" class=" hp-lightbox-gallery-container gallery-corner-nav xl_photo ">
                 <div>
                  <div class="hp-gallery">
                   <div class="hp-gallery-slides" data-gallery="">
                    <div data-photoid="66908817">
                    </div>
                    <div data-photoid="73791262">
                    </div>
                   </div>
                   <div class="hp-gallery-controls hp-controls--visible">
                    <button aria-label="이전 사진" class="hp-gallery-control hp-gallery-control-prev" data-nav="prev">
                    </button>
                    <button aria-label="다음 사진" class="hp-gallery-control hp-gallery-control-next" data-nav="next">
                    </button>
                   </div>
                  </div>
                  <div class="b_nha_hotel_small_images">
                   <div class="hp-gallery-thumbs hp-gallery-thumbs_border">
                    [ahref]
                    
                    [linkx]
                    
                    <div class="clearfix">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  45 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  이 더블룸은 위성 및 개별 프로그램 유료 시청 시스템(PPV)이 구비된 평면 TV를 갖추고 있고, 소파와 미니바도 마련되어 있습니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다.
                  <br>
                   <br>
                    이 객실에서는 정원의 전경을 조망하실 수 있습니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="44">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa">
                    • 소파
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="View">
                    • 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872903" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                   <div class="feedback-loop__title">
                    숙소에 대해 더 알고 싶은 내용이 있으신가요?
                   </div>
                   <p class="feedback-loop__subtitle">
                    (보내주신 답변은 서비스 향상에 큰 도움이 됩니다)
                   </p>
                   <ul class="feedback-loop__group-body feedback-loop__list" style="display: block;">
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주방
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       조식
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 정원
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 전망
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 시설
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주차
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       흡연 가능 여부
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       기타
                      </span>
                     </label>
                    </li>
                   </ul>
                   <div class="feedback-loop-extra__question g-hidden" style="display:none;">
                    <label class="feedback-loop-extra__checkbox" style="color: #707070;">
                     선택하신 항목들에 대해 무엇을 알고 싶으신가요?
                    </label>
                    <label>
                     <span class="invisible_spoken">
                      의견을 입력해주세요
                     </span>
                    </label>
                   </div>
                   <div class="feedback-loop__options feedback-loop__submit">
                    [linkx]
                    
                   </div>
                   <a class="feedback-loop__secondary-cta" data-close="" href=";">
                    취소
                   </a>
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   [ahref]
                   
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   <a class="feedback-loop__secondary-cta" data-action="reset showView" data-view="index" href=";">
                    재시도
                   </a>
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   [mkey1]<li>[linkx]</li><li>[ahref]</li>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
             <tr>
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872904">
                <div class="room-info" id="RD156872904">
                 <a class="jqrt togglelink" data-room-name-en="Grand Deluxe Double Room" href="4">
                  <i class="rt_room_type_ico bicon-triangleright">
                  </i>
                  그랜드 디럭스 더블룸
                 </a>
                 <div class="bed-types-wrapper ">
                  <ul class="rt-bed-types">
                   <li class="rt-bed-type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872904" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872904">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div aria-hidden="true" class=" hp-lightbox-gallery-container gallery-corner-nav xl_photo ">
                 <div>
                  <div class="hp-gallery">
                   <div class="hp-gallery-slides" data-gallery="">
                    <div data-photoid="195275004">
                    </div>
                    <div data-photoid="195274909">
                    </div>
                    <div data-photoid="73789651">
                    </div>
                   </div>
                   <div class="hp-gallery-controls hp-controls--visible">
                    <button aria-label="이전 사진" class="hp-gallery-control hp-gallery-control-prev" data-nav="prev">
                    </button>
                    <button aria-label="다음 사진" class="hp-gallery-control hp-gallery-control-next" data-nav="next">
                    </button>
                   </div>
                  </div>
                  <div class="b_nha_hotel_small_images">
                   <div class="hp-gallery-thumbs hp-gallery-thumbs_border">
                    [linkx]
                    
                    <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover" data-photoid="195274909" onclick="return false" target="_blank">
                    </a>
                    [linkx]
                    
                    <div class="clearfix">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  55 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  이 넓은 더블룸은 위성 및 개별 프로그램 유료 시청 시스템(PPV)이 구비된 평면 TV를 갖추고 있고, 소파와 미니바도 마련되어 있습니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다.
                  <br>
                   <br>
                    이 객실에서는 정원의 전경을 조망하실 수 있습니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="46">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Balcony">
                    • 발코니
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa">
                    • 소파
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="View">
                    • 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Terrace">
                    • 테라스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872904" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                   <div class="feedback-loop__title">
                    숙소에 대해 더 알고 싶은 내용이 있으신가요?
                   </div>
                   <p class="feedback-loop__subtitle">
                    (보내주신 답변은 서비스 향상에 큰 도움이 됩니다)
                   </p>
                   <ul class="feedback-loop__group-body feedback-loop__list" style="display: block;">
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주방
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       조식
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 정원
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 전망
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 시설
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주차
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       흡연 가능 여부
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       기타
                      </span>
                     </label>
                    </li>
                   </ul>
                   <div class="feedback-loop-extra__question g-hidden" style="display:none;">
                    <label class="feedback-loop-extra__checkbox" style="color: #707070;">
                     선택하신 항목들에 대해 무엇을 알고 싶으신가요?
                    </label>
                    <label>
                     <span class="invisible_spoken">
                      의견을 입력해주세요
                     </span>
                    </label>
                   </div>
                   <div class="feedback-loop__options feedback-loop__submit">
                    [linkx]
                    
                   </div>
                   [linkx]
                   
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   <a class="feedback-loop__secondary-cta" data-close="" href=";">
                    닫기
                   </a>
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   [ahref]
                   
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   <div>
                    <span class="inline-feedback__title">
                     혹시 찾지 못하신 정보가 있나요?
                    </span>
                   </div>
                   <div>
                    <span class="inline-feedback__link" data-action="close_lightbox submit modal hide hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: yes" data-model="missing_info" data-model-value="1" data-show-form=".LB_156872904" role="button" tabindex="0">
                     예
                    </span>
                    <span class="inline-feedback__separator">
                     /
                    </span>
                    <span class="inline-feedback__link" data-action="submit showView hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: no" data-model="not_missing_info" data-model-value="1" data-show-view="thankyou" role="button" tabindex="0">
                     아니요
                    </span>
                   </div>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
             <tr class="odd">
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872905">
                <div class="room-info" id="RD156872905">
                 [linkx]
                 
                 <div class="appartment-bed-types-wrapper ">
                  <ul class="room-config">
                   <li class="bedroom_bed_type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872905" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872905">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div aria-hidden="true" class=" hp-lightbox-gallery-container gallery-corner-nav xl_photo ">
                 <div>
                  <div class="hp-gallery">
                   <div class="hp-gallery-slides" data-gallery="">
                    <div data-photoid="73789832">
                    </div>
                    <div data-photoid="73791260">
                    </div>
                    <div data-photoid="73791267">
                    </div>
                   </div>
                   <div class="hp-gallery-controls hp-controls--visible">
                    <button aria-label="이전 사진" class="hp-gallery-control hp-gallery-control-prev" data-nav="prev">
                    </button>
                    <button aria-label="다음 사진" class="hp-gallery-control hp-gallery-control-next" data-nav="next">
                    </button>
                   </div>
                  </div>
                  <div class="b_nha_hotel_small_images">
                   <div class="hp-gallery-thumbs hp-gallery-thumbs_border">
                    [ahref]
                    
                    [linkx]
                    
                    <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover" data-photoid="73791267" onclick="return false" target="_blank">
                    </a>
                    <div class="clearfix">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                  </h2>
                  75 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  이 스위트는 위성 및 개별 프로그램 유료 시청 시스템(PPV)이 구비된 평면 TV와 소파, 미니바가 마련된 휴식 공간을 갖추고 있습니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다.
                  <br>
                   <br>
                    이 객실에서는 정원의 전경을 조망하실 수 있습니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="49">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Balcony">
                    • 발코니
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Seating area">
                    • 휴식 공간
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa">
                    • 소파
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="View">
                    • 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bidet">
                    • 비데
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Terrace">
                    • 테라스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa bed">
                    • 소파 베드
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872905" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                   <div class="feedback-loop__title">
                    숙소에 대해 더 알고 싶은 내용이 있으신가요?
                   </div>
                   <p class="feedback-loop__subtitle">
                    (보내주신 답변은 서비스 향상에 큰 도움이 됩니다)
                   </p>
                   <ul class="feedback-loop__group-body feedback-loop__list" style="display: block;">
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주방
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       조식
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 정원
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 전망
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 시설
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주차
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       흡연 가능 여부
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       기타
                      </span>
                     </label>
                    </li>
                   </ul>
                   <div class="feedback-loop-extra__question g-hidden" style="display:none;">
                    <label class="feedback-loop-extra__checkbox" style="color: #707070;">
                     선택하신 항목들에 대해 무엇을 알고 싶으신가요?
                    </label>
                    <label>
                     <span class="invisible_spoken">
                      의견을 입력해주세요
                     </span>
                    </label>
                   </div>
                   <div class="feedback-loop__options feedback-loop__submit">
                    [ahref]
                    
                   </div>
                   [ahref]
                   
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   [linkx]
                   
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   [linkx]
                   
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   <div>
                    <span class="inline-feedback__title">
                     혹시 찾지 못하신 정보가 있나요?
                    </span>
                   </div>
                   <div>
                    <span class="inline-feedback__link" data-action="close_lightbox submit modal hide hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: yes" data-model="missing_info" data-model-value="1" data-show-form=".LB_156872905" role="button" tabindex="0">
                     예
                    </span>
                    <span class="inline-feedback__separator">
                     /
                    </span>
                    <span class="inline-feedback__link" data-action="submit showView hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: no" data-model="not_missing_info" data-model-value="1" data-show-view="thankyou" role="button" tabindex="0">
                     아니요
                    </span>
                   </div>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
             <tr>
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872906">
                <div class="room-info" id="RD156872906">
                 [linkx]
                 
                 <div class="appartment-bed-types-wrapper ">
                  <ul class="room-config">
                   <li class="bedroom_bed_type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872906" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872906">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div aria-hidden="true" class=" hp-lightbox-gallery-container gallery-corner-nav xl_photo ">
                 <div>
                  <div class="hp-gallery">
                   <div class="hp-gallery-slides" data-gallery="">
                    <div data-photoid="66903754">
                    </div>
                    <div data-photoid="66909137">
                    </div>
                    <div data-photoid="73791292">
                    </div>
                   </div>
                   <div class="hp-gallery-controls hp-controls--visible">
                    <button aria-label="이전 사진" class="hp-gallery-control hp-gallery-control-prev" data-nav="prev">
                    </button>
                    <button aria-label="다음 사진" class="hp-gallery-control hp-gallery-control-next" data-nav="next">
                    </button>
                   </div>
                  </div>
                  <div class="b_nha_hotel_small_images">
                   <div class="hp-gallery-thumbs hp-gallery-thumbs_border">
                    <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover" data-photoid="66903754" onclick="return false" target="_blank">
                    </a>
                    [ahref]
                    
                    [ahref]
                    
                    <div class="clearfix">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                  </h2>
                  80 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  더욱 넓은 스위트로 개별 프로그램 유료 시청 시스템(PPV)과 위성 채널이 편성된 평면 TV, 휴식 공간 및 미니바를 갖추고 있습니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다. 일부 객실에는 발코니가 마련되어 있습니다.
                  <br>
                   <br>
                    이 스위트는 발코니와 정원 전망을 자랑합니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="50">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Balcony">
                    • 발코니
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Seating area">
                    • 휴식 공간
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa">
                    • 소파
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="View">
                    • 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bidet">
                    • 비데
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Terrace">
                    • 테라스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dining table">
                    • 식탁
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa bed">
                    • 소파 베드
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872906" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                   <div class="feedback-loop__title">
                    숙소에 대해 더 알고 싶은 내용이 있으신가요?
                   </div>
                   <p class="feedback-loop__subtitle">
                    (보내주신 답변은 서비스 향상에 큰 도움이 됩니다)
                   </p>
                   <ul class="feedback-loop__group-body feedback-loop__list" style="display: block;">
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주방
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       조식
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 정원
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 전망
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 시설
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주차
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       흡연 가능 여부
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       기타
                      </span>
                     </label>
                    </li>
                   </ul>
                   <div class="feedback-loop-extra__question g-hidden" style="display:none;">
                    <label class="feedback-loop-extra__checkbox" style="color: #707070;">
                     선택하신 항목들에 대해 무엇을 알고 싶으신가요?
                    </label>
                    <label>
                     <span class="invisible_spoken">
                      의견을 입력해주세요
                     </span>
                    </label>
                   </div>
                   <div class="feedback-loop__options feedback-loop__submit">
                    [ahref]
                    
                   </div>
                   [linkx]
                   
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   [linkx]
                   
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   [linkx]
                   
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   <div>
                    <span class="inline-feedback__title">
                     혹시 찾지 못하신 정보가 있나요?
                    </span>
                   </div>
                   <div>
                    <span class="inline-feedback__link" data-action="close_lightbox submit modal hide hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: yes" data-model="missing_info" data-model-value="1" data-show-form=".LB_156872906" role="button" tabindex="0">
                     예
                    </span>
                    <span class="inline-feedback__separator">
                     /
                    </span>
                    <span class="inline-feedback__link" data-action="submit showView hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: no" data-model="not_missing_info" data-model-value="1" data-show-view="thankyou" role="button" tabindex="0">
                     아니요
                    </span>
                   </div>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
             <tr class="odd">
              <td class="occ_no_dates" style="border-right: 1px solid #5bbaff; border-left: 0 none;">
               <span class="occupancy_adults jq_tooltip" title="기본 인원: 2명">
                <i class="bicon bicon-occupancy">
                </i>
                <i class="bicon bicon-occupancy">
                </i>
               </span>
              </td>
              <td class="ftd roomType">
               <div id="156872907">
                <div class="room-info" id="RD156872907">
                 <a class="jqrt togglelink" data-room-name-en="Deluxe Suite" href="7">
                  <i class="rt_room_type_ico bicon-triangleright">
                  </i>
                  디럭스 스위트룸
                 </a>
                 <div class="appartment-bed-types-wrapper ">
                  <ul class="room-config">
                   <li class="bedroom_bed_type">
                    <span>
                     대형 더블침대 1개
                     <i class="bicon bicon-double">
                     </i>
                    </span>
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
              </td>
              <td class="rt_show_dates">
               <span class="b-button b-button_primary jq_tooltip js_price_button " data-title="이용 가능 객실 및 가격을 확인하시려면 체크인 및 체크아웃 날짜를 입력해 주십시오." id="rt_156872907" rel="300">
                <span class="b-button__text">
                 요금 표시
                </span>
               </span>
              </td>
             </tr>
             <tr class="extendedRow sold ">
              <td colspan="5">
               <div class="blocktoggle" id="blocktoggleRD156872907">
                <span class="invisible_spoken">
                 대화 상자 내용이 시작됩니다
                </span>
                <div aria-hidden="true" class=" hp-lightbox-gallery-container gallery-corner-nav xl_photo ">
                 <div>
                  <div class="hp-gallery">
                   <div class="hp-gallery-slides" data-gallery="">
                    <div data-photoid="195276190">
                    </div>
                    <div data-photoid="195276200">
                    </div>
                    <div data-photoid="195276208">
                    </div>
                    <div data-photoid="66909162">
                    </div>
                   </div>
                   <div class="hp-gallery-controls hp-controls--visible">
                    <button aria-label="이전 사진" class="hp-gallery-control hp-gallery-control-prev" data-nav="prev">
                    </button>
                    <button aria-label="다음 사진" class="hp-gallery-control hp-gallery-control-next" data-nav="next">
                    </button>
                   </div>
                  </div>
                  <div class="b_nha_hotel_small_images">
                   <div class="hp-gallery-thumbs hp-gallery-thumbs_border">
                    [ahref]
                    
                    <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover" data-photoid="195276200" onclick="return false" target="_blank">
                    </a>
                    [ahref]
                    
                    <a class="js-hotel-thumb hotel_thumbs_sprite change_large_image_on_hover" data-photoid="66909162" onclick="return false" target="_blank">
                    </a>
                    <div class="clearfix">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <div class="rt_lightbox_description_meta js_hp_rt_lightbox_facilities">
                 <span data-name-en="Bathroom">
                  <i class="bicon-" style="font-size:15pt">
                   댴
                  </i>
                  전용 욕실
                 </span>
                 <p>
                  <span data-component="tooltip" data-name-en="Parking" data-tooltip-custom-class="room-lightbox-tooltip" data-tooltip-text='
<div>
<div class="display--table-row">
<span class="apt_block--left display--table-cell">
<span class="hp-facility-icon-2 hp-facility-icon-policy"></span>
</span>
<span class="apt_block--right">
호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
</span>
</div>
</div>
'>
                   <svg class="bk-icon -iconset-parking_paid_sign" fill="#000000" height="16" viewbox="0 0 128 128" width="16">
                    <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
                    </path>
                    <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h59.7A28.5 28.5 0 1 1 120 79.7V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
                    </path>
                    <path d="M100 80a20 20 0 1 0 20 20 20 20 0 0 0-20-20zm2 29.2v3.3h-3.2v-3a13 13 0 0 1-5.3-1.4l1-3.7a11 11 0 0 0 5.1 1.4c1.9 0 3-.7 3-2s-1-2-3.3-2.8c-3.4-1.1-5.7-2.7-5.7-5.8 0-2.8 2-5 5.3-5.7v-3h3.1v2.8a11.2 11.2 0 0 1 4.6 1l-1 3.7a9.6 9.6 0 0 0-4.5-1.1c-2 0-2.7.9-2.7 1.8s1.1 1.7 3.8 2.7c3.8 1.3 5.2 3 5.2 6s-1.9 5.2-5.5 5.8z">
                    </path>
                   </svg>
                   주차
                  </span>
                 </p>
                 <div class="info" data-name-en="roomsize">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  100 m²
                 </div>
                 <p class=" js_hp_rt_lightbox_room_desc ">
                  더욱 넓은 스위트로 개별 프로그램 유료 시청 시스템(PPV)과 위성 채널이 편성된 평면 TV와 미니바를 갖추고 있습니다. 욕실에는 욕조, 샤워 시설, 헤어드라이어 및 무료 세면도구가 구비되어 있습니다. 일부 객실에는 발코니가 있습니다.
                  <br>
                   <br>
                    이 객실은 정원 전망을 자랑합니다.
                   </br>
                  </br>
                 </p>
                 <div>
                  <p class="hp_rt_lightbox_facilities__title">
                   <h2>
                    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                   </h2>
                  </p>
                  <ul class="hp_rt_lightbox_facilities hp_rt_lightbox_facilities__list" data-nr-of-facilities="50">
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Mini-bar">
                    • 미니바
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Shower">
                    • 샤워
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath">
                    • 욕조
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Safe Deposit Box">
                    • 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Pay-per-view Channels">
                    • 개별 프로그램 유료 시청 시스템(PPV)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="TV">
                    • TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Telephone">
                    • 전화
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Airconditioning">
                    • 에어컨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Hair Dryer">
                    • 헤어드라이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service/Alarm-clock">
                    • 모닝콜 서비스/알람시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Balcony">
                    • 발코니
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Trouser Press">
                    • 바지 다리미
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath-robe">
                    • 목욕 가운
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Radio">
                    • 라디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Refrigerator">
                    • 냉장고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Desk">
                    • 업무용 책상
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Seating area">
                    • 휴식 공간
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Free Toiletries">
                    • 욕실 용품
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="CD-Player">
                    • CD 플레이어
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet">
                    • 화장실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Video">
                    • 비디오
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bathroom">
                    • 전용 욕실
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Extra long beds (> 2 meter)">
                    • 긴 침대(2m 이상)
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Heating">
                    • 난방 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dressing room">
                    • 드레스룸
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Slippers">
                    • 슬리퍼
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Satellite Channels">
                    • 위성 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Cable channels">
                    • 케이블 채널
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bath or Shower">
                    • 욕조 또는 샤워기
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Carpeted Floor">
                    • 카페트 바닥
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Interconnecting Room(s) available">
                    • 서로 연결된 객실 이용 가능
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Laptop Safe Box">
                    • 노트북 안전 금고
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Flat-screen TV">
                    • 평면 TV
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Private Entrance">
                    • 전용 입구
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa">
                    • 소파
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Soundproofing">
                    • 방음 시설
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="View">
                    • 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wake Up Service">
                    • 모닝콜 서비스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Alarm Clock">
                    • 알람 시계
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels/Linens at surcharge">
                    • 유료 수건/침대 시트
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Wardrobe/Closet">
                    • 옷장
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Bidet">
                    • 비데
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Garden View">
                    • 정원 전망
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Terrace">
                    • 테라스
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Towels">
                    • 타월
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Linen">
                    • 린넨
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Dining table">
                    • 식탁
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Clothes Rack">
                    • 옷걸이
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Toilet paper">
                    • 화장지
                   </li>
                   <li class="hp_rt_lightbox_facilities__list__item" data-name-en="Sofa bed">
                    • 소파 베드
                   </li>
                  </ul>
                 </div>
                 <div class="info hp-rt-lightbox-free-items hp-rt-lightbox-free-wifi">
                  <p data-name-en="wifi">
                   무료 Wi-Fi!
                  </p>
                 </div>
                 <div class="parking-policy">
                  <h2>
                   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                  </h2>
                  <div class="parking-policy__title">
                   <div>
                    <div class="display--table-row">
                     <span class="apt_block--left display--table-cell">
                      <span class="hp-facility-icon-2 hp-facility-icon-policy">
                      </span>
                     </span>
                     <span class="apt_block--right">
                      호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
                     </span>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="feedback-loop feedback-loop-lightbox feedback_room-missing-facilities LB_156872907" data-component="feedback-base" data-default-action-event="click" data-default-view="index" data-never-expire="1" data-poll="rc_www_hp_rt_lb_missing_info_new" data-timeout="0" data-url="/receive_content_feedback">
                  <div class="feedback-loop__view-feedback" data-view="index">
                   <div class="feedback-loop__title">
                    숙소에 대해 더 알고 싶은 내용이 있으신가요?
                   </div>
                   <p class="feedback-loop__subtitle">
                    (보내주신 답변은 서비스 향상에 큰 도움이 됩니다)
                   </p>
                   <ul class="feedback-loop__group-body feedback-loop__list" style="display: block;">
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주방
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       조식
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 정원
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 전망
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       객실 시설
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       주차
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       흡연 가능 여부
                      </span>
                     </label>
                    </li>
                    <li class="feedback-loop__list-item">
                     <label class="feedback-loop__checkbox">
                      <span class="feedback-loop-extra__checkbox-caption">
                       기타
                      </span>
                     </label>
                    </li>
                   </ul>
                   <div class="feedback-loop-extra__question g-hidden" style="display:none;">
                    <label class="feedback-loop-extra__checkbox" style="color: #707070;">
                     선택하신 항목들에 대해 무엇을 알고 싶으신가요?
                    </label>
                    <label>
                     <span class="invisible_spoken">
                      의견을 입력해주세요
                     </span>
                    </label>
                   </div>
                   <div class="feedback-loop__options feedback-loop__submit">
                    [ahref]
                    
                   </div>
                   <a class="feedback-loop__secondary-cta" data-close="" href=";">
                    취소
                   </a>
                  </div>
                  <div class="feedback-loop__view-final" data-view="final">
                   <p class="feedback-loop__header">
                    시간을 내주셔서 진심으로 감사드립니다!
                   </p>
                   <p>
                    고객님의 답변을 바탕으로 보다 유용한 정보를 제공하여 더욱 손쉽게 원하는 숙소를 찾으실 수 있도록 최선을 다하겠습니다.
                   </p>
                   [linkx]
                   
                  </div>
                  <div class="feedback-loop__view-error" data-view="error">
                   <p class="feedback-loop__header">
                    죄송합니다. 답변 저장 중 오류가 발생하였습니다. 다시 시도해주세요.
                   </p>
                   [linkx]
                   
                  </div>
                 </div>
                 <div class="inline-feedback inline-feedback_bordered-light inline-feedback_lightbox g-hidden " data-component="feedback-inline" data-modal-extra-class="feedback-modal-wrapper feedback-modal-wrapper_over" data-modal-mask-extra-class="feedback-modal-mask_over" data-poll="rc_www_hp_rt_lb_missing_info_new">
                  <div data-view="index">
                   <div>
                    <span class="inline-feedback__title">
                     혹시 찾지 못하신 정보가 있나요?
                    </span>
                   </div>
                   <div>
                    <span class="inline-feedback__link" data-action="close_lightbox submit modal hide hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: yes" data-model="missing_info" data-model-value="1" data-show-form=".LB_156872907" role="button" tabindex="0">
                     예
                    </span>
                    <span class="inline-feedback__separator">
                     /
                    </span>
                    <span class="inline-feedback__link" data-action="submit showView hideOther trackGaEvent" data-feedback-ga-event="Hotel Page|LB: Room Missing info|click: no" data-model="not_missing_info" data-model-value="1" data-show-view="thankyou" role="button" tabindex="0">
                     아니요
                    </span>
                   </div>
                  </div>
                  <div class="inline-feedback__hidden" data-view="thankyou" data-view-animated="1">
                   답변해주셔서 감사합니다.
                  </div>
                 </div>
                </div>
                <div class="clearfix">
                </div>
                <div class="sb-searchbox__outer " data-sb-outer="">
                 <form action="/hotel/fr/ritz-paris-paris.ko.html#availability_target" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="hp_av_popup" id="frm" method="get" role="search">
                 </form>
                </div>
                <span class="invisible_spoken">
                 대화 상자 내용이 끝났습니다
                </span>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
          </div>
         </div>
         <div data-et-view="NVNZWUcCcCcCDSWGGZAZOHYO:2">
         </div>
         <div data-et-view="BOeaQDSWeUGWZTSaKQHcGWUC:2">
         </div>
         <div data-anim-type="fadeInBottom" data-component="onview-animate">
          <div class="fe_banner fe_banner__accessible fe_banner__scale_small fe_banner__w-icon fe_banner__red ">
           <i aria-hidden="true" class="fe_banner__icon bicon-alarm">
           </i>
           <div class="fe_banner__message ">
            <strong>
             파리에서 방금 예약
            </strong>
            저희 사이트에서 지난 15분 동안파리에 위치한 리츠 파리 유사 숙소 7곳이 예약되었습니다
           </div>
          </div>
         </div>
         <div data-et-view="AEJPOTBcJMcJZedPKPZSeKdRe:2" style="height: 1px;">
         </div>
         <div data-component="hotel/contact-host">
         </div>
         <svg class="bk-icon -iconset-loading" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
          <defs>
          </defs>
          <g data-name="8x" id="_8x-d7fe">
           <g id="loading-9c20">
            <path class="cls-1" d="M64,8h0a4.67,4.67,0,0,1,4.67,4.67V31.33A4.67,4.67,0,0,1,64,36h0a4.67,4.67,0,0,1-4.67-4.67V12.67A4.67,4.67,0,0,1,64,8Z">
            </path>
            <path class="cls-2" d="M92,15.48h0a4.67,4.67,0,0,1,1.71,6.37L84.37,38A4.67,4.67,0,0,1,78,39.72h0a4.67,4.67,0,0,1-1.71-6.37l9.33-16.17A4.67,4.67,0,0,1,92,15.48Z">
            </path>
            <path class="cls-3" d="M112.52,36h0a4.67,4.67,0,0,1-1.71,6.37L94.65,51.71A4.67,4.67,0,0,1,88.28,50h0A4.67,4.67,0,0,1,90,43.63l16.17-9.33A4.67,4.67,0,0,1,112.52,36Z">
            </path>
            <path class="cls-4" d="M120,64h0a4.67,4.67,0,0,1-4.67,4.67H96.67A4.67,4.67,0,0,1,92,64h0a4.67,4.67,0,0,1,4.67-4.67h18.67A4.67,4.67,0,0,1,120,64Z">
            </path>
            <path class="cls-5" d="M112.52,92h0a4.67,4.67,0,0,1-6.37,1.71L90,84.37A4.67,4.67,0,0,1,88.28,78h0a4.67,4.67,0,0,1,6.37-1.71l16.17,9.33A4.67,4.67,0,0,1,112.52,92Z">
            </path>
            <path class="cls-6" d="M92,112.52h0a4.67,4.67,0,0,1-6.37-1.71L76.29,94.65A4.67,4.67,0,0,1,78,88.28h0A4.67,4.67,0,0,1,84.37,90l9.33,16.17A4.67,4.67,0,0,1,92,112.52Z">
            </path>
            <path class="cls-7" d="M64,120h0a4.67,4.67,0,0,1-4.67-4.67V96.67A4.67,4.67,0,0,1,64,92h0a4.67,4.67,0,0,1,4.67,4.67v18.67A4.67,4.67,0,0,1,64,120Z">
            </path>
            <path class="cls-8" d="M36,112.52h0a4.67,4.67,0,0,1-1.71-6.37L43.63,90A4.67,4.67,0,0,1,50,88.28h0a4.67,4.67,0,0,1,1.71,6.37l-9.33,16.17A4.67,4.67,0,0,1,36,112.52Z">
            </path>
            <path class="cls-9" d="M15.48,92h0a4.67,4.67,0,0,1,1.71-6.37l16.17-9.33A4.67,4.67,0,0,1,39.72,78h0A4.67,4.67,0,0,1,38,84.37L21.85,93.71A4.67,4.67,0,0,1,15.48,92Z">
            </path>
            <path class="cls-10" d="M8,64H8a4.67,4.67,0,0,1,4.67-4.67H31.33A4.67,4.67,0,0,1,36,64h0a4.67,4.67,0,0,1-4.67,4.67H12.67A4.67,4.67,0,0,1,8,64Z">
            </path>
            <path class="cls-11" d="M15.48,36h0a4.67,4.67,0,0,1,6.37-1.71L38,43.63A4.67,4.67,0,0,1,39.72,50h0a4.67,4.67,0,0,1-6.37,1.71L17.18,42.37A4.67,4.67,0,0,1,15.48,36Z">
            </path>
            <path class="cls-12" d="M36,15.48h0a4.67,4.67,0,0,1,6.37,1.71l9.33,16.17A4.67,4.67,0,0,1,50,39.72h0A4.67,4.67,0,0,1,43.63,38L34.29,21.85A4.67,4.67,0,0,1,36,15.48Z">
            </path>
           </g>
          </g>
         </svg>
         <svg class="bk-icon -iconset-info_sign" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
          <path d="M49.4 85l4.2-17.2c.7-2.7.8-3.8 0-3.8a29 29 0 0 0-8.8 3.8l-1.8-3A48 48 0 0 1 66.7 53c3.7 0 4.3 4.3 2.5 11l-5 18c-.7 3.3-.3 4.3.5 4.3a19 19 0 0 0 8.2-4L75 85c-8.6 8.7-18.2 12-21.8 12s-6.4-2.3-3.8-12zM75 36a9.2 9.2 0 0 1-9.2 9c-4.4 0-7-2.7-6.8-7a9 9 0 0 1 9.1-9c4.6 0 6.9 3.2 6.9 7z">
          </path>
          <path d="M62 16a48 48 0 1 1-48 48 48 48 0 0 1 48-48m0-8a56 56 0 1 0 56 56A56 56 0 0 0 62 8z">
          </path>
         </svg>
         <div data-js-session-unrc="1" style="position:absolute;width:0;height:0;opacity:0;">
         </div>
         <div data-et-view="YdXfdKNKNKPZHSYeGIXUFcNLbcINHJNKe:1">
         </div>
         <div class="property_page_surroundings_block ">
          <div class="containh2">
           <div class="hp-section-header--with-cta clearfix loc_block_contaioner_fix" data-et-view="NAFQVaPEbBBcBUZOOVNcdNCDZTQZJJIFO:1 ">
            <button class="b-button b-button_primary hp-section-header__cta hp-scroll-up-to-dates hp-section-bui-header__cta " data-et-click="" data-et-mouseenter="" id="cta-surroundings">
             <span class="b-button__text">
              예약 가능 여부 보기
             </span>
            </button>
            <h2 class="hp-poi__section-heading loc_block_header_fix">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
            <span class="show_map_surroundings">
             –
             <span class="show_map_endorsements_tooltip" data-tt_id="show_map_endorsements_tooltip">
              <span class="hp_map_link_endorsements">
               다음 테마에 관심 있는 여행객에게 최적인 이곳: 음식, 쇼핑, 박물관 – 위치 확인
              </span>
             </span>
             <a aria-hidden="true" class="loc_block_link_underline_fix show_map show_map_with_endorsements " data-atlas-bbox="48.8499325356013,2.30141824031931,48.8858633687475,2.35614196338555" data-atlas-latlng="48.86789795,2.32878010" data-component="tooltip" data-et-click="adUTWALOLOLOOTEVdZMTUBPAcSWBRUDKe:3" data-et-mouseenter="adUTWALOLOLOOTEVdZMTUBPAcSWBRUDKe:2" data-et-view="adUTWALOLOLOOTEVdZMTUBPAcSWBRUDKe:1" data-node_tt_id="show_map_endorsements_tooltip" data-source="surroundings_link" data-tooltip-animation="false" data-tooltip-text="
다음 테마에 관심 있는 여행객에게 최적인 이곳: 음식, 쇼핑, 박물관 &amp;ndash; 위치 확인
" data-width="300" href="s" id="hotel_surroundings" style="white-space:nowrap" tab-index="0" title="리츠 파리, 파리 - 위치 확인">
              최고의 위치 - 지도에서 보기
             </a>
            </span>
            <span class=" u-display-block hp-poi__walking-score loc_block_tooltip_spacing_fix ">
             <span class="hp_facilities_score jq_tooltip loc_block_tooltip_fix" data-title="12명의 투숙객이 평가한 숙소 주변 산책 평점: 9.4">
              투숙객들이 숙소 근처 산책이 좋았다고 답했어요!
             </span>
            </span>
           </div>
          </div>
          <div class=" hp-poi-content-container hp-poi-content-container--column clearfix shopping_included ">
           <div class=" hp-poi-content-section closest-landmarks hp-poi-content-section__wrapper">
            <h3 class="hp-poi-list__heading">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <ul class="bui-list bui-list--text hp-poi-list__wrapper">
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                법무부
               </div>
               <span class="hp-poi-list__distance">
                0 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                방돔 광장
               </div>
               <span class="hp-poi-list__distance">
                0.1 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                프랑스회계감사원
               </div>
               <span class="hp-poi-list__distance">
                0.2 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                파리 노트르담 드 라솜숀 교회
               </div>
               <span class="hp-poi-list__distance">
                0.2 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                올림피아
               </div>
               <span class="hp-poi-list__distance">
                0.3 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                라 페피니에르 극장
               </div>
               <span class="hp-poi-list__distance">
                0.3 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                두 마르쉐 생 오노레 광장
               </div>
               <span class="hp-poi-list__distance">
                0.3 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                도누 극장
               </div>
               <span class="hp-poi-list__distance">
                0.3 km
               </span>
              </div>
             </li>
             [ahref]
             
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                에두아르 7세 극장
               </div>
               <span class="hp-poi-list__distance">
                0.4 km
               </span>
              </div>
             </li>
            </ul>
           </div>
           <div class="hp-poi-content-section hp-poi-content-section__wrapper hp-surroundings-category hp-surroundings-category_num-1">
            <h3 class="hp-poi-list__heading">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <ul class="bui-list bui-list--text add hp-poi-list__wrapper">
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                <span>
                 Marché St-Honoré
                </span>
                <span class="bui-badge bui-badge--outline">
                 시장
                </span>
               </div>
               <span class="hp-poi-list__distance">
                0.5 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                <span>
                 MONOPRIX
                </span>
                <span class="bui-badge bui-badge--outline">
                 수퍼마켓
                </span>
               </div>
               <span class="hp-poi-list__distance">
                0.6 km
               </span>
              </div>
             </li>
            </ul>
           </div>
           <div class="hp-poi-content-section hp-poi-content-section__wrapper hp-surroundings-category hp-surroundings-category_num-2">
            <h3 class="hp-poi-list__heading">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <ul class="bui-list bui-list--text add hp-poi-list__wrapper">
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                <span>
                 Seine
                </span>
                <span class="bui-badge bui-badge--outline">
                 강
                </span>
               </div>
               <span class="hp-poi-list__distance">
                0.6 km
               </span>
              </div>
             </li>
            </ul>
           </div>
           <div class="hp-poi-content-section hp-poi-content-section__wrapper hp-surroundings-category hp-surroundings-category_num-3">
            <h3 class="hp-poi-list__heading">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <ul class="bui-list bui-list--text add hp-poi-list__wrapper">
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                파리-오를리 공항
               </div>
               <span class="hp-poi-list__distance">
                15.6 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                파리-샤를드골 공항
               </div>
               <span class="hp-poi-list__distance">
                23.4 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                파리-보베-틸레 공항
               </div>
               <span class="hp-poi-list__distance">
                67.7 km
               </span>
              </div>
             </li>
            </ul>
           </div>
           <div class=" hp-poi-content-section shopping-nearby hp-poi-content-section__wrapper">
            <h3 class="hp-poi-list__heading">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h3>
            <ul class="bui-list bui-list--text hp-poi-list__wrapper">
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                <span class="hp-poi-list__description-title">
                 Place Vendome
                 <span class="bui-badge bui-badge--outline">
                  명품샵
                 </span>
                 <span class="bui-badge bui-badge--outline">
                  대형 브랜드샵
                 </span>
                 <span class="bui-badge bui-badge--outline">
                  부티크샵
                 </span>
                </span>
                <div class="hp-poi-list__description-subtitle">
                 인근 유명 브랜드: Rolex, Cartier, Chanel, Louis Vuitton
                </div>
               </div>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                <span class="hp-poi-list__description-title">
                 Rue de Rivoli
                 <span class="bui-badge bui-badge--outline">
                  대형 브랜드샵
                 </span>
                 <span class="bui-badge bui-badge--outline">
                  부티크샵
                 </span>
                </span>
                <div class="hp-poi-list__description-subtitle">
                 인근 유명 브랜드: H&amp;M, Zara, Chanel
                </div>
               </div>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                <span class="hp-poi-list__description-title">
                 Rue du Faubourg Saint-Honoré
                 <span class="bui-badge bui-badge--outline">
                  명품샵
                 </span>
                 <span class="bui-badge bui-badge--outline">
                  백화점
                 </span>
                 <span class="bui-badge bui-badge--outline">
                  대형 브랜드샵
                 </span>
                </span>
                <div class="hp-poi-list__description-subtitle">
                 인근 유명 브랜드: Gucci, Hermès, Ralph Lauren, Chanel, Burberry
                </div>
               </div>
              </div>
             </li>
            </ul>
           </div>
           <div class=" hp-poi-content-section popular-landmarks hp-poi-content-section__wrapper">
            <h3 class="hp-poi-list__heading">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <ul class="bui-list bui-list--text hp-poi-list__wrapper">
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                오페라 가르니에
               </div>
               <span class="hp-poi-list__distance">
                0.5 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                루브르 박물관
               </div>
               <span class="hp-poi-list__distance">
                1 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                라 시갈 콘서트 홀
               </div>
               <span class="hp-poi-list__distance">
                1.8 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                노트르담 대성당
               </div>
               <span class="hp-poi-list__distance">
                2.2 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                사크레쾨르 대성당
               </div>
               <span class="hp-poi-list__distance">
                2.3 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                파리 북역
               </div>
               <span class="hp-poi-list__distance">
                2.3 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                가르 드 레스트 지하철역
               </div>
               <span class="hp-poi-list__distance">
                2.4 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                파리 동역
               </div>
               <span class="hp-poi-list__distance">
                2.4 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                개선문
               </div>
               <span class="hp-poi-list__distance">
                2.6 km
               </span>
              </div>
             </li>
             <li class="bui-list__item">
              <div class="hp-poi-list__body">
               <div class="hp-poi-list__description">
                오페라 바스티유
               </div>
               <span class="hp-poi-list__distance">
                3.5 km
               </span>
              </div>
             </li>
            </ul>
           </div>
          </div>
          <div class="small_text_legal_disclaimer">
           <div>
            *
           </div>
           <div>
            모든 거리는 직선 거리 기준이며, 실제 이동 거리는 다를 수 있습니다.
           </div>
          </div>
         </div>
         <div class="hp_region_attractions hp-region-attractions__wrapper clearfix">
         </div>
         <div class="restaurant-grid-block" data-component="toggle">
          <div class="hp-section-header restaurant-grid-header">
           <i aria-hidden="true" class="bicon-restaurants ">
           </i>
           구내 레스토랑 1개
          </div>
          <div class="restaurant-grid">
           <ul class="restaurant-row one-column ">
            <li class="restaurant-block">
             <div class="inner">
              <h3 class="restaurant-name">
               <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
              </h3>
              <p class="cuisines restaurant-feature">
               <span class="title">
                요리:
               </span>
               프랑스식
              </p>
              <p class="open-for restaurant-feature">
               <span class="title">
                가능한 식사:
               </span>
               조식,
브런치,
중식,
석식
              </p>
              <p class="menu-type restaurant-feature">
               <span class="title">
                메뉴:
               </span>
               일품요리
              </p>
             </div>
            </li>
           </ul>
          </div>
         </div>
         <div class="var-2" id="usp-hotelpage-main-col">
          <div class="containh2">
           <h2>
            <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
           </h2>
          </div>
          <div class="content-wrapper clearfix">
           <div class="boxx readable-sub-paragraph usp-no-sub-headers" id="uspsbox">
            <h2 class="screen_reader_heading">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
            <div class="oneusp usp_tick2" id="usp_rates">
             <div aria-hidden="true" class="hp-usp-icon usp-tick-icon">
              <svg class="bk-icon -sprite-usp-tick-with-circle-in-main-col bui__icon_tick_with_circle" height="32" viewbox="0 0 32 32" width="32">
               <circle cx="16" cy="16" fill="#FFF" r="15.5">
               </circle>
               <path d="M16 32C7.2 32 0 24.8 0 16S7.2 0 16 0s16 7.2 16 16-7.2 16-16 16zm0-31C7.8 1 1 7.8 1 16s6.8 15 15 15 15-6.8 15-15S24.2 1 16 1z" fill="#3CB3E7">
               </path>
               <g>
                <path d="M21.3 15.9c-1.4 0-2.4-1.1-2.4-2.4s1.1-2.4 2.4-2.4c1.4 0 2.4 1.1 2.4 2.4s-1 2.4-2.4 2.4" fill="#3CB3E7">
                </path>
                <path d="M18.2 14.4L13.4 19l-3.7-3.6-2.5 2.4 6.2 6 7.4-7.2c-1.2-.1-2.3-1.1-2.6-2.2" fill="#003580">
                </path>
               </g>
              </svg>
             </div>
             <p class="usp_heading pp_bpg_tooltip_holder" data-component="tt-fancy" data-content='
        <div class="pp-bpg-tooltip--header">
            최저가 맞춤
        </div>
        <div class="pp-bpg-tooltip--image"></div>
        <div class="pp-bpg-tooltip--text">
            
                저렴한 요금 •
            
            <span class="no_booking_fees_fr_tooltip" >예약 수수료 없음</span> •
                더 싼 요금을 찾으셨나요? 차액을 돌려드립니다!
        </div>
        
    
'>
              어디에서도 볼 수 없는 특가!
             </p>
            </div>
            <div class="oneusp oneusp usp_tick2" id="usp_mypage">
             <div aria-hidden="true" class="hp-usp-icon usp-tick-icon">
              <svg class="bk-icon -sprite-usp-tick-with-circle-in-main-col bui__icon_tick_with_circle" height="32" viewbox="0 0 32 32" width="32">
               <circle cx="16" cy="16" fill="#FFF" r="15.5">
               </circle>
               <path d="M16 32C7.2 32 0 24.8 0 16S7.2 0 16 0s16 7.2 16 16-7.2 16-16 16zm0-31C7.8 1 1 7.8 1 16s6.8 15 15 15 15-6.8 15-15S24.2 1 16 1z" fill="#3CB3E7">
               </path>
               <g>
                <path d="M21.3 15.9c-1.4 0-2.4-1.1-2.4-2.4s1.1-2.4 2.4-2.4c1.4 0 2.4 1.1 2.4 2.4s-1 2.4-2.4 2.4" fill="#3CB3E7">
                </path>
                <path d="M18.2 14.4L13.4 19l-3.7-3.6-2.5 2.4 6.2 6 7.4-7.2c-1.2-.1-2.3-1.1-2.6-2.2" fill="#003580">
                </path>
               </g>
              </svg>
             </div>
             <p class="usp_heading">
              온라인으로 예약 관리
             </p>
            </div>
            <div class="oneusp usp_tick2" id="usp_languages">
             <div aria-hidden="true" class="hp-usp-icon usp-tick-icon">
              <svg class="bk-icon -sprite-usp-tick-with-circle-in-main-col bui__icon_tick_with_circle" height="32" viewbox="0 0 32 32" width="32">
               <circle cx="16" cy="16" fill="#FFF" r="15.5">
               </circle>
               <path d="M16 32C7.2 32 0 24.8 0 16S7.2 0 16 0s16 7.2 16 16-7.2 16-16 16zm0-31C7.8 1 1 7.8 1 16s6.8 15 15 15 15-6.8 15-15S24.2 1 16 1z" fill="#3CB3E7">
               </path>
               <g>
                <path d="M21.3 15.9c-1.4 0-2.4-1.1-2.4-2.4s1.1-2.4 2.4-2.4c1.4 0 2.4 1.1 2.4 2.4s-1 2.4-2.4 2.4" fill="#3CB3E7">
                </path>
                <path d="M18.2 14.4L13.4 19l-3.7-3.6-2.5 2.4 6.2 6 7.4-7.2c-1.2-.1-2.3-1.1-2.6-2.2" fill="#003580">
                </path>
               </g>
              </svg>
             </div>
             <p class="usp_heading">
              9개 언어 서비스 지원
             </p>
            </div>
            <div data-et-view="BUdeUbKCBZDYBSAYeDaRIKe:1">
            </div>
            <div class="oneusp usp_tick2" id="usp_safe">
             <div aria-hidden="true" class="hp-usp-icon usp-tick-icon">
              <svg class="bk-icon -sprite-usp-tick-with-circle-in-main-col bui__icon_tick_with_circle" height="32" viewbox="0 0 32 32" width="32">
               <circle cx="16" cy="16" fill="#FFF" r="15.5">
               </circle>
               <path d="M16 32C7.2 32 0 24.8 0 16S7.2 0 16 0s16 7.2 16 16-7.2 16-16 16zm0-31C7.8 1 1 7.8 1 16s6.8 15 15 15 15-6.8 15-15S24.2 1 16 1z" fill="#3CB3E7">
               </path>
               <g>
                <path d="M21.3 15.9c-1.4 0-2.4-1.1-2.4-2.4s1.1-2.4 2.4-2.4c1.4 0 2.4 1.1 2.4 2.4s-1 2.4-2.4 2.4" fill="#3CB3E7">
                </path>
                <path d="M18.2 14.4L13.4 19l-3.7-3.6-2.5 2.4 6.2 6 7.4-7.2c-1.2-.1-2.3-1.1-2.6-2.2" fill="#003580">
                </path>
               </g>
              </svg>
             </div>
             <p class="usp_heading">
              안전한 예약 가능
             </p>
            </div>
           </div>
          </div>
         </div>
         <div class="sup_whole_property_to_book--empty">
         </div>
         <div class=" facility-block-wrapper facilities_free_color " data-et-view="eWffIEcZYVeHVEMMcQHePeHOcTTC:2 eWffIEcZYVeHVEMMcQHePeHOcTTC:3" id="hp_facilities_box">
          <div class="facilities-sliding-keep">
          </div>
          <h2 class="facilitiesChecklist hp-section-header--with-cta clearfix">
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h2>
          <div class="facilities-sliding-keep">
          </div>
          <div class="facilities-sliding-keep">
           <div class="hp_desc_important_facilities clearfix ">
            <h3 class="hp-description-sub-header">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h3>
            <div class=" important_facility " data-name-en="Parking (fee required)">
             <svg class="bk-icon -iconset-parking_sign hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
              </path>
              <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h88a12 12 0 0 0 12-12V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
              </path>
             </svg>
             주차장
            </div>
            <div class=" important_facility " data-name-en="Free WiFi Internet Access Included">
             <svg class="bk-icon -iconset-wifi hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <circle cx="64" cy="100" r="12">
              </circle>
              <path d="M118.3 32.7A94.9 94.9 0 0 0 64 16 94.9 94.9 0 0 0 9.7 32.7a4 4 0 1 0 4.6 6.6A87 87 0 0 1 64 24a87 87 0 0 1 49.7 15.3 4 4 0 1 0 4.6-6.6zM87.7 68.4a54.9 54.9 0 0 0-47.4 0 4 4 0 0 0 3.4 7.2 47 47 0 0 1 40.6 0 4 4 0 0 0 3.4-7.2z">
              </path>
              <path d="M104 50.5a81.2 81.2 0 0 0-80 0 4 4 0 0 0 4 7 73.2 73.2 0 0 1 72 0 4 4 0 0 0 4-7z">
              </path>
             </svg>
             무료 Wi-Fi
            </div>
            <div class=" important_facility " data-name-en="Family Rooms">
             <svg class="bk-icon -iconset-family hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <path d="M18 18a10 10 0 1 1 10 10 10 10 0 0 1-10-10zm26 16s-9.8-2-16-2-16 2-16 2c-4 1-4.3 3.4-4 6l3.4 30.5a4.3 4.3 0 0 0 1.3 2.6l1.8 1.8a4.3 4.3 0 0 1 1.3 2.7l3.6 38.4a4.4 4.4 0 0 0 4.5 4h8.2a4.4 4.4 0 0 0 4.5-4L40 77.6a4.3 4.3 0 0 1 1.3-2.7l1.9-1.8a4.3 4.3 0 0 0 1.2-2.6L48 40c.3-2.6.1-5-3.9-6zm20 23a8 8 0 1 0-8-8 8 8 0 0 0 8 8zm11.2 2.4A73.6 73.6 0 0 0 64 58a73.6 73.6 0 0 0-11.2 1.4c-2.8.7-3 2.3-2.7 4.1l2.3 21a3 3 0 0 0 1 1.9l1.2 1.2a3 3 0 0 1 1 2l2.4 27.7a3.1 3.1 0 0 0 3.1 2.7H67a3.1 3.1 0 0 0 3.1-2.8l2.5-27.7a3 3 0 0 1 1-1.9l1.2-1.2a3 3 0 0 0 .9-1.8l2.4-21c.2-1.9 0-3.5-2.8-4.2zM100 28a10 10 0 1 0-10-10 10 10 0 0 0 10 10zm16 6s-9.8-2-16-2-16 2-16 2c-4 1-4.3 3.4-4 6l3.4 30.5a4.3 4.3 0 0 0 1.3 2.6l1.8 1.8a4.3 4.3 0 0 1 1.3 2.7l3.6 38.4a4.4 4.4 0 0 0 4.5 4h8.2a4.4 4.4 0 0 0 4.4-4l3.6-38.4a4.3 4.3 0 0 1 1.3-2.7l1.8-1.8a4.3 4.3 0 0 0 1.3-2.6L120 40c.3-2.6.1-5-3.9-6z">
              </path>
             </svg>
             가족 객실
            </div>
            <div class=" important_facility " data-name-en="Spa &amp; Wellness Centre">
             <svg class="bk-icon -iconset-spa hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <path d="M64.7 12.3a.8.8 0 0 0-1 0C57 18 38.4 37.8 59.2 59c.3.3 1.5 1.2 1.7-.3a.6.6 0 0 1 0-.1l3.2-21 3.2 20.8v.3c.3 1.3 1.2.7 1.6.4 21-21.1 2.5-40.8-4.2-46.8zM120 51.8v-.1a.8.8 0 0 0-.3-1C111.9 46.4 87 35.3 74.2 62c-.1.4-.6 1.8.9 1.5l20.8-4-18.4 10-.3.1c-1.2.7-.2 1.4.2 1.6C104.1 84 116.5 60 119.9 51.7zm-111.8.1a.8.8 0 0 1 .3-1c7.7-4.4 32.5-15.4 45.4 11.4.1.3.6 1.7-.9 1.5l-20.9-4 18.5 10h.2c1.2.7.3 1.4-.1 1.7C23.9 84.3 11.5 60.3 8 51.9zm94.5 64a.8.8 0 0 0 .8-.7c.8-8.8.7-36-28.9-36.9-.4 0-1.8.2-1 1.4l12.1 17.5-16.5-12.8-.2-.2c-1.2-.8-1.4.3-1.5.8-.7 29.7 26.2 31.3 35.2 31zm-77.1 0h-.1a.8.8 0 0 1-.8-.7c-.7-8.8-.7-36 29-36.9.3 0 1.8.2 1 1.4L42.3 97.3 59 84.4l.2-.2c1.1-.8 1.4.3 1.4.8.7 29.7-26.2 31.3-35.1 31z">
              </path>
             </svg>
             스파/웰빙
            </div>
            <div class=" important_facility " data-name-en="Swimming pool">
             <svg class="bk-icon -iconset-pool hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <path d="M8.7 79.2a3.8 3.8 0 0 1 5.5-1.3c21 15 34.5 9 50 2.2 14.5-6.5 30.8-13.7 53.6-1.4a4.5 4.5 0 0 1 1.8 5.9 3.9 3.9 0 0 1-5.4 2c-19.5-10.7-32.8-4.8-47 1.5-8.7 3.9-17.6 7.9-28 7.9A50 50 0 0 1 9.9 85.2a4.6 4.6 0 0 1-1.2-6zm109 15.5c-22.7-12.4-39-5-53.5 1.4-15.5 6.9-29 12.9-50-2.2a3.8 3.8 0 0 0-5.6 1.3 4.6 4.6 0 0 0 1.2 6A50 50 0 0 0 39.3 112c10.3 0 19.2-4 28-7.9 14-6.3 27.4-12.2 46.9-1.6a3.9 3.9 0 0 0 5.4-2 4.5 4.5 0 0 0-1.8-5.8zM100 56a12 12 0 1 0-12-12 12 12 0 0 0 12 12zM64.2 72c7.2-3.3 15.2-7 23.8-8.2 0 0-4-8.8-6.8-13.9l-18-29.2c-2.5-4.3-7.5-6-13.5-3.6L27.9 26a6.2 6.2 0 0 0-3.5 7.8 6 6 0 0 0 8 3.4L50 29.7a4 4 0 0 1 5 1.7l6 13.2L24 72c17.6 9.8 26.3 6.3 40.3 0z">
              </path>
             </svg>
             수영장
            </div>
            <div class=" important_facility " data-name-en="Airport Shuttle">
             <svg class="bk-icon -iconset-shuttle hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <path d="M92 100a10 10 0 1 1-10 10 10 10 0 0 1 10-10zm-66 10a10 10 0 1 0 10-10 10 10 0 0 0-10 10zM16 56h88.2a8 8 0 0 1 7.6 5.5l7.8 26.3a8 8 0 0 1 .4 2.5V106a6 6 0 0 1-6 6h-6.1a16 16 0 1 0-31.8 0H52a16 16 0 1 0-31.8 0H16a8 8 0 0 1-8-8V64a8 8 0 0 1 8-8zm72 24l25 8-7-24H88zm-24 0h16V64H64zm-24 0h16V64H40zm-24 0h16V64H16zm28.2-44.6l8 4.5 4.4 8a.4.4 0 0 0 .6 0l1-1a.4.4 0 0 0 0-.3V37l6.5-5.9L76.1 46a1.4 1.4 0 0 0 2 .4l1-.5a1.4 1.4 0 0 0 .5-1.8L72 24.2l9-8.4a10.2 10.2 0 0 0 3-6.4A1.4 1.4 0 0 0 82.6 8a10.2 10.2 0 0 0-6.5 2.9L67.6 20l-19.8-7.5a1.4 1.4 0 0 0-1.8.6l-.5 1A1.4 1.4 0 0 0 46 16l15 11.5-5.8 6.2h-9.7a.4.4 0 0 0-.3.1l-1 1a.4.4 0 0 0 0 .6z">
              </path>
             </svg>
             공항 셔틀
            </div>
            <div class=" important_facility " data-name-en="Bar">
             <svg class="bk-icon -iconset-bar hp__important_facility_icon" height="20" viewbox="0 0 128 128" width="20">
              <rect height="44" width="8" x="60" y="74">
              </rect>
              <rect height="40" rx="4" ry="4" transform="rotate(-90 64 114)" width="8" x="60" y="94">
              </rect>
              <path d="M100 34H28a4 4 0 0 0-3.2 6.4l36 48a4 4 0 0 0 6.4 0l36-48A4 4 0 0 0 100 34zM78.7 61.7H49.3l-16-21.2h61.4z">
              </path>
              <rect height="81.9" rx="3" ry="3" transform="rotate(36.31 78.487 39.584)" width="6" x="75.5" y="-1.4">
              </rect>
              <circle cx="90.6" cy="21.9" r="8">
              </circle>
             </svg>
             바
            </div>
           </div>
          </div>
          <div class="facilitiesChecklist">
           <div class="facilitiesChecklistSection" data-section-id="13">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-garden hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M116 112H69V80.7a10.5 10.5 0 0 0 5.5-9.2 8.5 8.5 0 0 0-.2-1.7 8.5 8.5 0 0 0 1 1.4 10.5 10.5 0 0 0 14.9-14.9 8.5 8.5 0 0 0-1.4-1 8.5 8.5 0 0 0 1.7.2 10.5 10.5 0 0 0 0-21 8.5 8.5 0 0 0-1.7.2 8.5 8.5 0 0 0 1.4-1 10.5 10.5 0 1 0-14.9-14.9 8.5 8.5 0 0 0-1 1.4 8.5 8.5 0 0 0 .2-1.7 10.5 10.5 0 1 0-21 0 8.5 8.5 0 0 0 .2 1.7 8.5 8.5 0 0 0-1-1.4 10.5 10.5 0 0 0-14.9 14.9 8.5 8.5 0 0 0 1.4 1 8.5 8.5 0 0 0-1.7-.2 10.5 10.5 0 0 0 0 21 8.5 8.5 0 0 0 1.7-.2 8.5 8.5 0 0 0-1.4 1 10.5 10.5 0 0 0 14.9 14.9 8.5 8.5 0 0 0 1-1.4 8.5 8.5 0 0 0-.2 1.7 10.5 10.5 0 0 0 5.5 9.2V112H12a4 4 0 0 0 0 8h104a4 4 0 0 0 0-8zM87.3 68.3a6.5 6.5 0 0 1-9.1 0 42 42 0 0 1-5.1-12 15.6 15.6 0 0 0 2.4-2.2 42.2 42.2 0 0 1 11.8 5 6.5 6.5 0 0 1 0 9.2zM97 45a6.5 6.5 0 0 1-6.5 6.5c-2 0-6.7-2.1-11.3-4.5a15.6 15.6 0 0 0 .4-3.3v-.9c4.4-2.3 9-4.3 11-4.3A6.5 6.5 0 0 1 97 45zM78.2 21.7a6.5 6.5 0 0 1 9.1 9.1 37 37 0 0 1-10.2 4.6 15.6 15.6 0 0 0-3.3-3.8c1.4-4.5 3.1-8.7 4.4-10zM64 12a6.5 6.5 0 0 1 6.5 6.5c0 1.7-1.7 5.8-3.8 9.9a14.7 14.7 0 0 0-5.4 0 35 35 0 0 1-3.8-10A6.5 6.5 0 0 1 64 12zm-23.3 9.7a6.5 6.5 0 0 1 9.1 0 32 32 0 0 1 4.5 9.9 15.6 15.6 0 0 0-3.4 3.8 35 35 0 0 1-10.2-4.6 6.5 6.5 0 0 1 0-9.1zM31 45a6.5 6.5 0 0 1 6.5-6.5c1.9 0 6.5 2 11 4.3v1a15.6 15.6 0 0 0 .3 3.2 38.8 38.8 0 0 1-11.3 4.5A6.5 6.5 0 0 1 31 45zm18.8 23.3a6.5 6.5 0 0 1-9.1-9.1c1.4-1.5 6.7-3.5 11.8-5a15.6 15.6 0 0 0 2.4 2.1 42.1 42.1 0 0 1-5 12zm12.7-9.1h3c2.5 4.8 5 10.2 5 12.3a6.5 6.5 0 0 1-13 0c0-2 2.5-7.4 5-12.3zM48 104q-24 0-24-24 24 0 24 24zm56-24q0 24-24 24 0-24 24-24z">
               </path>
              </svg>
             </span>
             아웃도어
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="Outdoor furniture">
               야외 가구
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Sun Terrace">
               일광욕 테라스
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Garden">
               정원
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="8">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-concierge hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M120 100a4 4 0 0 1-4 4H12a4 4 0 0 1 0-8h104a4 4 0 0 1 4 4zM56 32h16a4 4 0 0 0 0-8H56a4 4 0 0 0 0 8zm8 8a48 48 0 0 0-48 48h96a48 48 0 0 0-48-48z">
               </path>
              </svg>
             </span>
             서비스/기타
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="tickets to attractions/shows">
               명소/공연 관람 티켓
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="-2">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-pawprint hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M61 34c0 9.9-6.3 18-14 18s-14-8.1-14-18 6.3-18 14-18 14 8.1 14 18zm20-18c-7.7 0-14 8.1-14 18s6.3 18 14 18 14-8.1 14-18-6.3-18-14-18zM16.5 47.4c-6.9 2.1-10.3 11-7.6 20S19.4 82.1 26.3 80c6.9-2.1 10.3-11 7.6-20S23.4 45.4 16.5 47.4zM94.2 60c-2.7 9 .7 18 7.6 20 6.9 2.1 14.6-3.6 17.3-12.5s-.7-18-7.6-20C104.6 45.4 96.9 51 94.2 60zM64 104c11.9 0 6.1 8 22 8 4.9-.2 10.9-5.3 11-16 .1-13.8-12.4-34-33-35-20.6 1-33.1 21.2-33 35 .1 10.7 6.1 15.8 11 16 15.9 0 10.1-8 22-8z">
               </path>
              </svg>
             </span>
             반려동물
            </h5>
            <ul>
             <li class="policy">
              <p>
               애완동물의 동반이 가능합니다. 별도의 요금이 부과될 수 있습니다.
              </p>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="2">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-golf hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M88 112c0 4.4-9 8-20 8s-20-3.6-20-8c0-3.9 6.9-7.1 16-7.8V12a4 4 0 0 1 8 0v92.2c9.1.7 16 4 16 7.8zM36.5 93.5a12 12 0 0 1-17 0L13.8 99a19.9 19.9 0 0 0 10.2 5.5V116a4 4 0 0 0 8 0v-11.4a19.9 19.9 0 0 0 10.1-5.5zM117 28.7L86.3 16.3a4.6 4.6 0 0 0-6.3 4.3v30.8a4.6 4.6 0 0 0 7 4l30.8-18.6a4.6 4.6 0 0 0-.7-8.1zM48 68a20 20 0 1 1-20-20 20 20 0 0 1 20 20zm-24-8a4 4 0 1 0-4 4 4 4 0 0 0 4-4z">
               </path>
              </svg>
             </span>
             액티비티
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="Cooking class">
               쿠킹 클래스
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="7">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-food hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M44.1 8.9L48 44a12 12 0 0 1-12 12h-3.6l3.4 59.8a4 4 0 0 1-4 4.2h-7.6a4 4 0 0 1-4-4.2L23.6 56H20A12 12 0 0 1 8 44l3.9-35.1a1 1 0 0 1 1-.9H15a1 1 0 0 1 1 1v19a4 4 0 0 0 4 4h4.8L26 9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1l1.2 23H36a4 4 0 0 0 4-4V9a1 1 0 0 1 1-1h2.1a1 1 0 0 1 1 .9zM60 24v48h8l-3.8 43.8a4 4 0 0 0 4 4.2h7.6a4 4 0 0 0 4-4.2L80 8h-4a16 16 0 0 0-16 16zm60 8c0-13.3-7.2-24-16-24S88 18.8 88 32c0 11 5 20.2 11.6 23l-3.4 60.8a4 4 0 0 0 4 4.2h7.6a4 4 0 0 0 4-4.2L108.4 55c6.7-2.8 11.6-12 11.6-23z">
                <li>[mkey1]</li><li>[pkeyx]</li>[ahref]
               </path>
              </svg>
             </span>
             식음료
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="wine/champagne">
               와인/샴페인
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Bar">
               바
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Restaurant">
               레스토랑
              </span>
             </li>
             <li class="facilities_coffee_rating" data-title="평점 9.4 – 후기 8개 바탕으로 집계">
              <span>
               <strong>
                환상적인
               </strong>
               커피!
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="11">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-wifi hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <circle cx="64" cy="100" r="12">
               </circle>
               <path d="M118.3 32.7A94.9 94.9 0 0 0 64 16 94.9 94.9 0 0 0 9.7 32.7a4 4 0 1 0 4.6 6.6A87 87 0 0 1 64 24a87 87 0 0 1 49.7 15.3 4 4 0 1 0 4.6-6.6zM87.7 68.4a54.9 54.9 0 0 0-47.4 0 4 4 0 0 0 3.4 7.2 47 47 0 0 1 40.6 0 4 4 0 0 0 3.4-7.2z">
               </path>
               <path d="M104 50.5a81.2 81.2 0 0 0-80 0 4 4 0 0 0 4 7 73.2 73.2 0 0 1 72 0 4 4 0 0 0 4-7z">
               </path>
              </svg>
             </span>
             인터넷
            </h5>
            <ul>
             <li class="policy">
              <p>
               <span class="bui-badge bui_fill_constructive">
                무료!
               </span>
               Wi-Fi(은)는 호텔 전 구역에서  무료입니다.
              </p>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="19">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-disabled hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M83 93.5a24 24 0 1 1-43.1-20.8L36 58a36 36 0 1 0 53 48.7z">
               </path>
               <circle cx="56" cy="20" r="12">
               </circle>
               <path d="M107 111.6a4 4 0 0 1-4.8-2.2L90.5 83.2 61 84a8 8 0 0 1-8.2-7q-3.3-15.4-7.7-30.7c-1.3-4.3 1.6-8.5 6.6-9.2l9-1.4c5.1-.8 9.9 2.1 10.4 6.5l1 8.6L93 52a4 4 0 0 1 0 8l-19.7 1.1.6 7.2 19.1.5c4 .2 5.9 2.2 6.6 4.2l10.2 33.6a4 4 0 0 1-2.8 5z">
               </path>
              </svg>
             </span>
             접근성
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
              [pkeyx][pkeyx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][ahref][linkx][pkeyx][mkey1][pkeyx][keywordx][keywordx][pkeyx][ahref][pkeyx][linkx][mkey1][linkx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx]
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
             <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:4">
             </span>
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="property is wheel chair accessible">
               휠체어로 이동 가능
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="16">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-parking_sign hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M70.8 44H58v16h12.8a8 8 0 0 0 0-16z">
               </path>
               <path d="M108 8H20A12 12 0 0 0 8 20v88a12 12 0 0 0 12 12h88a12 12 0 0 0 12-12V20a12 12 0 0 0-12-12zM70 76H58v24H42V28h28a24 24 0 0 1 0 48z">
               </path>
              </svg>
             </span>
             주차
            </h5>
            <ul>
             <li class="policy">
              <p>
               호텔 내 (사전 예약 필수) 전용 주차장이   1일당 EUR 50(으)로 이용 가능합니다.
              </p>
             </li>
             <li>
              <span class=" " data-name-en="accessible parking">
               장애인 주차
              </span>
             </li>
             <li>
              <span class=" " data-name-en="secured parking">
               안전 주차장
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="22">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-bus_front hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M113 20.5a8 8 0 0 0-5.5-5.9C99.5 12.3 81.8 8 64 8s-35.4 4.3-43.5 6.6a8 8 0 0 0-5.6 6C12.7 30 8 52 8 64v32a8 8 0 0 0 8 8v8a8 8 0 0 0 16 0v-8h64v8a8 8 0 0 0 16 0v-8a8 8 0 0 0 8-8V64c0-12-4.8-34-7-43.5zM40 20a4 4 0 0 1 4-4h40a4 4 0 0 1 4 4 4 4 0 0 1-4 4H44a4 4 0 0 1-4-4zM16 59.1l4.3-24a4 4 0 0 1 4-3.1h79.6a4 4 0 0 1 3.9 3l4 24a4 4 0 0 1-4 5H20a4 4 0 0 1-4-4.9zM26 91a10 10 0 1 1 10-10 10 10 0 0 1-10 10zm76 0a10 10 0 1 1 10-10 10 10 0 0 1-10 10z">
               </path>
              </svg>
             </span>
             교통편
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="airport drop off">
               공항 드롭오프
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
             <li>
              <span class=" " data-name-en="airport pick up">
               공항 픽업
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="21">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-pool hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M8.7 79.2a3.8 3.8 0 0 1 5.5-1.3c21 15 34.5 9 50 2.2 14.5-6.5 30.8-13.7 53.6-1.4a4.5 4.5 0 0 1 1.8 5.9 3.9 3.9 0 0 1-5.4 2c-19.5-10.7-32.8-4.8-47 1.5-8.7 3.9-17.6 7.9-28 7.9A50 50 0 0 1 9.9 85.2a4.6 4.6 0 0 1-1.2-6zm109 15.5c-22.7-12.4-39-5-53.5 1.4-15.5 6.9-29 12.9-50-2.2a3.8 3.8 0 0 0-5.6 1.3 4.6 4.6 0 0 0 1.2 6A50 50 0 0 0 39.3 112c10.3 0 19.2-4 28-7.9 14-6.3 27.4-12.2 46.9-1.6a3.9 3.9 0 0 0 5.4-2 4.5 4.5 0 0 0-1.8-5.8zM100 56a12 12 0 1 0-12-12 12 12 0 0 0 12 12zM64.2 72c7.2-3.3 15.2-7 23.8-8.2 0 0-4-8.8-6.8-13.9l-18-29.2c-2.5-4.3-7.5-6-13.5-3.6L27.9 26a6.2 6.2 0 0 0-3.5 7.8 6 6 0 0 0 8 3.4L50 29.7a4 4 0 0 1 5 1.7l6 13.2L24 72c17.6 9.8 26.3 6.3 40.3 0z">
               </path>
              </svg>
             </span>
             수영장/웰빙
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="Swimming pool">
               수영장
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Fitness/spa locker rooms">
               피트니스/스파 라커룸
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Fitness classes">
               피트니스 수업
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Steam room">
               한증막
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Spa Facilities">
               스파 시설
              </span>
             </li>
             <li>
              <span class=" " data-name-en="pool bar">
               수영장 바
              </span>
             </li>
             <li>
              <span class=" " data-name-en="heated pool">
               온수 수영장
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Indoor Swimming Pool (all year)">
               실내 수영장(연중무휴)
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Swimmingpool Indoor">
               실내수영장
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Massage">
               마사지
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Spa &amp; Wellness Centre">
               스파/웰빙
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Fitness Room">
               피트니스 센터
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Sauna">
               사우나
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="23">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-frontdesk hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M38 18A10 10 0 1 1 28 8a10 10 0 0 1 10 10zM9.9 56h36.3l1.7-16c.3-2.6 0-5-4-6 0 0-9.8-2-16-2s-16 2-16 2c-4 1-4.2 3.4-4 6zm73.6 60.8L80 80H8v40h76.2a12.4 12.4 0 0 1-.7-3.2zm-8-45.5l-.8-7.3H8v8h67.6l-.1-.7zM80 40l3.4 30.5a4.3 4.3 0 0 0 1.3 2.6l1.8 1.8a4.3 4.3 0 0 1 1.3 2.7l3.5 38.4a4.4 4.4 0 0 0 4.5 4h8.2a4.4 4.4 0 0 0 4.4-4l3.6-38.4a4.3 4.3 0 0 1 1.3-2.7l1.8-1.8a4.3 4.3 0 0 0 1.3-2.6L120 40c.3-2.6 0-5-4-6 0 0-9.8-2-16-2s-16 2-16 2c-3.9 1-4.1 3.4-3.8 6zm20-32a10 10 0 1 0 10 10 10 10 0 0 0-10-10z">
               </path>
              </svg>
             </span>
             리셉션 서비스
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="Concierge Service">
               컨시어지 서비스
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Luggage storage">
               수하물 보관소
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Currency exchange">
               환전
              </span>
             </li>
             <li>
              <span class=" " data-name-en="24 hour Front Desk">
               24시간 프런트 데스크
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="26">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-washer hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M96 8H32a8 8 0 0 0-8 8v96a8 8 0 0 0 8 8h64a8 8 0 0 0 8-8V16a8 8 0 0 0-8-8zm-44 8a4 4 0 1 1-4 4 4 4 0 0 1 4-4zm-20 4a4 4 0 1 1 4 4 4 4 0 0 1-4-4zm32 80a28 28 0 1 1 28-28 28 28 0 0 1-28 28z">
               </path>
               <path d="M73 69.9a1.1 1.1 0 0 0-2 0 8 8 0 0 1-14 0 1.1 1.1 0 0 0-2 0 8 8 0 0 1-13 1.4 1.1 1.1 0 0 0-2 .8 23.7 23.7 0 0 0 .5 4.6A24 24 0 0 0 88 72a1.1 1.1 0 0 0-2-.7 8 8 0 0 1-13-1.4z">
               </path>
              </svg>
             </span>
             청소 서비스
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="Laundry">
               세탁
              </span>
              <span class="fac-offsite fac-charge">
               추가 요금
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection" data-section-id="1">
            <h5 data-et-view="">
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-info_sign hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M49.4 85l4.2-17.2c.7-2.7.8-3.8 0-3.8a29 29 0 0 0-8.8 3.8l-1.8-3A48 48 0 0 1 66.7 53c3.7 0 4.3 4.3 2.5 11l-5 18c-.7 3.3-.3 4.3.5 4.3a19 19 0 0 0 8.2-4L75 85c-8.6 8.7-18.2 12-21.8 12s-6.4-2.3-3.8-12zM75 36a9.2 9.2 0 0 1-9.2 9c-4.4 0-7-2.7-6.8-7a9 9 0 0 1 9.1-9c4.6 0 6.9 3.2 6.9 7z">
               </path>
               <path d="M62 16a48 48 0 1 1-48 48 48 48 0 0 1 48-48m0-8a56 56 0 1 0 56 56A56 56 0 0 0 62 8z">
               </path>
              </svg>
             </span>
             일반
            </h5>
            <ul>
             <li>
              <span class=" " data-name-en="Airport Shuttle (surcharge)">
               공항 셔틀 버스(유료)
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Airconditioning">
               에어컨
              </span>
             </li>
             <li>
              <span class=" " data-name-en="All Public and Private spaces non-smoking">
               전 구역 금연
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Shops at hotel">
               구내 상점
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Heating">
               난방 시설
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Souvenirs/GiftShop">
               기념품점
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Safe deposit box">
               안전 금고
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Elevator">
               엘리베이터
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Family Rooms">
               가족 객실
              </span>
             </li>
             <li>
              <span class=" " data-name-en="hair dresser-beautician">
               이발/미용실
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Rooms/Facilities for Disabled">
               장애인 편의시설
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Non Smoking Rooms">
               금연 객실
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Newspapers">
               신문
              </span>
             </li>
             <li>
              <span class=" " data-name-en="Room-service">
               룸서비스
              </span>
             </li>
            </ul>
           </div>
           <div class="facilitiesChecklistSection">
            <h5>
             <span class="facilityGroupIcon">
              <svg class="bk-icon -iconset-speech_bubble_solid hp__facility_group_icon" fill="#383838" height="20" viewbox="0 0 128 128" width="20">
               <path d="M64 16C33.1 16 8 35.7 8 60a39 39 0 0 0 14 29.1l-5.8 17.6a4 4 0 0 0 5.5 5l22-10.7a69.3 69.3 0 0 0 20.3 3c30.9 0 56-19.7 56-44S94.9 16 64 16z">
               </path>
              </svg>
             </span>
             지원 가능한 언어
            </h5>
            <div>
             <ul>
              <li>
               독일어
              </li>
              <li>
               영어
              </li>
              <li>
               스페인어
              </li>
              <li>
               프랑스어
              </li>
              <li>
               이탈리아어
              </li>
              <li>
               일본어
              </li>
              <li>
               포르투갈어
              </li>
              <li>
               러시아어
              </li>
              <li>
               중국어
              </li>
             </ul>
            </div>
           </div>
           <div style="clear:left;">
           </div>
          </div>
         </div>
         <div class="clearfix ">
         </div>
         <div data-et-view="EUXPNMHbdDSJIEGeDZFENKPVTdC:1">
         </div>
         <div class="hp-policy-section u-clearfix hp-policy-section--title_icon" id="hp_policies_box">
          <div class="containh2">
           <a name="policies">
           </a>
           <h2 class="hp-section-header--with-cta clearfix">
            [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h2>
          </div>
          <div class=" descriptionsContainer clearfix hp-section hp-policies-block " id="hotelPoliciesInc" style="font-size:14px; padding-top:0; padding-bottom:1.2em;">
           <div class="description js-timebar-parent" id="checkin_policy">
            <p class="policy_name">
             <span class="policy_name_icon">
              <svg class="bk-icon -experiments-calendar_checkin hp-policies-calendar-icon" height="20" viewbox="0 0 128 128" width="20">
               <path d="M112 16H96V8h-8v8H40V8h-8v8H16c-4.4 0-8 3.9-8 8.7v86.6c0 4.8 3.6 8.7 8 8.7h96c4.4 0 8-3.9 8-8.7V24.7c0-4.8-3.6-8.7-8-8.7zm0 95.3a1.1 1.1 0 0 1-.2.7H16.2a1.1 1.1 0 0 1-.2-.7V40h96zM32 84h12v12H32zm38-16H58V56h12zm0 28H58V84h12zm26 0H84V84h12zm0-28H84V56h12zM48 52H28v20h20zm-6 14h-8v-8h8z">
               </path>
              </svg>
             </span>
             <span>
              체크인
             </span>
            </p>
            <p>
             <span class="u-display-block" data-caption="
15:00~00:00
" data-component="prc/timebar" data-from="15:00" data-from-label="15:00" data-until="00:00" data-until-label="00:00">
              15:00~00:00
             </span>
            </p>
           </div>
           <div class="description js-timebar-parent" id="checkout_policy">
            <p class="policy_name">
             <span class="policy_name_icon">
              <svg class="bk-icon -experiments-calendar_checkout hp-policies-calendar-icon" height="20" viewbox="0 0 128 128" width="20">
               <path d="M112 16H96V8h-8v8H40V8h-8v8H16c-4.4 0-8 3.9-8 8.7v86.6c0 4.8 3.6 8.7 8 8.7h96c4.4 0 8-3.9 8-8.7V24.7c0-4.8-3.6-8.7-8-8.7zm0 95.3a1.1 1.1 0 0 1-.2.7H16.2a1.1 1.1 0 0 1-.2-.7V40h96zM44 68H32V56h12zm0 28H32V84h12zm26-28H58V56h12zm0 28H58V84h12zm26-28H84V56h12zm4 12H80v20h20zm-6 14h-8v-8h8z">
               </path>
              </svg>
             </span>
             <span>
              체크아웃
             </span>
            </p>
            <p>
             <span class="u-display-block" data-caption="
05:00~12:00
" data-component="prc/timebar" data-from="05:00" data-from-label="05:00" data-until="12:00" data-until-label="12:00">
              05:00~12:00
             </span>
            </p>
            <div style="clear:both">
            </div>
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div class="description tracked" id="cancellation_policy">
            [linkx]
            
            <p class="policy_name">
             <span class="policy_name_icon">
              <i class="bicon-infobold">
              </i>
             </span>
             <span>
              취소/
              <br>
               선결제
              </br>
             </span>
            </p>
            <p>
             숙소 유형에 따라 취소 및 선결제 정책이 달라집니다.
             [linkx]
             
             한 다음 원하는 객실 조건을 확인하십시오.
            </p>
            <div style="clear:both">
            </div>
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div class="description description_children-policy" id="children_policy">
            <p class="policy_name">
             <span class="policy_name_icon">
              <i class="bicon-user-family">
              </i>
             </span>
             <span>
              아동용 및 엑스트라 베드
             </span>
            </p>
            <p>
             모든 어린이 투숙이 가능합니다.
            </p>
            <p>
             <span class="bui-badge bui_fill_constructive">
              무료!
             </span>
             2세 미만 어린이 모두(이)가 유아용 침대 이용 시 무료  투숙이 가능합니다.
            </p>
            <p>
             <span class="bui-badge bui_fill_constructive">
              무료!
             </span>
             12세 미만 어린이 모두(이)가 엑스트라 베드 이용 시 무료  투숙이 가능합니다.
            </p>
            <p>
             청소년 또는 성인 모두(이)가 엑스트라 베드 이용 시 1박당 EUR 200가 청구됩니다.
            </p>
            <p>
             객실 내 엑스트라 베드는 최대 1개 이용 가능합니다.
            </p>
            <p style="">
             모든 유형의 엑스트라 베드 또는 유아용 침대는 호텔에 사전에 요청하여 확인된 경우에 한해 이용 가능합니다.
            </p>
            <p>
             추가 요금은 총 숙박 금액에 자동으로 합산되지 않으므로 별도로 지불해 주십시오.
            </p>
            <div style="clear:both">
            </div>
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div class="description description--house-rule">
            <p class="policy_name">
             <span class="policy_name_icon">
              <i class="bicon-petfriendly">
              </i>
             </span>
             <span>
              반려동물
             </span>
            </p>
            <p>
             애완동물의 동반이 가능합니다. 별도의 요금이 부과될 수 있습니다.
            </p>
            <div style="clear:both">
            </div>
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div class="description">
            <p class="policy_name">
             <span class="policy_name_icon">
              <i class="bicon-group">
              </i>
             </span>
             <span>
              단체 예약
             </span>
            </p>
            <p>
             객실 3개를 초과하여  예약 시 다른 정책과 추가 요금이 적용될 수 있습니다..
            </p>
            <div style="clear:both">
            </div>
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div class="description hp_bp_payment_method">
            <p aria-hidden="true" class="policy_name">
             <span class="policy_name_icon">
              <i class="bicon-doublesidecardblack">
              </i>
             </span>
             <span>
              이 호텔에서 사용 가능한 신용카드
             </span>
            </p>
            <p aria-label="결제 가능 수단 및 조건" class="payment_methods_overall" rel="300">
             <button aria-label="americanexpress" class="payment_methods_readability ppd_payment_methods_readability creditcard americanexpress" role="img" tabindex="0">
             </button>
             <button aria-label="visa" class="payment_methods_readability ppd_payment_methods_readability creditcard visa" role="img" tabindex="0">
             </button>
             <button aria-label="euromastercard" class="payment_methods_readability ppd_payment_methods_readability creditcard euromastercard" role="img" tabindex="0">
             </button>
             <button aria-label="dinersclub" class="payment_methods_readability ppd_payment_methods_readability creditcard dinersclub" role="img" tabindex="0">
             </button>
             <button aria-label="jcb" class="payment_methods_readability ppd_payment_methods_readability creditcard jcb" role="img" tabindex="0">
             </button>
             <span class="invisible_spoken" tabindex="0">
              리츠 파리에서는 상단에 기재된 신용카드로 결제하실 수 있으며, 도착 전 신용카드 가승인으로 일정 금액을 한시적으로 결제 유보할 권리가 숙박 업체 측에 있습니다.
             </span>
            </p>
            <p aria-hidden="true" class="cc_disclaimer" style="clear:both">
             리츠 파리에서는 상단에 기재된 신용카드로 결제하실 수 있으며, 도착 전 신용카드 가승인으로 일정 금액을 한시적으로 결제 유보할 권리가 숙박 업체 측에 있습니다.
            </p>
            <div style="clear:both">
            </div>
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <div data-et-view="NVNZWUcCcCcCDSWGaRBQBEZGZdMaWODbUBPTTC:2">
           </div>
           <span data-et-view="cCcCcCWZcbfdNDUMAPYNYKKUHAbCadTEIeBZSRT:1">
           </span>
          </div>
          <div class=" clearfix" style="height:15px">
          </div>
         </div>
         <div class="hp-low_sidebar_to_content">
         </div>
        </div>
       </div>
       <div aria-hidden="true" class="sliding-panel-widget surroundings_slider" data-component="core/sliding-panel-core-a11y" data-id="hp-facilities-sliding" id="hp-facilities-sliding" tabindex="-1">
        <div class="sliding-panel-widget-scrollable " data-component="core/et-scroll-observer" data-scrollable="">
         <div aria-label="닫기" class="sliding-panel-widget-close-button" data-close-button="" role="button" tabindex="0">
          <i aria-hidden="true" class="bicon-aclose">
          </i>
         </div>
         <div class="sliding-panel-widget-content " data-content="">
          <div class="hp-facilities-sliding-wrapper" data-et-view=" eWffIEcZYVeHVEMMcQHePeHOcTTC:2 eWffIEcZYVeHVEMMcQHePeHOcTTC:3">
          </div>
         </div>
        </div>
       </div>
       <div class="pagination_scroll_top" data-tab="reviews" id="blockdisplay4">
        <div aria-hidden="true" class="sliding-panel-widget " data-component="core/sliding-panel-core-a11y" data-id="hp-reviews-sliding" id="hp-reviews-sliding" tabindex="-1">
         <div class="sliding-panel-widget-scrollable " data-component="core/et-scroll-observer" data-scrollable="">
          <div aria-label="닫기" class="sliding-panel-widget-close-button" data-close-button="" role="button" tabindex="0">
           <i aria-hidden="true" class="bicon-aclose">
           </i>
          </div>
          <div class="sliding-panel-widget-content review_list_block one_col" data-content="">
           <div style="margin:10px 0 16px;">
            <div class="bui-banner bui-banner--small bui-banner--hint bui-u-bleed@small" data-bui-component="Banner">
             <svg class="bk-icon -iconset-checkmark_dot_bold bui-banner__icon" fill="#0AB21B" height="128" viewbox="0 0 128 128" width="128">
              <path d="M89.5 50.3a8 8 0 0 1 0 11.3l-39.9 40A8 8 0 0 1 44 104a8 8 0 0 1-5.7-2.3l-24-24a8 8 0 0 1 11.4-11.4L44 84.7l34.2-34.3a8 8 0 0 1 11.3 0zM104 24a12 12 0 1 0 12 12 12 12 0 0 0-12-12z">
              </path>
             </svg>
             <div class="bui-banner__content">
              <p class="bui-banner__text">
               <strong>
                100% 검증된 이용 후기
               </strong>
               ·
실제 이용객 • 실제 숙박 • 실제 의견
               <button class="bui-link bui-link--primary" data-bui-component="Modal" data-modal-id="usp_modal_container" type="button">
                <span class="bui-button__text">
                 더보기
                </span>
               </button>
              </p>
             </div>
            </div>
           </div>
           <template id="usp_modal_container">
            <header class="bui-modal__header">
             <h1 class="bui-modal__title" data-bui-ref="modal-title" id="usp_modal_container-title">
              [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
             </h1>
             <div class="bui-modal__paragraph" data-bui-ref="modal-subtitle" id="usp_modal_container-subtitle">
              <p>
               <i>
                이용자들이 보다 정확한 정보를 얻을 수 있도록 24개월이 지난 후기 점수와 내용은 삭제하고 있습니다.
               </i>
              </p>
              <p>
               Booking.com을 통해 예약한 숙소에서 실제 투숙한 고객만이 이용 후기를 작성하실 수 있습니다. 이는 당사의 이용 후기가 고객님과 같이 실제 투숙객의 경험을 반영하고 있음을 의미합니다. 무료 조식, 친절한 스탭, 조용한 객실 등에 대해 실제로 투숙해 본 사람보다 더 잘 설명해 줄 사람이 있을까요?
              </p>
              <p>
               고객님이 경험한 좋았던 점, 안 좋았던 점 모두 공유해 주시기 바랍니다. 하기의 간략한 가이드라인을 따라 주시기만 하면 됩니다.
              </p>
              <p>
              </p>
              <h3>
               [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              <p>
               고객의 이용 후기와 파트너사의 답변으로 숙소 이용자들은 더 다양한 의견을 확인하고, 간접 체험 기회를 누릴 수 있으며, 궁극적으로 원하는 숙소를 찾는 데 큰 도움을 받을 수 있습니다.
              </p>
              <p>
              </p>
              <h3>
               <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
              </h3>
              <p>
               Booking.com에 대한 기여는 곧 고객 및 파트너사의 헌신을 의미하기 때문에 당사는 깊은 존경심을 가지고 이를 조심스럽게 다루고 있습니다.
              </p>
              <p>
               긍정성 여부에 관계없이 저희는 Booking.com 가이드라인에서 규정한 범위에 어긋나지 않는 것으로 판단되는 모든 후기를 있는 그대로, 최대한 신속하게 게재하고 있습니다. 또한 작성된 글의 게재 여부에 대해서 작성자에게 투명하게 공개하고 있습니다.
              </p>
              <p>
               후기가 제출되고 난 후에는 Booking.com 고객 서비스팀에 연락하여 내용을 수정하실 수 있습니다.
              </p>
              <p>
               당사는 모든 사용자 제작 콘텐츠 및 숙박 업체 답변에 동일한 가이드라인 및 기준 을 적용합니다.
              </p>
              <p>
               Booking.com은 고객과 파트너사가 입력한 내용을 있는 그대로 존중하며, 사실 확인은 하지 않습니다. 당사의 역할은 고객과 파트너사 모두의 의견을 전달하는 것입니다.
              </p>
              <p>
              </p>
              <h3>
               [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              <p>
               가이드라인 및 기준은 강한 의견 표현 제한이 아니라, Booking.com의 콘텐츠가 어린이가 있는 가정에서도 안심하고 볼 수 있는 수준을 유지하는 것을 목적으로 하고 있습니다. 이 가이드라인과 기준은 의견에 담긴 감정이 어떤 것이든 관계 없이 적용됩니다.
              </p>
              <p>
               <strong>
                게재되는 의견은 여행 관련이어야 합니다.
               </strong>
               상세하고 다른 사용자가 더 나은 결정을 내리는데 도움이 되는 내용이 가장 이상적입니다. 개인적, 정치적, 윤리적, 종교적인 코멘트는 입력하지 마십시오. 홍보 목적의 콘텐츠는 바로 삭제되며, Booking.com 서비스에 대한 문제는 당사 고객 서비스팀 또는 숙박 업체 서비스 팀으로 전송됩니다.
              </p>
              <p>
               <strong>
                게재되는 의견은 전 세계 누구에게나 적절한 내용이어야합니다.
               </strong>
               비속어 또는 다른 철자 조합을 통한 유사 비속어는 어떠한 경우에도 사용하지 마십시오. '혐오 표현', 차별적 표현, 위협, 성적 표현, 난폭한 표현, 불법 행위 조장이 포함된 코멘트 및 미디어는 허용되지 않습니다.
              </p>
              <p>
               <strong>
                모든 콘텐츠는 이용객에 의해 직접 작성된, 고유하고 특별한 콘텐츠입니다.
               </strong>
               후기는 공정하게 작성된 실제 이용 후기일 때 그 가치가 있습니다. 작성된 내용은 작성자의 의견이어야 합니다. Booking.com 파트너사는 절대 이용객을 대신해서 후기를 작성하거나 후기 작성을 장려해서는 안됩니다. 부정적인 이용 후기로 경쟁사의 평점을 떨어뜨리는 행위도 용납되지 않습니다.
              </p>
              <p>
               <strong>
                개인 프라이버시 보호.
               </strong>
               Booking.com은 이메일 주소, 전화번호, 웹사이트 주소, SNS 계정, 기타 개인 정보를 노출하지 않도록 최선을 다하고 있습니다.
              </p>
              <p>
               <strong>
                게재되는 의견은 Booking.com이 아닌 Booking.com 고객 및 파트너사의 의견입니다. Booking.com은 이용 후기나 답변 내용에 책임을 질 의무가 없습니다. Booking.com은 후기 의견과 답변 작성자가 아닌 (입증의 책임이 없는) 전달자입니다.
               </strong>
              </p>
              <p>
               후기는 기본적으로 작성 일자를 기준으로 하며 선택 언어, 특정 키워드를 포함한 후기 및 익명이 아닌 후기 등과 같은 요소를 추가적으로 반영합니다. 추가 정렬 옵션(여행객 유형, 평점 등)을 토대로 후기를 살펴보실 수도 있습니다.
              </p>
             </div>
            </header>
           </template>
           <div class="review_list_outer_container clearfix" id="review_list_score_container">
            <div class=" review_list_score_container lang_ltr scores_full_layout" id="review_list_score">
             <div class="reviews_panel_header_score ">
              <div data-et-view=" adUAVYCdKNKNKPZZaeaLDdCMSXe:1
adUAVYCdKNKNKPZZaeaLDdCMSXe:2
">
              </div>
              <span class=" review-score-widget review-score-widget__exceptional review-score-widget__inline review-score-widget__20 ">
               <span aria-label="9.6" class="review-score-badge">
                9.6
               </span>
               <span aria-label="평가 - 최고" class="review-score-widget__text">
                강력 추천
               </span>
               <span aria-label="274개 이용 후기 기준" class="review-score-widget__subtext">
                274개 이용 후기
               </span>
              </span>
              <span aria-hidden="true" class="reviews_panel_header_score--arrow js-fly-content-tooltip" data-content-tooltip-element="#tooltip_score_distribution" data-extra-class-tooltip="fly-content-tooltip fly-content-tooltip--review-distribution" data-require-tooltip-class="js-fly-content-tooltip">
               <svg class="bk-icon -fonticon-triangledown" height="5" viewbox="0 0 65 32" width="12">
                <path d="M0 0l32.32 32L64.64 0z">
                </path>
               </svg>
              </span>
             </div>
             <div id="tooltip_score_distribution" style="display:none">
              <div class="review_list_block one_col">
               <div class="scores_full_layout">
                <ul class="review_score_breakdown_list list_tighten clearfix" id="review_list_score_distribution">
                 <li class="clearfix" data-question="review_adj_superb">
                  <p class="review_score_name">
                   최고: 9+
                  </p>
                  <div class="score_bar">
                   <div class="score_bar_value" data-score="89" style="width: 89%;">
                   </div>
                  </div>
                  <p class="review_score_value">
                   245
                  </p>
                 </li>
                 <li class="clearfix" data-question="review_adj_good">
                  <p class="review_score_name">
                   좋음: 7 – 9
                  </p>
                  <div class="score_bar">
                   <div class="score_bar_value" data-score="8" style="width: 8%;">
                   </div>
                  </div>
                  <p class="review_score_value">
                   22
                  </p>
                 </li>
                 <li class="clearfix" data-question="review_adj_average_okay">
                  <p class="review_score_name">
                   보통: 5 – 7
                  </p>
                  <div class="score_bar">
                   <div class="score_bar_value" data-score="2" style="width: 2%;">
                   </div>
                  </div>
                  <p class="review_score_value">
                   6
                  </p>
                 </li>
                 <li class="clearfix" data-question="review_adj_poor">
                  <p class="review_score_name">
                   나쁨: 3 – 5
                  </p>
                  <div class="score_bar">
                   <div class="score_bar_value" data-score="0" style="width: 0%;">
                   </div>
                  </div>
                  <p class="review_score_value">
                   0
                  </p>
                 </li>
                 <li class="clearfix" data-question="review_adj_very_poor">
                  <p class="review_score_name">
                   매우 나쁨: 1 – 3
                  </p>
                  <div class="score_bar">
                   <div class="score_bar_value" data-score="0" style="width: 0%;">
                   </div>
                  </div>
                  <p class="review_score_value">
                   1
                  </p>
                 </li>
                </ul>
               </div>
              </div>
             </div>
             <div class="v2_review-scores__wrapper ugc-sub-scores">
              <div class="v2_review-scores__body v2_review-scores__body--compared_to_average">
               <ul class="v2_review-scores__subscore__inner v2_review-scores__subscore__inner-two_columns v2_review-scores__subscore__inner-compared_to_average">
                <li class="v2_review-scores__subscore subscore_better">
                 <div data-et-view="adUAVYCCSLFJZZdCBLYHSNKOdeZFFKcYHT:1">
                 </div>
                 <div class="c-score-bar">
                  <span class="c-score-bar__title">
                   직원 친절도
                   <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                    <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                    </path>
                   </svg>
                  </span>
                  <span class="c-score-bar__score">
                   9.6
                  </span>
                  <div class="c-score-bar__bar">
                   <span class="c-score-bar__value" data-value="9.6" style="width:96%">
                   </span>
                  </div>
                 </div>
                </li>
                <li class="v2_review-scores__subscore subscore_better">
                 <div data-et-view="adUAVYCCSLFJZZdCBLYHSNKOdeZFFKcYHT:1">
                 </div>
                 <div class="c-score-bar">
                  <span class="c-score-bar__title">
                   시설
                   <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                    <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                    </path>
                   </svg>
                  </span>
                  <span class="c-score-bar__score">
                   9.7
                  </span>
                  <div class="c-score-bar__bar">
                   <span class="c-score-bar__value" data-value="9.7" style="width:97%">
                   </span>
                  </div>
                 </div>
                </li>
                <li class="v2_review-scores__subscore subscore_better">
                 <div data-et-view="adUAVYCCSLFJZZdCBLYHSNKOdeZFFKcYHT:1">
                 </div>
                 <div class="c-score-bar">
                  <span class="c-score-bar__title">
                   청결도
                   <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                    <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                    </path>
                   </svg>
                  </span>
                  <span class="c-score-bar__score">
                   9.8
                  </span>
                  <div class="c-score-bar__bar">
                   <span class="c-score-bar__value" data-value="9.8" style="width:98%">
                   </span>
                  </div>
                 </div>
                </li>
                <li class="v2_review-scores__subscore subscore_better">
                 <div data-et-view="adUAVYCCSLFJZZdCBLYHSNKOdeZFFKcYHT:1">
                 </div>
                 <div class="c-score-bar">
                  <span class="c-score-bar__title">
                   편안함
                   <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                    <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                    </path>
                   </svg>
                  </span>
                  <span class="c-score-bar__score">
                   9.8
                  </span>
                  <div class="c-score-bar__bar">
                   <span class="c-score-bar__value" data-value="9.8" style="width:98%">
                   </span>
                  </div>
                 </div>
                </li>
               </ul>
               <ul class="v2_review-scores__subscore__inner v2_review-scores__subscore__inner-two_columns v2_review-scores__subscore__inner-compared_to_average">
                <li class="v2_review-scores__subscore subscore_better">
                 [pkeyx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][mkey1][linkx][keywordx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][pkeyx][mkey1][mkey1]
                </li>
                <li class="v2_review-scores__subscore subscore_better">
                 <div data-et-view="adUAVYCCSLFJZZdCBLYHSNKOdeZFFKcYHT:1">
                 </div>
                 <div class="c-score-bar">
                  <span class="c-score-bar__title">
                   위치
                   <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                    <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                    </path>
                   </svg>
                  </span>
                  <span class="c-score-bar__score">
                   9.8
                  </span>
                  <div class="c-score-bar__bar">
                   <span class="c-score-bar__value" data-value="9.8" style="width:98%">
                   </span>
                  </div>
                 </div>
                </li>
                <li class="v2_review-scores__subscore subscore_better">
                 <div data-et-view="adUAVYCCSLFJZZdCBLYHSNKOdeZFFKcYHT:1">
                 </div>
                 <div class="c-score-bar">
                  <span class="c-score-bar__title">
                   무료 Wi-Fi
                   <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                    <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                    </path>
                   </svg>
                  </span>
                  <span class="c-score-bar__score">
                   9.1
                  </span>
                  <div class="c-score-bar__bar">
                   <span class="c-score-bar__value" data-value="9.1" style="width:91%">
                   </span>
                  </div>
                 </div>
                </li>
               </ul>
               <div class="v2_review-scores__body__legend">
                <span class="v2_review-scores__body__legend__rating_worse">
                 <svg class="bk-icon -iconset-arrow_up_bold" fill="#96D99D" height="14" viewbox="0 0 128 128" width="14">
                  <path d="M101.7 61.7a8 8 0 0 1-11.4 0L72 43.3V104a8 8 0 0 1-16 0V43.3L37.7 61.7a8 8 0 0 1-11.4-11.4L64 12.7l37.7 37.6a8 8 0 0 1 0 11.4z">
                  </path>
                 </svg>
                 파리 기준 높은 점수입니다
                </span>
               </div>
              </div>
             </div>
            </div>
            <div class="bui-empty-state" id="reviews-error-message" style="display: none; margin-bottom: 24px;">
             <svg class="bk-icon -iconset-review_poor bui-empty-state__icon" height="24" viewbox="0 0 128 128" width="24">
              <path d="M64 8a56 56 0 1 0 56 56A56 56 0 0 0 64 8zm0 104a48 48 0 1 1 48-48 48 48 0 0 1-48 48zM44 64a8 8 0 1 1 8-8 8 8 0 0 1-8 8zm48-8a8 8 0 1 1-8-8 8 8 0 0 1 8 8zm-5.2 30.2a4 4 0 1 1-5.6 5.6c-10.5-10.4-24-10.4-34.4 0a4 4 0 0 1-5.6-5.6c13.6-13.7 32-13.7 45.6 0z">
              </path>
             </svg>
             <p class="bui-empty-state__text">
              오류가 발생하여 후기를 불러오지 못했습니다.
              <br>
               [linkx]
               
              </br>
             </p>
            </div>
            <div class="review_list_container review-list--clean ">
             <div aria-label="이용후기에 필터 적용하기" class="bui-panel-group bui-panel-group--filters-wrapper" role="region" style="margin-bottom:0">
              <div class="bui-panel">
               <div class="bui-grid">
                <div class="bui-grid__column-6" id="reviews_filters_section_type">
                 <div class="bui-form__group">
                  <label for="reviewer_type_filter">
                   작성자 유형:
                  </label>
                  <div class="bui-input-select">
                   <select class="bui-form__control" id="reviewer_type_filter">
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="1" data-pagename="ritz-paris-paris" data-quantity="273" data-score="" value="total">
                     전체 작성자
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="family_with_children" data-dist="2" data-pagename="ritz-paris-paris" data-quantity="44" data-score="" value="family_with_children">
                     가족 (44)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="couple" data-dist="3" data-pagename="ritz-paris-paris" data-quantity="175" data-score="" value="couple">
                     커플 (175)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="review_category_group_of_friends" data-dist="4" data-pagename="ritz-paris-paris" data-quantity="2" data-score="" value="review_category_group_of_friends">
                     친구끼리 여행 (2)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="solo_traveller" data-dist="5" data-pagename="ritz-paris-paris" data-quantity="21" data-score="" value="solo_traveller">
                     나홀로 여행자 (21)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="business_traveller" data-dist="6" data-pagename="ritz-paris-paris" data-quantity="29" data-score="" value="business_traveller">
                     비즈니스 여행자 (29)
                    </option>
                   </select>
                   <svg class="bk-icon -iconset-dropdown bui-input-select__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M92 52a4 4 0 0 1-2.8-1.2L64 25.7 38.8 50.8a4 4 0 0 1-5.6-5.6L64 14.3l30.8 30.9A4 4 0 0 1 92 52zm0 24a4 4 0 0 0-2.8 1.2L64 102.3 38.8 77.2a4 4 0 0 0-5.6 5.6L64 113.7l30.8-30.9A4 4 0 0 0 92 76z">
                    </path>
                   </svg>
                  </div>
                 </div>
                </div>
                <div class="bui-grid__column-6">
                 <div class="bui-form__group">
                  <label for="review_score_filter">
                   평점대별로 보기:
                  </label>
                  <div class="bui-input-select">
                   <select class="bui-form__control" id="review_score_filter">
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="" data-pagename="ritz-paris-paris" value="">
                     모든 후기 평점
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="1" data-pagename="ritz-paris-paris" value="review_adj_superb">
                     최고: 9+ (245)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="2" data-pagename="ritz-paris-paris" value="review_adj_good">
                     좋음: 7 – 9 (22)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="3" data-pagename="ritz-paris-paris" value="review_adj_average_okay">
                     보통: 5 – 7 (6)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="4" data-pagename="ritz-paris-paris" value="review_adj_poor">
                     나쁨: 3 – 5 (0)
                    </option>
                    <option data-add="" data-cc="fr" data-customer-type="total" data-dist="5" data-pagename="ritz-paris-paris" value="review_adj_very_poor">
                     매우 나쁨: 1 – 3 (1)
                    </option>
                   </select>
                   <svg class="bk-icon -iconset-dropdown bui-input-select__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M92 52a4 4 0 0 1-2.8-1.2L64 25.7 38.8 50.8a4 4 0 0 1-5.6-5.6L64 14.3l30.8 30.9A4 4 0 0 1 92 52zm0 24a4 4 0 0 0-2.8 1.2L64 102.3 38.8 77.2a4 4 0 0 0-5.6 5.6L64 113.7l30.8-30.9A4 4 0 0 0 92 76z">
                    </path>
                   </svg>
                  </div>
                 </div>
                </div>
               </div>
              </div>
              <div class="bui-panel">
               <div aria-labelledby="language_filter_value_row_label" class="bui-form__group toggler-wrapper language_filter" role="group">
                <label aria-label="언어:" id="language_filter_value_row_label">
                 언어:
                </label>
                <div class="bui-inline-container language_filter_value_row">
                 <label class="bui-input-checkbutton">
                  <span class="bui-input-checkbutton__item">
                   한국어
                   <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                    </path>
                   </svg>
                   <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                    </path>
                   </svg>
                  </span>
                 </label>
                 <label class="bui-input-checkbutton">
                  <span class="bui-input-checkbutton__item">
                   영어
                   <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                    </path>
                   </svg>
                   <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                    </path>
                   </svg>
                  </span>
                 </label>
                 <label class="bui-input-checkbutton">
                  <span class="bui-input-checkbutton__item">
                   중국어
                   <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                    </path>
                   </svg>
                   <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                    </path>
                   </svg>
                  </span>
                 </label>
                 <button aria-label="모든 언어" class="bui-button bui-button--secondary fix-button-to-end" id="reviews_filters_lang_modal_button" type="button">
                  <span class="bui-button__icon">
                   <svg class="bk-icon -iconset-plus_bold" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                    <path d="M104 56H72V24a8 8 0 0 0-16 0v32H24a8 8 0 0 0 0 16h32v32a8 8 0 0 0 16 0V72h32a8 8 0 0 0 0-16z">
                    </path>
                   </svg>
                  </span>
                 </button>
                 <template id="reviews_filters_lang_modal">
                  <header class="bui-modal__header">
                   <h1 class="bui-modal__title" data-bui-ref="modal-title" id="myModal-title">
                    <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                   </h1>
                  </header>
                  <div class="bui-modal__body bui-modal__body--primary">
                   <div class="language_filter_modal_content">
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       한국어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       영어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       중국어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       일본어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       러시아어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       프랑스어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       독일어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       스페인어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       네덜란드어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       포르투갈어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       이탈리아어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       폴란드어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       스웨덴어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       덴마크어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       체코어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       루마니아어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                    <div class="language_filter_modal_content_element">
                     <label class="bui-input-checkbutton">
                      <span class="bui-input-checkbutton__item">
                       에스토니아어
                       <svg class="bk-icon -iconset-plus bui-input-checkbutton__check" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M108 60H68V20a4 4 0 0 0-8 0v40H20a4 4 0 0 0 0 8h40v40a4 4 0 0 0 8 0V68h40a4 4 0 0 0 0-8z">
                        </path>
                       </svg>
                       <svg class="bk-icon -iconset-close bui-input-checkbutton__uncheck" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                        <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
                        </path>
                       </svg>
                      </span>
                     </label>
                    </div>
                   </div>
                  </div>
                  <footer class="bui-modal__footer">
                   <div class="bui-inline-container">
                    <button class="bui-button bui-button--primary" data-bui-ref="modal-close" type="button">
                     <span class="bui-button__text">
                      완료
                     </span>
                    </button>
                   </div>
                  </footer>
                 </template>
                </div>
               </div>
              </div>
              <div class="bui-panel">
               <div class="bui-form__group">
                <label for="review_sort">
                 정렬 기준:
                </label>
                <div class="bui-input-select">
                 <select class="bui-form__control" id="review_sort">
                  <option value="">
                   추천 후기
                  </option>
                  <option value="f_recent_desc">
                   날짜 (최신순)
                  </option>
                  <option value="f_recent_asc">
                   날짜 (오래된순)
                  </option>
                  <option value="f_score_desc">
                   평점 (높은순)
                  </option>
                  <option value="f_score_asc">
                   평점 (낮은순)
                  </option>
                 </select>
                 <svg class="bk-icon -iconset-dropdown bui-input-select__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
                  <path d="M92 52a4 4 0 0 1-2.8-1.2L64 25.7 38.8 50.8a4 4 0 0 1-5.6-5.6L64 14.3l30.8 30.9A4 4 0 0 1 92 52zm0 24a4 4 0 0 0-2.8 1.2L64 102.3 38.8 77.2a4 4 0 0 0-5.6 5.6L64 113.7l30.8-30.9A4 4 0 0 0 92 76z">
                  </path>
                 </svg>
                </div>
               </div>
              </div>
             </div>
             <div class="review_list_loader">
             </div>
             <div id="review_list_page_container">
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="rlt-left leftsmall" id="left" role="complementary">
       <div class="hp-lists js-hp-wl-sidebar hide" data-hotel-id="1568729">
        <div class="hp-lists-reserve">
         <form action="/book.html" class="wrap-hotelpage-top__book top-book-form form_wl_fix" id="top-book" method="post">
          <button class="b-button b-button_primary book_now_button_handler " data-et-click="customGoal:AfPcCWbOTKMbIUONSFTUQODHXdRT:3" data-title="
요금 및 잔여 객실 보기
" data-url="" id="hcta" type="submit">
           <span class="b-button__text">
            지금 예약
           </span>
           <span class="b-button__from-text book_now_rt_summary g-hidden">
           </span>
          </button>
          <button aria-label="
리스트에 숙소 추가하기
" aria-live="assertive" class=" js-wl-dropdown-handle lists-hotel-dropdown-alternative bui_icon__save_to_list-wrapper jq_tooltip btn-wl__jq_tooltip " data-et-click="customGoal:AfPcCWbOTKMbIUONSFTUQODHXdRT:1" data-et-focus="cCcCcCWZcbfdNDSWUFOHeNcWKGdUdGdfC:1" data-ga-label="small" data-hotel-id="1568729" data-loadingtext="로딩 중" data-position="bottom right" data-sr-comparison-mode="true" data-text-create="새 리스트 만들기" data-text-header="저장해두고<br>다시 예약하기" data-title="저장" role="button" type="button">
           <i class=" bui_icon__save_to_list ">
            <svg class="bk-icon -fonticon-heart bui_icon__save_to_list_heart" height="12" viewbox="0 0 38 32" width="15">
             <path d="M27.37 0c-3.188 0-6.521 1.524-8.874 4.721v.015C16.143 1.544 12.812.022 9.627.022 4.666.022.06 3.715.06 10.543.06 21.484 17.564 31.472 18.502 32v-.024c.989-.556 18.437-10.529 18.437-21.453C36.939 3.694 32.331 0 27.37 0z">
             </path>
            </svg>
           </i>
          </button>
          <span aria-label="
내 리스트
" aria-owns="hotel-wishlists">
          </span>
         </form>
        </div>
        <button class=" hp-lists-save js-wl-dropdown-handle " data-ga-label="big_heart_btn" data-hotel-id="1568729" data-position="bottom center" data-text-create="새 리스트 만들기" data-text-header="
저장해두고<br>다시 예약하기
" style="" type="button">
         <i class="bicon-heart hp-lists-save-icon">
         </i>
         <span class="hp-lists-save-link js-wl-handle-text" data-text-saved="저장됨!" data-text-unsaved="
저장해두고<br>다시 예약하기
">
          저장해두고
          <br/>
          다시 예약하기
         </span>
        </button>
        <span class="hp-lists-loader tfl-clicked-status-loading g-hidden">
        </span>
        <p class=" hp-lists-counter wishlist-social-count ">
         리스트에 
2794
회 저장됨
        </p>
        <div class="hp-lists-info js-wishlist-added-to-name" data-wl-id="" style="display: none">
         <p class="hp-lists-info-header highlight-wishlist-added-to-name">
          [linkx]
          
         </p>
         <div class="hp-lists-login js-wishlist-for-all-signup-promo">
          <div class="hp-lists-login-header">
           리스트에 저장하세요
          </div>
          <div class="hp-lists-login-copy">
           <a data-command="show-auth-lightbox" data-command-params="tab=signin;extraClass=user-access-menu-lightbox--user-center" href="#">
            로그인
           </a>
           하거나
           [linkx]
           
           하면 마음에 드는 숙소를 저장했다가 컴퓨터, 태블릿, 스마트폰 등 어디서나 자유롭게 확인하실 수 있습니다. 삭제하지 않는 한 언제든 편리하게 이용 가능!
          </div>
         </div>
        </div>
       </div>
       <div class="bpg_holder_light_block">
        <div class="" id="rate_guarantee">
         <i class=" bpg_logo ">
         </i>
         <a class=" open-bpg-in-overlay-instead pp_bpg_tooltip_holder" data-bui-component="Popover" data-popover-content-id="bpg_desktop_badge" data-popover-no-arrow="" data-popover-position="bottom" href=";" tabindex="0">
          최저가 맞춤
         </a>
         <div class="bui-panel bui-u-hidden" id="bpg_desktop_badge">
          <div class="pp-bpg-tooltip--header">
           최저가 맞춤
          </div>
          <div class="pp-bpg-tooltip--image">
          </div>
          <div class="pp-bpg-tooltip--text">
           저렴한 요금 •
           <span class='"no_booking_fees_fr_tooltip"'>
            예약 수수료 없음
           </span>
           •
                더 싼 요금을 찾으셨나요? 차액을 돌려드립니다!
          </div>
         </div>
        </div>
       </div>
       <div class="sb-searchbox__outer sb-searchbox-universal " data-sb-outer="">
        <form action="/searchresults.ko.html" class=" sb-searchbox sb-searchbox--painted -small -cjk js--sb-searchbox " data-component="search/searchbox/searchbox" data-is-first-visible="1" data-sb-animate-on-autocomplete="true" data-sb-flags=" AEJPAcBacPONDcFGHT:0 sr_sb_autocomplete_icon_revamp:0" data-sb-id="main" id="frm" method="get" role="search" target="_blank">
        </form>
       </div>
       <div class="fe_banner fe_banner__accessible fe_banner__w-icon fe_banner__grey fe-banner-icon__hp-people-looking ">
        <span class="fe_banner__icon">
         <svg aria-hidden="true" class="bk-icon -experiments-eye-with-lashes hp-ufi-people-looking__icon" fill="#537BB4" height="24" viewbox="0 0 24 24" width="24">
          <path class="lashes" d="M22 3.3c.5.2.6.9.4 1.3l-1 1.8a1 1 0 0 1-1.8-1l1-1.8a1 1 0 0 1 1.4-.3zM12 0c.6 0 1 .4 1 1v2a1 1 0 0 1-2 0V1c0-.6.4-1 1-1zM2 3.3a1 1 0 0 1 1.4.3l1 1.8a1 1 0 1 1-1.8 1l-1-1.8A1 1 0 0 1 2 3.3z" fill-rule="evenodd">
          </path>
          <path class="eye" d="M.5 12.4c-.7.6-.7 1.6 0 2.2 0 0 6.2 6.4 11.5 6.4s11.5-6.4 11.5-6.4c.7-.6.7-1.6 0-2.2 0 0-6.2-6.4-11.5-6.4S.5 12.4.5 12.4zm16 1.1a4.5 4.5 0 1 0-9 0 4.5 4.5 0 0 0 9 0zm-7.4-.7a3 3 0 1 0 2.2-2.2A1.8 1.8 0 1 1 9 12.8z" fill-rule="evenodd">
          </path>
         </svg>
        </span>
        <div class="fe_banner__message ">
         17,232명이 파리 숙소 검색중
        </div>
       </div>
       [linkx]
       
       <div class="public_transport tracked box sidebox hp-sidebar-block" id="public_transport_options">
        <div class="hp-sidebar-header">
         파리-오를리 공항에서 리츠 파리까지 어떻게 가나요?
        </div>
        <ul class="public_transport__list">
         <li class=" public_transport__item public_transport__item_type-car ">
          <div class=" public_transport__label ">
           <i aria-hidden="true" class="bicon-car">
           </i>
           승용차
          </div>
          <div class="public_transport__time">
           40분
          </div>
         </li>
         <li class="public_transport__item public_transport__no_time">
          <div class="public_transport__label" data-et-view="ZCDSFefWfecNfdUEeUOHSedZRO:1">
           <i aria-hidden="true" class="bicon-parking">
           </i>
           주차 가능
          </div>
         </li>
        </ul>
       </div>
       <svg class="bk-icon -sprite-occupancy_max1 g-hidden" height="12" viewbox="0 0 10 12" width="10">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M5 6c-2.2 0-4 1.8-4 4v1h8v-1c0-2.2-1.8-4-4-4z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max1for1 g-hidden" height="12" viewbox="0 0 10 12" width="10">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M5 6c-2.2 0-4 1.8-4 4v1h8v-1c0-2.2-1.8-4-4-4z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max2 g-hidden" height="12" viewbox="0 0 18 12" width="18">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <path d="M13 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4v1h16v-1c0-2.2-1.8-4-4-4z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max2for1 g-hidden" height="12" viewbox="0 0 18 12" width="18">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M13 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4v1h16v-1c0-2.2-1.8-4-4-4zm-3 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max3 g-hidden" height="12" viewbox="0 0 26 12" width="26">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max3for1 g-hidden" height="12" viewbox="0 0 26 12" width="26">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max4 g-hidden" height="12" viewbox="0 0 34 12" width="34">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <circle cx="29" cy="3" r="2">
        </circle>
        <path d="M29 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h32v-1c0-2.2-1.8-4-4-4z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max4for1 g-hidden" height="12" viewbox="0 0 34 12" width="34">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M29 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M29 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h32v-1c0-2.2-1.8-4-4-4zm-19 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max5 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M35.5 10h-5c-.3 0-.5-.2-.5-.5V8h2v1h2V6h-3.5c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5H36v1h-4v2h3.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max5for1 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M35.5 10h-5c-.3 0-.5-.2-.5-.5V8h2v1h2V6h-3.5c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5H36v1h-4v2h3.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max6 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M35.5 10h-5c-.3 0-.5-.2-.5-.5v-7c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5V4h-2V3h-2v2h3.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5zM32 9h2V6h-2v3z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max6for1 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M35.5 10h-5c-.3 0-.5-.2-.5-.5v-7c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5V4h-2V3h-2v2h3.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5zM32 9h2V6h-2v3z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max7 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M34 10h-2V7.5c0-.1 0-.2.1-.3L34 4.6V3h-2v1h-2V2.5c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v2.2c0 .1 0 .2-.1.3L34 7.6V10z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max7for1 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M34 10h-2V7.5c0-.1 0-.2.1-.3L34 4.6V3h-2v1h-2V2.5c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v2.2c0 .1 0 .2-.1.3L34 7.6V10z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max8 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M36 3c0-.6-.4-1-1-1h-4c-.6 0-1 .4-1 1v2l1 .5-1 .5v3c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V6l-1-.5 1-.5V3zm-3 0c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1zm0 6c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v1c0 .6-.4 1-1 1z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max8for1 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M36 3c0-.6-.4-1-1-1h-4c-.6 0-1 .4-1 1v2l1 .5-1 .5v3c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V6l-1-.5 1-.5V3zm-3 0c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1zm0 6c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v1c0 .6-.4 1-1 1z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max9 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M30.5 2h5c.3 0 .5.2.5.5v7c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5V8h2v1h2V7h-3.5c-.3 0-.5-.2-.5-.5v-4c0-.3.2-.5.5-.5zM34 3h-2v3h2V3z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max9for1 g-hidden" height="12" viewbox="0 0 40 12" width="40">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M37 1h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M30.5 2h5c.3 0 .5.2.5.5v7c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5V8h2v1h2V7h-3.5c-.3 0-.5-.2-.5-.5v-4c0-.3.2-.5.5-.5zM34 3h-2v3h2V3z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max10 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path class="bk_occ_fillw" d="M38 2h-3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-1 7h-1V3h1v6z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max10for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38 2h-3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-1 7h-1V3h1v6z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max11 g-hidden" height="12" viewbox="0 0 41 12" width="41">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M38 1h-9c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M37 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max11for1 g-hidden" height="12" viewbox="0 0 41 12" width="41">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M38 1h-9c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M37 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max12 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm18-5H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4zm6.5 6h-4c-.3 0-.5-.2-.5-.5v-1c0-.1 0-.2.1-.3L37 4.3V3h-1v2h-2V2.5c0-.3.2-.5.5-.5h4c.3 0 .5.2.5.5v2c0 .1 0 .2-.1.3L36 8.7V9h3v.5c0 .3-.2.5-.5.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max12for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4zm6.5 6h-4c-.3 0-.5-.2-.5-.5v-1c0-.1 0-.2.1-.3L37 4.3V3h-1v2h-2V2.5c0-.3.2-.5.5-.5h4c.3 0 .5.2.5.5v2c0 .1 0 .2-.1.3L36 8.7V9h3v.5c0 .3-.2.5-.5.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max13 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38.5 2h-4c-.3 0-.5.2-.5.5V4h2V3h1v2h-2v1h2v3h-1V8h-2v1.5c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5v-7c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max13for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38.5 2h-4c-.3 0-.5.2-.5.5V4h2V3h1v2h-2v1h2v3h-1V8h-2v1.5c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5v-7c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max14 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M39 10h-2V8h-2.5c-.3 0-.5-.2-.5-.5V5.8c0-.1 0-.2.1-.3L37 2h2v8zm-3-3h1V4.7L36 6v1z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max14for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M39 10h-2V8h-2.5c-.3 0-.5-.2-.5-.5V5.8c0-.1 0-.2.1-.3L37 2h2v8zm-3-3h1V4.7L36 6v1z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max15 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38.5 10h-4c-.3 0-.5-.2-.5-.5V8h2v1h1V6h-2.5c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5H39v1h-3v2h2.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max15for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38.5 10h-4c-.3 0-.5-.2-.5-.5V8h2v1h1V6h-2.5c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5H39v1h-3v2h2.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max16 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38.5 10h-4c-.3 0-.5-.2-.5-.5v-7c0-.3.2-.5.5-.5h4c.3 0 .5.2.5.5V4h-2V3h-1v2h2.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5zM36 9h1V6h-1v3z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max16for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38.5 10h-4c-.3 0-.5-.2-.5-.5v-7c0-.3.2-.5.5-.5h4c.3 0 .5.2.5.5V4h-2V3h-1v2h2.5c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5zM36 9h1V6h-1v3z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max17 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M37 10h-2V7.5c0-.1 0-.2.1-.3L37 4.6V3h-2v1h-2V2.5c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v2.2c0 .1 0 .2-.1.3L37 7.6V10z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max17for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M37 10h-2V7.5c0-.1 0-.2.1-.3L37 4.6V3h-2v1h-2V2.5c0-.3.2-.5.5-.5h5c.3 0 .5.2.5.5v2.2c0 .1 0 .2-.1.3L37 7.6V10z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max18 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M40 3c0-.6-.4-1-1-1h-4c-.6 0-1 .4-1 1v2l1 .5-1 .5v3c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V6l-1-.5 1-.5V3zm-3 0c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1zm0 6c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v1c0 .6-.4 1-1 1z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max18for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M40 3c0-.6-.4-1-1-1h-4c-.6 0-1 .4-1 1v2l1 .5-1 .5v3c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V6l-1-.5 1-.5V3zm-3 0c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1zm0 6c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v1c0 .6-.4 1-1 1z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max19 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M34.5 2h5c.3 0 .5.2.5.5v7c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5V8h2v1h2V7h-3.5c-.3 0-.5-.2-.5-.5v-4c0-.3.2-.5.5-.5zM38 3h-2v3h2V3z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max19for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M34.5 2h5c.3 0 .5.2.5.5v7c0 .3-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5V8h2v1h2V7h-3.5c-.3 0-.5-.2-.5-.5v-4c0-.3.2-.5.5-.5zM38 3h-2v3h2V3z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M32 4V2h-2v1h-1v1h1v5h-1v1h4V9h-1V4z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max20 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M39 2h-3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-1 7h-1V3h1v6z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max20for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M39 2h-3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-1 7h-1V3h1v6z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max21 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38 9V2h-2v1h-1v1h1v5h-1v1h4V9z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max21for1 g-hidden" height="12" viewbox="0 0 42 12" width="42">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M39 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38 9V2h-2v1h-1v1h1v5h-1v1h4V9z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max22 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M39.9 4.8c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max22for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M39.9 4.8c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max23 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M39.5 2h-4c-.3 0-.5.2-.5.5V4h2V3h1v2h-2v1h2v3h-1V8h-2v1.5c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5v-7c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max23for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M39.5 2h-4c-.3 0-.5.2-.5.5V4h2V3h1v2h-2v1h2v3h-1V8h-2v1.5c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5v-7c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max24 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38 2l-2.9 3.5c-.1 0-.1.2-.1.3v1.7c0 .3.2.5.5.5H38v2h2V2h-2zm0 5h-1V6l1-1.2V7z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max24for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M38 2l-2.9 3.5c-.1 0-.1.2-.1.3v1.7c0 .3.2.5.5.5H38v2h2V2h-2zm0 5h-1V6l1-1.2V7z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max25 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <circle cx="13" cy="3" r="2">
        </circle>
        <circle cx="21" cy="3" r="2">
        </circle>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M40 3V2h-4.5c-.3 0-.5.2-.5.5v3c0 .3.2.5.5.5H38v3h-1V8h-2v1.5c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5v-4c0-.3-.2-.5-.5-.5H37V3h3z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-occupancy_max25for1 g-hidden" height="12" viewbox="0 0 43 12" width="43">
        <circle cx="5" cy="3" r="2">
        </circle>
        <path d="M13 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0-3c.6 0 1 .4 1 1s-.4 1-1 1-1-.4-1-1 .4-1 1-1z">
        </path>
        <path d="M21 6c-2.2 0-4 1.8-4 4 0-2.2-1.8-4-4-4s-4 1.8-4 4c0-2.2-1.8-4-4-4s-4 1.8-4 4v1h24v-1c0-2.2-1.8-4-4-4zm-11 4c0-1.7 1.3-3 3-3s3 1.3 3 3h-6zm8 0c0-1.7 1.3-3 3-3s3 1.3 3 3h-6z">
        </path>
        <path d="M40 1H29c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z">
        </path>
        <path class="bk_occ_fillw" d="M40 3V2h-4.5c-.3 0-.5.2-.5.5v3c0 .3.2.5.5.5H38v3h-1V8h-2v1.5c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5v-4c0-.3-.2-.5-.5-.5H37V3h3z" fill="#FFFFFF">
        </path>
        <path class="bk_occ_fillw" d="M33.5 2h-4c-.3 0-.5.2-.5.5V5h2V3h1v1.3l-2.9 3.9c-.1.1-.1.2-.1.3v1c0 .3.2.5.5.5h4c.3 0 .5-.2.5-.5V9h-3v-.3l2.9-3.9c.1-.1.1-.2.1-.3v-2c0-.3-.2-.5-.5-.5z" fill="#FFFFFF">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_1_half_sm g-hidden" height="10" viewbox="0 0 18 8" width="22">
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
        <path d="M14 0c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm0 7.2V.8c1.8 0 3.2 1.4 3.2 3.2 0 1.8-1.4 3.2-3.2 3.2z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_1_half g-hidden" height="10" viewbox="0 0 22 10" width="22">
        <circle cx="5" cy="5" fill="#feba02" r="5">
        </circle>
        <path d="M17 0c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 9V1c2.2 0 4 1.8 4 4s-1.8 4-4 4z" fill="#feba02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_1_sm g-hidden" height="10" viewbox="0 0 8 8" width="10">
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_1 g-hidden" height="10" viewbox="0 0 10 10" width="10">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_2_half_sm g-hidden" height="10" viewbox="0 0 28 8" width="35">
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
        <path d="M24 0c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm0 7.2V.8c1.8 0 3.2 1.4 3.2 3.2 0 1.8-1.4 3.2-3.2 3.2z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_2_half g-hidden" height="10" viewbox="0 0 34 10" width="34">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <path d="M29 0c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 9V1c2.2 0 4 1.8 4 4s-1.8 4-4 4z" fill="#FEBA02">
        </path>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_2_sm g-hidden" height="10" viewbox="0 0 18 8" width="22">
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_2 g-hidden" height="10" viewbox="0 0 22 10" width="22">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_3_half_sm g-hidden" height="10" viewbox="0 0 38 8" width="47">
        <circle cx="24" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
        <path d="M34 0c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm0 7.2V.8c1.8 0 3.2 1.4 3.2 3.2 0 1.8-1.4 3.2-3.2 3.2z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_3_half g-hidden" height="10" viewbox="0 0 46 10" width="46">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <path d="M41 0c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 9V1c2.2 0 4 1.8 4 4s-1.8 4-4 4z" fill="#FEBA02">
        </path>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="29" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_3_sm g-hidden" height="10" viewbox="0 0 28 8" width="35">
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="24" cy="4" fill="#FEBA02" r="4">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_3 g-hidden" height="10" viewbox="0 0 34 10" width="34">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="29" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_4_half_sm g-hidden" height="10" viewbox="0 0 48 8" width="60">
        <circle cx="34" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="24" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
        <path d="M44 0c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm0 7.2V.8c1.8 0 3.2 1.4 3.2 3.2 0 1.8-1.4 3.2-3.2 3.2z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_4_half g-hidden" height="10" viewbox="0 0 58 10" width="58">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <path d="M53 0c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 9V1c2.2 0 4 1.8 4 4s-1.8 4-4 4z" fill="#FEBA02">
        </path>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="29" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="41" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_4_sm g-hidden" height="10" viewbox="0 0 38 8" width="47">
        <circle cx="24" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="34" cy="4" fill="#FEBA02" r="4">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_4 g-hidden" height="10" viewbox="0 0 46 10" width="46">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="29" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="41" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_5_sm g-hidden" height="10" viewbox="0 0 48 8" width="60">
        <circle cx="34" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="44" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="24" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="14" cy="4" fill="#FEBA02" r="4">
        </circle>
        <circle cx="4" cy="4" fill="#FEBA02" r="4">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_circles_5 g-hidden" height="12" viewbox="0 0 58 10" width="69">
        <circle cx="5" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="17" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="29" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="41" cy="5" fill="#FEBA02" r="5">
        </circle>
        <circle cx="53" cy="5" fill="#FEBA02" r="5">
        </circle>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_1_half_sm g-hidden" height="12" viewbox="0 0 19 8" width="28">
        <path d="M9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.1-.3-.2-.4-.2s-.3.1-.3.2l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4h.2c.1 0 .1 0 .2-.1l2.3-1.4 2.3 1.4c.2.1.3.1.3.1.1 0 .2 0 .2-.1l.1-.1c0-.1.1-.2 0-.3L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zm-2.5 1.7l-.2.1.1.2.6 2.6-2.3-1.4-.2-.1V.4l1 2.3.1.2h.2l2.8.2-2.1 1.6z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_1_half g-hidden" height="12" viewbox="0 0 26 12" width="26">
        <path d="M130 328.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H127.6c.1-.1.1-.2.1-.3l-1.2-4.3 3.5-2.5v-.3zM143 328.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c0-.1-.1-.1-.2-.1s-.2 0-.2.1l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3H133l3.7-2.6 3.7 2.6H140.7c.1-.1.1-.2.1-.3l-1.2-4.3 3.5-2.5c-.1-.1-.1-.2-.1-.3zm-3.9 2.3l-.3.2.1.3 1.1 3.7-3.1-2.2-.3-.2v-7.8l1.3 3.4.1.3h.3l3.8.2-3 2.1zM13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.2-.1-.3-.1-.1 0-.2 0-.2.1l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3H15.9l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zm-3.9 2.3l-.3.2.1.3 1.1 3.7-3.1-2.2-.3-.2V.9l1.3 3.4.1.3h.3l3.7.2-2.9 2.1z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_1_sm g-hidden" height="12" viewbox="0 0 9 8" width="13">
        <path d="M9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_1 g-hidden" height="12" viewbox="0 0 13 12" width="13">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_2_half_sm g-hidden" height="12" viewbox="0 0 29 8" width="43">
        <path d="M19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM29 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.1-.3-.2-.4-.2s-.3.1-.3.2l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L22.3 5l-.7 2.6c0 .1 0 .3.1.4h.2c.1 0 .1 0 .2-.1l2.3-1.4 2.3 1.4c.2.1.3.1.3.1.1 0 .2 0 .2-.1l.1-.1c0-.1.1-.2 0-.3L26.7 5l2.1-1.6c.2-.1.2-.2.2-.4zm-2.5 1.7l-.2.1.1.2.6 2.6-2.3-1.4-.2-.1V.4l1 2.3.1.2h.2l2.8.2-2.1 1.6z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_2_half g-hidden" height="12" viewbox="0 0 39 12" width="39">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.2-.1-.3-.1-.1 0-.2 0-.2.1l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3H28.9l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3zm-3.9 2.3l-.3.2.1.3 1.1 3.7-3.1-2.2-.3-.2V.9l1.3 3.4.1.3h.3l3.7.2-2.9 2.1z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_2_sm g-hidden" height="12" viewbox="0 0 19 8" width="28">
        <path d="M19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_2 g-hidden" height="12" viewbox="0 0 26 12" width="26">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_3_half_sm g-hidden" height="12" viewbox="0 0 39 8" width="58">
        <path d="M29 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L22.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L26.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM39 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.1-.3-.2-.4-.2-.1 0-.3.1-.3.2l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L32.3 5l-.7 2.6c0 .1 0 .3.1.4h.2c.1 0 .1 0 .2-.1l2.3-1.4 2.3 1.4c.2.1.3.1.3.1.1 0 .2 0 .2-.1l.1-.1c0-.1.1-.2 0-.3L36.7 5l2.1-1.6c.2-.1.2-.2.2-.4zm-2.5 1.7l-.2.1.1.2.6 2.6-2.3-1.4-.2-.1V.4l1 2.3.1.2h.2l2.8.2-2.1 1.6z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_3_half g-hidden" height="12" viewbox="0 0 52 12" width="52">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3zM52 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.2-.1-.3-.1-.1 0-.2 0-.2.1l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3H41.9l3.7-2.6 3.7 2.6H49.6c.1-.1.1-.2.1-.3l-1.2-4.3L52 4.9v-.3zm-3.9 2.3l-.3.2.1.3 1.1 3.7-3.1-2.2-.3-.2V.9l1.3 3.4.1.3h.3l3.7.2-2.9 2.1z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_3_sm g-hidden" height="12" viewbox="0 0 29 8" width="43">
        <path d="M29 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L22.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L26.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_3 g-hidden" height="12" viewbox="0 0 39 12" width="39">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_4_half_sm g-hidden" height="12" viewbox="0 0 49 8" width="73">
        <path d="M39 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L32.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L36.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM29 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L22.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L26.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM49 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.1-.3-.2-.4-.2-.1 0-.3.1-.3.2l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L42.3 5l-.7 2.6c0 .1 0 .3.1.4h.2c.1 0 .1 0 .2-.1l2.3-1.4 2.3 1.4c.2.1.3.1.3.1.1 0 .2 0 .2-.1l.1-.1c0-.1.1-.2 0-.3L46.7 5l2.1-1.6c.2-.1.2-.2.2-.4zm-2.5 1.7l-.2.1.1.2.6 2.6-2.3-1.4-.2-.1V.4l1 2.3.1.2h.2l2.8.2-2.1 1.6z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_4_half g-hidden" height="12" viewbox="0 0 65 12" width="65">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3zM52 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H49.6c.1-.1.1-.2.1-.3l-1.2-4.3L52 4.9v-.3zM65 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.2-.1-.3-.1-.1 0-.2 0-.2.1l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3H54.9l3.7-2.6 3.7 2.6H62.6c.1-.1.1-.2.1-.3l-1.2-4.3L65 4.9v-.3zm-3.9 2.3l-.3.2.1.3 1.1 3.7-3.1-2.2-.3-.2V.9l1.3 3.4.1.3h.3l3.7.2-2.9 2.1z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_4_sm g-hidden" height="12" viewbox="0 0 39 8" width="58">
        <path d="M39 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L32.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L36.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM29 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L22.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L26.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_4 g-hidden" height="12" viewbox="0 0 52 12" width="52">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3zM52 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H49.6c.1-.1.1-.2.1-.3l-1.2-4.3L52 4.9v-.3z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_5_sm g-hidden" height="12" viewbox="0 0 49 8" width="73">
        <path d="M49 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L42.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L46.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM39 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L32.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L36.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM29 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L22.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L26.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM19 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.8.2c-.2 0-.3.1-.3.3 0 .1 0 .3.1.4L12.3 5l-.7 2.6c0 .1 0 .3.1.4.2 0 .3 0 .5-.1l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L16.7 5l2.1-1.6c.2-.1.2-.2.2-.4zM9 3c0-.1-.2-.2-.3-.3l-2.8-.2-1-2.3c-.1-.3-.6-.3-.7 0l-1 2.3-2.9.3c-.1 0-.2.1-.3.2 0 .1 0 .3.1.4L2.3 5l-.7 2.5c0 .1 0 .3.1.4.2.1.3.1.5 0l2.3-1.4 2.3 1.4c.1.1.2.1.2.1.1 0 .2 0 .2-.1.1-.1.2-.2.1-.4L6.7 5l2.1-1.6c.2-.1.2-.2.2-.4z" fill="#FEBA02">
        </path>
       </svg>
       <svg class="bk-icon -sprite-ratings_stars_5 g-hidden" height="12" viewbox="0 0 65 12" width="65">
        <path d="M13 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.1-.5-.1-.5 0l-1.5 4-4.6.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3h.3l3.7-2.6 3.7 2.6H10.5c.1-.1.1-.2.1-.3L9.4 7.3l3.5-2.5c.1 0 .1-.1.1-.2zM26 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H23.6c.1-.1.1-.2.1-.3l-1.2-4.3L26 4.9v-.3zM39 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H36.6c.1-.1.1-.2.1-.3l-1.2-4.3L39 4.9v-.3zM52 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H49.6c.1-.1.1-.2.1-.3l-1.2-4.3L52 4.9v-.3zM65 4.6c0-.1-.1-.2-.2-.2l-4.5-.3-1.5-4c-.1-.2-.4-.2-.5 0l-1.5 4-4.5.3c-.1 0-.2.1-.2.2s0 .2.1.3l3.5 2.5-1.2 4.3c0 .1 0 .2.1.3.1.1.2.1.3 0l3.7-2.6 3.7 2.6H62.6c.1-.1.1-.2.1-.3l-1.2-4.3L65 4.9v-.3z" fill="#FEBA02">
        </path>
       </svg>
       <div class="hp_sidebar_usp_box hp-sidebar-block hp_sidebar-similar" data-et-view="ZOOJeRYLfCBWaEdEJHaZFZMO:1">
        <span class="hp-sidebar-similar_header">
         마음에 들긴 하는데... 확신이 서지 않으시나요?
        </span>
        [linkx]
        
       </div>
       <div class="hp-social_proof reviews-snippet-sidebar hp-social-proof-review_score" data-et-view="">
        <div data-et-view="adUAVYCIFBUddWTNDbaZIUONSQecLUBO:1">
        </div>
        <div class="hp_review_score_entry">
         <a aria-controls="hp-reviews-sliding" aria-role="button" class="" data-active-class="selected" data-component="core/sliding-panel-trigger" data-et-click="customGoal:adUAVYCIFBUddWTNDbaZIUONSQecLUBO:1" data-tab-link="" data-target="hp-reviews-sliding" href="4" rel="reviews">
          <div class="bui-review-score c-score">
           <div aria-label="9.6" class="bui-review-score__badge">
            9.6
           </div>
           <div class="bui-review-score__content">
            <div class="bui-review-score__title">
             강력 추천
            </div>
            <div class="bui-review-score__text">
             274개 이용 후기
            </div>
           </div>
          </div>
         </a>
        </div>
        <div data-et-view="UBKeJBUcMNQVTNDPVBC:1">
        </div>
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “It is a fabulous renovation of possibly the most iconic hotel in the world.”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Frank
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                아랍에미리트
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Everything”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Tine
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                덴마크
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “If you like staff greeting you every five meters you walk in the lobby, you will love the Ritz. If you like classic gold, white and blue wooden details, you will also love the place.”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Eric
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                스웨덴
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “The elegance and uniqueness, it’s an experience to stay in Ritz Paris ”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Niveen
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                아랍에미리트
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Iconic hotel that lived up to its reputation”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Mark
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                영국
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Excellent staff, great room, luxury, great spa, the best afternoon tea, the best breakfast , BEST LOCATION”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Sophie
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                키프로스
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Pretty much everything was lovely and exactly as it was before. Nice to see that the standards have not dropped and the Ritz is as special as ever !”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Pj
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                남아프리카 공화국
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Everything! This hotel is amazing. Prepare for an amazing experience!”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Henrik
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                영국
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Everything”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Vince
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                영국
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="bui-divider bui-divider--light"/>
        <div class="reviews-snippet-sidebar__item">
         <div class="c-review-snippet">
          <div class="c-review-snippet__review">
           <div class="c-review">
            <div class="c-review__row">
             <p class="c-review__inner c-review__inner--ltr">
              <span class="c-review__body">
               “Everything ! At the heart of Paris but so calm, beautiful and traditional, the best service ever, the amazing pool”
              </span>
             </p>
            </div>
           </div>
          </div>
          <div class="c-review-snippet__guest">
           <div class="c-guest-with-score">
            <div class="c-guest-with-score__guest">
             <div class="c-guest bui-avatar-block">
              <div class="bui-avatar ">
              </div>
              <div class="bui-avatar-block__text">
               <span class="bui-avatar-block__title">
                Stella
               </span>
               <span class="bui-avatar-block__subtitle">
                <span class="bui-flag bui-avatar-block__flag">
                </span>
                아일랜드
               </span>
              </div>
             </div>
            </div>
            <div class="c-guest-with-score__score">
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="hp_review_score_entry entry_bottom_link">
         <button aria-controls="hp-reviews-sliding" class="bui-button bui-button--secondary bui-button--wide score_entry_btn" data-active-class="selected" data-component="core/sliding-panel-trigger" data-et-click="customGoal:adUAVYCIFBUddWTNDbaZIUONSQecLUBO:2" data-tab-link="" data-target="hp-reviews-sliding" href="#blockdisplay4" rel="reviews" type="button">
          <span class="bui-button__text">
           모든 후기 보기
          </span>
         </button>
        </div>
       </div>
      </div>
      <div class="clear">
      </div>
      <div class="rlt-left leftsmall" id="left2">
      </div>
      <div class="rlt-right" id="right2">
      </div>
      <div class="clear">
      </div>
     </div>
     <div class="hp_cs_back_to_search">
      <h3 class="hp_cs_back_to_search__title">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <a class="hp_cs_back_to_search__link" href="/searchresults.ko.html" target="_blank">
       검색 계속하기
      </a>
     </div>
     <div data-et-click="IZVCFIMNJabeQcJPFeNDCRe:1">
      <div data-et-click="IZVCFIMNSeCXYZTUPWHT:1">
       <div data-et-click="IZVCFIMNWWDdeZMOKe:1">
        <div id="seo_links_drawer">
         <div class="hp_useful_links_header">
          <h3>
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h3>
         </div>
         <div class="tracked box sidebox clearfix hp_useful_links " id="in_and_around">
          <div class="location_tab_right_col clearfix">
           <div class="in_and_around wide widesep widelm b_promotion_type_landmark" id="b_promotion_type_landmark">
            <ul data-type="landmark">
            </ul>
           </div>
           <div class="in_and_around b_promotion_type_landmark">
            <h4>
             경기장/아레나
            </h4>
            <ul>
             <li>
              <a data-map_coords="48.841384, 2.253122" href="/landmark/fr/parc-des-princes.ko.html
" title="파르크 데 프랭스 인근 호텔">
               파르크 데 프랭스
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="in_and_around b_promotion_type_landmark">
            <h4>
             극장
<li>[ahref]</li><li>[pkeyx]</li>[ahref][linkx][mkey1]
            </h4>
            <ul>
             <li>
              <a data-map_coords="48.852609, 2.370042" href="/landmark/fr/opera-bastille.ko.html
" title="오페라 바스티유 인근 호텔">
               오페라 바스티유
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="in_and_around b_promotion_type_landmark">
            <h4>
             기념물/모뉴먼트
            </h4>
            <ul>
             <li>
              [keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1]<li>[mkey1]</li>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a data-map_coords="48.873777, 2.295028" href="/landmark/fr/arc-de-triomphe.ko.html
" title="개선문 인근 호텔">
               개선문
              </a>
             </li>
             <li>
              <a data-map_coords="48.858259, 2.294515" href="/landmark/fr/eiffel-tower.ko.html
" title="에펠탑 인근 호텔">
               에펠탑
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="in_and_around b_promotion_type_landmark">
            <h4>
             랜드마크
            </h4>
            <ul>
             <li>
              <a data-map_coords="48.882313, 2.340192" href="/landmark/fr/la-cigale-concert-hall.ko.html
" title="라 시갈 콘서트 홀 인근 호텔">
               라 시갈 콘서트 홀
              </a>
             </li>
             <li>
              <a data-map_coords="48.846813611438, 2.33712618252559" href="/landmark/fr/luxembourg-gardens-jardin-du-luxembourg.ko.html
" title="룩셈부르크 가든 인근 호텔">
               룩셈부르크 가든
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="in_and_around b_promotion_type_landmark">
            <h4>
             박물관
            </h4>
            <ul>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a data-map_coords="48.860636, 2.352104" href="/landmark/fr/centre-pompidou.ko.html
" title="퐁피두 센터 인근 호텔">
               퐁피두 센터
              </a>
             </li>
             <li>
              <a data-map_coords="48.8553798252335, 2.31589940254696" href="/landmark/fr/rodin-museum.ko.html
" title="로댕 미술관 인근 호텔">
               로댕 미술관
              </a>
             </li>
            </ul>
           </div>
           <div class="in_and_around b_promotion_type_landmark">
            <h4>
             컨벤션 센터
            </h4>
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a data-map_coords="48.971, 2.518" href="/landmark/fr/expo-paris-nord-villepinte.ko.html
" title="엑스포 파리 노르 인근 호텔">
               엑스포 파리 노르
              </a>
             </li>
            </ul>
           </div>
          </div>
          <div class="new_loc_transport_on">
           <div class="in_and_around b_promotion_type_airport">
            <h4>
             공항
            </h4>
            <ul>
             <li>
              [ahref]
              
              (ORY)
              <span>
               15.6 km
              </span>
             </li>
             <li>
              <a href="/airport/fr/cdg.ko.html
">
               파리-샤를드골 공항
              </a>
              (CDG)
              <span>
               23.4 km
              </span>
             </li>
             <li>
              [ahref]
              
              (BVA)
              <span>
               67.7 km
              </span>
             </li>
            </ul>
           </div>
          </div>
          <div class="ppc_ranked_cities_on_hotel_page in_and_around">
           <p class="ppc_ranked_title">
            최고 인기 도시
           </p>
           <ul>
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/city/fr/cergy.ko.html">
              세르지
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="customer_service_footer">
      <div class="customer_service_footer_content">
       <h4 class="header_text">
        대한민국에서 프랑스까지, Booking.com이 함께합니다!
       </h4>
       <p>
        Booking.com은 프랑스 센터를 비롯, 전 세계 10개국에 고객 센터를 갖추고 있어 24시간 고객 서비스를 지원합니다! 언제든 전화주세요.
       </p>
      </div>
     </div>
     <div id="calendar">
     </div>
     <a class="back_to_top border4" href="#" id="back_to_top" style="display: none;" title="맨 위로">
     </a>
    </div>
   </div>
  </div>
  <div class="slinks ">
  </div>
  <div class="footerconstraint cnd-onview-anchor footer_no_lang_track a11y_fix_footer_contrast_footerconstraint " id="footer_menu_track" role="contentinfo">
   <div aria-label="뉴스레터 구독하고 최고의 특가 알아보기 - 하단부" class="newsletter_subscribe_with_sprites " data-emk-subscription-success-remove="" id="newsletter_form_footer_container" role="region">
    <form action="/newslettersubscribe.html" class="footerForm emk-subscription-entry-point " data-component="emk/subscription-entry-point emk/subscription-entry-point-feedback-msg" data-emk-entry-point-label="footer" id="emk-footer" method="post" name="newsletterform">
    </form>
   </div>
   <div style="clear: both;">
   </div>
   <div class="footer-wrapper" id="booking-footer">
    <div class="footer-top-menu" id="footer_top_menu">
     <div class="footer-top-partners clearfix">
      <div class="footerconstraint-inner clearfix">
       <div id="footertopnav-partners" role="navigation">
        <p class="footer-top-partner-text footer-top-partner-buttons">
         <a class="footer-top-button" data-ga-track="click|pageview:/internallink/partner/footer/hotellink/hotel/ko" href="/?lang=ko&amp;aid=304142&amp;utm_source=footer_menu&amp;utm_medium=frontend&amp;label=gen000nr-10CAsoTUIQcml0ei1wYXJpcy1wYXJpc0gXWARofYgBAZgBM7gBBcgBHtgBA-gBAfgBAYgCAagCAbgC4rLz6AXAAgE" ref="nofollow" target="_blank">
          내 숙소 등록
         </a>
        </p>
       </div>
      </div>
     </div>
     <div class="footerconstraint-inner clearfix">
      <div id="footertopnav" role="navigation">
       <ul class="footer-top-links-list">
        <li class="footer-top-link">
         [ahref]
         
        </li>
        <li class="footer-top-link">
         <a href="/hotel/fr/ritz-paris-paris.ko.html" rel="nofollow">
          스마트폰 버전
         </a>
        </li>
        <li class="footer-top-link">
         <a href="/auth/oauth2?lang=ko&amp;dt=1562171747&amp;state=UuMBJaY6DZQ5M6NocJzxlIQ3ZC2YHuU1d2tYvehnzQC96asdf-_J6lCFBhqir0ylfZIjcV5w2rIam7tdJZAMyFfN6ew1oG_8-YR8W-t8LpY24TFtaJIOoag9c3Sogt0b72Aop2ILOZ42-fv2t-86_PXbCCYcrFQaOpXXU2iJlGHiAthLFSXk6d7AukJ0RlCbUJjX1VftwBoiChSJwG5jv7Ri9MpOgHKoZYUYEmwM3ZQhgk6FVDP6opft12uUfkzeVq6TTX9QZo2O6KhpBx8-TcjMtUmoQKhK7GDzSifYzApojADdQ7g&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;response_type=code&amp;aid=304142&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return">
          나의 계정
         </a>
        </li>
        <li class="footer-top-link">
         [linkx]
         
        </li>
        <li class="footer-top-link" data-ga-track="click|CSIR|CS|footer_top_customer_service_help">
         <form action="/content/cs.ko.html" id="customer_service_form" method="get">
         </form>
        </li>
        <li class="footer-top-link">
         [ahref]
         
        </li>
        <li class="footer-top-link">
         <a class="tracked" data-google-track="Click/Action: hotel/BBTool Footer" href="/business.ko.html">
          Booking.com 비즈니스 계정
         </a>
        </li>
        <div>
        </div>
       </ul>
      </div>
     </div>
    </div>
    <div class="footerconstraint-inner">
     <div class="footer-navigation-links-wrapper clearfix" id="footer" role="navigation">
      <div class="footer-navigation-links" id="footer_links">
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="seoindexlinks" href="/district
.ko.html
" rel="nofollow">
           지역
          </a>
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="seoindexlinks" href="/landmark
.ko.html
" rel="nofollow">
           관광 명소
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          <a data-ga="booking-home" href="/booking-home/index.ko.html">
           휴가지 숙소
          </a>
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="resorts" href="/resorts/index.ko.html">
           리조트
          </a>
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="guest_house" href="/guest-house/index.ko.html">
           게스트하우스
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a class="js-reviews-footer-link" data-ga="seoindexlinks" href="/reviews
.ko.html
">
           이용 후기
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list" data-et-view="NVNZWUcCcCcCJbYRObBHVfBJOeBLZET:1 NVNZWUcCcCcCJbYRObBHVfBJOeBLZET:7">
         <li class="footer-navigation-link">
          [ahref]
           [keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          <div>
          </div>
          <div>
          </div>
          <a data-ga-track="click|CSIR|CS|footer_link_customer_service_help" href="/content/cs.ko.html;from_footer=1">
           고객 지원
          </a>
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga-track="click|pageview:/outgoinglink/footer/careerlink/ko" href="/?utm_source=corporate&amp;utm_medium=footer">
           Careers
          </a>
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link" data-ga-track="click|CSIR|CS|footer_link_contact_us">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="footer-offices footerconstraint-inner">
     <div class="footer-offices-copy">
      <div data-component="csir-ga-tracking" data-cs-ga-track="CSIR|CS|footer_offices_worldwide">
       네덜란드 암스테르담에 본사를 둔 Booking.com B.V.는 전세계
       [ahref]
       
       [ahref]
       
       을 개설하여 밀착 서비스를 지원하고 있습니다.
      </div>
     </div>
    </div>
    <div aria-label="지금 무료 Booking.com 앱을 받으세요" class="local_info_bot footerconstraint-inner" role="region">
     <div class="local_info_bot_inner">
      <div class="extranet_link_container">
       [linkx]
       
      </div>
      <div class="footercopyright ">
       <div class="whitebar">
        <div class="copyright_text">
         저작권 © 1996–2019
Booking.com™. 모든 권리 보유.
        </div>
       </div>
      </div>
     </div>
     <div style="clear:both;">
     </div>
    </div>
    <div class="footer-logos footerconstraint-inner">
     <div class="footer__priceline">
      <p class="footer__priceline__title">
       Booking.com은 전 세계를 선도하는 온라인 여행 서비스 기업인 Booking Holdings Inc.의 그룹사입니다.
      </p>
      <div class="footer__priceline__list">
       <ul>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0177
  </b>
 </body>
</html>
<div id="revc_write_a_review_login_intro" style="display:none;" tabindex="-1">
 <span class="invisible_spoken">
  대화 상자 내용이 시작됩니다
 </span>
 <div class="intro_header">
  <h1>
   [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h1>
  <p>
   <strong>
    실제 투숙객이 작성한
   </strong>
   7천만 개 이상의 숙소 후기를 제공합니다.
  </p>
 </div>
 <div class="rlp-intro">
  <div class="rlp-intro__container clearfix">
   <h2 class="rlp-intro__title rlp-intro__a11y-exp-title">
    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h2>
   <ul class="rlp-intro-how a11y_contrast_blue_gray">
    <li class="rlp-intro-how__item fl">
     <div class="rlp-intro-how__container rlp-intro-how__container--tickfull">
      <div class="rlp-intro-how__sub-container">
       <p class="rlp-intro-how__num rlp-intro-how__num--tickfull">
        1
       </p>
       <p aria-hidden="true" class="rlp-intro-how__icon bicon-tickfull">
       </p>
      </div>
     </div>
     <h3 class="rlp-intro-how__title rlp-intro-how__a11y-exp-title">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <span class="rlp-intro-how__title rlp-intro-how__caption">
      손님이 숙소를 예약하고
     </span>
     <p class="rlp-intro-how__desc">
      이용 후기를 작성할 수 있는 유일한 방법은 먼저 예약하는 것입니다. Booking.com 이용 후기는 오직 실제 투숙객만 쓸 수 있습니다.
     </p>
    </li>
    <li aria-hidden="true" class="rlp-intro-how__arrow fl">
     <p class="rlp-intro-how__arrow-icon bicon-rightchevron">
     </p>
    </li>
    <li class="rlp-intro-how__item fl">
     <div class="rlp-intro-how__container rlp-intro-how__container--citytrip">
      <div class="rlp-intro-how__sub-container">
       <p class="rlp-intro-how__num rlp-intro-how__num--citytrip">
        2
       </p>
       <p aria-hidden="true" class="rlp-intro-how__icon bicon-citytrip">
       </p>
      </div>
     </div>
     <h3 class="rlp-intro-how__title rlp-intro-how__a11y-exp-title">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <span class="rlp-intro-how__title rlp-intro-how__caption">
      실제로 머문 후
     </span>
     <p class="rlp-intro-how__desc">
      숙소에 도착한 손님은 객실은 조용한가, 음식이 맛있는가, 직원이 친절한가 등을 평가합니다.
     </p>
    </li>
    <li aria-hidden="true" class="rlp-intro-how__arrow fl">
     <p class="rlp-intro-how__arrow-icon bicon-rightchevron">
     </p>
    </li>
    <li class="rlp-intro-how__item fl">
     <div class="rlp-intro-how__container rlp-intro-how__container--feedback">
      <div class="rlp-intro-how__sub-container">
       <p class="rlp-intro-how__num rlp-intro-how__num--feedback">
        3
       </p>
       <p aria-hidden="true" class="rlp-intro-how__icon bicon-feedback">
       </p>
      </div>
     </div>
     <h3 class="rlp-intro-how__title rlp-intro-how__a11y-exp-title">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <span class="rlp-intro-how__title rlp-intro-how__caption">
      돌아와서 후기를 남깁니다
     </span>
     <p class="rlp-intro-how__desc">
      여행에서 돌아온 투숙객이 숙소에 대해 들려줍니다. 모든 후기는 비속어 유무와 진실성 여부 확인 후 Booking.com 사이트에 등록됩니다.
     </p>
    </li>
   </ul>
  </div>
 </div>
 <p>
  Booking.com에서 예약하고 후기를 남기고 싶다면 먼저 로그인하세요.
 </p>
 <div class="intro_footer">
  <a class="revc_write_a_review_login_button" href="/reviewtimeline.ko.html">
   로그인해서 후기 남기기
  </a>
 </div>
 <span class="invisible_spoken">
  대화 상자 내용이 끝났습니다
 </span>
</div>
<div class="newcalendar singleCalendar" id="calendar_popup" style="display:none; ">
 <div class="calendar_popup_title">
  <p id="calendar_check_in_title">
   체크인 날짜
  </p>
  <p id="calendar_check_out_title">
   체크아웃 날짜
  </p>
 </div>
 <div class="browseCalendar">
  <a class="prevmonth disabled" href="#">
   <span>
    «
   </span>
  </a>
  <select title="체크인 날짜/체크아웃 날짜">
   <option class="b_months" value="2019-7">
   </option>
   <option class="b_months" value="2019-8">
   </option>
   <option class="b_months" value="2019-9">
   </option>
   <option class="b_months" value="2019-10">
   </option>
   <option class="b_months" value="2019-11">
   </option>
   <option class="b_months" value="2019-12">
   </option>
   <option class="b_months" value="2020-1">
   </option>
   <option class="b_months" value="2020-2">
   </option>
   <option class="b_months" value="2020-3">
   </option>
   <option class="b_months" value="2020-4">
   </option>
   <option class="b_months" value="2020-5">
   </option>
   <option class="b_months" value="2020-6">
   </option>
   <option class="b_months" value="2020-7">
   </option>
   <option class="b_months" value="2020-8">
   </option>
   <option class="b_months" value="2020-9">
   </option>
   <option class="b_months" value="2020-10">
   </option>
  </select>
  [linkx]
  
 </div>
 <table>
  <tbody>
   <tr>
    <th>
     (월)
    </th>
    <th>
     (화)
    </th>
    <th>
     (수)
    </th>
    <th>
     (목)
    </th>
    <th>
     (금)
    </th>
    <th>
     (토)
    </th>
    <th>
     (일)
    </th>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
  </tbody>
 </table>
 <span class="calendar_close">
  닫기
 </span>
</div>
<div class="white" id="notification_lightbox" style="display: none;">
 <div class="sf_container">
  <div class="subsc_form">
   <form action="/newslettersubscribe.html" class="emk-subscription-entry-point " data-component="emk/subscription-entry-point emk/subscription-entry-point-feedback-msg" data-emk-entry-point-label="bounce-intent-modal" data-emk-entry-point-view-event="emk-bounce-intent-modal:open" method="post">
    <div class="newsletter_form_fields">
     <h4 class="subsc_title">
      파리 최대 50% 할인
     </h4>
     <p>
      이메일로 회원 전용 특가 상품을 받아보세요.
     </p>
    </div>
    <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -invalid" role="alert">
     <span aria-hidden="true" class="bicon-close">
     </span>
     <span class="invisible_spoken">
      오류:
     </span>
     유효한 이메일 주소를 입력해 주십시오
    </p>
    <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -error" role="alert">
     <span aria-hidden="true" class="bicon-close">
     </span>
     <span class="invisible_spoken">
      오류:
     </span>
     죄송합니다. 오류가 발생하였습니다.
    </p>
    <div class="replace-feedback-msg -success">
     <h4>
      축하드려요! 구독이 완료되었습니다.
     </h4>
     <br>
      최고의 호텔, 놓치기 싫은 할인 상품, 흥미로운 여행지 등 다양한 정보가 가득 담긴 뉴스레터를 곧 전해 드립니다.
     </br>
    </div>
   </form>
  </div>
 </div>
</div>
<div class="g-hidden">
 <div class="js-user-access-menu-lightbox user-access-menu-lightbox--signin user-access-menu-lightbox--no-password-strength">
  <svg class="bk-icon -logos-booking-logo" height="48" style="display:none;" viewbox="0 0 256 48" width="256">
   <path d="M17.592 25.92c-.001-2.637-1.668-4.268-4.244-4.268h-3.61c-1.158.163-1.683.866-1.683 2.225v5.906l5.293.007c2.618 0 4.243-1.161 4.244-3.87zm-9.537-9.529h4.764c2.677 0 3.63-1.702 3.63-3.48 0-2.335-1.392-3.73-3.714-3.73h-2.71c-1.354.087-1.97.785-1.97 2.247v4.963zm15.76 9.96c0 5.605-4.279 9.519-10.903 9.519H2v-28c.02-1.785 1.872-3.585 3.64-3.652h7.137c5.96 0 9.81 3.004 9.81 7.984 0 3.26-1.628 5.144-2.599 5.981l-.836.717.957.541c2.323 1.31 3.706 3.892 3.706 6.91zm126.32-2.676c0-5.095-2.75-5.689-4.81-5.689-4.16 0-4.48 4.189-4.48 5.473 0 2.917 1.26 6.031 4.82 6.031 2.04 0 4.47-1.01 4.47-5.815zm5.91-10.937l-.02 20.994c0 8.007-5.98 10.852-11.52 10.852-2.69 0-5.66-.726-7.95-1.945l-.45-.239.73-1.87.51-1.287c.56-1.388 1.37-1.734 2.75-1.315 1.06.384 2.64.811 4.38.811 3.57 0 5.54-1.689 5.54-4.745v-.638l-.51.376c-1.29.988-2.93 1.473-5 1.473-6.06 0-10.29-4.76-10.29-11.575 0-6.819 4.09-11.402 10.17-11.402 3.06 0 4.94 1.081 5.99 1.993l.3.261.18-.35c.47-.902 1.42-1.394 2.66-1.394h2.53zM69.707 24.184c0-3.711-2.296-6.307-5.57-6.307-3.26 0-5.529 2.596-5.529 6.307 0 3.714 2.27 6.312 5.53 6.312 3.326 0 5.57-2.538 5.57-6.312zm6.381 0c0 6.87-5.036 11.856-11.95 11.856-6.904 0-11.91-4.986-11.91-11.856 0-6.866 5.006-11.853 11.91-11.853 6.914 0 11.95 4.987 11.95 11.853zm31.357 11.493V16.281c0-2.34-1.11-3.475-3.42-3.475l-2.56-.01.02 17.704h-.02l.02 5.37h5.96v-.193zm17.06-23.399c-3.33 0-5.45 1.487-6.64 2.74l-.4.405-.14-.55c-.35-1.344-1.53-2.085-3.3-2.085h-2.86l.02 22.895h6.04V25.131c0-1.032.14-1.926.41-2.744.72-2.473 2.36-4.009 4.89-4.009 2.03 0 3.2 1.075 3.2 3.854v9.971c0 2.37 1.47 3.48 3.83 3.48h2.23V21.261c0-5.786-1.96-8.983-7.28-8.983zM93.436 24.777a5.596 5.596 0 0 0-.902-1.275l-.208-.221.22-.212c.316-.335.64-.731.951-1.191l6.087-9.083h-7.389l-4.573 7.104c-.259.381-.782.573-1.564.573H84.48V7.045C84.48 4.36 82.642 3 80.84 3h-2.426l.006 32.691h6.06v-9.508h1.15c.745 0 1.253.086 1.488.492l3.611 6.843c1.007 1.857 2.014 2.173 3.906 2.173h5.016l-3.736-6.203-2.479-4.711zm-49.788-.593c0-3.711-2.29-6.307-5.569-6.307-3.26 0-5.526 2.596-5.526 6.307 0 3.714 2.266 6.312 5.526 6.312 3.326 0 5.57-2.538 5.57-6.312zm6.38 0c0 6.87-5.026 11.856-11.949 11.856-6.897 0-11.902-4.986-11.902-11.856 0-6.866 5.005-11.853 11.902-11.853 6.923 0 11.948 4.987 11.948 11.853zM100.764 6.81c0-2.106 1.7-3.81 3.78-3.81 2.09 0 3.79 1.704 3.79 3.81 0 2.101-1.7 3.807-3.79 3.807-2.08 0-3.78-1.706-3.78-3.807z" fill="#003580">
   </path>
   <path d="M189.08 28.067c-.02.021-2.7 2.848-6.21 2.848-3.21 0-6.45-1.974-6.45-6.377 0-3.808 2.51-6.467 6.11-6.467 1.17 0 2.49.421 2.7 1.127l.03.12c.48 1.601 1.93 1.683 2.21 1.683l3.41.004v-2.984c0-3.936-4.99-5.364-8.35-5.364-7.18 0-12.39 5.017-12.39 11.927 0 6.905 5.15 11.918 12.26 11.918 6.16 0 9.51-4.068 9.54-4.111l.18-.219-2.69-4.487-.35.382zm57.35-15.41c-2.7 0-5.18 1.27-6.85 3.393l-.47.601-.37-.672c-1.21-2.203-3.28-3.322-6.17-3.322-3.02 0-5.04 1.693-5.99 2.701l-.61.666-.24-.88c-.34-1.267-1.47-1.966-3.17-1.966h-2.5l-.02 22.806h5.97V25.917c0-.881.11-1.754.33-2.669.59-2.432 2.22-5.046 4.96-4.786 1.69.164 2.51 1.474 2.51 4.004v13.518h5.63V25.917c0-1.104.11-1.927.35-2.755.51-2.32 2.58-4.703 5.23-4.703 1.91 0 2.91 1.086 2.91 4.007v10.183c0 2.305 1.35 3.335 3.64 3.335h2.42l.01-14.56c0-5.817-2.55-8.767-7.57-8.767zm-40.77.386c-6.9 0-12.31 4.988-12.31 11.855s5.41 11.856 12.31 11.856c6.92 0 11.95-4.989 11.95-11.856s-5.03-11.855-11.95-11.855zm-45.35 19.403c0-2.106 1.69-3.81 3.78-3.81s3.79 1.704 3.79 3.81c0 2.102-1.7 3.808-3.79 3.808s-3.78-1.706-3.78-3.808zm45.35-1.237c-3.26 0-5.53-2.598-5.53-6.311 0-3.712 2.27-6.308 5.53-6.308 3.27 0 5.57 2.596 5.57 6.308 0 3.773-2.24 6.311-5.57 6.311z" fill="#0896FF">
   </path>
  </svg>
  <div class="iam_account_access">
   <div class="iam_card iam_login_form">
    <div class="iam_login_text iam_login_text--header">
     계속 진행하려면 로그인해주세요
    </div>
    <a class="iam_login_btn iam_login_btn--email" href="/auth/oauth2?client_id=vO1Kblk7xX9tUn2cpZLS&amp;state=Us4BJaY6DZQ5M6PRHGxTz4kCMEkU_OUIh91yvTdYH7w3fHDGAEg0MWlVdkFUIhDB49qe40QJKccErcPU7W_uqe7dAZTNB0lyTOQgFDFejiPfYOXg8SaUw7ACyxaopGf1vg3UZibDFJn5W9isMyYjtZZZhm5A1jGxys_p-fsSvq-VciZkeq-mnrXL0s6ChiQJUd4YaROYLWxjOzYlqR7BL1yadsH3g4HtQvCb4zzucezoJ0Xxlvsz_5swZtTNwaUAp9u0z7pzRDd4dwk-xKAeVfU&amp;dt=1562171748&amp;lang=ko&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;response_type=code&amp;aid=304142">
     로그인하기
    </a>
    <div class="iam_login_or">
     <div class="iam_login_or_divider">
     </div>
     <span class="iam_login_or_text">
      또는
     </span>
    </div>
    <a class="iam_login_btn iam_login_btn--social" data-component="iam/social-button" data-mask="true" data-popup-href="https://account.booking.com/auth/oauth2?response_type=code&amp;aid=304142&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;popup=1&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;lang=ko&amp;state=UtsBJaY6DZQ5M6Oe7KQOL4A1TM2hwuQnP5l0V3LZR9Y_qI91XIIn8uwuuwWGmh8KTjBh0UMiRNjsx5oE6mX6hJxm0rsUf9l0wpIx_rZPFlhEEXFuLK6fnakX30NFjiTI1sUxb38WFJMuIq-KaZIql1S8BNqc6NnzjpTapjyrEJ1o8SM5vDZ7Uxp5YKjyyYkuzD_qoHXlPG7WR8UaHzbjdpro7mGajPvjv69D63ZxhT9qoBNRPk8fZE34Wcm6maMkpXLDWobx2NprXgyNY3Tj239Mw0Fqe2Caw9XMc586&amp;dt=1562171748&amp;prompt=facebook" href="/auth/oauth2?client_id=vO1Kblk7xX9tUn2cpZLS&amp;state=Us4BJaY6DZQ5M6PRHGxTz4kCMEkU_OUIh91yvTdYH7w3fHDGAEg0MWlVdkFUIhDB49qe40QJKccErcPU7W_uqe7dAZTNB0lyTOQgFDFejiPfYOXg8SaUw7ACyxaopGf1vg3UZibDFJn5W9isMyYjtZZZhm5A1jGxys_p-fsSvq-VciZkeq-mnrXL0s6ChiQJUd4YaROYLWxjOzYlqR7BL1yadsH3g4HtQvCb4zzucezoJ0Xxlvsz_5swZtTNwaUAp9u0z7pzRDd4dwk-xKAeVfU&amp;dt=1562171748&amp;lang=ko&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;response_type=code&amp;aid=304142&amp;prompt=facebook">
     <svg class="bk-icon -social-providers-facebook iam_login_img" height="16" viewbox="0 0 24 24" width="16">
      <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z" fill="#4469B0">
      </path>
     </svg>
     Facebook 계정으로 로그인
    </a>
    [linkx]
    
    <a class="iam_login_btn iam_login_btn--social" data-component="iam/social-button" data-mask="true" data-popup-href="https://account.booking.com/auth/oauth2?response_type=code&amp;aid=304142&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;popup=1&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;lang=ko&amp;state=UtsBJaY6DZQ5M6Oe7KQOL4A1TM2hwuQnP5l0V3LZR9Y_qI91XIIn8uwuuwWGmh8KTjBh0UMiRNjsx5oE6mX6hJxm0rsUf9l0wpIx_rZPFlhEEXFuLK6fnakX30NFjiTI1sUxb38WFJMuIq-KaZIql1S8BNqc6NnzjpTapjyrEJ1o8SM5vDZ7Uxp5YKjyyYkuzD_qoHXlPG7WR8UaHzbjdpro7mGajPvjv69D63ZxhT9qoBNRPk8fZE34Wcm6maMkpXLDWobx2NprXgyNY3Tj239Mw0Fqe2Caw9XMc586&amp;dt=1562171748&amp;prompt=naver" href="/auth/oauth2?client_id=vO1Kblk7xX9tUn2cpZLS&amp;state=Us4BJaY6DZQ5M6PRHGxTz4kCMEkU_OUIh91yvTdYH7w3fHDGAEg0MWlVdkFUIhDB49qe40QJKccErcPU7W_uqe7dAZTNB0lyTOQgFDFejiPfYOXg8SaUw7ACyxaopGf1vg3UZibDFJn5W9isMyYjtZZZhm5A1jGxys_p-fsSvq-VciZkeq-mnrXL0s6ChiQJUd4YaROYLWxjOzYlqR7BL1yadsH3g4HtQvCb4zzucezoJ0Xxlvsz_5swZtTNwaUAp9u0z7pzRDd4dwk-xKAeVfU&amp;dt=1562171748&amp;lang=ko&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;response_type=code&amp;aid=304142&amp;prompt=naver">
     <svg class="bk-icon -social-providers-naver iam_login_img" height="16" viewbox="0 0 500 500" width="16">
      <path d="M1.429 0L0 441.429l173.571.714.715-178.572-11.429-55.714L327.143 441.43l174.286 1.428-.715-441.428L326.43.714 330 182.857l11.429 65L174.286.714 1.429 0z" fill="#4fa42b">
      </path>
     </svg>
     네이버 계정으로 로그인
    </a>
    <div class="iam_login_text iam_login_text--footer">
     아직 계정이 없으신가요?
     [ahref]
     
    </div>
   </div>
  </div>
 </div>
</div>
<div id="logo-not-document-write" style="display: none;">
</div>
<noscript>
</noscript>
<svg class="bk-icon -iconset-magnifying_glass" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M118.8 113.2l-31-31A4 4 0 0 0 85 81a44 44 0 1 0-4 4 4 4 0 0 0 1.2 2.8l31 31a4 4 0 0 0 5.6-5.7zM52 88a36 36 0 1 1 36-36 36 36 0 0 1-36 36z">
 </path>
</svg>
<svg class="bk-icon -iconset-close_circle" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M64 8a56 56 0 1 0 56 56A56 56 0 0 0 64 8zm22.2 69.8a6 6 0 1 1-8.4 8.4L64 72.5 50.2 86.2a6 6 0 0 1-8.4-8.4L55.5 64 41.8 50.2a6 6 0 0 1 8.4-8.4L64 55.5l13.8-13.7a6 6 0 0 1 8.4 8.4L72.5 64z">
 </path>
</svg>
<svg class="bk-icon -iconset-close_bold" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M75.3 64l26.4-26.3a8 8 0 0 0-11.4-11.4L64 52.7 37.7 26.3a8 8 0 0 0-11.4 11.4L52.7 64 26.3 90.3a8 8 0 0 0 11.3 11.4L64 75.3l26.3 26.4a8 8 0 0 0 11.4-11.4z">
 </path>
</svg>
<svg class="bk-icon -iconset-navarrow_right_bold" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M48 104a8 8 0 0 1-5.7-13.7L68.7 64 42.3 37.7a8 8 0 0 1 11.4-11.4L91.3 64l-37.6 37.7A8 8 0 0 1 48 104z">
 </path>
</svg>
<svg class="bk-icon -iconset-navarrow_left_bold" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M80 104a8 8 0 0 1-5.7-2.3L36.7 64l37.6-37.7a8 8 0 0 1 11.4 11.4L59.3 64l26.4 26.3A8 8 0 0 1 80 104z">
 </path>
</svg>
<svg class="bk-icon -iconset-clock" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M64 8a56 56 0 1 0 56 56A56 56 0 0 0 64 8zm0 104a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm24-44a4 4 0 0 1-4 4H56V36a4 4 0 0 1 8 0v28h20a4 4 0 0 1 4 4z">
 </path>
</svg>
<svg class="bk-icon -iconset-centermap" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M64 78a14 14 0 1 1 14-14 14 14 0 0 1-14 14zM27.4 48.6A2 2 0 0 0 24 50v10H8v8h16v10.3a2 2 0 0 0 3.4 1.4l14.1-14.2a2 2 0 0 0 0-2.8zM120 60h-16V50a2 2 0 0 0-3.4-1.4L86.5 62.7a2 2 0 0 0 0 2.8l14.1 14.2a2 2 0 0 0 3.4-1.4V68h16zM65.4 86.6a2 2 0 0 0-2.8 0l-14.2 14.2a2 2 0 0 0 1.4 3.4H60V120h8v-15.8h10.2a2 2 0 0 0 1.4-3.4zm12.8-62.4H68V8h-8v16.1H49.9a2 2 0 0 0-1.5 3.4l14.2 14.2a2 2 0 0 0 2.8 0l14.2-14.2a2 2 0 0 0-1.4-3.4z">
 </path>
</svg>
<svg class="bk-icon -iconset-airplane" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M8.3 83.1l2.8-2.8a1 1 0 0 1 .7-.3h27.3l16-17.5-41.7-32a4 4 0 0 1-1.1-5.3l1.3-2.8a4 4 0 0 1 5.1-1.6l55.5 21.1L98 16a28.6 28.6 0 0 1 18-8 4 4 0 0 1 4 4 28.6 28.6 0 0 1-8 18L86.6 53.4l21 55.3a4 4 0 0 1-1.6 5.1l-2.7 1.4A4 4 0 0 1 98 114L66 72.3 48 89v27.3a1 1 0 0 1-.3.7l-2.8 2.8a1 1 0 0 1-1.6-.2L30.7 97.3 8.5 84.7a1 1 0 0 1-.2-1.6z">
 </path>
</svg>
<svg class="bk-icon -iconset-landmark" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <rect height="10" rx="2" ry="2" width="112" x="8" y="106">
 </rect>
 <path d="M24 60a2 2 0 0 0-2 1.8v34.4a2 2 0 0 0 2 1.8h8a2 2 0 0 0 2-1.8V61.8a2 2 0 0 0-2-1.8zm24 0a2 2 0 0 0-2 1.8v34.4a2 2 0 0 0 2 1.8h8a2 2 0 0 0 2-1.8V61.8a2 2 0 0 0-2-1.8zm24 0a2 2 0 0 0-2 1.8v34.4a2 2 0 0 0 2 1.8h8a2 2 0 0 0 2-1.8V61.8a2 2 0 0 0-2-1.8zm24 0a2 2 0 0 0-2 1.8v34.4a2 2 0 0 0 2 1.8h8a2 2 0 0 0 2-1.8V61.8a2 2 0 0 0-2-1.8zm-85.8-8h107.6a2 2 0 0 0 1.3-3.7L65 12.3a2 2 0 0 0-2.2 0l-53.9 36a2 2 0 0 0 1.3 3.7z">
 </path>
</svg>
<svg class="bk-icon -iconset-navarrow_left" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
 </path>
</svg>
<svg class="bk-icon -iconset-navarrow_right" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
 </path>
</svg>
<svg class="bk-icon -iconset-shopping_bag" height="128" style="display:none;" viewbox="0 0 128 128" width="128">
 <path d="M104 48c-.6-4-3.7-8-8-8H32c-4.3 0-7.5 3.4-8 8l-8 64a8.1 8.1 0 0 0 8 8h80a8.1 8.1 0 0 0 8-8zM48 62a6 6 0 0 1-6-6 6 6 0 1 1 6 6zm32 0a6 6 0 0 1-6-6 6 6 0 1 1 6 6zm5.6-32.5a21.6 21.6 0 0 0-43.2 0v2.6h6.8v-2.6a14.8 14.8 0 0 1 29.6 0v2.6h6.8v-2.6z">
 </path>
</svg>
<div class="map_full_overlay__wrapper ">
 <div class="map_full_overlay__mask">
 </div>
 <div class="map_full_overlay__close">
 </div>
 <div aria-label="Map View" aria-modal="true" class="b_map_br_zoom b_map_custom_zoom map_view" id="b_map_container" role="dialog">
  <div class="b_map_controls_container">
  </div>
  <div class="hp_map_elements_container">
  </div>
  <div id="b_map_tiles">
   <div id="b_gmap_inner">
   </div>
   <div id="b_overlay">
   </div>
   <div id="map_detail_overlay">
   </div>
   <div id="b_map_legend_html">
   </div>
  </div>
 </div>
</div>
<div style="display: none;">
 <svg class="bk-icon -fonticon-aclose" height="32" viewbox="0 0 36 32" width="36">
  <path d="M34 3.2L30.8 0 18 12.8 5.2 0 2 3.2 14.8 16 2 28.8 5.2 32 18 19.2 30.8 32l3.2-3.2L21.2 16 34 3.2z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-downchevron" height="32" viewbox="0 0 51 32" width="51">
  <path d="M45.1.2L25.7 19.7 6.3.2 0 6.5l25.7 25.7L51.4 6.5z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-upchevron" height="32" viewbox="0 0 51 32" width="51">
  <path d="M6.3 32.2l19.4-19.5 19.4 19.5 6.3-6.3L25.7.2 0 25.9z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-checkempty" height="32" viewbox="0 0 32 32" width="32">
  <path d="M16 30c7.732 0 14-6.268 14-14S23.732 2 16 2 2 8.268 2 16s6.268 14 14 14zm0 2C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-checkno2" height="32" viewbox="0 0 32 32" width="32">
  <path d="M16 30c7.732 0 14-6.268 14-14S23.732 2 16 2 2 8.268 2 16s6.268 14 14 14zm0 2C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z">
  </path>
  <path d="M24.587 11.039L13.825 21.583c-.054.09-.12.182-.208.271l-.504.505c-.278.278-.607.403-.733.276l-5.125-5.366c-.126-.126-.002-.454.276-.732l.504-.505c.279-.279.607-.403.733-.277l3.842 4.022L23.073 9.525a.715.715 0 0 1 1.009 0l.505.505a.715.715 0 0 1 0 1.009z">
  </path>
 </svg>
</div>
<span id="req_info" style="display:none;">
 898110,896120,880990,884420,788340|5,895410,896100,879590,904160,661987,879620,879580,879600,661987|1,566947|3,901300,889880,896120|2,788340,758330,897420,886930,903060,901080,807890,894100,566947,810620,883260,901660,895450
</span>
|<---