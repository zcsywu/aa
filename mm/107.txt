--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
 </head>
 <body id="statHtmlBody">
  <form action="/statHtml/statHtml.do;jsessionid=fup0V1uSPa7lk2WNA8p5snraipSeLpbxUgd4p5uNhnxkbF5JyYA4LZ9KC0lcSDC9.STAT_WAS1_servlet_engine5?orgId=101&amp;tblId=DT_2KAA406_OECD" id="ParamInfo" method="post" name="ParamInfo">
   <div id="topTitleKo">
    <p class="logo">
     [ahref]
     
    </p>
   </div>
   <div id="wrap">
    <div id="modal">
    </div>
    <div id="modal2">
    </div>
    <div id="popup_outer">
     <div id="pop_pivotfunc">
      <div id="pop_pivotfunc2">
       <div class="pop_top">
        피봇
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       [ahref]
       
      </div>
     </div>
     <div id="pop_addfunc">
      <div id="pop_addfunc2">
       <div class="pop_top">
        부가기능설정 / 데이터찾기
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <div class="pop_content">
        <div class="pop_title">
         <h1 class="bu_circle">
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
        </div>
        <div class="con_lay">
         <div>
          <select id="tableType" name="tableType" onchange="fn_changeTableType()" style="width:110px; margin-right:10px;" title="통계표 타입">
           <option value="standard">
            기본통계표
           </option>
           <option value="timeSeriesV">
            시계열표(표측)
           </option>
           <option value="timeSeriesH">
            시계열표(표두)
           </option>
           <option selected="selected" value="default">
            초기조회
           </option>
          </select>
          <select id="dataOpt2" name="dataOpt2" style="width:120px; margin-right:7px;" title="언어 및 코드">
           <option selected="selected" value="ko">
            한글보기
           </option>
           <option value="en">
            English
           </option>
           <option value="cd">
            코드보기(Code)
           </option>
           <option value="cdko">
            코드+한글보기
           </option>
           <option value="cden">
            Code+English
           </option>
          </select>
          <select id="periodCo" name="periodCo" onchange="fn_changePeriodCo()" style="width:75px; margin-right:6px;" title="소수점">
           <option selected="selected" value="">
            소수점
           </option>
           <option value="0">
            0
           </option>
           <option value="1">
            1
           </option>
           <option value="2">
            2
           </option>
           <option value="3">
            3
           </option>
           <option value="4">
            4
           </option>
           <option value="5">
            5
           </option>
          </select>
         </div>
         <ul class="setCheck">
          <li>
           <span>
            <label for="enableLevelExpr">
             계층컬럼구분
            </label>
           </span>
           [ahref]
           
          </li>
          <li>
           <span>
            <label for="enableParentLevel">
             상위레벨표시
            </label>
           </span>
           <a href=")">
           </a>
          </li>
          <li style="display: none;">
           <span class="notFunctext">
            <label for="enableCellUnit">
             셀단위
            </label>
           </span>
          </li>
          <li>
           <span class="notFunctext">
            <label for="enableWeight">
             가중치보기
            </label>
           </span>
          </li>
         </ul>
         <div class="line_lay">
          <span>
           시점정렬 :
           <label for="prdSortAsc">
            오름차순
           </label>
           <label for="prdSortDesc">
            내림차순
           </label>
          </span>
         </div>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          [linkx]
          
         </span>
        </div>
        <div class="pop_title">
         <h1 class="bu_circle">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h1>
        </div>
        <div class="con_lay">
         <p>
          <label for="findData01">
           찾을 데이터
          </label>
          <select id="findOption" title="부등호">
           <option value="1">
            <
           </option>
           <option value="2">
            <=
           </option>
           <option value="3">
            =
           </option>
           <option value="4">
            >=
           </option>
           <option value="5">
            >
           </option>
          </select>
          <label for="compValue">
          </label>
         </p>
         <p style="margin-top:5px;">
          <label for="findData02">
          </label>
          <label for="compValue01">
          </label>
          <label for="compValue02">
           <= 찾을 데이터 <=
          </label>
         </p>
         <p class="f_point">
          * 찾을 데이터 결과값은 노란색 배경에 굵은 글씨체가 적용됨.
         </p>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          [ahref]
          
         </span>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_cmmtInfoAll">
      [keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]<li>[link]</li>
     </div>
     <div id="pop_cmmtInfo">
      <div id="pop_cmmtInfo2">
       <div class="pop_top2">
        <span class="h2_title" id="cmmtNo">
        </span>
        <span class="bu_circle5" id="cmmtTitle">
         [content10[linkx]content11[linkx]content12[linkx]content13[linkx]content14]
        </span>
        <span class="closeBtn">
         [ahref]
         
        </span>
       </div>
       <div class="pop_content2">
        <div class="con_lay3" id="cmmt_lay3">
         <p class="text_con3" id="cmmt">
         </p>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_downgrid">
      <div id="pop_downgrid2">
       <div class="pop_top">
        다운로드
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content2">
        <div class="pop_title2">
         <span class="btn_r grayBtn">
          [linkx]
          
         </span>
        </div>
        <div class="downList">
         <div style="margin-top:5px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h1>
          </div>
          <div style="padding-right:5px; position:absolute; top:1px; right:0px;">
           <span>
            <label for="smblYn">
             통계부호
            </label>
           </span>
           <span style="display:none;">
            <label for="CellUnit_remote">
             셀단위
            </label>
           </span>
           <span>
            <label for="codeYn">
             코드포함
            </label>
           </span>
          </div>
         </div>
         <div class="fileList">
          <ul>
           <li>
            <label for="excelradio">
             EXCEL(xlsx)
            </label>
            <label for="excelradio2">
             EXCEL(xls)
            </label>
            <label for="downGridCellMerge" style="margin-left:15px;">
             (
            </label>
            <span>
             <label for="downGridCellMerge">
              셀 병합
             </label>
            </span>
            <label for="downGridMeta">
             )
            </label>
           </li>
           <li>
            <label for="csvradio">
             CSV
            </label>
           </li>
           <li>
            <label for="txtradio">
             TXT
            </label>
           </li>
           <li>
            <label for="sdmxradio">
             <span class="sdmxDown">
              SDMX(2.0)
             </span>
            </label>
            <b>
             <span class="notFunctext flex">
              <label for="downGridSdmxTypeDsd">
               [
              </label>
             </span>
            </b>
            <span class="notFunctext flex">
             DSD (데이터구조)
            </span>
            <label for="downGridSdmxTypeData">
             <span class="notFunctext flex">
              DATA
             </span>
            </label>
            <select disabled="disabled" id="sdmxDataType" name="downGridSdmxDataType" style="margin-right:3px; height:18px;" title="SDMX 타입">
             <option style="width:60px;" value="generic">
              Generic
             </option>
             <option style="width:60px;" value="compact">
              Compact
             </option>
            </select>
            <b>
             <span class="notFunctext flex">
              ]
             </span>
            </b>
           </li>
          </ul>
         </div>
         <div style="margin-top:10px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle" style="width:250px;">
            <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
           </h1>
          </div>
          <div style="padding-right:5px; position:absolute; top:1px; right:0px;">
          </div>
         </div>
         <div class="fileList">
          <label for="downAsc">
           오름차순
          </label>
          <label for="downDesc">
           내림차순
          </label>
         </div>
         <div style="margin-top:10px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle" style="width:250px;">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h1>
          </div>
         </div>
         <div class="fileList">
          <li>[link]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
         </div>
        </div>
        <div class="btn_lay">
         <span class="confirmBtn">
          [linkx]
          
         </span>
         <span class="loadingBtn" style="display:none;">
          다운로드 파일을 생성하고 있습니다. 잠시만 기다려주십시오.
         </span>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_downlarge">
      <div id="pop_downglarge2">
       <div class="pop_top">
        다운로드
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <div class="pop_content2">
        <div class="pop_title2">
         <span class="btn_r grayBtn">
          [content7[linkx]content8[linkx]content9]
         </span>
        </div>
        <div class="downLargeList">
         <h1 class="bu_circle">
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
         <div class="fileList">
          <p>
           <label for="downLargeExcel">
            EXCEL
           </label>
           <label for="downLargeCSV">
            CSV
           </label>
          </p>
         </div>
         <div style="margin-top:10px; position:relative;">
          <div style="width:250px;">
           <h1 class="bu_circle" style="width:250px;">
            <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
           </h1>
          </div>
          <div style="padding-right:5px; position:absolute; top:1px; right:0px;">
           <label for="exprYn">
            코드포함
           </label>
          </div>
         </div>
         <div class="fileList">
          <p>
           <label for="downLargeTimeH">
            시점표두, 항목표측
           </label>
          </p>
          <p>
           <label for="downLargeTimeV">
            항목표두, 시점표측
           </label>
          </p>
         </div>
         <h1 class="bu_circle" style="margin-top:10px;">
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
         <div class="fileList">
          <label for="downLargeAsc">
           오름차순
          </label>
          <label for="downLargeDesc">
           내림차순
          </label>
         </div>
        </div>
        <div class="downLarge_lay" id="downLarge_lay">
         <span class="downLargeBtn" id="downLargeBtn">
          [ahref]
          
         </span>
        </div>
        <div class="loading_lay" id="loading_lay">
         <span class="loadingBtn">
          다운로드 파일을 생성하고 있습니다. 잠시만 기다려주십시오.
         </span>
        </div>
       </div>
      </div>
     </div>
     <div id="pop_myscrap">
      <div id="pop_myscrap2">
       <div class="pop_top">
        마이스크랩
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <iframe frameborder="0" id="ifr_myscrap" name="ifr_myscrap" scrolling="no" title="마이스크랩">
       </iframe>
      </div>
     </div>
     <div id="pop_selectAll">
      <div id="pop_selectAll2">
       <div class="pop_top">
        선택정보 전체보기
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <iframe frameborder="0" id="ifrSelectAll" name="ifrSelectAll" scrolling="no" title="선택정보 전체보기">
       </iframe>
      </div>
     </div>
     <div id="pop_detailfunc">
      <div id="pop_detailfunc2">
       <div class="pop_top">
        일괄설정
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <iframe frameborder="0" id="ifrSearchDetail" name="ifrSearchDetail" scrolling="no" title="일괄설정">
       </iframe>
      </div>
     </div>
     <div id="pop_url">
      <div id="pop_url2">
       <div class="pop_top">
        주소정보
        <span class="closeBtn">
         [ahref]
         
        </span>
       </div>
       <div class="pop_content">
        <label for="urlText">
        </label>
       </div>
      </div>
     </div>
     <div id="pop_assay">
      <div id="pop_assay2">
       <div class="pop_top">
        분석
        <span class="closeBtn">
         <a href=")">
          X 닫기
         </a>
        </span>
       </div>
       <iframe frameborder="0" id="ifrAssayInfo" name="ifrAssayInfo" scrolling="no" title="분석">
       </iframe>
      </div>
     </div>
     <div id="pop_relGrid">
      <div id="pop_relGrid2">
       <div class="pop_top">
        관련통계표
        <span class="closeBtn">
         [linkx]
         
        </span>
       </div>
       <iframe frameborder="0" id="ifrRelationInfo" name="ifrRelationInfo" scrolling="no" title="관련통계표">
       </iframe>
      </div>
     </div>
     <div id="pop_levelExpr">
      <div id="pop_levelExpr2">
       <div class="pop_top">
        계층컬럼구분이란?
        <span class="closeBtn">
         [linkx]
          [link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
         
        </span>
       </div>
       <div class="pop_content">
       </div>
      </div>
     </div>
     <div id="pop_parentLevel">
      <div id="pop_parentLevel2">
       <div class="pop_top">
        상위레벨표시란?
        <span class="closeBtn">
         [ahref]
         
        </span>
       </div>
       <div class="pop_content">
       </div>
      </div>
     </div>
     <div id="pop_classLvAllChkHelp">
      <div id="pop_classLvAllChkHelp2">
       [content15[linkx]content16]
      </div>
     </div>
    </div>
    <div id="header">
     <div class="titleCenter">
      <div class="titleLeft">
       <div class="titleRight">
        <h1 class="title">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h1>
        <ul class="title_utill">
         <li>
         </li>
        </ul>
       </div>
      </div>
     </div>
     <p class="more">
      출처 :
					
					주석 참조(자료관리 : 통계서비스기획과)
     </p>
    </div>
    <div class="content" id="content">
     <div id="disPlayBox" style="display: none;">
     </div>
     <h2 class="bu_2circle">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h2>
     <div id="directMenu">
     </div>
     <div class="tabMu" id="tabMenu">
      <p class="leftBtn">
       <a href=")">
       </a>
      </p>
      <ul class="selection1">
       <li class="menu_off" id="tabItemText" onclick="fn_disPlay('tabItemText',0);" style="cursor: pointer;">
        <span>
        </span>
       </li>
       <li class="menu_off" id="tabClassText_1" onclick="fn_disPlay('tabClassText_1','1');" style="cursor: pointer;" value="A">
        <span>
        </span>
       </li>
       <li class="menu_off" id="tabTimeText">
        [content5[linkx]content6]
       </li>
      </ul>
      <p class="rightBtn">
      </p>
     </div>
     <div class="cont_line" id="changeAttribute">
      <div class="btnIcon" id="btnShow" style="display: inline-block">
       <p class="text" style="width: 30%;">
        <span id="analysisText">
         [content3][content4][content5][content6][linkx][content7][linkx]
        </span>
       </p>
       <ul class="align">
        <li>
         <a href=")" id="showCmmtAll" style="">
         </a>
        </li>
        <li>
         <a href=")">
         </a>
        </li>
        <li class="gap" id="ico_swap" title="피봇">
         [ahref]
          [link][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li><li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
         
        </li>
        <li id="ico_addfunc" title="부가기능설정">
         <a href=")">
         </a>
        </li>
        <li id="ico_analysis" title="분석">
         <a href=")">
         </a>
        </li>
        <li id="chartEnable" title="차트">
         [linkx]
         
        </li>
        <li class="gap" id="ico_myscrap" title="스크랩">
         [ahref]
         
        </li>
        <li id="ico_download" title="다운로드">
         <a href=")">
         </a>
        </li>
        <li class="icobtn" id="ico_print" title="인쇄">
         [ahref]
         
        </li>
        <li class="gap">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="text_lay" id="textShow" style="display: none">
       <ul style="height: 21px;">
        <li class="text" style="padding-left: 10px;">
         현재까지 선택된 데이터는 항목
        </li>
        <li class="text" id="changeTextLi">
        </li>
        <li class="text">
         셀
         <span class="f_bold">
          [
         </span>
         <span id="changeSpanRed">
          20,000
									(조회)
         </span>
         <span class="f_bold">
          |
         </span>
         <span id="changeSpanGray">
          200,000
									(다운로드)
         </span>
         <span class="f_bold">
          |
         </span>
         <span id="changeDownText">
          다운로드 불가
         </span>
         <span class="f_bold">
          ]
         </span>
        </li>
        <li class="btn_r">
         <li>[link]</li>[link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        </li>
       </ul>
      </div>
      <div class="chart" id="Divchart" style="visibility: hidden; height: 0px;">
       <div class="chartTop">
        <div class="chartBtn">
         [linkx]
         
         <a href=";">
         </a>
         <a href=";">
         </a>
         [ahref]
         
         <a href=";">
         </a>
         [ahref]
         
         <a href=";">
         </a>
         [linkx]
         
         [ahref]
         
         [linkx]
         
         [linkx]
         
         [ahref]
         
         [linkx]
         
         [linkx]
         
         <a href=";">
         </a>
         [linkx]
         
        </div>
        <div class="alignRight">
         <select id="chartViewCnt" title="조회 카운트">
          <option value="1">
           1
          </option>
          <option value="2">
           2
          </option>
          <option value="3">
           3
          </option>
          <option value="4">
           4
          </option>
          <option selected="selected" value="5">
           5
          </option>
          <option value="6">
           6
          </option>
          <option value="7">
           7
          </option>
          <option value="8">
           8
          </option>
          <option value="9">
           9
          </option>
          <option value="10">
           10
          </option>
          <option value="11">
           11
          </option>
          <option value="12">
           12
          </option>
          <option value="13">
           13
          </option>
          <option value="14">
           14
          </option>
          <option value="15">
           15
          </option>
          <option value="16">
           16
          </option>
          <option value="17">
           17
          </option>
          <option value="18">
           18
          </option>
          <option value="19">
           19
          </option>
          <option value="20">
           20
          </option>
         </select>
         [linkx]
         
        </div>
        <div class="alignText">
         <span id="saveCharts">
         </span>
        </div>
       </div>
       <div id="Chartcontent" style="display: none;">
       </div>
      </div>
      <div class="remark" id="jqGrid" style="visibility: hidden; float: left; height: 0px;">
       <table id="tbl_data_view" style="table-layout: fixed;">
        <tr>
         <td>
         </td>
        </tr>
       </table>
       <div class="legend">
        <span class="f_bold">
         * 챠트의 범례는 최대 20개까지 제공되며, 항목과 분류값을 재설정하여 조회할 수 있습니다.
        </span>
       </div>
      </div>
      <div class="popMode" id="popMode">
       <div class="inner" id="htmlGrid">
       </div>
       <div class="inner" id="ThtmlGrid" style="display: none; position: absolute;">
       </div>
      </div>
      <div class="block_definition" id="block0" style="display: none;">
       <p class="h3_arrow">
        항목
       </p>
       <div class="cont_detail" id="itmList0" style="width:928px;">
        <div class="selectBox" style="width: 305px;">
         <h2 class="top">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <ul class="selectList">
          <li>
           <label for="itemChkLi0">
            감자
           </label>
          </li>
          <li>
           <label for="itemChkLi1">
            경작면적당생산량
           </label>
          </li>
          <li>
           <label for="itemChkLi2">
            고구마
           </label>
          </li>
          <li>
           <label for="itemChkLi3">
            경작면적당생산량
           </label>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="block_definition" id="block1" style="display: none;">
       <p class="h3_arrow" id="h3_arrow1">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
       </p>
       <div class="cont_detail" id="itmList1" style="width:616px;">
        <div class="selectBox" style="width: 299px;">
         <h2 class="top">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <ul class="selectList" id="classList1_1">
          <li>
           <label for="classChkLi1_1_1">
           </label>
           [ahref]
           
          </li>
          <li>
           <label for="classChkLi1_1_2">
           </label>
           [ahref]
           
          </li>
          <li>
           <label for="classChkLi1_1_3">
           </label>
           <a onclick="fn_searchClass('3','A',1,1,2,2);" style="cursor: pointer;">
            남아메리카
           </a>
          </li>
          <li>
           <label for="classChkLi1_1_4">
           </label>
           [linkx]
           
          </li>
          <li>
           <label for="classChkLi1_1_6">
           </label>
           <a onclick="fn_searchClass('6','A',1,1,2,4);" style="cursor: pointer;">
            오세아니아
           </a>
          </li>
         </ul>
        </div>
        <div class="selectBox" style="width: 299px;">
         <h2 class="top">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <ul class="selectList2" id="classList1_2">
          <li>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="block_definition" id="block2" style="display: none;">
       <p class="h3_arrow">
        시점
       </p>
       <div class="cont_detail" id="itmList2" style="width:232px;">
        <div class="selectTimeBox" id="timeY" style="width: 224px;">
         <div class="top">
          <p class="tit">
           <label for="checkY">
            년(1980 ~ 2017)
           </label>
          </p>
         </div>
         <h2 class="top">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <ul class="selectList" id="searchPeriodY">
          <li>
           <label for="timeChY0">
           </label>
           2017
          </li>
          <li>
           <label for="timeChY1">
           </label>
           2016
          </li>
          <li>
           <label for="timeChY2">
           </label>
           2015
          </li>
          <li>
           <label for="ie7bugY">
           </label>
          </li>
         </ul>
         <div id="divSelectAllY">
          <label for="selectAllY">
           전체선택
          </label>
         </div>
        </div>
       </div>
      </div>
      <p class="exemple" id="tailExplain" style="display: none;">
       <span>
        하위레벨 없음
       </span>
       <span>
        하위레벨을 열어서 세부설정을 할 수 있음
       </span>
      </p>
     </div>
    </div>
    <div id="footer">
     <ul class="footer_wrap">
      <li class="left">
       e : 추정치, p : 잠정치, - : 자료없음, ... : 미상자료, x : 비밀보호, ▽ : 시계열 불연속
      </li>
      <li class="right">
       ☞선택한 시점의 계열(항목×분류)에 자료가 없을 때는 표시되지 않습니다.
      </li>
     </ul>
    </div>
   </div>
  </form>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0112
  </b>
 </body>
</html>|<---