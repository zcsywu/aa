--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="ko" name="language"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body id="sub">
  <div id="wrapper">
   <div>
    <li>[area1][mkey1]</li><li>[ahref]</li><li>[area1][keywordx]</li>[pkeyx]
   </div>
   <div id="head">
    <div class="area">
     <h1 id="logo">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h1>
     <div class="tmenu">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/sitemap.do">
         사이트맵
        </a>
       </li>
       <li class="tarea01">
        [linkx]
        
       </li>
       <li class="tarea02">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div id="menu_navi">
     <div class="gnb_bg">
     </div>
     <ul>
      <li class="menu1">
       [ahref]
       
       <div id="top2m1">
        <p class="sub_tit stit01">
         도서관소개
        </p>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/contents.do?idx=64">
           학마을도서관
          </a>
         </li>
         <li>
          <a href="/contents.do?idx=65">
           도봉기적의도서관
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/contents.do?idx=200">
           버스도서관
          </a>
         </li>
        </ul>
       </div>
      </li>
      <li class="menu2">
       [ahref]
       
       <div id="top2m2">
        <p class="sub_tit stit02">
         이용안내
        </p>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/contents.do?idx=91">
           대출반납
          </a>
         </li>
         <li>
          <a href="/contents.do?idx=93">
           책이음·상호대차
          </a>
         </li>
         <li>
          <a href="/contents.do?idx=92">
           희망도서신청안내
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="menu3">
       <a class="dep01" href="/site/search/search00.do" onfocus="menuMouseOver('3');" onmouseover="menuMouseOver('3');">
        <span class="fix_img">
        </span>
        <span class="fix_txt" style="display:none">
         소장자료검색
        </span>
       </a>
       <div id="top2m3">
        <p class="sub_tit stit03">
         소장자료검색
        </p>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/site/search/search01.do">
           단행본
          </a>
         </li>
         <li>
          <a href="/site/search/search02.do">
           연속간행물
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/site/search/search06.do">
           인기도서
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="menu4">
       [linkx]
       
       <div id="top2m4">
        <p class="sub_tit stit04">
         독서문화프로그램
        </p>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="menu5">
       <a class="dep01" href="/board/list.do?a_num=24874869" onfocus="menuMouseOver('5');" onmouseover="menuMouseOver('5');">
        <span class="fix_img">
        </span>
        <span class="fix_txt" style="display:none">
         참여마당
        </span>
       </a>
       <div id="top2m5">
        <p class="sub_tit stit05">
         참여마당
        </p>
        <ul>
         <li>
          <a href="/board/list.do?a_num=24874869">
           도서관소식
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/board/list.do?a_num=74944775">
           도서관견학신청[area1][keywordx][linkx][area1][keywordx][linkx][area1][mkey1][ahref][linkx][area1][keywordx][area1][keywordx][area1][keywordx][ahref][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][mkey1]
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/board/list.do?a_num=10887383">
           대관신청
          </a>
         </li>
        </ul>
       </div>
      </li>
      <li class="menu6">
       [ahref]
       
       <div id="top2m6">
        <p class="sub_tit stit06">
         나의도서관
        </p>
        <ul>
         <li>
          <a href="/site/mylib/mybook05.do">
           내서재
          </a>
         </li>
         <li>
          <a href="/site/mylib/myinfo01.do">
           강좌신청내역
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="menu7">
       <a class="dep01" href="/contents.do?idx=167" onfocus="menuMouseOver('7');" onmouseover="menuMouseOver('7');">
        <span class="fix_img">
        </span>
        <span class="fix_txt" style="display:none">
         함께하는 도서관
        </span>
       </a>
       <div id="top2m7">
        <p class="sub_tit stit07">
         함께하는 도서관
        </p>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/contents.do?idx=169">
           사람책도서관
          </a>
         </li>
         <li>
          <a href="/contents.do?idx=170">
           북스타트
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="menu8">
       <a class="dep01" href="/board/list.do?a_num=34636844" onfocus="menuMouseOver('8');" onmouseover="menuMouseOver('8');">
        <span class="fix_img">
        </span>
        <span class="fix_txt" style="display:none">
         정보광장
        </span>
       </a>
       <div id="top2m8">
        <p class="sub_tit stit08">
         정보광장
        </p>
        <ul>
         <li>
          <a href="/board/list.do?a_num=34636844">
           언론보도
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/contents.do?idx=278">
           문화행사 갤러리
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
     </ul>
    </div>
    <p class="log_btn">
     [ahref]
     
    </p>
   </div>
   <div id="container">
    <div class="area">
     <div id="sidebar">
      <h2>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <p class="tit jsMMenuText">
       [ahref]
       
      </p>
      <div id="sidemenu">
       <ul id="mSub_viwe">
        <li>
         <a href="/contents.do?idx=63">
          도봉문화정보도서관
         </a>
        </li>
        <li>
         <a class="on" href="/contents.do?idx=72">
          도봉아이나라도서관
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="/contents.do?idx=124">
          공립작은도서관
         </a>
        </li>
        <li>
         [pkeyx][linkx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][ahref][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][area1][keywordx][area1][keywordx][area1][mkey1][area1][mkey1][linkx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
        </li>
       </ul>
      </div>
      <div class="side_baanner">
       <ul>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div id="sidebar_mask">
     </div>
     <div id="contents">
      <div id="print_wrap">
       <div id="cont_head">
        <div id="location">
         <ul>
          <li>
          </li>
          <li>
           도서관소개
          </li>
          <li>
          </li>
          <li class="now">
           도봉아이나라도서관
          </li>
         </ul>
        </div>
        <h2>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
       </div>
       <div id="cont_wrap">
        <div class="s01lib bg02">
         <p class="btxt">
          <strong class="color2">
           도봉아이나라도서관
          </strong>
          에 오신 것을 진심으로 환영합니다.
         </p>
         <br/>
         <div class="cont">
          <p>
           2008년 4월에 개관한
           <br/>
           <strong class="green">
            도봉아이나라도서관
           </strong>
           은
           <br/>
           한국의 명산인 도봉산의 기운을 품은 도봉구 도심에 위치해 있어
           <br/>
           지역의 아이들과 가족들이 이웃과 함께
           <br/>
           편안하게 이용할 수 있는 어린이도서관입니다.
          </p>
          <p>
           국내외 우수한 그림책과 글책, 영어원서를 소장한
           <br/>
           <strong class="green">
            도봉아이나라도서관
           </strong>
           은
           <br/>
           아이들이 호기심과 질문을 통해
           <br/>
           스스로 탐구하며 배움의 주체가 되어
           <br/>
           독서를 생활화하는 책읽는 도서관입니다.
          </p>
          <p>
           전문적이고 유익한 독서문화프로그램을 운영하는
           <br/>
           <strong class="green">
            도봉아이나라도서관
           </strong>
           은
           <br/>
           책과 사람, 문화가 만나는 커뮤니티센터로써
           <br/>
           아이들의 창의력 개발은 물론 주민들의 평생학습과 만남의 장이 되어
           <br/>
           지역사회와 함께 성장하는 도서관입니다.
          </p>
          <p>
           책이 있는 아이들의 놀이터인
           <br/>
           <strong class="green">
            도봉아이나라도서관
           </strong>
           은
           <br/>
           도서관이 있어 우리 아이들의 삶이 더욱 행복할 수 있도록
           <br/>
           도서관이 키운 우리 아이들과 함께 더욱 아름다운 세상을 만들어 가도록
           <br/>
           언제나 최선을 다하겠습니다.
          </p>
         </div>
         <p class="sign">
          도서관장
         </p>
        </div>
        <div class="s01lib_tab mb25">
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="#" id="s01tab2" onclick="s01info(2);return false">
            조직 및 업무
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           찾아오시는길[area1][keywordx]<li>[pkeyx]</li><li>[pkeyx]</li><li>[ahref]</li><li>[ahref]</li>
          </li>
         </ul>
        </div>
        <div id="s01list1" style="display:none;">
         <h3 class="tit">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <div class="lib_his">
          <dl>
           <dt>
            2018
           </dt>
           <dd>
            <ul class="list2 mt20">
             <li>
              하브루타 나눔콘서트
             </li>
             <li>
              [공유촉진] 별 헤는 밤, 별빛 예술축제
             </li>
             <li>
              [혁신사업] 일상으로 만나는 하브루타 (부모하브루타, 부부하브루타, 청소년하브루타, 도란도란하브루타 등)
             </li>
             <li>
              도봉아이나라도서관, 소프트웨어에 물들다
             </li>
             <li>
              개관 10주년 기념행사
             </li>
             <li>
              도봉어린이문화정보도서관->도봉아이나라도서관 명칭 변경
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2017
           </dt>
           <dd>
            <ul class="list2 mt20">
             <li>
              하브루타 토론과 함께 하는 도봉구 평생학습동아리한마당
             </li>
             <li>
              (재)도봉문화재단 - 도봉구립도서관 위탁 운영
             </li>
             <li>
              제2회 어린이 시낭송 대회 개최
             </li>
             <li>
              개관 9주년 기념행사
             </li>
             <li>
              하브루타 독서코칭 양성과정 2기
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2016
           </dt>
           <dd>
            <ul class="list2">
             <li>
              도서관 3층 공동육아나눔터 개소 (여성가족부 주관)
             </li>
             <li>
              도봉아이나라도서관 - 도봉구건강가족지원센터와 업무협약 체결
             </li>
             <li>
              2016 한 도서관 한 책 읽기 사업(서울도서관 주관) <li>[area1][keywordx]</li>[area1][keywordx]<li>[ahref]</li>[area1][mkey1][pkeyx]
             </li>
             <li>
              제1회 어린이 시낭송 대회 개최
             </li>
             <li>
              개관 8주년 기념행사
             </li>
             <li>
              도봉아이나라도서관 - 자운초등학교와 업무협약 체결
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2015
           </dt>
           <dd>
            <ul class="list2 mt15">
             <li>
              혁신교육박람회 참여
             </li>
             <li>
              도봉구 4회 북페스티벌 주관 및 개최
             </li>
             <li>
              도봉구시설관리공단 - 도봉구립도서관 위탁 운영
             </li>
             <li>
              청소년 명예사서 양성
             </li>
             <li>
              2015 한 도서관 한 책 읽기 사업 (서울도서관 주관)
             </li>
             <li>
              고맙습니다, 지혜의등대 작은도서관 분관 운영
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2014
           </dt>
           <dd>
            <ul class="list2">
             <li>
              2014 공공도서관 서울특별시장상 수상
             </li>
             <li>
              ‘2015 아름다운 이야기 할머니’ 파견기관 선정 (한국국학진흥원 주관)
             </li>
             <li>
              ‘도봉어린이문화정보센터’ -> ‘도봉어린이문화정보도서관’으로 기관 명칭 변경
             </li>
             <li>
              2014 한 도서관 한 책 읽기 사업 (서울도서관 주관)
             </li>
             <li>
              작은도서관 순회사서 지원사업 (한국도서관문화진흥원 주관)
             </li>
             <li>
              도서관 2층 영어도서관 코너 마련
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2013
           </dt>
           <dd>
            <ul class="list2 mt25">
             <li>
              옥상녹화 조성 및 하늘정원 개방
             </li>
             <li>
              2013 한 도서관 한 책 읽기 사업 (서울도서관 주관)
             </li>
             <li>
              ‘꿈다락 토요문화학교 왁자지껄 도서관 문학놀이를 품다’ 사업 (한국문화예술교육진흥원 주관)
             </li>
             <li>
              공공건물 옥상녹화 사업 지원 대상지 선정
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2012
           </dt>
           <dd>
            <ul class="list2 mt40">
             <li>
              2012 한 도서관 한 책 읽기 사업 (서울문화재단 주관)
             </li>
             <li>
              도봉구 북스타트 사업 실시
             </li>
             <li>
              국회전자도서관 원문 데이터베이스 검색 서비스 실시
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2011
           </dt>
           <dd>
            <ul class="list2 mt35">
             <li>
              옥상농원 시범사업 시행 (서울시농업기술센터 주관)
             </li>
             <li>
              도봉구 북스타트 사업 실시
             </li>
             <li>
              어린이 영어도서관 운영 사업 실시
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2010
           </dt>
           <dd>
            <ul class="list2 mt60">
             <li>
              2010 한 도서관 한 책 읽기 사업 (서울문화재단 주관)
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2009
           </dt>
           <dd>
            <ul class="list2 mt60">
             <li>
              2009 한 도서관 한 책 읽기 사업 (서울문화재단 주관)
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2008
           </dt>
           <dd>
            <ul class="list2 mt40">
             <li>
              도봉구 구립도서관 간 상호대차 서비스 시작
             </li>
             <li>
              도봉어린이문화정보센터 개관 (4월 17일)
             </li>
             <li>
              1월 준공
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2007
           </dt>
           <dd>
            <ul class="list2 mt40">
             <li>
              도봉문화원 - 도봉어린이문화정보센터 위탁 운영
             </li>
             <li>
              도봉구문화정보센터 설치 및 운영조례 개정<li>[area1][keywordx]</li><li>[pkeyx]</li>[pkeyx][pkeyx]
             </li>
             <li>
              공사착공
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2006
           </dt>
           <dd>
            <ul class="list2 mt50">
             <li>
              설계용역 준공 및 공사발주
             </li>
             <li>
              어린이도서관 건립계획 수립
             </li>
            </ul>
           </dd>
          </dl>
          <dl>
           <dt>
            2005
           </dt>
           <dd>
            <ul class="list2 mt40">
             <li>
              2006년 예산편성 시 사업규모변경(6층→3층)
             </li>
             <li>
              도봉구 창4동 808-1 부지활용에 따른 정책회의 심의
             </li>
            </ul>
           </dd>
          </dl>
         </div>
        </div>
        <div id="s01list2" style="display:none;">
         <h3 class="tit">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="table1" summary="성명, 담당업무, 연락처를 나타내는 표">
          <caption>
           조직업무
          </caption>
          <colgroup>
           <col width="15%"/>
           <col width="12%"/>
           <col/>
           <col width="15%"/>
          </colgroup>
          <thead>
           <tr>
            <th scope="col">
             직책
            </th>
            <th scope="col">
             성명
            </th>
            <th scope="col">
             담당업무
            </th>
            <th scope="col">
             전화번호
            </th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <th scope="row">
             관장
            </th>
            <td>
             금준규
            </td>
            <td>
             도봉아이나라도서관 운영 총괄
            </td>
            <td>
             995-4171~3
             <br/>
             (101)
            </td>
           </tr>
           <tr>
            <th scope="row">
             선임
            </th>
            <td>
             이경미
            </td>
            <td>
             예산회계 업무총괄 및 서무 총괄
             <br/>
             공모사업, 외부기관 연계사업 총괄 및 운영위원회 관리
            </td>
            <td>
             995-4171~3
             <br/>
             (107)
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             이지연
            </td>
            <td>
             직원 및 직원 외 인력관리
             <br/>
             문화교실 운영 및 문화가 있는 날 기획 운영
            </td>
            <td>
             995-4171~3
             <br/>
             (109)
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             이지선
            </td>
            <td>
             평생교육, 독서문화 프로그램 기획 및 운영
             <br/>
             도서관 공모사업 및 도서관 통계, 평가 담당
            </td>
            <td>
             995-4171~3
             <br/>
             (103)
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             김주화
            </td>
            <td>
             평생교육 및 독서프로그램 기획 및 운영
             <br/>
             혁신교육지구, 공동육아나눔터, 북스타트 운영관리
            </td>
            <td>
             995-4171~3
             <br/>
             (107)
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             한영신<li>[linkx]</li>[area1][mkey1][area1][mkey1]<li>[area1][keywordx]</li>[pkeyx]
            </td>
            <td>
             자료열람실 관리 총괄
             <br/>
             정기간행물 선정 및 관리, 책이음서비스 지원
            </td>
            <td>
             995-4171~3
             <br/>
             (111)
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             유소정
            </td>
            <td>
             자료실열람실 및 영어원서실 운영
             <br/>
             책이음서비스 및 책나래 서비스 담당
            </td>
            <td>
             <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li><li>[ahref]</li>
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             최정숙
            </td>
            <td>
             유아열람실 관리 총괄
             <br/>
             수서업무 총괄 및 자료선정위원회 운영
            </td>
            <td>
             995-4171~3
             <br/>
             (114)
            </td>
           </tr>
           <tr>
            <th scope="row">
             주임
            </th>
            <td>
             박태일
            </td>
            <td>
             시설 및 장비 유지 관리 총괄
             <br/>
             안내데스크 운영 및 회원관리
            </td>
            <td>
             995-4171~3
             <br/>
             (100)
            </td>
           </tr>
          </tbody>
         </table>
        </div>
        <div id="s01list3">
         <h3 class="tit">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <div class="use_guide">
          <div class="use_logo">
          </div>
          <div class="cen">
           <ul class="list">
            <li>
             <strong class="st">
              평일(월~금) :
             </strong>
             09:00 ~ 20:00
            </li>
            <[area1][keywordx]>
            </[area1][keywordx]>
           </ul>
          </div>
          <div class="use_fr">
           <strong class="red">
            휴관일
           </strong>
           <br/>
           정기휴관일: 매주 화요일 /
           <br/>
           법정공휴일: 일요일을 제외한 관공서 공휴일
           <br/>
           (중복시 휴관)
           <br/>
           기타 도서관장이 정하는날
          </div>
         </div>
        </div>
        <div id="s01list4" style="display:none;">
         <h3 class="tit">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="table1" summary="도서, 영어원서, 다문화도서, 연속간행물, 비도서">
          <caption>
           자료현황
          </caption>
          <colgroup>
           <col width="20%"/>
           <col width="20%"/>
           <col width="20%"/>
           <col width="20%"/>
           <col width="20%"/>
          </colgroup>
          <thead>
           <tr>
            <th scope="col">
             도서
            </th>
            <th scope="col">
             영어원서
            </th>
            <th scope="col">
             다문화도서
            </th>
            <th scope="col">
             연속간행물
            </th>
            <th scope="col">
             비도서
            </th>
           </tr>
          </thead>
          <tbody>
           <tr>
            <td>
             74,281권
            </td>
            <td>
             15,864권
            </td>
            <td>
             535권
            </td>
            <td>
             28종
            </td>
            <td>
             1,578권
            </td>
           </tr>
          </tbody>
         </table>
        </div>
        <div id="s01list5" style="display:none;">
         <h3 class="tit">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <div class="lib_info_data">
          <div class="interior">
          </div>
          <div class="lib_inter_cont height2">
           <dl>
            <dt class="icon02">
             주소
            </dt>
            <dd>
             (01411) 서울특별시 도봉구
             <br/>
             노해로 69길 151(창동)
            </dd>
           </dl>
           <dl>
            <dt class="icon01">
             전화번호
            </dt>
            <dd>
             02-995-4171~3
            </dd>
           </dl>
           <dl>
            <dt class="icon03">
             규모
            </dt>
            <dd>
             <ul>
              <li>
               지하 1층
              </li>
              <li>
               지상 3층
              </li>
             </ul>
            </dd>
           </dl>
           <dl>
            <dt class="icon04">
             연면적
            </dt>
            <dd>
             ﻿1,497.59㎡
            </dd>
           </dl>
          </div>
         </div>
        </div>
        <div id="s01list6" style="display:none;">
         <h3 class="tit">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[area1][mkey1]<li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]
         </h3>
         <div class="lib_info_map">
          <div class="map_big" id="map">
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][linkx][linkx][area1][mkey1][area1][keywordx][linkx][ahref][area1][mkey1][area1][keywordx][area1][mkey1]
          </div>
          <div class="map_cont height2">
           <dl class="icon01 mt10">
            <dt>
             지하철
            </dt>
            <dd>
             <ul>
              <li>
               <span class="next">
                창동역(1.4호선) 1번 출구
               </span>
               도보 10분
              </li>
              <li>
               <span class="next">
                창동역(1.4호선) 1번 출구
               </span>
               <span class="next">
                도봉08번, 도봉09번, 노원15번, 1119번 환승
               </span>
               도보 2분
              </li>
             </ul>
            </dd>
           </dl>
           <dl class="icon02">
            <dt>
             버스
            </dt>
            <dd>
             <ul>
              <li>
               <strong>
                지선버스 1119번 :
               </strong>
               자운고등학교 앞 하차 도보 2분
              </li>
              <li>
               <strong>
                도봉08번, 도봉09번, 노원15번 :
               </strong>
               자운고등학교 앞 하차 도보 2분
              </li>
             </ul>
            </dd>
           </dl>
           <dl class="icon03">
            <dt>
             주차안내
            </dt>
            <dd>
             차량 7대 무료주차가능
             <br/>
             주차장이 협소하오니 가급적 대중교통을 이용하여 주시기 바랍니다.
            </dd>
           </dl>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="squick_w" id="quick_wrap">
    <div class="quick" id="quick">
     <p class="tit">
     </p>
     <ul>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="icon05 hvr-underline-from-center" href="/board/list.do?a_num=10887383">
        대관신청
       </a>
      </li>
     </ul>
    </div>
    <div class="btn_top" style="display:block;">
     <p class="quicktop">
     </p>
    </div>
   </div>
   <div id="foot">
    <div class="foot_top">
    </div>
    <div class="area">
     <div class="fmenu">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/contents.do?idx=176">
         이메일무단수집거부
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="address">
      <dl>
       <dt>
        문화정보
       </dt>
       <dd>
        <span>
         (01485)
        </span>
        서울시 도봉구 덕릉로
        <span>
         315 / Tel : 02-900-1835~8
        </span>
       </dd>
       <dt>
        학마을
       </dt>
       <dd>
        [area1][mkey1]<li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][mkey1]</li>
       </dd>
      </dl>
      <dl class="tw">
       <dt>
        기적
       </dt>
       <dd>
        <span>
         (01320)
        </span>
        서울시 도봉구 마들로
        <span>
         797 / Tel : 02-3493-7171
        </span>
       </dd>
       <dt>
        둘리
       </dt>
       <dd>
        <span>
         (01376)
        </span>
        서울시 도봉구 시루봉로
        <span>
         1
        </span>
        길
        <span>
         6 / Tel : 02-990-2200
        </span>
       </dd>
      </dl>
      <dl>
       <dt>
        아이나라
       </dt>
       <dd>
        <span>
         (01359)
        </span>
        서울시 도봉구 노해로
        <span>
         69
        </span>
        길
        <span>
         151 / Tel : 02-995-4171~3<li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]
        </span>
       </dd>
       <dt>
        무수골
       </dt>
       <dd>
        <span>
         (01305)
        </span>
        서울시 도봉구 도봉로
        <span>
         175
        </span>
        길
        <span>
         10 / Tel : 02-3492-0078[area1][mkey1][ahref][linkx][area1][keywordx][linkx][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][linkx][area1][mkey1][area1][keywordx][ahref][pkeyx][linkx][ahref][ahref][linkx][ahref][ahref][ahref][pkeyx][linkx][ahref][pkeyx]
        </span>
       </dd>
      </dl>
     </div>
     <p class="copy">
      Copyright ⓒ Dobong-gu public library. All rights reserved
     </p>
    </div>
   </div>
  </div>
  <div id="totalmenu">
   <div class="three col" id="open-button">
    <div class="hamburger" id="hamburger-1">
     <span class="line">
     </span>
     <span class="line">
     </span>
     <span class="line">
     </span>
    </div>
   </div>
  </div>
  <div class="menu-wrap">
   <nav class="menu">
    <p class="title">
     전체메뉴
    </p>
    <div class="icon-list">
     <a class="mobile_menu1" href="#" onclick="javascript:depth('1');" onfocus="if(event .keycode==13) { depth('1'); }">
      <span>
       도서관소개
      </span>
     </a>
     <div class="icon-list_on" id="dep1_viwe" style="display:none;">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/contents.do?idx=64">
         학마을도서관
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/contents.do?idx=124">
         공립작은도서관
        </a>
       </li>
       <li>
        <a href="/contents.do?idx=200">
         버스도서관
        </a>
       </li>
      </ul>
     </div>
     <a class="mobile_menu2" href="#" onclick="javascript:depth('2');" onfocus="if(event .keycode==13) { depth('2'); }">
      <span>
       이용안내
      </span>
     </a>
     <div class="icon-list_on" id="dep2_viwe" style="display:none;">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/contents.do?idx=97">
         사서에게물어보세요
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <a class="mobile_menu3" href="#" onclick="javascript:depth('3');" onfocus="if(event .keycode==13) { depth('3'); }">
      <span>
       소장자료검색
      </span>
     </a>
     <div class="icon-list_on" id="dep3_viwe" style="display:none;">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/site/search/search01.do">
         단행본
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/site/search/search04.do">
         신착자료
        </a>
       </li>
       <li>
        <a href="/site/search/search06.do">
         인기도서
        </a>
       </li>
       <li>
        <a href="/site/search/search05.do">
         장난감
        </a>
       </li>
      </ul>
     </div>
     [ahref]
     
     <div class="icon-list_on" id="dep4_viwe" style="display:none;">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/edusat2/list.do">
         문화교실/상설 교양강좌
        </a>
       </li>
      </ul>
     </div>
     [linkx]
     
     <div class="icon-list_on" id="dep5_viwe" style="display:none;">
      <ul>
       <li>
        [ahref][area1][keywordx][pkeyx][ahref][area1][mkey1][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][pkeyx][linkx]
       </li>
       <li>
        <a href="/board/list.do?a_num=33508730">
         자원봉사신청
        </a>
       </li>
       <li>
        <a href="/board/list.do?a_num=74944775">
         도서관견학신청
        </a>
       </li>
       <li>
        <a href="/board/list.do?a_num=38572191">
         이달의행사
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     [linkx]
     
     <div class="icon-list_on" id="dep6_viwe" style="display:none;">
      <ul>
       <li>
        <a href="/site/mylib/mybook05.do">
         내서재
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/site/mylib/hope_book_request.do">
         희망도서신청
        </a>
       </li>
       <li>
        <a href="/site/mylib/modify.do">
         개인정보수정
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <a class="mobile_menu7" href="#" onclick="javascript:depth('7');" onfocus="if(event .keycode==13) { depth('7'); }">
      함께하는 도서관[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>
     </a>
     <div class="icon-list_on" id="dep7_viwe" style="display:none;">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <a class="mobile_menu8" href="#" onclick="javascript:depth('8');" onfocus="if(event .keycode==13) { depth('8'); }">
      <span>
       정보광장
      </span>
     </a>
     <div class="icon-list_on" id="dep8_viwe" style="display:none;">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/board/list.do?a_num=61479544">
         홍보영상
        </a>
       </li>
       <li>
        <a href="/contents.do?idx=278">
         문화행사 갤러리
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </nav>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0370
  </b>
 </body>
</html>|<---