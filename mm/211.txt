--->|<!DOCTYPE doctype html>
<html class="no-js " lang="fr">
 <head>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0" name="viewport"/>
  <meta content="#ffffff" name="msapplication-TileColor"/>
  <meta content="https://www.leroyalmonceau.com/wp-content/themes/royalmonceau/assets/img/ms-icon-144x144.png" name="msapplication-TileImage"/>
  <meta content="#ffffff" name="theme-color"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description">
  </meta>
 </head>
 <body class="home page-template page-template-template_home page-template-template_home-php page page-id-43">
  <header id="main_header">
   <div id="wrap_menu">
    <button class="hamburger hamburger--slider" id="triggerMenu" type="button">
     <span class="hamburger-box">
      <span class="menu_text">
       MENU
      </span>
      <span class="hamburger-inner">
      </span>
     </span>
    </button>
    [linkx]
    
   </div>
   <div id="wrap_logo">
    [ahref]
    
   </div>
   <div id="wrap_socialmedia">
    <ul>
     <li class="facebook">
      [ahref]
      
     </li>
     <li class="twitter">
      [ahref]
      
     </li>
     <li class="instagram">
      <a href="/leroyalmonceau/" target="_blank" title="Suivez-nous sur Instagram">
      </a>
     </li>
     <li class="youtube">
      [linkx]
      
     </li>
     <li class="weibo">
      [linkx]
      
     </li>
    </ul>
   </div>
   <div id="wrap_lang">
    <select id="lang_switcher">
     <option data-url="http://www.leroyalmonceau.com/en/" value="http://www.leroyalmonceau.com/en/">
      EN
     </option>
     <option data-url="http://www.leroyalmonceau.com/ar/" value="http://www.leroyalmonceau.com/ar/">
      AR
     </option>
     <option data-url="http://www.leroyalmonceau.com/zh-hans/" value="http://www.leroyalmonceau.com/zh-hans/">
      CH
     </option>
     <option data-url="http://www.leroyalmonceau.com/es/" value="http://www.leroyalmonceau.com/es/">
      ES
     </option>
     <option data-url="http://www.leroyalmonceau.com/" selected="selected" value="http://www.leroyalmonceau.com/">
      FR
     </option>
     <option data-url="http://www.leroyalmonceau.com/pt-pt/" value="http://www.leroyalmonceau.com/pt-pt/">
      PT
     </option>
     <option data-url="http://www.leroyalmonceau.com/ru/" value="http://www.leroyalmonceau.com/ru/">
      RU
     </option>
    </select>
   </div>
  </header>
  <div id="mask">
  </div>
  <div id="wrapper">
   <nav id="main_nav">
    [ahref]
    
    <ul class="menu" id="menu-main-nav-fr">
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-1327" id="menu-item-1327">
      [linkx]
      
      <ul class="sub-menu">
       <li class="menu-item menu-item-type-taxonomy menu-item-object-room_type menu-item-831" id="menu-item-831">
        [linkx]
        
       </li>
       <li class="menu-item menu-item-type-taxonomy menu-item-object-room_type menu-item-829" id="menu-item-829">
        [ahref]
        
       </li>
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-21731" id="menu-item-21731">
        [ahref]
        
       </li>
      </ul>
     </li>
     <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-833" id="menu-item-833">
      [ahref]
      
      <ul class="sub-menu">
       [ahref]<li>[linkx]</li>[mkey1]
      </ul>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1330" id="menu-item-1330">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1390" id="menu-item-1390">
      [linkx]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-spa menu-item-872" id="menu-item-872">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-873" id="menu-item-873">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1332" id="menu-item-1332">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1328" id="menu-item-1328">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-18271" id="menu-item-18271">
      <a href="m" target="_blank">
       La Royale Boutique
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2199" id="menu-item-2199">
      [ahref]
      
     </li>
    </ul>
   </nav>
   <div class="swiper-container" id="rm_vertical_full_swiper" role="main">
    <div class="swiper-wrapper">
     <section class="swiper-slide slide_video hasvideo">
      <div data-property="{
							videoURL:'https://youtu.be/PKUo6smkNxM',
							containment:'#home_intro',
							autoPlay:true, 
							showControls:false, 
							ratio:'16/9',
							showYTLogo:false,
							realfullscreen:false,
							mobileFallbackImage:'https://www.leroyalmonceau.com/wp-content/themes/royalmonceau/assets//img/template_home/slide_template_video.jpg',
							stopMovieOnBlur:false, 
							mute:true, 
							startAt:4,
							stopAt:54, 
							opacity:1
						}" id="home_intro">
       <h1>
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h1>
       <div id="home_intro_overlay">
        <span class="muted" id="mute">
        </span>
       </div>
       <div id="homepage_popup">
        [linkx]
        
        <div class="homepage-sliders-container">
         <div class="swiper-wrapper">
          <div class="swiper-slide">
           <div class="image" style="background-image: url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2019/06/26093132/Royal_Garden4%C2%A9shehanhanwellage-min-1.jpg)">
           </div>
           <div class="content">
            <h2>
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
            <p>
             Déguster des mets raffinés, apprécier le soleil parisien, écouter de la musique : tout cela est…
            </p>
            <div class="link">
             <a href="/la-terrasse-dete-royal-garden-est-ouverte/" target="_blank">
              Découvrir
              <i>
              </i>
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="swiper-button-prev">
         </div>
         <div class="swiper-button-next">
         </div>
        </div>
       </div>
      </div>
      [ahref]
      
     </section>
     <section class="swiper-slide horizontal horizontal_70_30" id="second">
      <div class="first">
       <div class="media" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2018/12/12160608/RM_Presidential_Suite_Raffles_17cZo%C3%A9_Fidji-min.jpg);">
       </div>
      </div>
      <div class="second content">
       <div class="columns">
        <div class="heading">
         <div class="innerheading">
          <h2>
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h2>
         </div>
        </div>
        <div class="text">
         <div class="innertext">
          <p>
           Le style de nos chambres et suites offre un mix généreux du design contemporain allié au caractère unique de l’esprit parisien. Associant l’élégance précise des années 1940 et 1950 – rigueur des lignes, noblesse des matières, chaleur des couleurs – à la poésie de détails sensibles, chacune d'elles semble imprégnée d’une vie, d’une histoire que celui qui s’y installe, quelle que soit la durée de son séjour, est invité à poursuivre. Des livres posés çà et là sur des étagères, un abat-jour griffonné d’un message, une guitare acoustique... sont autant de traces d’un voyageur amoureux des destinations lointaines, d’un dandy, d’une femme de lettres, d’un artiste ou d’un collectionneur passionné.
          </p>
         </div>
        </div>
        <div class="cta">
         <div class="innercta">
          <a href="s">
           Découvrir nos Suites &amp; Chambres
           <i>
           </i>
          </a>
         </div>
        </div>
       </div>
      </div>
      [ahref]
      
     </section>
     <section class="swiper-slide vertical vertical_30_70" id="third">
      <div class="first content">
       <div class="heading">
        <div class="innerheading">
         <h2>
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
        </div>
       </div>
       <div class="text">
        [mkey1][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][pkeyx][mkey1][linkx][pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][ahref][ahref][ahref]
       </div>
       <div class="cta">
        <div class="innercta">
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="second">
       <div class="media" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2018/12/12142828/RM_Matsuhisa_Paris_Plat_16cZo%C3%A9_Fidji.jpg);">
        <li>[keywordx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li>
       </div>
      </div>
      [linkx]
      
     </section>
     <section class="swiper-slide vertical vertical_33_33_33" id="fourth">
      <div class="first">
       <div class="mediasmall mediasmall_1" style="">
       </div>
       <div class="mediasmall mediasmall_2" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2017/05/14090715/RM_Librairie_180518_026_web%C2%A9RomeoBalancourt.jpg);">
       </div>
       <div class="mediasmall mediasmall_3" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2018/12/11101532/Le-Royal-Monceau-Raffles-Paris-Art-District-Gallery-1.jpg);">
       </div>
      </div>
      <div class="second">
       <div class="media" style="">
       </div>
      </div>
      <div class="third content">
       <div class="heading">
        <div class="innerheading">
         <h2>
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
        </div>
       </div>
       <div class="text">
        <div class="innertext">
         <p>
          Nous offrons à nos clients des espaces dédiés à l’art contemporain. Librairie des arts, salle de cinéma privée, galerie d’art contemporain, collection privée de plus de 300 oeuvres artistiques et service d'Art Concierge : le programme artistique de l’hôtel est multidisciplinaire, multimédia et intergénérationnel.
         </p>
        </div>
       </div>
       <div class="cta">
        <div class="innercta">
         <a href="s">
          Une histoire d'art
          <i>
          </i>
         </a>
        </div>
       </div>
      </div>
      [ahref]
      
     </section>
     <section class="swiper-slide horizontal horizontal_30_70" id="fifth">
      <div class="first content">
       <div class="columns">
        <div class="heading">
         <div class="innerheading">
          <h2>
           <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h2>
         </div>
        </div>
        <div class="text">
         <div class="innertext">
          <p>
           Spa My Blend by Clarins : Pour cet espace hors du commun de 1500 m², Philippe Starck a créé un paradis blanc éthéré, une véritable invitation à la détente et à l’hédonisme d’une élégance intemporelle et d’une parfaite simplicité.
          </p>
         </div>
        </div>
        <div class="cta">
         <div class="innercta">
          [linkx]
          
         </div>
        </div>
       </div>
      </div>
      <div class="second">
       <div class="media">
       </div>
      </div>
      [linkx]
      
     </section>
     <section class="swiper-slide vertical vertical_33_33_33" id="sixth">
      <div class="first">
       <div class="mediasmall mediasmall_1" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2019/04/12094744/RM_JardinJaponais_080419_115_web_RomeoBalancourt_B.jpg);">
       </div>
       <div class="mediasmall mediasmall_2" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2019/02/14083258/RM_Presidential_Suite_Details_13cZo%C3%A9_Fidji.jpg);">
       </div>
      </div>
      <div class="second content">
       <div class="heading">
        <div class="innerheading">
         <h2>
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h2>
        </div>
       </div>
       <div class="text">
        <div class="innertext">
         <p>
          Découvrez nos dernières offres gastronomiques, artistiques et culturelles ainsi que nos partenariats exclusifs.
         </p>
        </div>
       </div>
       <div class="cta">
        <div class="innercta">
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="third">
       <div class="mediasmall mediasmall_1" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2019/01/29181724/RM_TeaTime_4_webcRomeo_Balancourt.jpg);">
       </div>
       <div class="mediasmall mediasmall_2" style="background-image:url(https://dq5r178u4t83b.cloudfront.net/wp-content/uploads/sites/62/2019/01/25172328/RM_Spa_8cZo%C3%A9_Fidji.jpg);">
       </div>
      </div>
      [ahref]
      
     </section>
     <section class="swiper-slide" id="univers_footer">
      <div id="footer_wrapper">
       <div class="extralinks" id="homefooter_wrap_extralinks">
        <ul class="menu" id="menu-footer-fr">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2143" id="menu-item-2143">
          <a href="/chambres-suites/">
           Nos Chambres &amp; Suites
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2149" id="menu-item-2149">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2150" id="menu-item-2150">
          [linkx][pkeyx][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][pkeyx][pkeyx][ahref][keywordx][keywordx][mkey1]
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2144" id="menu-item-2144">
          <a href="/nos-talents-culinaires/">
           Nos Talents Culinaires
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2145" id="menu-item-2145">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-spa menu-item-876" id="menu-item-876">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2146" id="menu-item-2146">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2148" id="menu-item-2148">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2147" id="menu-item-2147">
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="legals" id="homefooter_wrap_legals">
        <div class="text">
         <address>
          ‎37 avenue Hoche, 75008 Paris
         </address>
         | T.
         [linkx]
         
         |
         [ahref]
         
        </div>
       </div>
       <div id="homefooter_wrap_socialmedia">
        <div class="copyright" id="copyright_desktop">
        </div>
        <ul>
         <li class="facebook">
          [linkx]
          
         </li>
         <li class="twitter">
          [ahref]
          
         </li>
         <li class="instagram">
          [linkx]
          
         </li>
         <li class="youtube">
          [linkx]
          
         </li>
         <li class="weibo">
          [linkx]
          
         </li>
        </ul>
        <div id="footer_newsletter_zone">
         [linkx]
         
        </div>
       </div>
       <div id="homefooter_wrap_logos">
        <div class="row first">
         <div class="logodiv raffles">
          [ahref]
          
         </div>
         <div class="logodiv leading">
          [linkx]
          
         </div>
         <div class="logodiv palace">
          [ahref]
          
         </div>
        </div>
        <div class="row last">
         <div class="logodiv app_stores">
          <span>
           Les Apps AccorHotels
          </span>
          <a class="logolink android" href="/store/apps/details?id=com.accor.appli.hybrid&amp;hl=fr" target="_blank">
          </a>
          [ahref]
          
         </div>
        </div>
       </div>
       <div id="homefooter_wrap_satlinks">
        <ul class="menu" id="menu-footer-satelllite-fr">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home current-menu-item page_item page-item-43 current_page_item menu-item-835" id="menu-item-835">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-853" id="menu-item-853">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2394" id="menu-item-2394">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-spa menu-item-871" id="menu-item-871">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2195" id="menu-item-2195">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2142" id="menu-item-2142">
          <a href="/espace-presse/">
           Espace Presse
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-875" id="menu-item-875">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3790" id="menu-item-3790">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-18270" id="menu-item-18270">
          [ahref]
           [pkeyx][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][linkx][mkey1][keywordx][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-878" id="menu-item-878">
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="copyright" id="copyright_mobile">
       </div>
      </div>
     </section>
    </div>
    <div class="swiper-pagination">
    </div>
    <div id="mask-right">
    </div>
   </div>
  </div>
  <footer id="main_footer">
   <div class="legals">
    <div class="text">
     <address>
      ‎37 avenue Hoche, 75008 Paris
     </address>
     | T.
     [ahref]
     
     |
     [linkx]
     
    </div>
   </div>
   <a class="btn_royalmonceau" href="#" id="cta_reserver">
    Réserver
   </a>
   [ahref]
   
  </footer>
  <div id="landscape_alert">
   Veuillez pivoter votre périphérique
  </div>
  <div class="modal" id="modal_newsletter">
   <div class="modal_body">
    [linkx]
    
    en attente
   </div>
  </div>
  <div class="modal" id="modal_reserver">
   [ahref]
   
   <div class="modal_body">
    <div id="modal_reserver_sidebar">
     <span class="logo_rm">
     </span>
     <ul>
      <li class="chambres active">
       <a data-show="chambres" href="#">
        Chambres &amp; Suites
       </a>
      </li>
      <li class="restaurants">
       [ahref]
       
      </li>
      <li class="spa">
       [linkx]
       
      </li>
      <li class="cinema">
       [ahref]
       
      </li>
     </ul>
     <select id="modal_mobile_nav">
      [mkey1][pkeyx][keywordx]
     </select>
    </div>
    <div id="modal_reserver_content">
     <div class="modal_tab chambres active">
      <div class="date_step_1 step active">
       <h3>
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>[keywordx]<li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
       </h3>
       <div class="caleran-container">
        [ahref]
        
        <button class="config_link">
         1 chambre, 2 adultes, 0 enfant
         <i>
         </i>
        </button>
        <button class="promo_link">
         Précisez vos avantages
        </button>
        [linkx]
        
       </div>
      </div>
      <div class="date_step_2 step">
       <h3>
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="rm_multi_datepicker" id="rooms_calendar">
       </div>
      </div>
      <div class="config_step_1 step config_step">
       <div class="config_inner">
        <h3>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <select id="select_rooms_number">
         <option value="1 ">
          1 chambre
         </option>
         <option value="2">
          2 chambres
         </option>
         <option value="3">
          3 chambres
         </option>
         <option value="4">
          4 chambres
         </option>
        </select>
        <div id="rooms">
         <div class="select_room">
          <h3>
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
          <div class="select_field">
           <label>
            Adultes
           </label>
           <select class="select_adults_number">
            <option value="1 ">
             1
            </option>
            <option value="2">
             2
            </option>
            <option value="3">
             3
            </option>
            <option value="4">
             4
            </option>
            <option value="5">
             5
            </option>
           </select>
          </div>
          <div class="select_field">
           <label>
            Enfants
           </label>
           <select class="select_children_number">
            <option value="0">
             0
            </option>
            <option value="1">
             1
            </option>
            <option value="2">
             2
            </option>
            <option value="3">
             3
            </option>
            <option value="4">
             4
            </option>
            <option value="5">
             5
            </option>
           </select>
          </div>
          <div class="children_ages">
           <div class="select_field large child_age">
            <label>
             Âge enfant(s)
            </label>
           </div>
          </div>
         </div>
        </div>
        [linkx]
        
        <button class="confirm_config btn_royalmonceau">
         Valider
        </button>
       </div>
      </div>
      <div class="promo_step_1 step promo_step">
       <div class="config_inner">
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="avantage">
         <label>
          Numéro de la carte de fidélité ou de membre<li>[linkx]</li>[ahref][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref]
         </label>
        </div>
        <div class="avantage">
         <label>
          Code préférentiel
         </label>
        </div>
        <a class="backArrow" href="#">
        </a>
        <button class="confirm_avantages btn_royalmonceau">
         Valider
        </button>
       </div>
      </div>
     </div>
     <div class="modal_tab restaurants">
      <div class="config_inner step active">
       <h3>
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="config_inner">
        <div class="select_field select_field_restaurant">
         <label>
          Restaurant
         </label>
         <select id="select_table_restaurant">
          <option id="resto_270" value="270">
           Matsuhisa Paris
          </option>
          <option id="resto_271" value="271">
           Il Carpaccio, 1 étoile Michelin
          </option>
          <option id="resto_269" value="269">
           La Cuisine
          </option>
         </select>
        </div>
        <button class="check_dispo btn_royalmonceau" data-href="https://www.leroyalmonceau.com/reservation/?" id="open_restaurant_bookingwindow">
         Vérifier les disponibilités
        </button>
       </div>
      </div>
     </div>
     <div class="modal_tab spa">
      <div class="config_inner">
       <h3>
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       [linkx]
       
      </div>
     </div>
     <div class="modal_tab cinema">
      <div class="date_step_1 step active">
       <h3>
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="caleran-container">
        <p class="info">
         Les projections ont lieu chaque dimanche.
         <br/>
         Séance à 18h00, film à 18h30.
        </p>
        <div class="wpcf7" dir="ltr" id="wpcf7-f420-o1" lang="fr-FR" role="form">
         <div class="screen-reader-response">
          [keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[mkey1]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref]
         </div>
         <form action="/#wpcf7-f420-o1" class="wpcf7-form" id="form_cinema" method="post" novalidate="novalidate">
          <div style="display: none;">
          </div>
          <div>
           <label>
            Film
            <sup>
             *
            </sup>
           </label>
           <br/>
          </div>
          <div>
           <label>
            Nom et prénom
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_nom">
           </span>
          </div>
          <div>
           <label>
            Adresse e-mail
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_email">
            [linkx][linkx][keywordx][mkey1][keywordx][linkx][mkey1][mkey1][mkey1][keywordx][keywordx][mkey1][keywordx][pkeyx][ahref][pkeyx][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][pkeyx][mkey1][mkey1]
           </span>
          </div>
          <div>
           <label>
            Téléphone
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_telephone">
           </span>
          </div>
          <div>
           <label>
            Nombre de personnes
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_personnes">
            <select aria-invalid="false" aria-required="true" class="wpcf7-form-control wpcf7-select wpcf7-validates-as-required" id="champ_personnes" name="champ_personnes">
             <option value="1">
              1
             </option>
             <option value="2">
              2
             </option>
             <option value="3">
              3
             </option>
             <option value="4">
              4
             </option>
             <option value="5">
              5
             </option>
             <option value="6">
              6
             </option>
             <option value="7">
              7
             </option>
             <option value="8">
              8
             </option>
             <option value="9">
              9
             </option>
             <option value="10">
              10
             </option>
            </select>
           </span>
          </div>
          <div class="wpcf7-response-output wpcf7-display-none">
          </div>
         </form>
        </div>
        <button class="btn_royalmonceau" id="send_cinema_form">
         Valider
        </button>
        <span id="mandatory">
         [linkx]<li>[keywordx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx]</li><li>[keywordx]</li>
        </span>
        <div id="cinema_form_errors">
        </div>
        <div id="cinema_form_successes">
        </div>
       </div>
      </div>
      <div class="config_step_1 step config_step">
       <div class="config_inner">
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
       </div>
      </div>
     </div>
     <div class="modal_tab celebrations">
      <div class="date_step_1 step active">
       <h3>
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="caleran-container">
        [linkx]
        
        <button class="config_link">
         Configurez votre évènement
         <i>
         </i>
        </button>
        <button class="check_dispo btn_royalmonceau" data-href="#" id="send_evenement_form">
         Valider
        </button>
        <div id="evenements_form_errors">
        </div>
        <[keywordx]>
        </[keywordx]>
       </div>
      </div>
      <div class="date_step_2 step">
       <h3>
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="rm_multi_datepicker" id="evenements_calendar">
       </div>
       [linkx]
       
       <button class="confirm_config btn_royalmonceau">
        Valider<li>[linkx]</li>[ahref]<li>[ahref]</li>[ahref]<li>[keywordx]</li>
       </button>
      </div>
      <div class="config_step_1 step config_step">
       <div class="config_inner">
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="wpcf7" dir="ltr" id="wpcf7-f2644-o2" lang="fr-FR" role="form">
         <div class="screen-reader-response">
         </div>
         <form action="/#wpcf7-f2644-o2" class="wpcf7-form" id="form_evenements" method="post" novalidate="novalidate">
          <div style="display: none;">
          </div>
          <div>
           <label>
            Nom
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_nom">
           </span>
          </div>
          <div>
           <label>
            Adresse E-mail
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_email">
           </span>
          </div>
          <div>
           <label>
            Prénom
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_prenom">
           </span>
          </div>
          <div>
           <label>
            Téléphone
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_telephone">
           </span>
          </div>
          <div>
           [linkx]<li>[ahref]</li>[linkx]
          </div>
          <div>
           <label>
            Nombre de personnes
            <sup>
             *
            </sup>
           </label>
           <br/>
           <span class="wpcf7-form-control-wrap champ_personnes">
            <li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[pkeyx]</li><li>[pkeyx]</li><li>[ahref]</li>
           </span>
          </div>
          <br/>
          <div class="wpcf7-response-output wpcf7-display-none">
          </div>
         </form>
        </div>
        [linkx]
        
        <button class="confirm_seance btn_royalmonceau">
         Valider
        </button>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="modal" id="modal_contact">
   <a class="modal_close" href="#">
    Fermer
   </a>
   <div class="modal_body">
    <h3>
     [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </h3>
    <div class="wpcf7" dir="ltr" id="wpcf7-f6439-o3" lang="fr-FR" role="form">
     <div class="screen-reader-response">
     </div>
     <form action="/#wpcf7-f6439-o3" class="wpcf7-form" id="form_footercontact" method="post" novalidate="novalidate">
      <div style="display: none;">
      </div>
      <div>
       <label>
        Nom
        <sup>
         *
        </sup>
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_nom">
       </span>
      </div>
      <div>
       <label>
        Prénom
        <sup>
         *
        </sup>
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_prenom">
       </span>
      </div>
      <div>
       <label>
        Adresse e-mail
        <sup>
         *
        </sup>
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_email">
       </span>
      </div>
      <div>
       <label>
        Téléphone
        <sup>
         *
        </sup>
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_telephone">
       </span>
      </div>
      <div>
       <label>
        Adresse
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_adresse">
       </span>
      </div>
      <div>
       <label>
        Ville
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_ville">
       </span>
      </div>
      <div>
       <label>
        Code postal
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_codepostal">
       </span>
      </div>
      <div>
       <label>
        Pays
       </label>
       <br/>
       <span class="wpcf7-form-control-wrap champ_pays">
       </span>
      </div>
      <div class="large">
       [mkey1][keywordx][ahref][pkeyx][keywordx][linkx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][mkey1][ahref][pkeyx][mkey1][ahref][keywordx][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][linkx][pkeyx][linkx][keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1]
      </div>
      <div>
       <div class="wpcf7-form-control-wrap">
        <div class="wpcf7-form-control g-recaptcha wpcf7-recaptcha" data-sitekey="6LfodSwUAAAAAFY6V6urnXmnQKMUaF8yCEHiilka">
        </div>
        <noscript>
         <div style="width: 302px; height: 422px;">
          <div style="width: 302px; height: 422px; position: relative;">
           <div style="width: 302px; height: 422px; position: absolute;">
            <iframe frameborder="0" scrolling="no" src="https://www.google.com/recaptcha/api/fallback?k=6LfodSwUAAAAAFY6V6urnXmnQKMUaF8yCEHiilka" style="width: 302px; height:422px; border-style: none;">
            </iframe>
           </div>
           <div style="width: 300px; height: 60px; border-style: none; bottom: 12px; left: 25px; margin: 0px; padding: 0px; right: 25px; background: #f9f9f9; border: 1px solid #c1c1c1; border-radius: 3px;">
           </div>
          </div>
         </div>
        </noscript>
       </div>
      </div>
      <div id="submitBtn">
      </div>
      <div class="wpcf7-response-output wpcf7-display-none">
      </div>
     </form>
    </div>
    <span id="mandatory">
     <sup>
      *
     </sup>
     Champs obligatoires
    </span>
    <div id="footercontact_form_successes">
    </div>
    <div id="footercontact_form_errors">
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0225
  </b>
 </body>
</html>|<---