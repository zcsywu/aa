--->|<!DOCTYPE HTML>
<html lang="ko">
 <head itemscope="">
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi" name="viewport">
   <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1][ahref]<li>[ahref]</li>
  </meta>
 </head>
 <body class="renewal2015 view2016">
  <div class="sub-wrap gnb-news-00" id="wrap">
   <span class="skip-link">
    <a href="t">
     본문 바로가기
    </a>
    [ahref]
    
    [linkx]
    
   </span>
   <div class="header hdr2015" id="header">
    <div class="link-wrap">
     <strong class="logo-yna">
      [ahref]
      
     </strong>
     <div class="lang-wrap">
      <span class="hidden-obj">
       연합뉴스 다국어사이트 바로가기
      </span>
      <ul class="lang-site">
       <li class="en">
        <a data-stat-code="header_lang_en" data-stat-section="" href="r" title="(새창)English">
         English
        </a>
       </li>
       <li class="zh">
        [ahref]
        
       </li>
       <li class="jp">
        [ahref]
        
       </li>
       <li class="ar">
        [linkx]
        
       </li>
       <li class="sp">
        <a data-stat-code="header_lang_sp" data-stat-section="" href="/" title="(새창)Spanish">
         Español
        </a>
       </li>
       <li class="fr">
        <a data-stat-code="header_lang_fr" data-stat-section="" href="r" title="(새창)French">
         Français
        </a>
       </li>
      </ul>
      <span class="bar">
       <a class="fw-b" data-stat-code="header_rp" data-stat-section="" href="/board/jebo/index">
        기사제보
       </a>
      </span>
      <span class="bar">
       [ahref]
       
      </span>
     </div>
     <div class="agency-svc agency-svc02">
      <dl class="svc-zone">
       <dt class="hidden-obj">
        연합뉴스 자회사 서비스 바로가기
       </dt>
       <dd>
        <a data-stat-code="header_svc_imz" data-stat-section="" href="/imazine/index" target="_blank" title="새창">
         연합이매진 ·
        </a>
       </dd>
       <dd class="bar">
        <a data-stat-code="header_svc_mds" data-stat-section="" href="m" rel="nofollow" target="_blank" title="새창">
         MIDAS
        </a>
       </dd>
       <dd>
        [ahref]
        
       </dd>
       <dd>
        <a data-stat-code="header_svc_nfmx" data-stat-section="" href="r" rel="nofollow" target="_blank" title="새창">
         인포맥스
        </a>
       </dd>
      </dl>
      <div class="account-zone">
       <div class="acc-active">
        <a class="login login02" data-stat-code="header_acc_login" data-stat-section="" href="/member/login" rel="nofollow">
         로그인
        </a>
       </div>
       <div class="acc-disable">
        [linkx]
        
        <a href="/member/update" rel="nofollow">
         정보수정
        </a>
       </div>
      </div>
      <dl class="sns-zone">
       <dt class="hidden-obj">
        연합뉴스 SNS 계정 바로가기
       </dt>
       <dd class="fb">
        <a data-stat-code="header_sns_fb" data-stat-section="" href="/yonhap" rel="nofollow" target="_blank" title="새창">
         페이스북
        </a>
       </dd>
       <dd class="tw">
        [linkx]
        
       </dd>
       <dd class="insta">
        <a data-stat-code="header_sns_insta" data-stat-section="" href="/yonhap_news/" rel="nofollow" target="_blank" title="새창">
         인스타그램
        </a>
       </dd>
       <dd class="kks">
        <a data-stat-code="header_sns_kks" data-stat-section="" href="/ch/yonhapmedia" rel="nofollow" target="_blank" title="새창">
         카카오스토리
        </a>
       </dd>
      </dl>
     </div>
     <div class="top-banner">
      <span class="blind">
       배너
      </span>
      <ul>
       <li class="top-banner1 ads-top01">
       </li>
       <li class="top-banner2 ads-top02">
       </li>
      </ul>
     </div>
     <div class="today today-weather">
      <span class="blind">
       날짜와 날씨
      </span>
      <span class="date" id="tickerWeatherDate">
       <strong>
       </strong>
       <em>
       </em>
      </span>
      <div class="weather main-top-weather" id="tickerWeather">
       <a data-stat-code="header_weather" data-stat-section="" href="/weather/index">
        <ul>
        </ul>
       </a>
      </div>
     </div>
    </div>
    <div class="navi-wrap">
     <div class="nav-zone" id="nav">
      <span class="hidden-obj">
       메뉴
      </span>
      <p class="home">
       <a href="/index">
        <span>
         뉴스 홈
        </span>
       </a>
      </p>
      <p class="d-news">
       [linkx]
       
      </p>
      <p class="hng-news">
       [ahref]
       
      </p>
      <ul class="nav">
       <li class="m01" name="m01">
        <span class="nochild">
         <a data-stat-code="navi_news" data-stat-section="" href="/news">
          최신기사
         </a>
        </span>
       </li>
       <li class="m02 gnb-wrap" name="m02">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           전체기사[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>
          </li>
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/president">
            청와대/총리실
           </a>
          </li>
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/national-assembly">
            국회/정당
           </a>
          </li>
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/diplomacy">
            외교
           </a>
          </li>
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/defense">
            국방
           </a>
          </li>
         </ul>
         <div class="story-zone">
          [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][ahref][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][ahref][linkx][area1][mkey1][area1][mkey1]
         </div>
        </div>
       </li>
       <li class="m03 gnb-wrap" name="m03">
        <a data-stat-code="navi_nk" data-stat-section="" href="/nk/index">
         <span>
          북한
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/conference/index">
            학술·연구
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m04 gnb-wrap" name="m04">
        <a data-stat-code="navi_economy" data-stat-section="" href="/economy/index">
         <span>
          산업/경제
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/all">
            전체기사
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/industy">
            산업/기업
           </a>
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/real-estate">
            부동산
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m05 gnb-wrap" name="m05">
        <a data-stat-code="navi_stock" data-stat-section="" href="/stock/index">
         <span>
          금융/증권
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_stock_dep02" data-stat-section="" href="/stock/all">
            전체기사
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_stock_dep02" data-stat-section="" href="/stock/fund">
            펀드뉴스
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m06 gnb-wrap" name="m06">
        <a data-stat-code="navi_it" data-stat-section="" href="/it/index">
         <span>
          IT/과학
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/all">
            전체기사
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/games">
            게임
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m07 gnb-wrap" name="m07">
        <a data-stat-code="navi_society" data-stat-section="" href="/society/index">
         <span>
          사회
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/all">
            전체기사
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/court-prosecution">
            법원/검찰
           </a>
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/education">
            교육
           </a>
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/welfare-labor">
            복지/노동
           </a>
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/environment">
            환경
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m08 gnb-wrap" name="m08">
        <a data-stat-code="navi_local" data-stat-section="" href="/local/index">
         <span>
          전국
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/all">
            전체기사
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gyeonggi/index">
            경기
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/incheon/index">
            인천
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gwangju-jeonnam/index">
            광주/전남
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/daejeon-chungnam-sejong/index">
            대전/충남/세종
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/chungbuk/index">
            충북
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/jeju/index">
            제주
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m09 gnb-wrap" name="m09">
        <a data-stat-code="navi_entertainment" data-stat-section="" href="/entertainment/index">
         <span>
          연예
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_entertainment_dep02" data-stat-section="" href="/entertainment/all">
            전체기사
           </a>
          </li>
          <li>
           <a data-stat-code="navi_entertainment_dep02" data-stat-section="" href="/entertainment/tv">
            방송
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m10 gnb-wrap" name="m10">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/all">
            전체기사
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/books">
            책/문학
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/religion">
            종교
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/performance-exhibition">
            공연/전시
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m11 gnb-wrap" name="m11">
        <a data-stat-code="navi_sports" data-stat-section="" href="/sports/index">
         <span>
          스포츠
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m12 gnb-wrap" name="m12">
        [ahref]
         [ahref][pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/japan">
            일본
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/asia-australia">
            아시아/호주
           </a>
          </li>
          <li>
           [ahref][ahref]<li>[ahref]</li>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/centralsouth-america">
            중남미
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/middleeast-africa">
            중동/아프리카
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/international-org">
            국제기구
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m13" name="m13">
        <span class="nochild">
         [linkx]
         
        </span>
       </li>
       <li class="m14 gnb-wrap" name="m14">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/obituary-notice">
            부고
           </a>
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/people">
            동정
           </a>
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/ceo">
            CEO
           </a>
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/interview">
            인터뷰
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="m15 gnb-wrap" name="m15">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m16" name="m16">
        <span class="nochild">
         [ahref]
         
        </span>
       </li>
       <li class="m17 visual" name="m17">
        <a data-stat-code="navi_visual" data-stat-section="" href="/visual/index">
         <span>
          비주얼뉴스
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/graphic/index">
            그래픽
           </a>
          </li>
          <li class="video">
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/video/index">
            영상
           </a>
           <span>
            <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/video/scene">
             현장영상
            </a>
            <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/video/vr-scene">
             VR현장
            </a>
           </span>
          </li>
          <li class="vrroom">
           [ahref]
           
          </li>
         </ul>
         <ul class="visual-list">
          <li>
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="fixed-bnr02">
    <span class="blind">
     배너
    </span>
    <div>
     <div class="ads-fixed01">
     </div>
    </div>
   </div>
   <div class="fixed-bnr03">
    <span class="blind">
     배너
    </span>
    <div>
    </div>
   </div>
   <div id="content">
    <div class="header-content contents-box">
     <div class="newsflash-wrap">
      <div class="emergency" id="emergency">
      </div>
      <div class="newsflash" id="newsFlash">
       <p class="blind">
        [실시간뉴스]
       </p>
       <div class="update">
        <strong>
         최종업데이트
        </strong>
        <span>
         YYYY-mm-dd hh:mm:ss
        </span>
       </div>
       <ul>
        <li>
        </li>
       </ul>
       <span class="newsflash-btn1">
       </span>
       <span class="newsflash-btn2">
       </span>
      </div>
     </div>
     <form action="e" class="search-wrap" data-stat-code="search" data-stat-section="">
      <fieldset>
       <span class="blind">
        검색
       </span>
       <label class="blind" for="search">
        검색어 입력
       </label>
       <span class="srchbar">
       </span>
      </fieldset>
     </form>
    </div>
    <div class="today-news-wrap" id="todayJuyo">
     <div class="today-news">
      <span class="today-sl-btn">
       <button class="today-prev">
        이전 슬라이드
       </button>
       <button class="today-next">
        다음 슬라이드
       </button>
      </span>
      <ul class="list">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703163751004?section=society/welfare-labor">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           경영계, 내년 최저임금 4.2%삭감안 제출…노동계 "인면수심"
          </p>
         </div>
        </a>
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703118452001?section=politics/president">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           "트럼프 &amp;apos선 넘어가도 되나&amp;apos…文대통령 &amp;apos손잡고 넘어가면 된다&amp;apos"
          </p>
         </div>
        </a>
       </li>
       <li>
        [ahref]
         [area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][area1][mkey1][area1][keywordx][area1][keywordx][pkeyx][linkx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703163100004?section=society/environment">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           오늘 서울·경기·강원 폭염주의보…낮 최고 34도
          </p>
         </div>
        </a>
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703108551065?section=society/accident">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           5일간 방치해 숨진 생후 7개월 딸…어린 부모에 살인죄 적용
          </p>
         </div>
        </a>
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190702153851003?section=economy/economy">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           하반기 전세금 떼일 위험 없앤다…보증특례 전국 확대
          </p>
         </div>
        </a>
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703178900063?section=economy/all">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           청양군 수돗물서 한때 우라늄 검출…기준치 최대 3배
          </p>
         </div>
        </a>
       </li>
      </ul>
     </div>
     <div class="in">
     </div>
    </div>
    <div class="contents">
     <div class="contents01 scroll-article-zone01">
      <div class="scroll-start01">
       <div class="scroll-in01">
        <div class="contents-box view-wrap">
         <div class="sta-wrap02" data-stat-code="lnb_news" data-stat-section="">
          <span class="tit">
           [ahref]
           
          </span>
         </div>
         <div class="article-wrap" id="articleWrap">
          <h1 class="tit-article">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h1>
          <div class="article-sns-md sns-md04">
           <div class="share-info">
            <span class="tt">
             송고시간 |
             <em>
              2017-05-17 07:00
             </em>
            </span>
            <div class="sns-share01">
             <button class="fb" data-stat-code="share_fb" data-stat-section="" onclick="javascript:SNS.fbShare();" type="button">
              <span>
               페이스북
              </span>
             </button>
             <button class="tw" data-stat-code="share_tw" data-stat-section="" onclick="javascript:SNS.twit();" type="button">
              <span>
               트위터
              </span>
             </button>
             <button class="kks" data-stat-code="share_kks" data-stat-section="" onclick="javascript:SNS.kakaostory();" type="button">
              카카오스토리[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][linkx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][keywordx][linkx][area1][mkey1]
             </button>
             <div class="more-wrap">
              <button class="more" type="button">
               <span>
                더보기
               </span>
              </button>
              <div class="more-list">
               <button class="fbm" data-stat-code="share_fbm" data-stat-section="" onclick="javascript:SNS.fmShare();" type="button">
                <span>
                 페이스북메신저
                </span>
               </button>
               <button class="band" data-stat-code="share_band" data-stat-section="" onclick="javascript:SNS.band();" type="button">
                <span>
                 밴드
                </span>
               </button>
               <button class="blog" data-stat-code="share_blog" data-stat-section="" onclick="javascript:SNS.blog();" type="button">
                <span>
                 블로그
                </span>
               </button>
               <button class="pin" data-stat-code="share_pin" data-stat-section="" onclick="javascript:SNS.pinShare();" type="button">
                <span>
                 핀터레스트
                </span>
               </button>
              </div>
             </div>
            </div>
            <ul class="link-btn-md">
             <li class="btn_print">
              [linkx]
              
             </li>
             <li class="btn_zoom_in">
              [linkx]
              
             </li>
             <li class="btn_zoom_out">
              <a data-stat-code="btn_zoom_out" data-stat-section="" href="#">
               축소
              </a>
             </li>
            </ul>
           </div>
           <div class="link-info">
            <ul class="link-site">
            </ul>
           </div>
          </div>
          <div class="article">
           <div class="stit">
            <strong>
             <b>
              인공위성 태양전지판 등 신축성 필요한 공산품에 응용 기대
             </b>
            </strong>
           </div>
           <p>
            (서울=연합뉴스) 이해영 기자 = 일본 연구팀이 무당벌레가 날 때 사용하는 '뒷날개'라고 불리는 얇은 날개가 딱딱한 날개 밑에서 접히고 펴지는 모습을 관찰하는 데 처음으로 성공했다.
           </p>
           <p>
            연구팀은 이번 성과가 인공위성의 태양전지판이나 안테나, 의료용 기기, 접는 우산 등 개·폐에 신축성이 요구되는 공산품 생산에 응용이 가능할 것으로 기대하고 있다.
           </p>
           <p>
            NHK와 교도(共同)통신 등에 따르면 도쿄(東京)대학 생산기술연구소의 사이토 가즈야 교수(생물모방공학) 연구팀은 인공 투명 수지로 만든 딱지날개를 살아있는 칠성무당벌레에게 이식하는 방법으로 뒷날개가 접히고 펴지는 구조를 관찰하는 데 성공했다는 논문을 16일자 미국 국립과학원회보(PNAS)온라인판에 발표했다.
           </p>
           <div class="banner-0-wrap">
            <div class="ads-article01">
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
              무당벌레의 뒷날개 모습[NHK 캡처]
             </strong>
            </div>
           </div>
           <p>
            뒷날개가 접히고 펴지는 모습은 딱지날개라고 불리는 불투명하고 딱딱한 날개 밑에서 이뤄지기 때문에 자연상태에서는 관찰이 불가능하다.
           </p>
           <p>
            연구팀은 투명한 인공 수지로 만든 딱지날개를 살아있는 칠성무당벌레에게 이식하는 방법으로 이 문제를 해결했다. 안을 들여다볼 수 있게 해 딱지날개 밑에서 뒷날개가 접히고 펴지는 모습을 비디오로 촬영했다.
           </p>
           <p>
            관찰 결과 칠성무당벌레는 딱지날개와 배 부분을 움직여 날 때 사용하는 뒷날개를 몸 형태에 맞춰 크게 2곳을 접어 크기를 3분의 1로 줄이는 것으로 밝혀졌다. 미세한 구조를 살펴볼 수 있는 "마이크로 CT스캐너"를 이용해 뒷날개의 구조를 조사했더니 날개 가장자리에 2개의 테이프 모양의 용수철 같은 구조가 있는 것으로 나타났다. 이 구조물이 한꺼번에 펴지면서 날개가 원활하게 펴지는 것으로 밝혀졌다.
           </p>
           <p>
            곤충의 날개는 구조가 단순한데도 작게 접힌 상태에서 한순간에 크게 펼쳐진다. 사이토 교수는 "무당벌레가 날개를 접는 방식은 비교적 단순하지만 충분한 강도를 갖추고 있다"면서 "복잡한 부품을 조합하지 않더라도 특징이 비슷한 소재를 찾아내면 인공위성의 태량전지판이나 안테나, 의료용 기기 등에 응용할 수 있을 것"이라고 말했다.
           </p>
           <p>
            lhy5018@yna.co.kr
            <br/>
           </p>
           <p class="adrs">
            <span class="cprgt">
             <저작권자(c) 연합뉴스, 무단 전재-재배포 금지>
            </span>
            <span class="pblsh">
             2017/05/17 07:00 송고
            </span>
           </p>
          </div>
         </div>
         <div class="view-ad-wrap">
          <span class="blind">
           광고
          </span>
          <ul id="ad2235_1548979385783">
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text01" scrolling="no" src="https://www.kodcad.kr/ad/43/d27b94fe14563f6097725a5dce7e632c.html" title="엠엔에이치마케팅 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text04" scrolling="no" src="https://adv.imadrep.co.kr/3588_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text05" scrolling="no" src="https://adv.imadrep.co.kr/3554_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4136_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4137_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
          </ul>
         </div>
         <div class="ad-ifm01">
          <iframe frameborder="0" height="180" name="ifm-ad-joyninfo01" scrolling="no" src="//m.joyninfo.com/yna/yna_w1.asp" title="조인&amp;amp;인포 텍스트 광고" width="586">
          </iframe>
         </div>
         <div class="comment-wrap">
          <span class="blind">
           댓글쓰기
          </span>
          <div data-id="yonhapnews" data-uid="NTYvNzAxLzYz" id="lv-container">
          </div>
         </div>
         <div class="banner-box09">
          <div class="con">
           <div id="div-gpt-ad-1536740010408-0" style="height:250px; width:300px;">
           </div>
           <div id="div-gpt-ad-1536740054859-0" style="height:250px; width:300px;">
           </div>
          </div>
         </div>
         <div class="floating-banner01">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
        <div class="contents-box view-wrap03">
         <iframe frameborder="0" height="168" name="ifm-ad-joyninfo02" scrolling="no" src="//m.joyninfo.com/yna/yna_w2.asp" title="조인&amp;amp인포 썸네일형 광고" width="586">
         </iframe>
         <div id="_popIn_recommend">
         </div>
        </div>
        <div class="contents-box view-wrap02">
         <div class="list-style05">
          <h6 class="tit-category" data-stat-code="box_view_visual_tit" data-stat-section="">
           비주얼뉴스
          </h6>
          <ul class="photomovie2">
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [linkx]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             <a data-stat-code="box_view_gallery" data-stat-section="" href="/view/IPT20190703000007365?section=news">
              <span class="img-con img-cover">
              </span>
              <span class="tit-con">
               <strong class="tit">
                ′학교 급식 대란′…학교비정규직 노조 총파업
               </strong>
              </span>
             </a>
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             <a data-stat-code="box_view_photomovie" data-stat-section="" href="/view/MYH20190702012000797?section=video/society">
              <span class="img-con img-cover">
              </span>
              <span class="tit-con">
               <strong class="tit">
                [포토무비] 여성들은 불안해…알아두면 좋을 여성 안심 서비스
               </strong>
              </span>
             </a>
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             <a data-stat-code="box_view_video" data-stat-section="" href="/view/MYH20190703014800038?section=video/society">
              <span class="img-con img-cover">
              </span>
              <span class="tit-con">
               <strong class="tit">
                [영상구성] 학교 비정규직 총파업
               </strong>
              </span>
             </a>
            </div>
           </li>
          </ul>
         </div>
         <div class="floating-banner02">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="contents02 scroll-article-zone02">
      <div class="scroll-start02">
       <div class="scroll-in02">
        <div class="contents-box aside-top-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-topright01">
          </li>
         </ul>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe allowtransparency="yes" border="0" frameborder="no" height="26" id="popin_iframe_ad" marginheight="0" marginwidth="0" scrolling="no" src="https://api.popin.cc/iframe/code.html?id=yna_right_text&amp;w=290px&amp;h=26px&amp;containerId=_popIn_recommend_text_iframe&amp;media=www.yna.co.kr_text" width="290">
         </iframe>
         <iframe allowtransparency="true" frameborder="0" height="235" marginheight="0" marginwidth="0" name="ifm-ad-imad-text01" scrolling="no" src="//adv.imadrep.co.kr/2161_01.html" title="아이엠애드 광고(텍스트8)" width="290">
         </iframe>
        </div>
        <iframe class="ifm-hot-news" frameborder="0" height="370" name="ifm-hot-news" scrolling="no" src="//www.yna.co.kr/program/hot-news" title="핫뉴스 프레임" width="340">
        </iframe>
        <iframe class="ifm-ad-bithumb" frameborder="0" height="253" name="ifm-ad-bithumb" scrolling="no" src="/program/bithumb" title="빗썸배너광고" width="340">
        </iframe>
        <div class="contents-box aside-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-right01">
           [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]<li>[pkeyx]</li>
          </li>
          <li class="ads-right02">
          </li>
          <li class="ads-right03">
          </li>
          <li class="ads-right04">
          </li>
          <li class="ads-right05">
          </li>
          <li class="ads-right06">
          </li>
          <li class="ads-right07">
          </li>
          <li class="ads-right08">
          </li>
          <li class="ads-right09">
          </li>
         </ul>
        </div>
        <div class="contents-box list-style01 popularnews-zone">
         <h5 class="tit-type01" data-stat-code="box_popularnews_tit" data-stat-section="">
          [linkx]
          
         </h5>
         <h5 class="tit-type03" data-stat-code="box_popularnews_tit" data-stat-section="">
          [linkx]
          
         </h5>
         <div class="tab-wrap01 tab-setting" data-stat-code="box_popularnews_tab" data-stat-section="">
          <ul>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="s">
             정치
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="y">
             사회
            </a>
           </li>
           <li>
            <a href="l">
             전국
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <div class="list-wrap" id="popularTotal">
          <h6 class="hidden-obj">
           종합
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularPolitics">
          <h6 class="hidden-obj">
           정치
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEconomy">
          <h6 class="hidden-obj">
           산업/경제
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSociety">
          <h6 class="hidden-obj">
           사회
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularLocal">
          <h6 class="hidden-obj">
           전국
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSports">
          <h6 class="hidden-obj">
           스포츠
          </h6>
          <ul>
          </ul>
         </div>
         <[area1][keywordx]>
         </[area1][keywordx]>
         <div class="list-wrap" id="popularWorld">
          <h6 class="hidden-obj">
           세계
          </h6>
          <ul>
          </ul>
         </div>
         [ahref]
         
        </div>
        <div class="contents-box ad-wrap02">
         <iframe allowtransparency="true" frameborder="0" height="96" name="ifm-ad-imad-text02" scrolling="no" src="//adv.imadrep.co.kr/2162_01.html" title="아이엠애드 광고(텍스트4)" width="290">
         </iframe>
        </div>
        <div class="contents-box ad-wrap01">
        </div>
        <iframe class="iframe-todaynews" frameborder="0" name="ifm-todaynews" scrolling="no" src="//www.yna.co.kr/program/major-news" title="오늘의 주요 뉴스">
        </iframe>
        <div class="contents-box list-style01 yspecial-wrap">
         <div class="iframe-yspecial" name="ifm-yspecial">
          <div class="y-special-zone">
           <h5 class="tit-category">
           </h5>
           <h5 class="tit-type01" data-stat-code="y_special_tit" data-stat-section="">
            <a href="/video/y-special" target="_top">
             Y스페셜
            </a>
           </h5>
           <ul class="list" data-stat-code="y_special" data-stat-section="">
            <li>
             <a data-stat-code="box_y_special" data-stat-section="" href="/view/MYH20190529011400508?section=video/y-special">
              <div class="thumb">
              </div>
              <span class="con">
               <strong class="tit">
                서울에서 걷는 재미에 빠지다…서울트래킹 5곳
               </strong>
               <span class="txt">
                경기도 남한산성, 제주도...
               </span>
              </span>
             </a>
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe border="0" frameborder="0" height="156" leftmargin="0" name="ifm-ad-sw-text02" scrolling="no" src="//ad.sunnyworks.co.kr/data/SW125152.html" title="써니웍스 광고(텍스트 6줄)" topmargin="0" width="290">
         </iframe>
        </div>
        <div class="contents-box goolge-banner">
         <span class="blind">
          <h2>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h2>
          광고
         </span>
         <div id="ad_visual" title="인라이플 광고">
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe frameborder="0" height="192" name="ifm-ad-imad-text03" scrolling="no" src="//adv.imadrep.co.kr/2837_01.html" title="아이엠애드 광고(텍스트7)" width="100%">
         </iframe>
        </div>
        <div class="contents-box list-style02 journey-zone">
         <h5 class="tit-type03">
          <span class="arr">
           여행/축제
          </span>
         </h5>
         <ul class="area">
          <li>
           <div class="box-flex">
            [ahref]
            
           </div>
          </li>
          <li>
           <div class="box-flex">
            [linkx]
            
           </div>
          </li>
         </ul>
         [linkx]
         
        </div>
        <div class="contents-box list-style02 banner-box06">
         <span class="ad-tag">
         </span>
         <div class="con">
          <iframe allowtransparency="false" frameborder="0" height="224" marginheight="0" marginwidth="0" name="ifm-ad-imad-text04" scrolling="no" src="//adv.imadrep.co.kr/1247_01.html" title="아이엠애드 광고" width="290">
          </iframe>
         </div>
        </div>
        <div class="hng-zone" id="hngZone">
         <h5 class="tit02">
          <a data-stat-code="box_hng_tit" data-stat-section="" href="r" rel="nofollow" target="_blank" title="새창">
           뭐하고 놀까?
           <span class="hng">
            #흥
           </span>
          </a>
         </h5>
         <ul class="list">
          <li>
           <a data-stat-code="box_hng" data-stat-section="" href="e" rel="nofollow" target="_blank" title="새창">
            <div class="img-con">
             <span class="over">
             </span>
            </div>
            <div class="news-con">
             <h4 class="tit">
             </h4>
            </div>
           </a>
          </li>
          <li>
           <a data-stat-code="box_hng" data-stat-section="" href="e" rel="nofollow" target="_blank" title="새창">
            <div class="img-con">
             <span class="over">
             </span>
            </div>
            <div class="news-con">
             <h4 class="tit">
             </h4>
            </div>
           </a>
          </li>
         </ul>
         <a class="more" data-stat-code="box_hng_btn_more" data-stat-section="" href="r" rel="nofollow" target="_blank" title="(새창) #흥 더보기">
          더보기
         </a>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <span class="btn-top" id="btnScrollTop">
    <button type="button">
     맨위로
    </button>
   </span>
   <div id="footer">
    <div class="footer-wrap01 service-wrap">
     <span class="blind">
      전체메뉴
     </span>
     <div class="footer-menu01">
      <div class="menu-zone01">
       <div class="link-con">
        <dl class="list01">
         <dt class="tit">
          <a href="/index">
           뉴스 홈
          </a>
         </dt>
         <dd>
          <a href="/news">
           최신기사
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="/nk/index">
           북한
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <a href="/it/index">
           IT/과학
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
        </dl>
       </div>
      </div>
      <div class="menu-zone02">
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           <a href="/people/personnel">
            인사
           </a>
          </dd>
          <dd>
           <a href="/people/obituary-notice">
            부고
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
            [linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/visual/index">
            비주얼뉴스
           </a>
          </dt>
          <dd>
           <a href="/photo/index">
            포토
           </a>
          </dd>
          <dd>
           <a href="/video/index">
            영상
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/graphic/index">
            그래픽
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit space01">
           <a href="/issue/index">
            이슈돋보기
           </a>
          </dt>
          <dd class="br">
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
         <div class="list01">
          <p class="tit">
           <a href="/weather/index">
            날씨
           </a>
          </p>
         </div>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           테마별뉴스
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/theme/headlines">
            주요뉴스
           </a>
          </dd>
          <dd>
           <a href="/theme/hotnews">
            핫뉴스
           </a>
          </dd>
          <dd>
           <a href="/theme/mostviewed/index">
            많이 본 뉴스
           </a>
          </dd>
          <dd>
           <a href="/theme/breaknews">
            긴급뉴스
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/mobile-service/web">
            모바일 뉴스
           </a>
          </dt>
          <dd>
           <a href="/mobile-service/web">
            모바일웹
           </a>
          </dd>
          <dd>
           <a href="/mobile-service/app">
            모바일앱
           </a>
          </dd>
         </dl>
         <dl class="list01">
          <dt class="hidden-obj">
           비주얼뉴스
          </dt>
          <dd>
           <a href="/tongtongtv/index">
            통통TV
           </a>
          </dd>
          <dd>
           [linkx][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][ahref][area1][mkey1][area1][mkey1][linkx][area1][mkey1][linkx]
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            #흥
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           외국어
          </dt>
          <dd>
           <a href="r">
            English
           </a>
          </dd>
          <dd>
           <a href="r">
            中文
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="r">
            عربي
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
       </div>
       <div class="box">
        <div class="link-con">
         [area1][keywordx][area1][mkey1]<li>[ahref]</li>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           출판물
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            월간 마이더스
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/advertisement/ktx">
            광고
           </a>
          </dt>
          <dd>
           <a href="/advertisement/ktx">
            KTX열차
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/YNA/ContentsSales/ContentsData/YISW_PeopleHome.aspx" rel="nofollow" target="_blank" title="새창">
            인물정보
           </a>
          </dd>
          <dd>
           <a href="/YNA/ContentsSales/ContentsData/YISW_MpicHome.aspx" rel="nofollow" target="_blank" title="새창">
            영상
           </a>
          </dd>
          <dd>
           <a href="/YNA/ContentsSales/ContentsData/YISW_GraphicHome.aspx" rel="nofollow" target="_blank" title="새창">
            그래픽
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           관련사이트
          </dt>
          <dd>
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li>[area1][keywordx]<li>[pkeyx]</li>
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            채용
           </a>
          </dd>
          <dd>
           IR 클럽[ahref][linkx][pkeyx]
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list02">
          <dt class="tit">
           유튜브
          </dt>
          <dd class="yna">
           [linkx]
           
          </dd>
          <dd class="tong">
           [linkx]
           
          </dd>
          <dd class="kn">
           <a href="/channel/UCR-L8oZkHzgDh1ahJhH2WDQ" rel="nofollow" target="_blank" title="새창">
            Korea Now
           </a>
          </dd>
          <dd class="yttv">
           [ahref]
           
          </dd>
         </dl>
        </div>
       </div>
      </div>
     </div>
     <div class="footer-menu02">
      <a href="/policy/partner">
       계약사/제휴문의
      </a>
     </div>
    </div>
    <ul class="footer-link" data-stat-code="footer" data-stat-section="">
     <li>
      <a href="/aboutus/index">
       회사소개
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/user/list" rel="nofollow">
       수용자권익위원회
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/policy/complaint">
       고충처리
      </a>
     </li>
     <li>
      <a href="/policy/terms/index">
       이용약관
      </a>
     </li>
     <li>
      [linkx]
       <li>[linkx]</li><li>[area1][keywordx]</li>[ahref][area1][mkey1]<li>[area1][keywordx]</li>
      
     </li>
     <li>
      <a href="/reader/list" rel="nofollow">
       독자게시판
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [area1][mkey1][pkeyx][ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
     </li>
    </ul>
    <div class="addr-info">
     <address>
      연합뉴스 서울시 종로구 율곡로2길 25 | 등록번호 문화, 나00009 | 등록일자 1980.12.29 | 발행일자 1980.12.29 | Tel. 02-398-3114
     </address>
    </div>
    <ul class="copy">
     <li>
      <strong>
       (C) Yonhapnews
      </strong>
     </li>
     <li class="copy-in">
      [대표이사] 조성부
     </li>
     <li class="copy-in">
      [편집인] 김경석
     </li>
    </ul>
   </div>
  </div>
  <div class="article-ad-box">
   <div id="div-gpt-ad-1554859786318-0" style="height:250px; width:300px;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0250
  </b>
 </body>
</html>|<---