--->|<!DOCTYPE html>
<html class="pc" lang="en">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta charset="utf-8" class="next-head"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta charset="utf-8"/>
  <meta content="initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width, height=device-height, user-scalable=no" name="viewport"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="/static/og-image.png" name="og:image"/>
  <meta content="apartmentary" name="author"/>
 </head>
 <body>
  <div id="__next">
   <div>
    <div class="header">
     <div class="fs-20 text-center" style="background-color:#949b68;color:#ffffff">
      <div style="height:46px;line-height:46px">
       아파트멘터리가 만든 정직하고 지속 가능한 6성급 호텔타월
       [ahref]
       
      </div>
     </div>
     <div class="container">
      <header class="header-content">
       <button class="hamburger-btn d-lg-none" type="button">
        <span class="hamburger-btn-bar">
        </span>
        <span class="hamburger-btn-bar">
        </span>
        <span class="hamburger-btn-bar">
        </span>
        <span class="hamburger-btn-bar">
        </span>
       </button>
       [ahref]
       
       <a class="header-search d-lg-none" href="/search">
        [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][keywordx][ahref][pkeyx][linkx][ahref][linkx][pkeyx][area1][keywordx][ahref][pkeyx][area1][keywordx][linkx][ahref][ahref][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][area1][keywordx]
       </a>
       <div class="d-none d-lg-block">
        [ahref]
        
        [ahref]
        
        [linkx]
        
        [linkx]
        
       </div>
      </header>
     </div>
    </div>
    <div class="sidebar">
     <div class="text-left mx-32 mt-45">
      <button class="sidebar-close btn btn-link p-0" type="button">
      </button>
     </div>
     <div class="sidebar-content">
      <div class="sidebar-logo mt-56">
      </div>
      <div class="sidebar-toggler text-center">
       <label class="sidebar-h1" for="our-service">
        OUR SERVICE
       </label>
       <div class="collapse">
        <ul class="sidebar-collapse mb-15">
         <hr class="sidebar-hr2"/>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      [linkx]
      
      <hr class="sidebar-hr1"/>
      <div class="sidebar-toggler text-center">
       <label class="sidebar-h2" for="about-checkbox">
        ABOUT
       </label>
       <div class="collapse">
        [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[area1][mkey1]</li><li>[linkx]</li>
       </div>
      </div>
      <div class="sidebar-toggler text-center mt-55">
       <label class="sidebar-h2" for="support-checkbox">
        SUPPORT[pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
       </label>
       <div class="collapse">
        <ul class="sidebar-collapse mb-15">
         <hr class="sidebar-hr2"/>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="sidebar-toggler text-center mt-55">
       <label class="sidebar-h2" for="sns-checkbox">
        SNS
       </label>
       <div class="collapse">
        <ul class="sidebar-collapse mb-15">
         <hr class="sidebar-hr2"/>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [area1][mkey1][pkeyx][area1][keywordx][pkeyx][ahref][area1][mkey1][linkx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][ahref][pkeyx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][mkey1][linkx][pkeyx][area1][keywordx][linkx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][pkeyx]
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="px-32 pt-50 pb-40">
      [ahref]
      
     </div>
    </div>
    <div class="fixed-controls fixed-bottom d-flex d-lg-none">
     [linkx]
     
     <div class="fixed-control-hr">
     </div>
     [ahref]
     
     [ahref]
     
    </div>
    <div>
     <div class="jsx-2739259280 position-relative">
      <div class="jsx-1593528614 position-relative video-wrapper d-none d-lg-inline-block">
       <video autoplay="" class="jsx-1593528614 d-none d-lg-inline-block" loop="" muted="" preload="true">
        <li>[pkeyx]</li>[ahref][linkx][area1][mkey1]<li>[linkx]</li>
       </video>
      </div>
      <div class="jsx-84988773">
      </div>
      <div class="jsx-1096431296 px-32 content">
       <h1 class="jsx-1096431296 mb-lg-35 text-white text-center d-none d-lg-block">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
       <h2 class="jsx-1096431296 text-white text-center d-none d-lg-block">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <p class="d-lg-none font-weight-bold fs-46 fs-lg-18">
        Space Betters Life.
        <br/>
        Experience
        <br/>
        thoughtful and joyful
        <br/>
        moments with us.
       </p>
       <p class="d-none d-lg-block font-weight-bold fs-46 fs-lg-18">
        공간은 삶을 더 아름답게 바꿉니다. 지혜롭고 기쁨을 주는 인테리어를 경험하세요.
       </p>
      </div>
      <div class="jsx-2739259280 d-none d-lg-inline-block text-center icon-mouse">
       <div class="jsx-2739259280 ff-futura-med fs-lg-14 mb-lg-12 text-white">
        Scroll[ahref]<li>[pkeyx]</li><li>[area1][mkey1]</li>
       </div>
      </div>
     </div>
     <section class="jsx-2302252859 ">
      <div class="d-lg-none container">
       <h5 class="ff-sandoll fs-34 font-weight-bold mx-32 mb-35">
        서비스 종류[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][linkx][linkx][linkx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h5>
      </div>
      <div class="d-none d-lg-block container">
       <div class="mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          아파트멘터리
          <br/>
          서비스 소개
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
        </header>
       </div>
      </div>
      <ul class="d-flex">
       <li class="d-inline-block flex-grow-1">
        [linkx]
        
       </li>
       <li class="d-inline-block flex-grow-1">
        [ahref]
        
       </li>
      </ul>
     </section>
     <section>
      <div class="d-lg-none container">
       <h5 class="ff-sandoll fs-34 font-weight-bold mx-32 mb-50">
        포트폴리오
       </h5>
       <div class="pf-list">
        [linkx]
        
        [ahref]
        
        [ahref]
         <li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
        
        [linkx]
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][linkx][area1][keywordx][pkeyx][area1][mkey1][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][area1][mkey1][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][mkey1][pkeyx][ahref]
        
        [linkx]
         <li>[area1][mkey1]</li>[linkx][ahref]
        
        [ahref]
        
       </div>
       [linkx]
       
      </div>
      <div class="d-none d-lg-block container">
       <div class="mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          아파트멘터리
          <br/>
          포트폴리오
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
         [ahref]
         
        </header>
       </div>
       <div class="pf-waterfall">
        <[area1][keywordx]>
        </[area1][keywordx]>
       </div>
      </div>
     </section>
     <section class="jsx-2302252859 d-lg-none">
      <ul class="jsx-657577160">
       <li class="jsx-657577160">
        [ahref]
        
       </li>
      </ul>
     </section>
     <section class="jsx-2302252859 ">
      <div class="container">
       <div class="d-none d-lg-block mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          Our Vision[linkx][area1][keywordx][area1][keywordx][linkx][area1][mkey1][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][mkey1][area1][keywordx][linkx][area1][mkey1][pkeyx][ahref][area1][keywordx][ahref][ahref][pkeyx]
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
         [linkx]
         
        </header>
       </div>
       <div class="jsx-1098130683 d-flex flex-column flex-lg-row align-items-lg-center story-content">
        [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>[linkx]<li>[area1][mkey1]</li>
       </div>
      </div>
     </section>
     <section class="jsx-3383013621 d-none d-lg-block">
      <div class="container">
       <div class="mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          아파트멘터리가 제안하는
          <br/>
          오늘의 즐거움
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
         [linkx]
         
        </header>
       </div>
       <ul class="jsx-3383013621">
       </ul>
      </div>
     </section>
    </div>
    <div>
     <hr class="hr d-none d-lg-block footer"/>
     <div class="container">
      <hr class="hr d-lg-none footer"/>
      <footer>
       <div class="container-fluid">
        <div class="no-gutters row">
         <div class="col-12 col-lg-8">
          <div class="ff-futura-boo container-fluid">
           <div class="no-gutters row">
            <div class="col">
             <ul class="fs-26 fs-xl-16">
              <li class="ff-futura-med mb-48 mb-lg-28">
               <strong>
                About
               </strong>
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
             </ul>
            </div>
            <div class="col">
             <ul class="fs-26 fs-xl-16">
              <li class="ff-futura-med mb-48 mb-lg-28">
               <strong>
                Support
               </strong>
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
                <li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li><li>[area1][keywordx]</li>
               
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
             </ul>
            </div>
            <div class="col">
             <ul class="fs-26 fs-xl-16">
              <li class="ff-futura-med mb-48 mb-lg-28">
               <strong>
                SNS
               </strong>
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
             </ul>
            </div>
           </div>
          </div>
          <hr class="d-lg-none"/>
         </div>
         <div class="col-12 col-lg-4">
          <div class="ff-futura-boo fs-28 container-fluid">
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             CALL
            </div>
            <div class="fs-lg-15 col">
             <a href="4">
              02. 6356. 1224
             </a>
            </div>
           </div>
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             EMAIL
            </div>
            <div class="fs-lg-15 col">
             [ahref]
             
            </div>
           </div>
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             MESSENGER
            </div>
            <div class="fs-lg-13 col">
             kakaotalk
             [linkx]
              [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
             
            </div>
           </div>
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             LOCATION
            </div>
            <div class="ff-sandoll fs-22 fs-lg-13 col">
             4F, Hannam-dong 31-10, Yongsan-gu, Seoul, Republic of Korea
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr/>
        <div class="no-gutters row">
         <div class="col">
          <section class="ff-sandoll">
           <ul class="footer-terms mb-55">
            <li>
             <li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]<li>[linkx]</li><li>[linkx]</li>
            </li>
            <li class="hr">
            </li>
            <li>
             [ahref]
             
            </li>
            <li class="hr">
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
           <section class="fs-18 mb-40">
            <div class="d-none d-lg-block">
             · Company Name: Apartmentary Co. · CEO: Yoon So-yeon · Business License: 723.87.00195 · Mail-order License: Issue No. 2016. Seoul Mapo 0923 · Chief Privacy Officer: Ha Tae-woong(ha@apartmentary.com )
             <br/>
             · Address: 4F, Hannam-dong 31-10, Yongsan-gu, Seoul, Republic of Korea · TEL: 02. 6356. 1224
            </div>
            <div class="d-lg-none">
             · Company Name: Apartmentary Co. · CEO: Yoon So-yeon · Business License: 723.87.00195
             <br/>
             · Mail-order License: Issue No. 2016. Seoul Mapo 0923
             <br/>
             · Chief Privacy Officer: Ha Tae-woong(ha@apartmentary.com )
             <br/>
             · Address: 4F, Hannam-dong 31-10, Yongsan-gu, Seoul, Republic of Korea  · TEL: 02. 6356. 1224
            </div>
           </section>
           <span class="ff-futura-boo fs-22">
            apart:mentary © 2015-2018 All Rights Reserved.
           </span>
          </section>
         </div>
        </div>
       </div>
      </footer>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0020
  </b>
 </body>
</html>|<---