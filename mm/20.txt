--->|<!DOCTYPE HTML>
<html lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
 </head>
 <body>
  <table border="0" cellpadding="0" cellspacing="0" width="100%">
   [content4][content5][content6][content7][content8][linkx][content3[linkx]content4[linkx]content5][content14][content15][content16][linkx][content17][content18]
  </table>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0021
  </b>
 </body>
</html>
<div id="HeadMenu">
 <div id="Default_Warp">
  <div id="MenuBar">
   <ul class="mega-menu" id="mega-menu">
    <li class="megaline nobr">
     [linkx]
     
     <ul>
      <li class="sub nobr">
       [ahref]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       <a href="/news/articleList.html?sc_sub_section_code=S2N8&amp;view_type=sm">
        업체탐방
       </a>
      </li>
      <li class="sub">
       <a href="/news/articleList.html?sc_sub_section_code=S2N47&amp;view_type=sm">
        동호회.지부 탐방
       </a>
      </li>
     </ul>
    </li>
    <li class="megaline ">
     [linkx]
     
     <ul>
     </ul>
    </li>
    <li class="megaline ">
     [ahref]
     
     <ul>
     </ul>
    </li>
    <li class="megaline nobr">
     [ahref]
     
     <ul>
      <li class="sub nobr">
       <a href="/news/articleList.html?sc_sub_section_code=S2N9&amp;view_type=sm">
        사설
       </a>
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       <a href="/news/articleList.html?sc_sub_section_code=S2N11&amp;view_type=sm">
        수요광장
       </a>
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
     </ul>
    </li>
    <li class="megaline">
     <a href="/news/articleList.html?sc_section_code=S1N7&amp;view_type=sm">
      <strong>
       테마여행
      </strong>
     </a>
     <ul>
     </ul>
    </li>
    <li class="megaline">
     [ahref]
     
     <ul>
     </ul>
    </li>
    <li class="megaline">
     <a href="/news/articleList.html?sc_section_code=S1N4&amp;view_type=sm">
      <strong>
       기고
      </strong>
     </a>
     <ul>
      <li class="sub nobr">
       <a href="/news/articleList.html?sc_sub_section_code=S2N50&amp;view_type=sm">
        최승관 변호사의 쉽게 푼 노동법
       </a>
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
     </ul>
    </li>
    <li class="megaline">
     [linkx]
     
     <ul>
     </ul>
    </li>
    <li class="megaline">
     [linkx]
     
     <ul>
      <li class="sub nobr">
       [linkx]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [linkx]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
      <li class="sub">
       [ahref]
       
      </li>
     </ul>
    </li>
   </ul>
   <div id="SearchForm">
    <fieldset>
     <form action="/news/articleList.html" id="topSearchForm" method="post" name="topSearchForm">
      <button onclick="SearchCheck();setSearchBox(1);" title="기사검색">
       기사검색
      </button>
      [linkx]
      
     </form>
    </fieldset>
   </div>
   <div id="AndBtn">
    <ul>
     <li class="nobr">
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
   </div>
  </div>
 </div>
</div>
<div id="ND_Warp">
 <table align="center" border="0" cellpadding="0" cellspacing="0" width="960">
  <tr>
   <td>
    <table border="0" cellpadding="0" cellspacing="0" width="960">
     <tr>
      <td>
      </td>
     </tr>
    </table>
   </td>
  </tr>
 </table>
 <table align="center" border="0" cellpadding="0" cellspacing="0" style="background:url('/image2006/default/new/Design_211_Background.gif');" width="960">
  <tr>
   <td valign="top" width="690">
    <table bgcolor="#ffffff" border="0" cellpadding="0" cellspacing="0" width="690">
     <tr>
      <td>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <div class="mHeight_B">
           여백
          </div>
         </td>
        </tr>
       </table>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td valign="top">
             <table border="0" cellpadding="0" cellspacing="0" width="100%">
              <tr>
               <td class="c_title_t">
                [ahref]
                
               </td>
              </tr>
              <tr>
               <td class="c_sub_title_t">
                [ahref]
                
               </td>
              </tr>
              <tr>
               <td class="c_body_t">
                <a href="/news/articleView.html?idxno=42479">
                 원인은 20년 이상 노후관로 부식지역난방사업자 37개 등 관리주체 제각각“각종 배관 집중된 아파트, 별도 대책 필요” 지난 2월 25일 서울 양천구 일대 도로 두 곳에서 시간차를 두고 열수송관이 파열되는 사고가 발생했다. 특히 한곳은 아파트 단지 앞 도로에 매설된 열수송관으로, 긴급히 임시배관을 설치해 난방 공급 중단은 피했지만 5,000여 가구 아파트 입
                </a>
               </td>
              </tr>
             </table>
            </td>
            <td class="c_rphoto_ts" valign="top" width="1">
             <a href="/news/articleView.html?idxno=42479">
             </a>
            </td>
           </tr>
          </table>
          <div class="malLine_Dot">
          </div>
         </td>
        </tr>
       </table>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td class="c_title_t">
             [ahref]
             
            </td>
           </tr>
           <tr>
            <td class="c_sub_title_t">
             [ahref]
             
            </td>
           </tr>
           <tr>
            <td>
             <table border="0" cellpadding="0" cellspacing="0" width="100%">
              <tr>
               <td class="c_body_t" valign="top">
                [linkx]
                
               </td>
               <td class="c_rphoto_tup" valign="top" width="1">
                [linkx]
                
               </td>
              </tr>
             </table>
            </td>
           </tr>
          </table>
          <div class="malLine_Dot">
          </div>
         </td>
        </tr>
       </table>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td valign="top">
             <table border="0" cellpadding="0" cellspacing="0" width="100%">
              <tr>
               <td class="c_title_t">
                [ahref]
                
               </td>
              </tr>
              <tr>
               <td class="c_body_t">
                [linkx]
                
               </td>
              </tr>
             </table>
            </td>
           </tr>
          </table>
          <div class="malLine_Dot">
          </div>
         </td>
        </tr>
       </table>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <div class="mHeight_B">
           여백
          </div>
         </td>
        </tr>
       </table>
       <div class="BoxDefault_1" style="width:690px;">
        <dl>
         <dt>
         </dt>
         <dd>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td style="padding-right:8px;" valign="top" width="50%">
            </td>
            <td style="padding-left:8px;" valign="top" width="50%">
            </td>
           </tr>
          </table>
         </dd>
        </dl>
       </div>
       <div class="BoxDefault_1" style="width:690px; padding-right:15px;">
        <dl>
         <dt>
         </dt>
         <dd>
          <div class="ArticleNew FtNewLarg ImgWidth_transC mostPop" style="margin-top:0px;">
           <div class="ImgWidth_transC ImgHeight_typeM" style="display:block; overflow:hidden; border:1px solid #ddd; margin-bottom:10px;">
            [linkx]
            
           </div>
           <strong style="display:block; font-family:Dotum; font-size:14px; margin-bottom:7px;">
            [linkx]
            
           </strong>
           <span>
            [linkx]
            
           </span>
          </div>
          <div class="ArticleNew FtNewLarg ImgWidth_transC mostPop" style="margin-left:14px; margin-top:0px;">
           <div class="ImgWidth_transC ImgHeight_typeM" style="display:block; overflow:hidden; border:1px solid #ddd; margin-bottom:10px;">
            [ahref]
            
           </div>
           <strong style="display:block; font-family:Dotum; font-size:14px; margin-bottom:7px;">
            <a class="FtColor_typeA OnLoad" href="/news/articleView.html?idxno=42509" target="_top">
             “혼합주택 갈등 해소, 공동대표회의 구성이 첫걸음”
            </a>
           </strong>
           <span>
            [ahref]
            
           </span>
          </div>
          <div class="ArticleNew FtNewLarg ImgWidth_transC mostPop" style="margin-left:14px; margin-top:0px;">
           <div class="ImgWidth_transC ImgHeight_typeM" style="display:block; overflow:hidden; border:1px solid #ddd; margin-bottom:10px;">
            <a href="/news/articleView.html?idxno=42485" target="_top">
            </a>
           </div>
           <strong style="display:block; font-family:Dotum; font-size:14px; margin-bottom:7px;">
            [linkx]
            
           </strong>
           <span>
            [ahref]
            
           </span>
          </div>
         </dd>
        </dl>
       </div>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <dl class="design_211_line">
           <dt>
            왼쪽
           </dt>
           <dd>
            오른쪽
           </dd>
          </dl>
         </td>
        </tr>
       </table>
      </td>
     </tr>
    </table>
    <table border="0" cellpadding="0" cellspacing="0" width="690">
     <tr>
      <td align="left" valign="top" width="410">
       <table border="0" cellpadding="0" cellspacing="0" width="390">
        <tr>
         <td>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_1" style="width:390px;">
           <dl>
            <dt>
            </dt>
            <dd>
             <div class="ArticleNew">
              <h6 class="FtFamNaGot FtSizeNor">
               [ahref]
               
              </h6>
              <h3 style="margin-top:5px;">
               [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              <span style="margin-top:8px;">
               <a class="FtColor_typeC OffLoad" href="/news/articleView.html?idxno=42530" target="_top">
                존폐의 기로에 섰던 주택용 전기요금 누진제가 유지, 7·8월 한시적으로 누진구간이 확대될 전망이다. 민관합동 전기요금 누진제 테스크포스(이하 누진제TF)는 지난 18일 제8차 누진제TF 회의에서 3개 누진제 개편안 중 누진구간을 확대하는 1안을 최종 권고안으로 선정, 산업통상자원부와 한...
               </a>
              </span>
             </div>
             <div class="ArticleNew FtNewLarg">
              <h6 class="FtFamNaGot FtSizeNor">
               [linkx]
               
              </h6>
              <h3 style="margin-top:5px;">
               [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              <span style="margin-top:8px;">
               [linkx]
               
              </span>
             </div>
             <div class="ArticleNew FtNewLarg">
              <h6 class="FtFamNaGot FtSizeNor">
               [ahref]
               
              </h6>
              <h3 style="margin-top:5px;">
               [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              <span style="margin-top:8px;">
               [ahref]
               
              </span>
             </div>
             <div class="ArticleNew FtNewLarg">
              <h6 class="FtFamNaGot FtSizeNor">
               <a class="FtColor_typeA OnLoad" href="/news/articleView.html?idxno=42521" target="_top">
                주차장 맨홀에 발 빠진 입주민
                <br/>
                뚜껑 열려 있었다면 그 책임은 누가?
               </a>
              </h6>
              <span style="margin-top:8px;">
               [linkx]
               
              </span>
             </div>
             <div class="ArticleNew FtNewLarg">
              <h6 class="FtFamNaGot FtSizeNor">
               [ahref]
               
              </h6>
              <h3 style="margin-top:5px;">
               [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              <span style="margin-top:8px;">
               [ahref]
               
              </span>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B mDashed_A mTop_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <table border="0" cellpadding="0" cellspacing="0" style="margin-bottom:5px;" width="390">
              <tr>
               <td height="46" style="background:url(/box/box_news/690_top.gif) no-repeat; padding:2px 10px 0 190px; font-family:돋움; color:#666;">
                [linkx]
                
                |
                <a href="/news/articleList.html?sc_serial_code=SRN14&amp;view_type=sm" target="_top">
                 축제
                </a>
                |
                [linkx]
                
               </td>
              </tr>
             </table>
            </td>
           </tr>
          </table>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_1" style="width:390px;">
           <dl>
            <dt>
             [link]<li>[link]</li><li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
            </dt>
            <dd>
             <div class="ArticleNew ImgWidth_typeG" style="float:left; margin-top:0px;">
              <div class="ImgWidth_typeG" style="margin-bottom:10px;">
               [linkx]
               
              </div>
              <div>
               <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
                [linkx]
                
               </span>
              </div>
             </div>
             <div class="ArticleNew ImgWidth_typeG" style="float:left; margin-left:15px; margin-top:0px;">
              <div class="ImgWidth_typeG" style="margin-bottom:10px;">
               [linkx]
               
              </div>
              <div>
               <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
                [ahref]
                
               </span>
              </div>
             </div>
             <div class="ArticleNew ImgWidth_typeG" style="float:left; margin-left:15px; margin-top:0px;">
              <div class="ImgWidth_typeG" style="margin-bottom:10px;">
               [linkx]
               
              </div>
              <div>
               <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
                [linkx]
                
               </span>
              </div>
             </div>
            </dd>
           </dl>
          </div>
          <div class="BoxDefault_1" style="width:390px;">
           <dl>
            <dt>
            </dt>
            <dd>
             <div class="ArticleNew">
              <ul>
               <li class="ArtLiheiBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
              </ul>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B mDashed_A mTop_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_3" style="width:390px;">
           <dl>
            <dt>
             [ahref]
             
            </dt>
            <dd>
             <div class="ArticleNew ImgWidth_typeG" style="float:left; margin-top:0px;">
              <div class="ImgWidth_typeG" style="margin-bottom:10px;">
               [ahref]
               
              </div>
              <div>
               <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
                <a class="FtColor_typeE OnLoad" href="/news/articleView.html?idxno=42516" target="_top">
                 국내 승강기 70만대 돌파, 세계 8위 보유대국 ‘우뚝’
                </a>
               </span>
              </div>
             </div>
             <div class="ArticleNew ImgWidth_typeG" style="float:left; margin-left:15px; margin-top:0px;">
              <div class="ImgWidth_typeG" style="margin-bottom:10px;">
               [ahref]
               
              </div>
              <div>
               <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
                [linkx]
                
               </span>
              </div>
             </div>
             <div class="ArticleNew ImgWidth_typeG" style="float:left; margin-left:15px; margin-top:0px;">
              <div class="ImgWidth_typeG" style="margin-bottom:10px;">
               [linkx]
               
              </div>
              <div>
               <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
                [ahref]
                
               </span>
              </div>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_1" style="width:390px;">
           <dl>
            <dt>
            </dt>
            <dd>
             <div class="ArticleNew">
              <ul>
               <li class="ArtLiheiBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
              </ul>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B mDashed_A mTop_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_1" style="width:390px;">
           <dl>
            <dt>
            </dt>
            <dd>
             <div class="ArticleNew">
              <ul>
               <li class="ArtLiheiBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
              </ul>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C mSolid_A mTop_C">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_1" style="width:390px;">
           <dl>
            <dt>
            </dt>
            <dd>
             <div class="ArticleNew">
              <ul>
               <li class="ArtLiheiBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
               <li class="ArtLiheiBig LiNewBig">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
               </li>
              </ul>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C mDashed_A mTop_C">
              여백
             </div>
            </td>
           </tr>
          </table>
         </td>
        </tr>
       </table>
      </td>
      <td align="center" valign="top" width="280">
       <table border="0" cellpadding="0" cellspacing="0" width="250">
        <tr>
         <td>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_B">
              여백
             </div>
            </td>
           </tr>
          </table>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="Box-Opinion">
              <strong>
               <font color="#007dc6">
                오피
               </font>
               니언
              </strong>
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_1" style="width:250px; background-color:#fff; border-left:1px solid #dfdfdf; border-right:1px solid #dfdfdf; padding:0 10px;">
           <dl>
            <dt style="background: #f0f0f0; font-size:11px;padding: 6px; height: 25px; margin-bottom: 10px;">
             [ahref]
             
            </dt>
            <dd style="padding-bottom:10px;">
             <div class="ArticleNew">
              <h4 style="padding:0; margin-bottom:5px;">
               [linkx]
               
              </h4>
              <span>
               [linkx]
               
              </span>
             </div>
            </dd>
           </dl>
          </div>
          <div class="BoxDefault_1" style="width:250px; background-color:#fff; border-left:1px solid #dfdfdf; border-right:1px solid #dfdfdf; padding:0 10px;">
           <dl>
            <dt style="background: #f0f0f0; font-size:11px;padding: 6px; height: 25px; margin-bottom: 10px;">
             [linkx]
             
            </dt>
            <dd style="padding-bottom:10px;">
             <div class="ArticleNew">
              <h4 style="padding:0; margin-bottom:5px;">
               <a class="FtColor_typeA OnLoad" href="/news/articleView.html?idxno=42490" target="_top">
                청담동의 마늘녀
               </a>
              </h4>
              <span>
               [linkx]
               
              </span>
             </div>
            </dd>
           </dl>
          </div>
          <div class="BoxDefault_1" style="width:250px; background-color:#fff; border-left:1px solid #dfdfdf; border-right:1px solid #dfdfdf; padding:0 10px;">
           <dl>
            <dt style="background: #f0f0f0; font-size:11px;padding: 6px; height: 25px; margin-bottom: 10px;">
             [linkx]
             
            </dt>
            <dd style="padding-bottom:10px;">
             <div class="ArticleNew">
              <h4 style="padding:0; margin-bottom:5px;">
               <a class="FtColor_typeA OnLoad" href="/news/articleView.html?idxno=42487" target="_top">
                고용 권한 입대의에 있어 부당한 지시 거부 어려워
               </a>
              </h4>
              <span>
               <a class="FtColor_typeC OffLoad" href="/news/articleView.html?idxno=42487" target="_top">
                Ⅳ ‘갑’의 횡포 막기 위한 법 개정의 필요성2. 공동주택관리법 ...
               </a>
              </span>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_4" style="width:250px; border-top: 2px solid #0073b2; background-color:#fff;">
           <dl>
            <dt>
             <a class="btm_Kor" href="/news/articleList.html?sc_sub_section_code=HJSM&amp;view_type=sm">
              현장
              <font color="#007dc6">
               실무
              </font>
             </a>
            </dt>
            <dd>
             <div class="ArticleNew">
              <h4>
               [ahref]
               
              </h4>
              <span style="margin-top:3px;">
               [linkx]
               
              </span>
             </div>
             <div class="ArticleNew FtNewBig BrDottBig">
              <h4>
               [linkx]
               
              </h4>
              <span style="margin-top:3px;">
               [linkx]
               
              </span>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_4" style="width:250px; border-top: 2px solid #0073b2; background-color:#fff;">
           <dl>
            <dt>
             [linkx]
             
            </dt>
            <dd>
             <div class="ArticleNew">
              <div class="ArticleNew ImgHeight_typeC">
               <div class="ImgWidth_typeC" style="float:left; margin-right:10px;">
                [linkx]
                
               </div>
               <h4>
                [linkx]
                
               </h4>
               <span style="margin-top:3px;">
                [linkx]
                
               </span>
              </div>
             </div>
             <div class="ArticleNew FtNewBig BrDottBig">
              <div class="ArticleNew ImgHeight_typeC">
               <div class="ImgWidth_typeC" style="float:left; margin-right:10px;">
                <a href="/news/articleView.html?idxno=42300" target="_top">
                </a>
               </div>
               <h4>
                [ahref]
                
               </h4>
               <span style="margin-top:3px;">
                <a class="FtColor_typeC OffLoad" href="/news/articleView.html?idxno=42300" target="_top">
                 아파트도 늙는다. 콘크리트로 지은 아파트는 움직이거나 숨을...
                </a>
               </span>
              </div>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_4" style="width:250px; border-top: 2px solid #0073b2; background-color:#fff;">
           <dl>
            <dt>
             [linkx]
             
            </dt>
            <dd>
             <div class="ArticleNew BollNew">
              <ul>
               <li class="LiNewNot">
                <h5>
                 [linkx]
                 
                </h5>
               </li>
               <li class="LiNewSm">
                <h5>
                 <a class="FtColor_typeA OnLoad" href="/news/articleView.html?idxno=42487" target="_top">
                  고용 권한 입대의에 있어 부당한 지시 거부 어려워
                 </a>
                </h5>
               </li>
               <li class="LiNewSm">
                <h5>
                 [ahref]
                 
                </h5>
               </li>
               <li class="LiNewSm">
                <h5>
                 [ahref]
                 
                </h5>
               </li>
              </ul>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_4" style="width:250px; border-top: 2px solid #ce045e; background-color:#fff;">
           <dl>
            <dt>
             [linkx]
             
            </dt>
            <dd>
             <div class="ArticleNew">
              <div class="ArticleNew ImgHeight_typeC">
               <div class="ImgWidth_typeC" style="float:left; margin-right:10px;">
                [ahref]
                
               </div>
               <h4>
                [ahref]
                
               </h4>
               <span style="margin-top:3px;">
                [linkx]
                
               </span>
              </div>
             </div>
             <div class="ArticleNew FtNewBig BrDottBig">
              <div class="ArticleNew ImgHeight_typeC">
               <div class="ImgWidth_typeC" style="float:left; margin-right:10px;">
                [ahref]
                
               </div>
               <h4>
                [linkx]
                
               </h4>
               <span style="margin-top:3px;">
                [linkx]
                
               </span>
              </div>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
             <div class="mHeight_C">
              여백
             </div>
            </td>
           </tr>
          </table>
          <div class="BoxDefault_4" style="width:250px; border-top: 2px solid #ce045e; background-color:#fff;">
           <dl>
            <dt>
             <a class="btm_Kor" href="/news/articleList.html?sc_sub_section_code=S2N4&amp;view_type=sm">
              <font color="#ce045e">
               기획
              </font>
             </a>
            </dt>
            <dd>
             <div class="ArticleNew">
              <div class="ArticleNew ImgHeight_typeC">
               <div class="ImgWidth_typeC" style="float:left; margin-right:10px;">
                [ahref]
                
               </div>
               <h4>
                [linkx]
                
               </h4>
               <span style="margin-top:3px;">
                [linkx]
                
               </span>
              </div>
             </div>
             <div class="ArticleNew FtNewBig BrDottBig">
              <h4>
               [ahref]
               
              </h4>
              <span style="margin-top:3px;">
               [ahref]
               
              </span>
             </div>
            </dd>
           </dl>
          </div>
          <table border="0" cellpadding="0" cellspacing="0" width="100%">
           <tr>
            <td align="center">
            </td>
           </tr>
          </table>
         </td>
        </tr>
       </table>
      </td>
     </tr>
    </table>
    <table border="0" cellpadding="0" cellspacing="0" width="690">
     <tr>
      <td>
      </td>
     </tr>
    </table>
   </td>
   <td align="right" rowspan="2" style="padding-top:20px;" valign="top" width="270">
    <table border="0" cellpadding="0" cellspacing="0" width="250">
     <tr>
      <td>
       <div class="BoxDefault_1" style="width:250px;">
        <dl>
         <dt>
         </dt>
         <dd>
          <div class="PhotoWrapTypeA_new_10" style="display:block; overflow:hidden; width:100%; height:165px; position:relative;">
           <button class="PhotoBoxArrow ArrTypeA_new_10" cmd="prev" style="width:17px; height:30px; right:17px; bottom:0px;  background-color:#007dc6; background-position:10px 12px;">
            PREV
           </button>
           <button class="PhotoBoxArrow ArrTypeA_new_10" cmd="next" style="width:17px; height:30px; right:0px; bottom:0px; background-color:#007dc6; background-position:-72px 12px;">
            NEXT
           </button>
           <div style="z-index:-1;">
            <div class="ArticleNew PhotoLayerTypeA_new_10" style="display:none;">
             <div class="PhotoBoxtitle">
              <h5 style="height:30px; padding-right:36px; line-height:30px;">
               [linkx]
               
              </h5>
             </div>
             <div class="ImgWidth_Full">
              [linkx]
              
             </div>
            </div>
           </div>
           <div style="z-index:-1;">
            <div class="ArticleNew PhotoLayerTypeA_new_10" style="display:none;">
             <div class="PhotoBoxtitle">
              <h5 style="height:30px; padding-right:36px; line-height:30px;">
               [linkx]
               
              </h5>
             </div>
             <div class="ImgWidth_Full">
              <a href="/news/articleView.html?idxno=42422" target="_top">
              </a>
             </div>
            </div>
           </div>
           <div style="z-index:-1;">
            <div class="ArticleNew PhotoLayerTypeA_new_10" style="display:none;">
             <div class="PhotoBoxtitle">
              <h5 style="height:30px; padding-right:36px; line-height:30px;">
               [ahref]
               
              </h5>
             </div>
             <div class="ImgWidth_Full">
              [linkx]
              
             </div>
            </div>
           </div>
          </div>
         </dd>
        </dl>
       </div>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <div class="mHeight_B">
           여백
          </div>
         </td>
        </tr>
       </table>
       <div class="BoxDesign_all_1" style="width:250px;">
        <dl>
         <dt style="background-color:#007dc6;">
          <strong>
           <font color="#007dc6">
            많이 본
           </font>
           기사
          </strong>
         </dt>
         <dd>
          <div class="ArticleNew TabHotNewF">
           <ul>
            <li class="on">
             <em>
              1
             </em>
             [linkx]
             
            </li>
            <li class="on">
             <em>
              2
             </em>
             [linkx]
             
            </li>
            <li class="on">
             <em>
              3
             </em>
             [linkx]
             
            </li>
            <li class="on">
             <em>
              4
             </em>
             <a class="FtColor_E OnLoad" href="/news/articleView.html?idxno=42472" target="_top">
              공동주택 동별 대표자 자격 요건 강화
             </a>
            </li>
            <li class="on">
             <em>
              5
             </em>
             [ahref]
             
            </li>
            <li>
             <em>
              6
             </em>
             [ahref]
             
            </li>
            <li>
             <em>
              7
             </em>
             [linkx]
             
            </li>
            <li>
             <em>
              8
             </em>
             [linkx]
             
            </li>
            <li>
             <em>
              9
             </em>
             [ahref]
             
            </li>
            <li>
             <em>
              10
             </em>
             [linkx]
             
            </li>
           </ul>
          </div>
         </dd>
        </dl>
       </div>
       <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tr>
         <td align="center">
          <div class="mHeight_C">
           여백
          </div>
         </td>
        </tr>
       </table>
       <div class="BoxDesign_bgr2" style="width:250px;">
        <dl>
         <dt style="background-color:#007dc6;">
          [linkx]
          
         </dt>
        </dl>
       </div>
      </td>
     </tr>
    </table>
   </td>
  </tr>
 </table>
</div>
<dd>
 <table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
   <td align="center" class="c_cphoto_p" valign="top">
    [ahref]
    
   </td>
  </tr>
  <tr>
   <td valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
     <tr>
      <td class="box_tit_b">
       [linkx]
       
      </td>
     </tr>
     <tr>
      <td class="box_body">
       [ahref]
       
      </td>
     </tr>
    </table>
   </td>
  </tr>
 </table>
 <div class="malLine_Dot">
 </div>
</dd>
<div class="BoxDesign_ico1" style="width:250px;">
 <dl>
  <dt>
   [ahref]
   
  </dt>
 </dl>
</div>
<dd>
 <table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
   <td align="center" class="c_cphoto_p" valign="top">
    [linkx]
    
   </td>
  </tr>
  <tr>
   <td valign="top">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
     <tr>
      <td class="box_tit_b">
       [linkx]
       
      </td>
     </tr>
     <tr>
      <td class="box_body">
       [keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
      </td>
     </tr>
    </table>
   </td>
  </tr>
 </table>
 <div class="malLine_Dot">
 </div>
</dd>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<div class="BoxDesign_all_1" style="width:250px;">
 <dl>
  <dt style="background-color:#007dc6;">
   [linkx]
   
  </dt>
  <dd>
  </dd>
 </dl>
</div>
<div class="BoxDefault_1" style="width:250px;">
 <dl>
  <dt>
  </dt>
  <dd>
   <div class="ArticleNew BollNew ImgHeight_typeC">
    <strong style="font-family:Dotum; font-size:11px; margin-bottom:2px;">
     [ahref]
     
    </strong>
    <h5 style="\margin-bottom:0;">
     [ahref]
     
    </h5>
    <h5>
     [ahref]
     
    </h5>
   </div>
  </dd>
 </dl>
</div>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<div class="BoxRound_1" style="width:250px;">
 <dl>
  <dt>
   [ahref]
   
  </dt>
  <dd>
   <div class="ArticleNew">
    <h4>
     [ahref]
     
    </h4>
    <span style="margin-top:3px;">
     [ahref]
     
    </span>
   </div>
  </dd>
 </dl>
</div>
<div class="BoxRound_1" style="width:250px;">
 <dl>
  <dt>
   [linkx]
   
  </dt>
  <dd>
   <div class="ArticleNew">
    <h4>
     [linkx]
     
    </h4>
    <span style="margin-top:3px;">
     [linkx]
     
    </span>
   </div>
  </dd>
 </dl>
</div>
<div class="BoxDefault_1" style="width:250px;">
 <dl>
  <dt>
  </dt>
  <dd>
  </dd>
 </dl>
</div>
<div class="BoxRound_1" style="width:250px;">
 <dl>
  <dt>
   <a class="btm_Kor" href="/news/articleList.html?sc_sub_section_code=S2N15&amp;view_type=sm">
    <font color="#ffffff">
     발언대
    </font>
   </a>
  </dt>
  <dd>
   <div class="ArticleNew">
    <h4>
     [ahref]
     
    </h4>
    <span style="margin-top:3px;">
     [linkx]
     
    </span>
   </div>
  </dd>
 </dl>
</div>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  [link][link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
 </tr>
</table>
<div class="BoxDesign_all_1" style="width:250px;">
 <dl>
  <dt style="background-color:#007dc6;">
   [linkx]
   
  </dt>
  <dd>
   <div class="ArticleNew sec-twin-box2" style="float:left; margin-top:0px;">
    <div style="margin-bottom:10px;">
     <a href="/news/articleView.html?idxno=42413" target="_top">
     </a>
    </div>
    <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
     [ahref]
      [link]<li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
     
    </span>
   </div>
   <div class="ArticleNew sec-twin-box2" style="float:right; margin-top:0px;">
    <div style="margin-bottom:10px;">
     [ahref]
     
    </div>
    <span style="display:block; overflow:hidden; height:32px; line-height:16px;">
     [linkx]
     
    </span>
   </div>
  </dd>
 </dl>
</div>
<div class="BoxDesign_all_1" style="width:250px;">
 <dl>
  <dt style="background-color:#007dc6;">
   [linkx]
   
  </dt>
  <dd>
  </dd>
 </dl>
</div>
<div class="BoxDefault_1" style="width:250px;">
 <dl>
  <dt>
  </dt>
  <dd>
  </dd>
 </dl>
</div>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<div class="BoxDesign_all_1" style="width:250px;">
 <dl>
  <dt style="background-color:#007dc6;">
   [ahref]
   
  </dt>
 </dl>
</div>
<dd>
</dd>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_A mDashed_A mTop_A">
    여백
   </div>
  </td>
 </tr>
</table>
<div class="BoxDefault_1" style="width:250px;">
 <dl>
  <dt>
  </dt>
  <dd>
   <div class="ArticleNew BollNew ImgHeight_typeC">
    <strong style="font-family:Dotum; font-size:11px; margin-bottom:2px;">
     [ahref]
     
    </strong>
    <h5 style="\margin-bottom:0;">
     [linkx]
     
    </h5>
    <h5>
     [linkx]
     
    </h5>
   </div>
  </dd>
 </dl>
</div>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_A mDashed_A mTop_A">
    여백
   </div>
  </td>
 </tr>
</table>
<div class="BoxDefault_1" style="width:250px;">
 <dl>
  <dt>
  </dt>
  <dd>
   <div class="ArticleNew BollNew ImgHeight_typeC">
    <strong style="font-family:Dotum; font-size:11px; margin-bottom:2px;">
     [ahref]
     
    </strong>
    <h5 style="\margin-bottom:0;">
     <a class="FtColor_typeC OnLoad" href="/news/articleView.html?idxno=42492" target="_top">
      이상한 도시
     </a>
    </h5>
    <h5>
     [ahref]
     
    </h5>
   </div>
  </dd>
 </dl>
</div>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_C">
    여백
   </div>
  </td>
 </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
 <tr>
  <td align="center">
   <div class="mHeight_B">
    여백
   </div>
  </td>
 </tr>
</table>
<table align="center" border="0" cellpadding="0" cellspacing="0" width="960">
 <li>[link]</li><li>[link]</li>[link][link]
</table>
<table align="center" border="0" cellpadding="0" cellspacing="0" style="margin-top:0px;" width="960">
 <tr>
  <td style="padding:10px 0; border-top:1px solid #ddd; border-bottom:1px solid #ddd;">
   <table align="center" border="0" cellpadding="0" cellspacing="0" width="940">
    <tr>
     <td class="dncom">
      [ahref]
      
      ㆍ
      [linkx]
      
      ㆍ
      [ahref]
      
      ㆍ
      [ahref]
      
      ㆍ
      [linkx]
      
      ㆍ
      [linkx]
      
      ㆍ
      [linkx]
      
     </td>
     <td align="right" width="250">
      <table border="0" cellpadding="0" cellspacing="0">
       <tr>
        <td>
         <a href="/rss/" onfocus="this.blur();">
         </a>
        </td>
        <td>
         [linkx]
         
        </td>
        <td>
         [ahref]
         
        </td>
        <td>
         [linkx]
         
        </td>
       </tr>
      </table>
     </td>
    </tr>
   </table>
  </td>
 </tr>
 <tr>
  <td style="padding:10px 0;">
   <table align="center" border="0" cellpadding="0" cellspacing="0" width="960">
    <tr>
     <td align="center" style="padding:0 15px;" width="131">
     </td>
     <td class="dncopy">
      (152-727) 서울특별시 구로구 구로3동 222-8 코오롱빌란트2차 705호 (주)한국아파트신문
      <br/>
      대표전화 : (02)884-5445
      <span>
       |
      </span>
      팩스 : (02)884-5995
      <span>
       |
      </span>
      등록번호 : 공보 다 04289
      <span>
       |
      </span>
      발행인 : 황용순
      <span>
       |
      </span>
      편집인 : 이경석
      <span>
       |
      </span>
      청소년보호책임자 : 이경석
      <br/>
      C
      [ahref]
      
      pyright
      [ahref]
      
      2002~2019  (주)한국아파트신문. All rights reserved.
     </td>
     <td align="right" valign="bottom" width="60">
      [ahref]
      
     </td>
    </tr>
   </table>
  </td>
 </tr>
</table>
|<---