--->|<!DOCTYPE html>
<html class="pc" lang="en">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta charset="utf-8" class="next-head"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta charset="utf-8"/>
  <meta content="initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width, height=device-height, user-scalable=no" name="viewport"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="/static/og-image.png" name="og:image"/>
  <meta content="apartmentary" name="author"/>
 </head>
 <body>
  <div id="__next">
   <div>
    <div class="header">
     <div class="fs-20 text-center" style="background-color:#949b68;color:#ffffff">
      <div style="height:46px;line-height:46px">
       아파트멘터리가 만든 정직하고 지속 가능한 6성급 호텔타월
       [ahref]
       
      </div>
     </div>
     <div class="container">
      <header class="header-content">
       <button class="hamburger-btn d-lg-none" type="button">
        <span class="hamburger-btn-bar">
        </span>
        <span class="hamburger-btn-bar">
        </span>
        <span class="hamburger-btn-bar">
        </span>
        <span class="hamburger-btn-bar">
        </span>
       </button>
       [ahref]
       
       <a class="header-search d-lg-none" href="/search">
        [keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx][keywordx][ahref][pkeyx][linkx][ahref][linkx][pkeyx][keywordx][ahref][pkeyx][keywordx][linkx][ahref][ahref][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][keywordx]
       </a>
       <div class="d-none d-lg-block">
        [ahref]
        
        [ahref]
        
        [linkx]
        
        [linkx]
        
       </div>
      </header>
     </div>
    </div>
    <div class="sidebar">
     <div class="text-left mx-32 mt-45">
      <button class="sidebar-close btn btn-link p-0" type="button">
      </button>
     </div>
     <div class="sidebar-content">
      <div class="sidebar-logo mt-56">
      </div>
      <div class="sidebar-toggler text-center">
       <label class="sidebar-h1" for="our-service">
        OUR SERVICE
       </label>
       <div class="collapse">
        <ul class="sidebar-collapse mb-15">
         <hr class="sidebar-hr2"/>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      [linkx]
      
      <hr class="sidebar-hr1"/>
      <div class="sidebar-toggler text-center">
       <label class="sidebar-h2" for="about-checkbox">
        ABOUT
       </label>
       <div class="collapse">
        [keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]<li>[mkey1]</li><li>[linkx]</li>
       </div>
      </div>
      <div class="sidebar-toggler text-center mt-55">
       <label class="sidebar-h2" for="support-checkbox">
        SUPPORT[pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
       </label>
       <div class="collapse">
        <ul class="sidebar-collapse mb-15">
         <hr class="sidebar-hr2"/>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="sidebar-toggler text-center mt-55">
       <label class="sidebar-h2" for="sns-checkbox">
        SNS
       </label>
       <div class="collapse">
        <ul class="sidebar-collapse mb-15">
         <hr class="sidebar-hr2"/>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [mkey1][pkeyx][keywordx][pkeyx][ahref][mkey1][linkx][mkey1][ahref][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][ahref][pkeyx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][mkey1][linkx][pkeyx][keywordx][linkx][keywordx][keywordx][pkeyx][keywordx][pkeyx]
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="px-32 pt-50 pb-40">
      [ahref]
      
     </div>
    </div>
    <div class="fixed-controls fixed-bottom d-flex d-lg-none">
     [linkx]
     
     <div class="fixed-control-hr">
     </div>
     [ahref]
     
     [ahref]
     
    </div>
    <div>
     <div class="jsx-2739259280 position-relative">
      <div class="jsx-1593528614 position-relative video-wrapper d-none d-lg-inline-block">
       <video autoplay="" class="jsx-1593528614 d-none d-lg-inline-block" loop="" muted="" preload="true">
        <li>[pkeyx]</li>[ahref][linkx][mkey1]<li>[linkx]</li>
       </video>
      </div>
      <div class="jsx-84988773">
      </div>
      <div class="jsx-1096431296 px-32 content">
       <h1 class="jsx-1096431296 mb-lg-35 text-white text-center d-none d-lg-block">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h1>
       <h2 class="jsx-1096431296 text-white text-center d-none d-lg-block">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <p class="d-lg-none font-weight-bold fs-46 fs-lg-18">
        Space Betters Life.
        <br/>
        Experience
        <br/>
        thoughtful and joyful
        <br/>
        moments with us.
       </p>
       <p class="d-none d-lg-block font-weight-bold fs-46 fs-lg-18">
        공간은 삶을 더 아름답게 바꿉니다. 지혜롭고 기쁨을 주는 인테리어를 경험하세요.
       </p>
      </div>
      <div class="jsx-2739259280 d-none d-lg-inline-block text-center icon-mouse">
       <div class="jsx-2739259280 ff-futura-med fs-lg-14 mb-lg-12 text-white">
        Scroll[ahref]<li>[pkeyx]</li><li>[mkey1]</li>
       </div>
      </div>
     </div>
     <section class="jsx-2302252859 ">
      <div class="d-lg-none container">
       <h5 class="ff-sandoll fs-34 font-weight-bold mx-32 mb-35">
        서비스 종류[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][pkeyx][linkx][linkx][linkx][pkeyx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h5>
      </div>
      <div class="d-none d-lg-block container">
       <div class="mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          아파트멘터리
          <br/>
          서비스 소개
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
        </header>
       </div>
      </div>
      <ul class="d-flex">
       <li class="d-inline-block flex-grow-1">
        [linkx]
        
       </li>
       <li class="d-inline-block flex-grow-1">
        [ahref]
        
       </li>
      </ul>
     </section>
     <section>
      <div class="d-lg-none container">
       <h5 class="ff-sandoll fs-34 font-weight-bold mx-32 mb-50">
        포트폴리오
       </h5>
       <div class="pf-list">
        [linkx]
        
        [ahref]
        
        [ahref]
         <li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1]
        
        [linkx]
         [keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][linkx][keywordx][pkeyx][mkey1][pkeyx][mkey1][keywordx][keywordx][keywordx][keywordx][mkey1][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][mkey1][pkeyx][ahref]
        
        [linkx]
         <li>[mkey1]</li>[linkx][ahref]
        
        [ahref]
        
       </div>
       [linkx]
       
      </div>
      <div class="d-none d-lg-block container">
       <div class="mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          아파트멘터리
          <br/>
          포트폴리오
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
         [ahref]
         
        </header>
       </div>
       <div class="pf-waterfall">
        <[keywordx]>
        </[keywordx]>
       </div>
      </div>
     </section>
     <section class="jsx-2302252859 d-lg-none">
      <ul class="jsx-657577160">
       <li class="jsx-657577160">
        [ahref]
        
       </li>
      </ul>
     </section>
     <section class="jsx-2302252859 ">
      <div class="container">
       <div class="d-none d-lg-block mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          Our Vision[linkx][keywordx][keywordx][linkx][mkey1][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][mkey1][keywordx][linkx][mkey1][pkeyx][ahref][keywordx][ahref][ahref][pkeyx]
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
         [linkx]
         
        </header>
       </div>
       <div class="jsx-1098130683 d-flex flex-column flex-lg-row align-items-lg-center story-content">
        [keywordx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li>[linkx]<li>[mkey1]</li>
       </div>
      </div>
     </section>
     <section class="jsx-3383013621 d-none d-lg-block">
      <div class="container">
       <div class="mb-lg-30">
        <header class="jsx-1678493174 d-flex align-items-start">
         <h5 class="jsx-1768084546 font-weight-bold ff-sandoll">
          아파트멘터리가 제안하는
          <br/>
          오늘의 즐거움
         </h5>
         <hr class="jsx-1678493174 flex-grow-1"/>
         [linkx]
         
        </header>
       </div>
       <ul class="jsx-3383013621">
       </ul>
      </div>
     </section>
    </div>
    <div>
     <hr class="hr d-none d-lg-block footer"/>
     <div class="container">
      <hr class="hr d-lg-none footer"/>
      <footer>
       <div class="container-fluid">
        <div class="no-gutters row">
         <div class="col-12 col-lg-8">
          <div class="ff-futura-boo container-fluid">
           <div class="no-gutters row">
            <div class="col">
             <ul class="fs-26 fs-xl-16">
              <li class="ff-futura-med mb-48 mb-lg-28">
               <strong>
                About
               </strong>
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
             </ul>
            </div>
            <div class="col">
             <ul class="fs-26 fs-xl-16">
              <li class="ff-futura-med mb-48 mb-lg-28">
               <strong>
                Support
               </strong>
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
                <li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[mkey1]</li><li>[keywordx]</li>
               
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
             </ul>
            </div>
            <div class="col">
             <ul class="fs-26 fs-xl-16">
              <li class="ff-futura-med mb-48 mb-lg-28">
               <strong>
                SNS
               </strong>
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [linkx]
               
              </li>
              <li class="mb-40 mb-lg-12">
               [ahref]
               
              </li>
             </ul>
            </div>
           </div>
          </div>
          <hr class="d-lg-none"/>
         </div>
         <div class="col-12 col-lg-4">
          <div class="ff-futura-boo fs-28 container-fluid">
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             CALL
            </div>
            <div class="fs-lg-15 col">
             <a href="4">
              02. 6356. 1224
             </a>
            </div>
           </div>
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             EMAIL
            </div>
            <div class="fs-lg-15 col">
             [ahref]
             
            </div>
           </div>
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             MESSENGER
            </div>
            <div class="fs-lg-13 col">
             kakaotalk
             [linkx]
              [keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[mkey1]</li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
             
            </div>
           </div>
           <div class="align-items-center mb-40 mb-lg-19 no-gutters row">
            <div class="ff-futura-med fs-18 fs-lg-13 col-4">
             LOCATION
            </div>
            <div class="ff-sandoll fs-22 fs-lg-13 col">
             4F, Hannam-dong 31-10, Yongsan-gu, Seoul, Republic of Korea
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr/>
        <div class="no-gutters row">
         <div class="col">
          <section class="ff-sandoll">
           <ul class="footer-terms mb-55">
            <li>
             <li>[mkey1]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref]<li>[linkx]</li><li>[linkx]</li>
            </li>
            <li class="hr">
            </li>
            <li>
             [ahref]
             
            </li>
            <li class="hr">
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
           <section class="fs-18 mb-40">
            <div class="d-none d-lg-block">
             · Company Name: Apartmentary Co. · CEO: Yoon So-yeon · Business License: 723.87.00195 · Mail-order License: Issue No. 2016. Seoul Mapo 0923 · Chief Privacy Officer: Ha Tae-woong(ha@apartmentary.com )
             <br/>
             · Address: 4F, Hannam-dong 31-10, Yongsan-gu, Seoul, Republic of Korea · TEL: 02. 6356. 1224
            </div>
            <div class="d-lg-none">
             · Company Name: Apartmentary Co. · CEO: Yoon So-yeon · Business License: 723.87.00195
             <br/>
             · Mail-order License: Issue No. 2016. Seoul Mapo 0923
             <br/>
             · Chief Privacy Officer: Ha Tae-woong(ha@apartmentary.com )
             <br/>
             · Address: 4F, Hannam-dong 31-10, Yongsan-gu, Seoul, Republic of Korea  · TEL: 02. 6356. 1224
            </div>
           </section>
           <span class="ff-futura-boo fs-22">
            apart:mentary © 2015-2018 All Rights Reserved.
           </span>
          </section>
         </div>
        </div>
       </div>
      </footer>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0020
  </b>
 </body>
</html>|<---