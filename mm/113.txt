--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/c/cd/Chapeaux_en_peau_de_castor.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-모자 rootpage-모자 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
    [content12][content13][linkx][content14]
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [linkx]
    
    [linkx]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <div class="dablink">
       [keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
      </div>
      <div class="thumb tright">
       <div class="thumbinner" style="width:302px;">
        [linkx]
        
        <div class="thumbcaption">
         <div class="magnify">
          <a class="internal" href="/wiki/%ED%8C%8C%EC%9D%BC:Chapeaux_en_peau_de_castor.jpg" title="실제 크기로">
          </a>
         </div>
         18세기 ~ 19세기의 다양한 남성모.
        </div>
       </div>
      </div>
      <p>
       <b>
        모자
       </b>
       (帽子)는 머리를 덮을 수 있는 것 중의 하나이며, 예의를 차리거나 더위·추위·먼지 등을 막기 위하여 머리에 쓰는 물건이다. 양복의 모자에는 해트·캡·보닛·후드·베일 등이 있으며, 세계 여러 나라의 모자는 지역에 따라 특색이 있다.
      </p>
      <p>
       그러나 보호를 위한 몇가지 이유로 이용할 수 있다.
      </p>
      <p>
       주로
       [ahref]
       
       적인 이유 또는
       [linkx]
       
       및
       [linkx]
       
       [linkx]
       
       를 목적으로 사용한다. 예전에는 모자가 사회적 신분의 상징이었고,
       [linkx]
       
       에서는
       [linkx]
       
       과 연대를 표기하였다.
      </p>
      <h2>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="center">
       <table class="wikitable">
        <caption>
         <b>
          모자 크기
         </b>
        </caption>
        <tbody>
         <tr>
          <th>
           크기
          </th>
          <th>
          </th>
          <th>
          </th>
          <th>
          </th>
          <th>
          </th>
          <th>
           Youth S/M
          </th>
          <th>
           Youth L/XL
          </th>
          <th>
           XXS
          </th>
          <th>
           XS
          </th>
          <th>
           S
          </th>
          <th>
           M
          </th>
          <th>
           L
          </th>
          <th>
           XL
          </th>
          <th>
           XXL
          </th>
          <th>
           XXXL
          </th>
         </tr>
         <tr>
          <th>
           나이
          </th>
          <td>
           0
          </td>
          <td>
           ½
          </td>
          <td>
           1
          </td>
          <td>
           1½
          </td>
          <td>
           2
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
           [keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
          </td>
          <td>
          </td>
          <td>
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           Circumference (cm)
          </th>
          <td>
           34
          </td>
          <td>
           43
          </td>
          <td>
           47
          </td>
          <td>
           48
          </td>
          <td>
           49
          </td>
          <td>
           50
          </td>
          <td>
           51–52
          </td>
          <td>
           53–54
          </td>
          <td>
           55–56
          </td>
          <td>
           57–58
          </td>
          <td>
           59–60
          </td>
          <td>
           61–62
          </td>
          <td>
           63–64
          </td>
          <td>
           65–66
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           Circumference (인치)
          </th>
          <td>
           13⅜
          </td>
          <td>
           17[content19][content20][linkx][content1][content2][content3]
          </td>
          <td>
           18½
          </td>
          <td>
           18¾
          </td>
          <td>
           19¼
          </td>
          <td>
           19¾
          </td>
          <td>
           20–20½
          </td>
          <td>
           20–21¼
          </td>
          <td>
           21–22
          </td>
          <td>
           22–22½⅞
          </td>
          <td>
           23–23½⅝
          </td>
          <td>
           24–24⅜
          </td>
          <td>
           24¾–25¼
          </td>
          <td>
           25–26
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           영국(UK) 모자 크기
          </th>
          <td>
          </td>
          <td>
          </td>
          <td>
           5
          </td>
          <td>
           5¾
          </td>
          <td>
           6
          </td>
          <td>
           6
          </td>
          <td>
           6–6¼⅜
          </td>
          <td>
           6–6½⅝
          </td>
          <td>
           6–6¾⅞
          </td>
          <td>
           7–7⅛
          </td>
          <td>
           7–7¼⅜
          </td>
          <td>
           7–7½
          </td>
          <td>
           7–7¾⅞
          </td>
          <td>
           8–8⅛
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           미국(US) 모자 크기
          </th>
          <td>
          </td>
          <td>
          </td>
          <td>
           5⅞
          </td>
          <td>
           6
          </td>
          <td>
           6⅛
          </td>
          <td>
           6¼
          </td>
          <td>
           6–6½
          </td>
          <td>
           6⅝- 6¾
          </td>
          <td>
           6–7
          </td>
          <td>
           7–7¼
          </td>
          <td>
           7–7½
          </td>
          <td>
           7–7¾
          </td>
          <td>
           7–8
          </td>
          <td>
           8–8¼
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           프랑스(French) 모자 크기
          </th>
          <td>
          </td>
          <td>
          </td>
          <td>
           0
          </td>
          <td>
           ½
          </td>
          <td>
           1
          </td>
          <td>
           1½
          </td>
          <td>
           2–2½
          </td>
          <td>
           3–3½
          </td>
          <td>
           4–4½
          </td>
          <td>
           5–5½
          </td>
          <td>
           6–6½
          </td>
          <td>
           7–7½
          </td>
          <td>
           8–8½
          </td>
          <td>
           9–9½
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <h2>
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;">
       <tbody>
        <tr>
         <td class="mbox-image">
         </td>
         <td class="mbox-text plainlist" style="">
          <b>
           <a href="/wiki/%EC%9C%84%ED%82%A4%EB%AF%B8%EB%94%94%EC%96%B4_%EA%B3%B5%EC%9A%A9" title="위키미디어 공용">
            위키미디어 공용
           </a>
          </b>
          에 관련된
          <br/>
          미디어 분류가 있습니다.
          <div style="padding-left:1em;">
           <b>
            [ahref]
            
           </b>
          </div>
         </td>
        </tr>
       </tbody>
      </table>
      <ul>
       <li>
        [ahref]
        
       </li>
      </ul>
      <div>
       <small>
        <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Heckert_GNU_white.svg">
        </a>
        <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Cc.logo.circle.svg">
        </a>
        이 문서에는
        [ahref]
        
        (현
        [linkx]
        
        )에서
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:GNU_Free_Documentation_License" title="위키백과:GNU Free Documentation License">
         GFDL
        </a>
        또는
        [ahref]
        
        라이선스로 배포한
        [linkx]
        
        의 내용을 기초로 작성된 글이 포함되어 있습니다.
       </small>
      </div>
      <div aria-labelledby="전거_통제" class="navbox" role="navigation" style="padding:3px">
       <table class="nowraplinks hlist navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
        <tbody>
         <tr>
          [content6][content7][content8][linkx][content9]
         </tr>
        </tbody>
       </table>
      </div>
      <table class="notice metadata plainlinks stub" style="clear: both; font-size: smaller;">
       <tbody>
        <tr>
         <td style="width: 40px;">
          <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:High_heel_temaplate.png">
          </a>
         </td>
         <td>
          이 글은 패션에 관한
          [linkx]
          
          입니다. 여러분의 지식으로 알차게
          [ahref]
          
          갑시다.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     <a dir="ltr" href="/w/index.php?title=모자&amp;oldid=23135073">
      https://ko.wikipedia.org/w/index.php?title=모자&amp;oldid=23135073
     </a>
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [linkx]
      
      :
      <ul>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      숨은 분류:
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:GND_%EC%8B%9D%EB%B3%84%EC%9E%90%EB%A5%BC_%ED%8F%AC%ED%95%A8%ED%95%9C_%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC_%EB%AC%B8%EC%84%9C" title="분류:GND 식별자를 포함한 위키백과 문서">
         GND 식별자를 포함한 위키백과 문서
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:%EB%AA%A8%EB%93%A0_%ED%86%A0%EB%A7%89%EA%B8%80_%EB%AC%B8%EC%84%9C" title="분류:모든 토막글 문서">
         모든 토막글 문서
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       <a accesskey="n" href="/wiki/%ED%8A%B9%EC%88%98:%EB%82%B4%EC%82%AC%EC%9A%A9%EC%9E%90%ED%86%A0%EB%A1%A0" title="현재 사용하는 IP 주소에 대한 토론 문서 [n]">
        토론
       </a>
      </li>
      <li id="pt-anoncontribs">
       <a accesskey="y" href="/wiki/%ED%8A%B9%EC%88%98:%EB%82%B4%EA%B8%B0%EC%97%AC" title="이 IP 주소의 편집 목록 [y]">
        기여
       </a>
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         <a accesskey="e" href="/w/index.php?title=%EB%AA%A8%EC%9E%90&amp;action=edit" title="이 문서 편집하기 [e]">
          편집
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [linkx]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [linkx]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        <a accesskey="z" href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%8C%80%EB%AC%B8" title="대문으로 가기 [z]">
         대문
        </a>
       </li>
       <li id="n-portal">
        [ahref]
        
       </li>
       <li id="n-currentevents">
        [linkx]
        
       </li>
       <li id="n-recentchanges">
        <a accesskey="r" href="/wiki/%ED%8A%B9%EC%88%98:%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C" title="위키의 최근 바뀐 목록 [r]">
         최근 바뀜
        </a>
       </li>
       <li id="n-index">
        [linkx]
        
       </li>
       <li id="n-randompage">
        <a accesskey="x" href="/wiki/%ED%8A%B9%EC%88%98:%EC%9E%84%EC%9D%98%EB%AC%B8%EC%84%9C" title="임의 문서 불러오기 [x]">
         임의 문서로
        </a>
       </li>
       <li id="n-help">
        [linkx]
        
       </li>
       <li id="n-sitesupport">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        <a accesskey="k" href="/wiki/%ED%8A%B9%EC%88%98:%EB%A7%81%ED%81%AC%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C/%EB%AA%A8%EC%9E%90" rel="nofollow" title="이 문서에서 링크한 문서의 최근 바뀜 [k]">
         가리키는 글의 최근 바뀜
        </a>
       </li>
       <li id="t-upload">
        [linkx]
        
       </li>
       <li id="t-specialpages">
        [linkx]
        
       </li>
       <li id="t-permalink">
        [ahref]
        
       </li>
       <li id="t-info">
        <a href="/w/index.php?title=%EB%AA%A8%EC%9E%90&amp;action=info" title="이 문서에 대한 자세한 정보">
         문서 정보
        </a>
       </li>
       <li id="t-wikibase">
        <a accesskey="g" href="/wiki/Special:EntityPage/Q80151" title="데이터 저장소에 연결된 항목을 가리키는 링크 [g]">
         위키데이터 항목
        </a>
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
     <h3 id="p-wikibase-otherprojects-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="wb-otherproject-link wb-otherproject-commons">
        <a href="/wiki/Category:Hats" hreflang="en">
         위키미디어 공용
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [ahref]
        
       </li>
       <li id="coll-download-as-rl">
        [linkx]
        
       </li>
       <li id="t-print">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-af">
        <a class="interlanguage-link-target" href="/wiki/Hoed" hreflang="af" lang="af" title="Hoed – 아프리칸스어">
         Afrikaans
        </a>
       </li>
       <li class="interlanguage-link interwiki-ar">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ast">
        <a class="interlanguage-link-target" href="/wiki/Sombreru" hreflang="ast" lang="ast" title="Sombreru – 아스투리아어">
         Asturianu
        </a>
       </li>
       <li class="interlanguage-link interwiki-atj">
        <a class="interlanguage-link-target" href="/wiki/Actotin" hreflang="atj" lang="atj" title="Actotin – Atikamekw">
         Atikamekw
        </a>
       </li>
       <li class="interlanguage-link interwiki-ay">
        <a class="interlanguage-link-target" href="/wiki/Q%27aspa" hreflang="ay" lang="ay" title="Q'aspa – 아이마라어">
         Aymar aru
        </a>
       </li>
       <li class="interlanguage-link interwiki-az">
        <a class="interlanguage-link-target" href="/wiki/%C5%9Elyapa" hreflang="az" lang="az" title="Şlyapa – 아제르바이잔어">
         Azərbaycanca
        </a>
       </li>
       <li class="interlanguage-link interwiki-ba">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-bar">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-be">
        <a class="interlanguage-link-target" href="/wiki/%D0%9A%D0%B0%D0%BF%D1%8F%D0%BB%D1%8E%D1%88" hreflang="be" lang="be" title="Капялюш – 벨라루스어">
         Беларуская
        </a>
       </li>
       <li class="interlanguage-link interwiki-be-x-old">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-bg">
        <a class="interlanguage-link-target" href="/wiki/%D0%A8%D0%B0%D0%BF%D0%BA%D0%B0" hreflang="bg" lang="bg" title="Шапка – 불가리아어">
         Български
        </a>
       </li>
       <li class="interlanguage-link interwiki-bjn">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-br">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ca">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-cdo">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ceb">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-cs">
        <a class="interlanguage-link-target" href="/wiki/Klobouk" hreflang="cs" lang="cs" title="Klobouk – 체코어">
         Čeština
        </a>
       </li>
       <li class="interlanguage-link interwiki-cv">
        <a class="interlanguage-link-target" href="/wiki/%D0%A8%D0%BB%D0%B5%D0%BF%D0%BA%D0%B5" hreflang="cv" lang="cv" title="Шлепке – 추바시어">
         Чӑвашла
        </a>
       </li>
       <li class="interlanguage-link interwiki-cy">
        <a class="interlanguage-link-target" href="/wiki/Het" hreflang="cy" lang="cy" title="Het – 웨일스어">
         Cymraeg
        </a>
       </li>
       <li class="interlanguage-link interwiki-de">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-el">
        <a class="interlanguage-link-target" href="/wiki/%CE%9A%CE%B1%CF%80%CE%AD%CE%BB%CE%BF" hreflang="el" lang="el" title="Καπέλο – 그리스어">
         Ελληνικά
        </a>
       </li>
       <li class="interlanguage-link interwiki-en">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-eo">
        <a class="interlanguage-link-target" href="/wiki/%C4%88apelo" hreflang="eo" lang="eo" title="Ĉapelo – 에스페란토어">
         Esperanto
        </a>
       </li>
       <li class="interlanguage-link interwiki-es">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-et">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-eu">
        [ahref]
         [content19][content20][content1][linkx][content2][content3]
        
       </li>
       <li class="interlanguage-link interwiki-fa">
        <a class="interlanguage-link-target" href="/wiki/%DA%A9%D9%84%D8%A7%D9%87" hreflang="fa" lang="fa" title="کلاه – 페르시아어">
         فارسی
        </a>
       </li>
       <li class="interlanguage-link interwiki-fi">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-fr">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-fy">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ga">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-gd">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-gn">
        <a class="interlanguage-link-target" href="/wiki/Ak%C3%A3_ao" hreflang="gn" lang="gn" title="Akã ao – 과라니어">
         Avañe'ẽ
        </a>
       </li>
       <li class="interlanguage-link interwiki-gv">
        <a class="interlanguage-link-target" href="/wiki/Edd_(eaddeeyn)" hreflang="gv" lang="gv" title="Edd (eaddeeyn) – 맹크스어">
         Gaelg
        </a>
       </li>
       <li class="interlanguage-link interwiki-he">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hi">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hr">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hu">
        <a class="interlanguage-link-target" href="/wiki/Kalap" hreflang="hu" lang="hu" title="Kalap – 헝가리어">
         Magyar
        </a>
       </li>
       <li class="interlanguage-link interwiki-hy">
        <a class="interlanguage-link-target" href="/wiki/%D4%B3%D5%AC%D5%AD%D5%A1%D6%80%D5%AF" hreflang="hy" lang="hy" title="Գլխարկ – 아르메니아어">
         Հայերեն
        </a>
       </li>
       <li class="interlanguage-link interwiki-id">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-io">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-is">
        <a class="interlanguage-link-target" href="/wiki/Hattur" hreflang="is" lang="is" title="Hattur – 아이슬란드어">
         Íslenska
        </a>
       </li>
       <li class="interlanguage-link interwiki-it">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ja">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-jv">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ka">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ku">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lb">
        <a class="interlanguage-link-target" href="/wiki/Hutt" hreflang="lb" lang="lb" title="Hutt – 룩셈부르크어">
         Lëtzebuergesch
        </a>
       </li>
       <li class="interlanguage-link interwiki-lmo">
        <li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
       </li>
       <li class="interlanguage-link interwiki-lt">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lv">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-mk">
        <a class="interlanguage-link-target" href="/wiki/%D0%A8%D0%B5%D1%88%D0%B8%D1%80" hreflang="mk" lang="mk" title="Шешир – 마케도니아어">
         Македонски
        </a>
       </li>
       <li class="interlanguage-link interwiki-ml">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ms">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-mzn">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-nah">
        <a class="interlanguage-link-target" href="/wiki/Watlasecawiloni" hreflang="nah" lang="nah" title="Watlasecawiloni – Nāhuatl">
         Nāhuatl
        </a>
       </li>
       <li class="interlanguage-link interwiki-ne">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-nl">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-nn">
        <a class="interlanguage-link-target" href="/wiki/Hatt" hreflang="nn" lang="nn" title="Hatt – 노르웨이어(니노르스크)">
         Norsk nynorsk
        </a>
       </li>
       <li class="interlanguage-link interwiki-no">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-nrm">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-oc">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-pa">
        <a class="interlanguage-link-target" href="/wiki/%E0%A8%9F%E0%A9%8B%E0%A8%AA%E0%A9%80" hreflang="pa" lang="pa" title="ਟੋਪੀ – 펀잡어">
         ਪੰਜਾਬੀ
        </a>
       </li>
       <li class="interlanguage-link interwiki-pdc">
        <a class="interlanguage-link-target" href="/wiki/Hut" hreflang="pdc" lang="pdc" title="Hut – Pennsylvania German">
         Deitsch
        </a>
       </li>
       <li class="interlanguage-link interwiki-pl">
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
       </li>
       <li class="interlanguage-link interwiki-pt">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-qu">
        <a class="interlanguage-link-target" href="/wiki/K%27umpu_(tsuku)" hreflang="qu" lang="qu" title="K'umpu (tsuku) – 케추아어">
         Runa Simi
        </a>
       </li>
       <li class="interlanguage-link interwiki-ro">
        <a class="interlanguage-link-target" href="/wiki/P%C4%83l%C4%83rie" hreflang="ro" lang="ro" title="Pălărie – 루마니아어">
         Română
        </a>
       </li>
       <li class="interlanguage-link interwiki-ru">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sco">
        <a class="interlanguage-link-target" href="/wiki/Hat" hreflang="sco" lang="sco" title="Hat – 스코틀랜드어">
         Scots
        </a>
       </li>
       <li class="interlanguage-link interwiki-se">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-sh">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-si">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-simple">
        <a class="interlanguage-link-target" href="/wiki/Hat" hreflang="en-simple" lang="en-simple" title="Hat – Simple English">
         Simple English
        </a>
       </li>
       <li class="interlanguage-link interwiki-sk">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-sl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-so">
        <a class="interlanguage-link-target" href="/wiki/Koofiyad" hreflang="so" lang="so" title="Koofiyad – 소말리아어">
         Soomaaliga
        </a>
       </li>
       <li class="interlanguage-link interwiki-sq">
        <a class="interlanguage-link-target" href="/wiki/Kapela" hreflang="sq" lang="sq" title="Kapela – 알바니아어">
         Shqip
        </a>
       </li>
       <li class="interlanguage-link interwiki-sr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-su">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sv">
        <a class="interlanguage-link-target" href="/wiki/Hatt" hreflang="sv" lang="sv" title="Hatt – 스웨덴어">
         Svenska
        </a>
       </li>
       <li class="interlanguage-link interwiki-sw">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-szl">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ta">
        தமிழ்[link][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
       </li>
       <li class="interlanguage-link interwiki-te">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-tg">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-th">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-tl">
        <a class="interlanguage-link-target" href="/wiki/Sumbrero" hreflang="tl" lang="tl" title="Sumbrero – 타갈로그어">
         Tagalog
        </a>
       </li>
       <li class="interlanguage-link interwiki-tr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-uk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-vec">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-vi">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-wa">
        <a class="interlanguage-link-target" href="/wiki/Tchapea" hreflang="wa" lang="wa" title="Tchapea – 왈론어">
         Walon
        </a>
       </li>
       <li class="interlanguage-link interwiki-wuu">
        <a class="interlanguage-link-target" href="/wiki/%E5%B8%BD%E5%AD%90" hreflang="wuu" lang="wuu" title="帽子 – 우어">
         吴语
        </a>
       </li>
       <li class="interlanguage-link interwiki-yi">
        <a class="interlanguage-link-target" href="/wiki/%D7%A7%D7%90%D7%A4%D7%A2%D7%9C%D7%99%D7%98%D7%A9" hreflang="yi" lang="yi" title="קאפעליטש – 이디시어">
         ייִדיש
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-zh-min-nan">
        <a class="interlanguage-link-target" href="/wiki/B%C5%8D-%C3%A1" hreflang="nan" lang="nan" title="Bō-á – Chinese (Min Nan)">
         Bân-lâm-gú
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh-yue">
        <a class="interlanguage-link-target" href="/wiki/%E5%B8%BD" hreflang="yue" lang="yue" title="帽 – Cantonese">
         粵語
        </a>
       </li>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-edit wb-langlinks-link">
        <a class="wbc-editpage" href="/wiki/Special:EntityPage/Q80151#sitelinks-wikipedia" title="언어 인터위키 링크 편집">
         링크 편집
        </a>
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 12월 3일 (월) 01:42에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     [linkx]
     
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     <a href="/wiki/Terms_of_Use/ko">
      이용 약관
     </a>
     을 참고하십시오.
     <br/>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     <a class="internal" href="g">
      Wikimedia Foundation, Inc.
     </a>
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [ahref]
      [content10[linkx]content11[linkx]content12[linkx]content13[linkx]content14]
     
    </li>
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     [linkx]
     
    </li>
    <li id="footer-places-developers">
     <a href="/wiki/Special:MyLanguage/How_to_contribute">
      개발자
     </a>
    </li>
    <li id="footer-places-cookiestatement">
     [linkx]
     
    </li>
    <li id="footer-places-mobileview">
     <a class="noprint stopMobileRedirectToggle" href="/w/index.php?title=%EB%AA%A8%EC%9E%90&amp;mobileaction=toggle_view_mobile">
      모바일 보기
     </a>
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     <a href="/">
     </a>
    </li>
    [ahref]
    
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0118
  </b>
 </body>
</html>
|<---