--->|<!DOCTYPE doctype html>
<html class="" dir="ltr" lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=device-width, user-scalable=yes" name="viewport"/>
  <meta content="MediaWiki 1.19.24" name="generator">
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords">
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
    <meta content="summary" name="twitter:card"/>
    <meta content="@getfandom" name="twitter:site"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:url"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
    <title>
     [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </title>
    <meta content="112328095453510" prefix="fb: http://www.facebook.com/2008/fbml" property="fb:app_id"/>
    <meta content="article" property="og:type"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
    <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
    <meta content="app-id=422467074, app-arguments=https://pokemon.fandom.com/ko/wiki/%EA%B8%B0%EC%88%A0_%EA%B0%95%ED%99%94_%EB%8F%84%EA%B5%AC" name="apple-itunes-app"/>
   </meta>
  </meta>
 </head>
 <body class="mediawiki ltr ns-0 ns-subject page-기술_강화_도구 oasis-breakpoints skin-oasis user-anon wiki-kopokemon">
  <div class="background-image-gradient">
  </div>
  <div class="WikiaSiteWrapper">
   <h2>
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h2>
   <div class="wikia-ad noprint" id="ad-skin">
   </div>
   <div class="wds-global-navigation-wrapper">
    <div class="wds-global-navigation wds-search-is-always-visible" id="globalNavigation">
     <div class="wds-global-navigation__content-bar-left">
      [linkx]
      
      <nav class="wds-global-navigation__links">
       [linkx]
       
       [ahref]
       
       [ahref]
       
       <div class="wds-dropdown wds-global-navigation__link-group wds-has-dark-shadow">
        <div class="wds-dropdown__toggle wds-global-navigation__dropdown-toggle wds-global-navigation__link">
         <span>
          위키
         </span>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-dropdown__content wds-global-navigation__dropdown-content">
         <ul class="wds-list wds-is-linked">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a class="wds-button wds-is-secondary wds-global-navigation__link-button" data-tracking-label="link.start-a-wiki" href="/wiki/Special:CreateNewWiki?uselang=ko">
            새 위키 만들기
           </a>
          </li>
         </ul>
        </div>
       </div>
      </nav>
     </div>
     <div class="wds-global-navigation__content-bar-right">
      <div class="wds-global-navigation__dropdown-controls">
       <form action="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:Search" class="wds-global-navigation__search-container">
        <div class="wds-global-navigation__search">
         <div class="wds-global-navigation__search-toggle">
          <svg class="wds-icon wds-icon-small wds-global-navigation__search-toggle-icon" id="wds-icons-magnifying-glass-small" viewbox="0 0 18 18" xmlns="http://www.w3.org/2000/svg">
           <path d="M11.563 11.504l-.03.029-.03.031A4.984 4.984 0 0 1 8 13c-2.757 0-5-2.243-5-5s2.243-5 5-5c2.756 0 5 2.243 5 5a4.983 4.983 0 0 1-1.437 3.504m5.144 3.789l-3.103-3.103A6.963 6.963 0 0 0 15 8c0-3.859-3.141-7-7-7-3.86 0-7 3.141-7 7s3.14 7 7 7a6.956 6.956 0 0 0 4.189-1.396l3.103 3.103a1.001 1.001 0 0 0 1.415-1.414" fill-rule="evenodd">
           </path>
          </svg>
          <svg class="wds-icon wds-global-navigation__search-toggle-icon" id="wds-icons-magnifying-glass" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
           <path d="M10.5 18C6.364 18 3 14.636 3 10.5S6.364 3 10.5 3 18 6.364 18 10.5 14.636 18 10.5 18m12.207 3.293l-4.823-4.822A9.455 9.455 0 0 0 20 10.5C20 5.262 15.738 1 10.5 1S1 5.262 1 10.5 5.262 20 10.5 20c2.26 0 4.338-.793 5.97-2.115l4.823 4.822a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414">
           </path>
          </svg>
          <span class="wds-global-navigation__search-toggle-text">
           검색
          </span>
         </div>
         <div class="wds-dropdown wds-global-navigation__search-dropdown wds-no-chevron wds-has-dark-shadow">
          <div class="wds-dropdown__toggle wds-global-navigation__search-input-wrapper">
           <button class="wds-button wds-is-text wds-global-navigation__search-close" type="button">
            <svg class="wds-icon wds-icon-tiny wds-global-navigation__search-close-icon" id="wds-icons-close-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
             <defs>
              <path d="M7.426 6.001l4.278-4.279A1.008 1.008 0 1 0 10.278.296L6 4.574 1.723.296A1.008 1.008 0 1 0 .295 1.722l4.278 4.28-4.279 4.277a1.008 1.008 0 1 0 1.427 1.426L6 7.427l4.278 4.278a1.006 1.006 0 0 0 1.426 0 1.008 1.008 0 0 0 0-1.426L7.425 6.001z" id="close-tiny">
              </path>
             </defs>
             <use fill-rule="evenodd" xlink:href="#close-tiny">
             </use>
            </svg>
           </button>
           <button class="wds-button wds-global-navigation__search-submit" data-tracking-label="search">
            <svg class="wds-icon wds-icon-small wds-global-navigation__search-submit-icon" id="wds-icons-arrow-small" viewbox="0 0 18 18" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
             <defs>
              <path d="M8 17a.997.997 0 0 1-.707-.293l-7-7A.983.983 0 0 1 0 9.003v-.006a.988.988 0 0 1 .293-.704l7-7a.999.999 0 1 1 1.414 1.414L3.414 8H17a1 1 0 1 1 0 2H3.414l5.293 5.293A.999.999 0 0 1 8 17" id="arrow-small">
              </path>
             </defs>
             <use xlink:href="#arrow-small">
             </use>
            </svg>
           </button>
          </div>
         </div>
        </div>
       </form>
       <div class="wds-dropdown wds-global-navigation__user-menu wds-has-dark-shadow wds-global-navigation__user-anon">
        <div class="wds-dropdown__toggle">
         <div class="wds-avatar" title="">
          <svg class="wds-avatar__image" id="wds-icons-avatar" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <path d="M12 11c-.965 0-1.75-.785-1.75-1.75S11.035 7.5 12 7.5s1.75.785 1.75 1.75S12.965 11 12 11m0-5.5a3.754 3.754 0 0 0-3.75 3.75A3.754 3.754 0 0 0 12 13a3.754 3.754 0 0 0 3.75-3.75A3.754 3.754 0 0 0 12 5.5m7.679 12.914c-1.987-2.104-4.727-3.289-7.679-3.289-2.953 0-5.692 1.185-7.679 3.289A9.955 9.955 0 0 1 2 12C2 6.486 6.486 2 12 2s10 4.486 10 10a9.956 9.956 0 0 1-2.321 6.414M12 22a9.995 9.995 0 0 1-6.25-2.187c1.613-1.719 3.844-2.688 6.25-2.688s4.637.969 6.249 2.688A9.993 9.993 0 0 1 12 22m0-22C5.383 0 0 5.383 0 12c0 3.268 1.294 6.33 3.651 8.63l.012.013A12 12 0 0 0 12 24h.036a12.008 12.008 0 0 0 8.306-3.363C22.701 18.341 24 15.273 24 12c0-6.617-5.383-12-12-12" id="user-avatar-a">
            </path>
           </defs>
           <use fill-rule="evenodd" xlink:href="#user-avatar-a">
           </use>
          </svg>
         </div>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-dropdown__content wds-is-right-aligned">
         <ul class="wds-list wds-has-lines-between">
          <li>
           <a class="wds-button wds-is-full-width" data-tracking-label="account.sign-in" href="/signin?redirect=https%3A%2F%2Fpokemon.fandom.com%2Fko%2Fwiki%2F%25EA%25B8%25B0%25EC%2588%25A0_%25EA%25B0%2595%25ED%2599%2594_%25EB%258F%2584%25EA%25B5%25AC&amp;uselang=ko" rel="nofollow">
            로그인
           </a>
          </li>
          <li>
           <div class="wds-global-navigation__user-menu-dropdown-caption">
            아직 계정이 없으신가요?
           </div>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="wds-global-navigation__start-a-wiki">
        [linkx]
        
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="banner-notifications-placeholder">
   </div>
   <div class="WikiaTopAds" id="WikiaTopAds">
    <div class="WikiaTopAdsInner">
     <div class="wikia-ad noprint default-height" id="hivi_leaderboard">
     </div>
     <div class="wikia-ad noprint default-height" id="top_leaderboard">
     </div>
    </div>
    <div class="wikia-ad noprint default-height" id="invisible_skin">
    </div>
   </div>
   <div class="wikia-ad noprint" id="floor_adhesion">
   </div>
   <div class="wikia-ad noprint" id="invisible_high_impact_2">
   </div>
   <div id="top_leaderboard_ab">
   </div>
   <header class="wds-community-header">
    <div class="wds-community-header__wordmark" data-tracking="wordmark-image">
     [ahref]
     
    </div>
    <div class="wds-community-header__top-container">
     <div class="wds-community-header__sitename" data-tracking="sitename">
      [ahref]
      
     </div>
     <div class="wds-community-header__counter" data-tracking="counter">
      <span class="wds-community-header__counter-value">
       10,668
      </span>
      <span class="wds-community-header__counter-label">
       문서
      </span>
     </div>
     <div class="wds-community-header__wiki-buttons wds-button-group">
      [linkx]
      
     </div>
    </div>
    <nav class="wds-community-header__local-navigation">
     <ul class="wds-tabs">
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         [linkx]
         
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         [ahref]
         
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li class="wds-dropdown-level-2">
           [linkx]
           
           <div class="wds-is-not-scrollable wds-dropdown-level-2__content">
            <ul class="wds-list wds-is-linked">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a data-tracking="custom-level-3" href="/ko/wiki/%EC%A0%84%EA%B5%AD%EB%8F%84%EA%B0%90/1%EC%84%B8%EB%8C%80">
               전국도감/1세대
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a data-tracking="custom-level-3" href="/ko/wiki/%ED%94%BC%EC%B9%B4%EC%B8%84_(%ED%8F%AC%EC%BC%93%EB%AA%AC)">
               피카츄 (포켓몬)
              </a>
             </li>
            </ul>
           </div>
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         [ahref]
         
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-tracking="custom-level-2" href="/ko/wiki/%EA%B2%8C%EC%8B%9C%ED%8C%90:%EB%AC%B8%EC%9D%98%ED%95%98%EA%B8%B0">
            문의하기
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         [ahref]
         
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         <svg class="wds-icon-tiny wds-icon" id="wds-icons-book-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M3.5 3C2.673 3 2 3.673 2 4.5v2.338c.91-.434 2.09-.434 3 0V4.5c0-.397-.159-.785-.437-1.063A1.513 1.513 0 0 0 3.5 3m5 3.5c.537 0 1.045.121 1.5.338V4.5c0-.397-.159-.785-.437-1.063A1.502 1.502 0 0 0 7 4.5v2.338A3.473 3.473 0 0 1 8.5 6.5M11 11a1 1 0 0 1-1-1c0-.827-.673-1.5-1.5-1.5S7 9.173 7 10a1 1 0 1 1-2 0c0-.827-.673-1.5-1.5-1.5S2 9.173 2 10a1 1 0 1 1-2 0V4.5a3.504 3.504 0 0 1 5.977-2.477l.026.027A3.489 3.489 0 0 1 8.5 1c.937 0 1.817.363 2.477 1.023A3.524 3.524 0 0 1 12 4.5V10a1 1 0 0 1-1 1" id="book-tiny">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#book-tiny">
          </use>
         </svg>
         <span>
          둘러보기
         </span>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           <a data-tracking="explore-activity" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:WikiActivity">
            위키 활동 내역
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-tracking="explore-community" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:Community">
            커뮤니티
           </a>
          </li>
          <li>
           <a data-tracking="explore-videos" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:Videos">
            동영상
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-tabs__tab-label">
        <a data-tracking="forum" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:Forum">
         <svg class="wds-icon-tiny wds-icon" id="wds-icons-comment-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M4.5 2c-.668 0-1.293.26-1.757.731A2.459 2.459 0 0 0 2 4.5c0 1.235.92 2.297 2.141 2.47A1 1 0 0 1 5 7.96v.626l1.293-1.293A.997.997 0 0 1 7 7h.5c.668 0 1.293-.26 1.757-.731.483-.476.743-1.1.743-1.769C10 3.122 8.878 2 7.5 2h-3zM4 12a1 1 0 0 1-1-1V8.739A4.52 4.52 0 0 1 0 4.5c0-1.208.472-2.339 1.329-3.183A4.424 4.424 0 0 1 4.5 0h3C9.981 0 12 2.019 12 4.5a4.432 4.432 0 0 1-1.329 3.183A4.424 4.424 0 0 1 7.5 9h-.086l-2.707 2.707A1 1 0 0 1 4 12z" id="comment-tiny">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#comment-tiny">
          </use>
         </svg>
         <span>
          포럼
         </span>
        </a>
       </div>
      </li>
     </ul>
    </nav>
   </header>
   <section class="WikiaPage V2" id="WikiaPage" onclick="">
    <div class="WikiaPageBackground" id="WikiaPageBackground">
    </div>
    <div class="WikiaPageContentWrapper">
     <header class="page-header" id="PageHeader">
      <div class="page-header__main">
       <div class="page-header__categories">
        <span class="page-header__categories-in" data-tracking="categories-top-in">
         분류:
        </span>
        <div class="page-header__categories-links">
         [linkx]
         
        </div>
       </div>
       <h1 class="page-header__title">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h1>
      </div>
      <div class="page-header__contribution">
       <div>
       </div>
       <div class="page-header__contribution-buttons">
        <div class="wds-button-group">
         [ahref]
         
         <div class="wds-dropdown">
          <div class="wds-button wds-dropdown__toggle">
           <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <defs>
             <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
             </path>
            </defs>
            <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
            </use>
           </svg>
          </div>
          <div class="wds-dropdown__content wds-is-not-scrollable wds-is-right-aligned">
           <ul class="wds-list wds-is-linked">
            <li>
             <a data-tracking="ca-history-dropdown" href="/ko/wiki/%EA%B8%B0%EC%88%A0_%EA%B0%95%ED%99%94_%EB%8F%84%EA%B5%AC?action=history" id="ca-history">
              역사
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        [linkx]
        
       </div>
      </div>
     </header>
     <hr class="page-header__separator"/>
     <article class="WikiaMainContent" id="WikiaMainContent">
      <div class="WikiaMainContentContainer" id="WikiaMainContentContainer">
       <div class="WikiaArticle" id="WikiaArticle">
        <div class="home-top-right-ads">
        </div>
        <div class="mw-content-ltr mw-content-text" dir="ltr" id="mw-content-text" lang="ko">
         <p>
          포켓몬에게 지니게 하였을 때 특정 타입 기술의 위력이 강화되는 도구.
         </p>
         <p>
          3세대부터는 기술 위력의 10%, 4세대부터는 기술 위력의 20%가 상승한다.
         </p>
         <nav class="toc" data-loaded="false" id="toc">
          <div id="toctitle">
           <h2>
            <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
           </h2>
           <span class="toctoggle">
            [
            [ahref]
            
            ]
           </span>
          </div>
          <ol>
          </ol>
         </nav>
         <h2>
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              검은띠
             </b>
            </big>
            <br/>
            くろおび
            <br/>
            Black Belt
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               마음을 긴장시키는 띠. 지니게 하면 격투타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               마음을 긴장시키는 띠. 지니게 하면 격투타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 수방 (수요일)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의
               [linkx]
               
               ゴロウ에게 5번 승리 후, 괴력몬이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               [ahref]
               
               의 포켓몬이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 민가의 노인에게 특정 레벨의 포켓몬 제시 (반복 획득 가능)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 수방 (수요일)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%88%98%ED%96%89%EC%9D%98_%EB%B0%94%EC%9C%84%EB%8F%99%EA%B5%B4" title="수행의 바위동굴">
                수행의 바위동굴
               </a>
               에서 얻을 수 있다,야생의
               [ahref]
               
               가 지니고있다.(블랙,5%)
               <br/>
               <a href="/ko/wiki/%EC%84%A4%ED%99%94%EC%8B%9C%ED%8B%B0" title="설화시티">
                설화시티
               </a>
               의
               [linkx]
               
               에서 얻는다,야생의
               [ahref]
               
               가 지니고있음(5%)
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               (
               [linkx]
               
               에 숨어있는
               [ahref]
               
               이 가끔씩 떨어트린다.), 야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/3/31/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EA%B2%80%EC%9D%80%EC%95%88%EA%B2%BD.png/revision/latest?cb=20110406092755&amp;path-prefix=ko">
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              검은안경
             </b>
            </big>
            <br/>
            くろいメガネ
            <br/>
            BlackGlasses
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               괴상하게 보이는 안경. 지니게 하면 악 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               괴상하게 보이는 안경. 지니게 하면 악 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               비밀 출구의 안경 찾는 사람 주위(다우징)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 민가에 있는 남성과 오전 10시~ 오후 7시59분 사이에 대화한다
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               [ahref]
               
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               ,
               [ahref]
               
               (모래먼지)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              금강옥
             </b>
            </big>
            <br/>
            こんごうだま
            <br/>
            Adamant Orb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            5000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            4세대
           </td>
          </tr>
          <tr>
           <li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               이 도구를 가방에 넣은 상태에서
               [linkx]
               
               에 가면 금강구슬을 채집할 확률이 상승한다.
               <br/>
               [linkx]
               
               에서 이 도구를 획득하면
               [ahref]
               
               에서 디아루가를 만날 수 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               디아루가에게 지니게 하면 드래곤과 강철 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               디아루가에게 지니게 하면 드래곤과 강철 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [content7][content8][content9][linkx]
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               D:
               [ahref]
               
               <br/>
               Pt:
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               스토리 클리어 후
               [ahref]
               
               가
               [linkx]
               
               에서 준다.
               <br/>
               [linkx]
               
               에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/128%EB%B2%88%EC%88%98%EB%A1%9C" title="128번수로">
                128번수로
               </a>
               에서 땅에 감싸진 곳에
               [linkx]
               
               포인트에서
               [linkx]
               
               후 찾는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
                [content4[linkx]content5[linkx]content6[linkx]content7]
               
               의 쇼핑몰
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              금속코트
             </b>
            </big>
            <br/>
            メタルコート
            <br/>
            Metal Coat
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 1000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 지니게 하면 강철 타입 기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               [linkx]
               
               에게 지니게 한뒤
               [linkx]
               
               을 하면
               [ahref]
               
               으로 진화한다.
               <br/>
               [linkx]
               
               에게 지니게 한뒤
               [linkx]
               
               을 하면
               [ahref]
               
               으로 진화한다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               특수한 금속 장막. 지니게 하면 강철 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               발전소
               <br/>
               야생의
               [ahref]
               
               ,
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EA%B0%95%EC%B2%A0%EC%84%AC" title="강철섬">
                강철섬
               </a>
               <br/>
               야생의
               [ahref]
               
               ,
               [linkx]
               
               ,
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               ,
               <a href="/ko/wiki/%ED%83%9C%EC%97%BD%EC%82%B0" title="태엽산">
                태엽산
               </a>
               <br/>
               [linkx]
               
               ,
               [linkx]
               
               ,
               [linkx]
               
               (고물상),
               [linkx]
               
               (
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
               )
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%BD%94%EC%9D%BC" title="코일">
                코일
               </a>
               ,
               [ahref]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              기적의씨
             </b>
            </big>
            <br/>
            きせきのタネ
            <br/>
            Miracle Seed
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               생명이 깃든 씨앗. 지니게 하면 풀 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               생명이 깃든 씨앗. 지니게 하면 풀 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               북쪽 출구 동부에 있는 소녀가 준다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 꽃향기의 꽃밭
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               <b>
                [linkx]
                
                :
               </b>
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               [linkx]
               
               1층에 있는
               [linkx]
               
               에게서 받는다.
               <br/>
               [linkx]
               
               중앙광장의 큰나무 주변에 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의 특대 호바귀가 100%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 여자아이에게 받는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               ,
               [linkx]
               
               , 야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              녹지않는얼음
             </b>
            </big>
            <br/>
            とけないこおり
            <br/>
            NeverMeltIce
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               열을 가까이하지 않게 하는 얼음. 지니게 하면 얼음 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               열을 가까이하지 않게 하는 얼음. 지니게 하면 얼음 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               얼음방(썰물때 입장 가능)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%96%BC%EC%96%B4%EB%B6%99%EC%9D%80_%ED%8F%AD%ED%8F%AC%EC%9D%98_%EB%8F%99%EA%B5%B4" title="얼어붙은 폭포의 동굴">
                얼어붙은 폭포의 동굴
               </a>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               Pt:
               <a href="/ko/wiki/%EC%B2%9C%EA%B4%80%EC%82%B0" title="천관산">
                천관산
               </a>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의
               [ahref]
               
               가 지니고 있다.
               <br/>
               <a href="/ko/wiki/%EC%9A%A9%EB%82%98%EC%84%A0%ED%83%91" title="용나선탑">
                용나선탑
               </a>
               에서
               [ahref]
               
               를 통해서 얻는다.
               <b>
                (겨울)
               </b>
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [linkx]
               
               ,
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%ED%94%84%EB%A6%AC%EC%A7%80%EC%98%A4" title="프리지오">
                프리지오
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               ,
               [linkx]
               
               (
               [ahref]
               
               이벤트), 야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/c/c4/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EB%8F%85%EB%B0%94%EB%8A%98.png/revision/latest?cb=20110406092843&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              독바늘
             </b>
            </big>
            <br/>
            どくバリ
            <br/>
            Poison Barb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               독이 있는 작은 침. 지니게 하면 독타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 금순 (금요일)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%84%A0%EC%9D%B8%EC%99%95" title="선인왕">
                선인왕
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [ahref]
               
               ,
               [linkx]
               
               ,
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%84%A0%EC%9D%B8%EC%99%95" title="선인왕">
                선인왕
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 금순 (금요일)
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%8F%85%EC%B9%A8%EB%B6%95" title="독침붕">
                독침붕
               </a>
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%99%95%EB%88%88%ED%95%B4" title="왕눈해">
                왕눈해[link][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
               </a>
               ,
               [linkx]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               [linkx]
               
               의
               [ahref]
               
               이 있던 곳에서 아래로 가면 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [linkx]
                [content18][content19][linkx][content20][linkx][content1]
               
               가 지니고 있다(5%)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               ,
               <a href="/ko/wiki/%ED%95%98%EB%85%B8%ED%95%98%EB%85%B8%EB%B9%84%EC%B9%98" title="하노하노비치">
                하노하노비치
               </a>
               (수면의 그림자에서 등장하는 포켓몬을 쓰러트리거나 포획할 시 일정한 확률로 얻는다.), 야생의
               [ahref]
               
               ,
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/0/02/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EB%94%B1%EB%94%B1%ED%95%9C%EB%8F%8C.png/revision/latest?cb=20110406092852&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              딱딱한돌
             </b>
            </big>
            <br/>
            かたいいし
            <br/>
            Hard Stone
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               절대 깨지지 않는 돌. 지니게 하면 바위타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 목인
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%A7%80%ED%95%98%ED%86%B5%EB%A1%9C" title="지하통로">
                지하통로
               </a>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 목인(목요일)
               <br/>
               <b>
                [linkx]
                
                :
               </b>
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               이 지니고 있다.
               <br/>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               ,
               [linkx]
               
               (
               [ahref]
               
               ),
               [linkx]
               
               (
               [linkx]
               
               ),
               [linkx]
               
               (
               [ahref]
               
               ),
               <br/>
               [ahref]
               
               (
               [ahref]
               
               ),
               [ahref]
               
               (
               [ahref]
               
               ),
               [ahref]
               
               (
               [linkx]
               
               ),
               [ahref]
               
               (
               [linkx]
               
               ),
               <br/>
               [linkx]
               
               <br/>
               야생의 가보리가 지니고 있다.(5%)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [ahref]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              목탄
             </b>
            </big>
            <br/>
            もくたん
            <br/>
            Charcoal
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            4900,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               물건을 태우는 연료. 지니게 하면 불타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [content20[linkx]content1[linkx]content2]
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               한약방의 노인이 준다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               바위밀기 후
               <br/>
               배틀컴퍼니 1층에 있는
               [linkx]
               
               에게서 받는다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%B2%A8%EB%9D%BC%ED%99%94%EC%82%B0%EA%B3%B5%EC%9B%90" title="벨라화산공원">
                벨라화산공원
               </a>
               , 야생의
               [ahref]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              백옥
             </b>
            </big>
            <br/>
            しらたま
            <br/>
            Lustrous Orb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            5000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            4세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               [linkx]
               
               에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EB%AC%BC_(%ED%83%80%EC%9E%85)" title="물 (타입)">
                물
               </a>
               과
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               오직
               <a class="mw-redirect" href="/ko/wiki/%ED%8E%84%EA%B8%B0%EC%95%84" title="펄기아">
                펄기아
               </a>
               가 지니고 있을 때만 효과가 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               이 도구를 가방에 넣은 상태에서
               <a href="/ko/wiki/%EC%A7%80%ED%95%98%ED%86%B5%EB%A1%9C" title="지하통로">
                지하통로
               </a>
               에 가면 하양구슬을 채집할 확률이 상승한다.
               <br/>
               [linkx]
               
               에서 이 도구를 획득하면
               <a href="/ko/wiki/%EC%B0%BD%EA%B8%B0%EB%91%A5" title="창기둥">
                창기둥
               </a>
               에서 펄기아를 만날 수 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               펄기아에게 지니게 하면 드래곤과 물 타입 기술의 위력이 올라가는 아름답게 반짝이는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               펄기아에게 지니게 하면 드래곤과 물 타입 기술의 위력이 올라가는 아름답게 반짝이는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               P:
               [ahref]
               
               <br/>
               Pt:
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               [linkx]
               
               에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/129%EB%B2%88%EC%88%98%EB%A1%9C" title="129번수로">
                129번수로
               </a>
               에서 낚시꾼 주변
               <a href="/ko/wiki/%EB%8B%A4%EC%9D%B4%EB%B9%99" title="다이빙">
                다이빙
               </a>
               포인트에
               [ahref]
               
               후 오른쪽 위쪽부분에서 찾는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 쇼핑몰
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              백금옥
             </b>
            </big>
            <br/>
            はっきんだま
            <br/>
            Griseous Orb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            5000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            4세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               [ahref]
               
               에게 이 도구를 지니게 하면
               [linkx]
               
               와
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               오직
               [linkx]
               
               가 지니고 있을 때만 효과가 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               기라티나에게 이 도구를 지니게 하면
               [ahref]
               
               의 밖에서도 오리진폼을 유지한다.
               <br/>
               이 도구는 교환할 수 없다. (4세대)
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               기라티나에게 지니게 하면 드래곤과 고스트 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               기라티나에게 지니게 하면 드래곤과 고스트 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               Pt:
               <a href="/ko/wiki/%EA%B7%80%ED%98%BC%EB%8F%99%EA%B5%B4" title="귀혼동굴">
                귀혼동굴
               </a>
               의 깨어진 세계
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               [linkx]
               
               에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에서 오른쪽 윗부분의
               [linkx]
               
               포인트에
               <a href="/ko/wiki/%EB%8B%A4%EC%9D%B4%EB%B9%99" title="다이빙">
                다이빙
               </a>
               후 찾는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 쇼핑몰
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              부드러운모래
             </b>
            </big>
            <br/>
            やわらかいすな
            <br/>
            Soft Sand
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               만지면 보슬보슬한 모래. 지니게 하면 땅 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               만지면 보슬보슬한 모래. 지니게 하면 땅 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 파도타기
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/109%EB%B2%88%EC%88%98%EB%A1%9C" title="109번수로">
                109번수로
               </a>
               해변 동남쪽의
               [linkx]
               
               이 준다.
               <br/>
               야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 토영 (토요일)
               <br/>
               야생의
               [ahref]
               
               ,
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               [linkx]
               
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              신비의물방울
             </b>
            </big>
            <br/>
            しんぴのしずく
            <br/>
            Mystic Water
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               지니게 하면 물타입의 기술의 위력이 올라간다
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               물방울 모양의 보석. 지니게 하면 물 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AC%B4%EA%B6%81%EC%8B%9C%ED%8B%B0" title="무궁시티">
                무궁시티
               </a>
               서쪽의 낚시꾼
               <i>
                (
                <a href="/ko/wiki/%ED%8C%8C%EB%8F%84%ED%83%80%EA%B8%B0" title="파도타기">
                 파도타기
                </a>
                )
               </i>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AC%B4%EC%A7%80%EA%B0%9C%EC%8B%9C%ED%8B%B0" title="무지개시티">
                무지개시티
               </a>
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 파도타기
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%88%98%ED%96%89%EC%9D%98_%EB%B0%94%EC%9C%84%EB%8F%99%EA%B5%B4" title="수행의 바위동굴">
                수행의 바위동굴
               </a>
               에서 얻을 수 있다.
               <br/>
               배틀컴퍼니 1층에 있는
               [linkx]
               
               에게서 받는다. 또는 4번도로 왼쪽 낚시터에서 주울 수 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%9D%BC%ED%94%84%EB%9D%BC%EC%8A%A4" title="라프라스">
                라프라스
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 포켓몬 교환으로 얻은 포켓몬이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               (
               <a href="/ko/wiki/%EC%88%98%EB%A0%A8_(%EA%B2%8C%EC%9E%84)" title="수련 (게임)">
                수련
               </a>
               의 시련 후), 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%BD%98%EC%B9%98" title="콘치">
                콘치
               </a>
               ,
               [linkx]
               
               ,
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%BA%90%EC%8A%A4%ED%90%81" title="캐스퐁">
                캐스퐁
               </a>
               ,
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/8/8b/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EC%8B%A4%ED%81%AC%EC%8A%A4%EC%B9%B4%ED%94%84.png/revision/latest?cb=20110406092947&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              실크스카프
             </b>
            </big>
            <br/>
            シルクのスカーフ
            <br/>
            Silk Scarf
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            3세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               감촉이 좋은 스카프. 지니게 하면 노말 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               감촉이 좋은 스카프.지니게 하면 노말타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AC%B4%EB%A1%9C%EB%A7%88%EC%9D%84" title="무로마을">
                무로마을
               </a>
               선착장 옆 민가에 있는 남자가 준다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%9E%A5%EB%A7%89%EC%8B%9C%ED%8B%B0" title="장막시티">
                장막시티
               </a>
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               금빛시티 게임코너
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               앞 풀숲
               <br/>
               <a href="/ko/wiki/%EB%AA%A8%EB%9E%80%EB%A7%8C%EC%BD%A4%EB%B9%84%EB%82%98%ED%8A%B8" title="모란만콤비나트">
                모란만콤비나트
               </a>
               담장너머
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 향로가게 위쪽의 민가
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [ahref]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              예리한부리
             </b>
            </big>
            <br/>
            するどいくちばし
            <br/>
            Sharp Beak
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               길고 뾰족한 부리. 지니게 하면 비행 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br>
                [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
               </br>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 월희 (월요일)
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EA%B9%A8%EB%B9%84%EC%B0%B8" title="깨비참">
                깨비참
               </a>
               ,
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 월희 (월요일)
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EA%B9%A8%EB%B9%84%EC%B0%B8" title="깨비참">
                깨비참
               </a>
               ,
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 카고서비스 건물에서 베테랑 트레이너가 준다.
               <br/>
               [ahref]
               
               의 카고서비스 건물에서 베테랑 트레이너가 준다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%91%90%EB%91%90" title="두두">
                두두
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/b/b0/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EC%9A%A9%EC%9D%98%EC%9D%B4%EB%B9%A8.png/revision/latest?cb=20110406092957&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              용의이빨
             </b>
            </big>
            <br/>
            りゅうのキバ
            <br/>
            Dragon Fang
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               단단하고 날카로운 이빨. 지니게 하면 드래곤 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%9C%A0%EC%84%B1%EC%9D%98_%ED%8F%AD%ED%8F%AC" title="유성의 폭포">
                유성의 폭포
               </a>
               1층 뒷방 위에 있는
               [linkx]
               
               タケル에게 5번 승리 후,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의 신뇽이 5%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의
               [linkx]
               
               가 5%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%9A%A9%EC%9D%98_%EA%B5%B4" title="용의 굴">
                용의 굴
               </a>
               <br/>
               야생의
               [ahref]
               
               가 5%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               용나선탑 안에 있다.
               <br/>
               [linkx]
               
               의 동굴 위에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%95%84%EA%B3%B5%EC%9D%B4" title="아공이">
                아공이
               </a>
               ,
               <a class="mw-redirect" href="/ko/wiki/%ED%81%AC%EB%A6%AC%EB%A7%8C" title="크리만">
                크리만
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               1차 엔딩 후
               [ahref]
               
               의 식당 2층, 야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/6/6d/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EC%9D%80%EB%B9%9B%EA%B0%80%EB%A3%A8.png/revision/latest?cb=20110406093002&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              은빛가루
             </b>
            </big>
            <br/>
            ぎんのこな
            <br/>
            Silver Powder
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               은색으로 반짝이는 가루. 지니게 하면 벌레 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의
               [linkx]
               
               ミキオ에게 5번 승리 후,
               [ahref]
               
               이 지니고 있다.
               <br/>
               야생의
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%8F%85%EC%BC%80%EC%9D%BC" title="독케일">
                독케일
               </a>
               ,
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [linkx]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <li>[link]</li>[link]<li>[link]</li>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [ahref]
               
               이 지니고 있다.
               <br/>
               <b>
                [ahref]
                
                :
               </b>
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               1차 엔딩 후
               [ahref]
               
               불카모스의 방에 야생
               [ahref]
               
               가 지니고 있다.
               <br/>
               [linkx]
               
               불카모스의 방에 야생
               [ahref]
               
               가 지니고 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              자석
             </b>
            </big>
            <br/>
            じしゃく
            <br/>
            Magnet
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               강력한 자석. 지니게 하면 전기 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 일식 (일요일)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AF%B8%EA%B6%81%EC%9D%98_%EB%8C%80%EC%A0%80%ED%83%9D" title="미궁의 대저택">
                미궁의 대저택
               </a>
               6번째 도전 보상
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%A0%88%EC%96%B4%EC%BD%94%EC%9D%BC" title="레어코일">
                레어코일
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               강철섬
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 일식 (일요일)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%A0%84%EA%B8%B0%EB%8F%8C%EB%8F%99%EA%B5%B4" title="전기돌동굴">
                전기돌동굴
               </a>
               <br/>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AF%B8%EA%B6%81%EC%9D%98_%EB%8C%80%EC%A0%80%ED%83%9D" title="미궁의 대저택">
                미궁의 대저택
               </a>
               (미궁 5)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              저주의부적
             </b>
            </big>
            <br/>
            のろいのおふだ
            <br/>
            Spell Tag
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               괴상하고 으스스한 부적. 지니게 하면 고스트 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 토영(토요일)
               <br/>
               야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               Pt:
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AC%B4%EC%A7%80%EA%B0%9C%EC%8B%9C%ED%8B%B0" title="무지개시티">
                무지개시티
               </a>
               의 무지개맨션 옥상
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               타워오브해븐
               <br/>
               야생의
               [ahref]
               
               가 지니고 있다.
               <br/>
               [linkx]
               
               의
               [linkx]
               
               에 있는 할머니에게서 받는다.
               <a href="/ko/wiki/%EC%8A%A4%ED%8A%B8%EB%A0%88%EC%9D%B8%EC%A0%80_%ED%95%98%EC%9A%B0%EC%8A%A4" title="스트레인저 하우스">
                스트레인저 하우스
               </a>
               의 책방에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               ,
               [ahref]
               
               (모래구멍), 야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              휘어진스푼
             </b>
            </big>
            <br/>
            まがったスプーン
            <br/>
            TwistedSpoon
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EC%97%90%EC%8A%A4%ED%8D%BC_(%ED%83%80%EC%9E%85)" title="에스퍼 (타입)">
                에스퍼
               </a>
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               염동력을 담은 숟가락. 지니게 하면 에스퍼 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%BC%EC%B9%B4%EC%B8%84" title="포켓몬스터 피카츄">
                포켓몬스터 피카츄
               </a>
               에서 데려온
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%9C%A4%EA%B2%94%EB%9D%BC" title="윤겔라">
                윤겔라
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%9C%A4%EA%B2%94%EB%9D%BC" title="윤겔라">
                윤겔라
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 화홍 (화요일)
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
                <li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               지하 남서쪽 초능력자 근처에 있다.
               <br/>
               구름시티 지하 하수도에서 주울 수 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%99%A9%ED%8F%90%ED%95%B4%EC%A7%84_%ED%98%B8%ED%85%94" title="황폐해진 호텔">
                황폐해진 호텔
               </a>
               , 야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               (외곽 해안가), 야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              물방울리본
             </b>
            </big>
            <br/>
            みずたまリボン
            <br/>
            Polkadot Bow
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 10% 상승한다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               3세대에서
               [linkx]
               
               로 대체되었다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               지니게 하면 노말타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table cellpadding="10" class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td colspan="2">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [ahref]
                
               </b>
               1세대에서 데려온
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              핑크리본
             </b>
            </big>
            <br/>
            ピンクのリボン
            <br/>
            Pink Bow
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 10% 상승한다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               3세대에서
               [ahref]
               
               로 대체되었다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               지니게 하면 노말타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table cellpadding="10" class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td colspan="2">
               <b>
                [linkx]
                
                [linkx]
                
               </b>
               [ahref]
               
               의
               <b>
                화홍
               </b>
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
               ,
               [linkx]
               
               [linkx]
               
               이벤트 완료 후 4층 스튜디오에 있는
               [linkx]
               
               (나옹 주인)
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <hr>
          <table class="navbox mw-collapsible" data-collapsetext="숨기기" data-expandtext="보이기">
           <tr>
            <th class="navbox__title" colspan="2" scope="col">
             <span class="navbox__vde">
              [linkx]
              
              ᛫
              [linkx]
              
              ᛫
              <a class="text" href="/ko/wiki/%ED%8B%80:%EB%8F%84%EA%B5%AC?action=edit">
               <span style="color:#111;">
                편집
               </span>
              </a>
             </span>
             [linkx]
             
            </th>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row">
            <th class="navbox__group" scope="row">
             일반 도구
            </th>
            <td class="navbox__list">
             [ahref]
             
             (
             <a href="/ko/wiki/%EB%AA%AC%EC%8A%A4%ED%84%B0%EB%B3%BC/%EC%A2%85%EB%A5%98" title="몬스터볼/종류">
              종류
             </a>
             ) ᛫
             <a href="/ko/wiki/%EB%B0%B0%ED%8B%80%EC%9A%A9_%EB%8F%84%EA%B5%AC" title="배틀용 도구">
              배틀용 도구
             </a>
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EC%A1%B0%EA%B0%81" title="조각">
              조각
             </a>
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row alt">
            <th class="navbox__group" scope="row">
             회복약
            </th>
            <td class="navbox__list">
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             <a href="/ko/wiki/%EC%83%81%ED%83%9C%ED%9A%8C%EB%B3%B5_%EB%8F%84%EA%B5%AC" title="상태회복 도구">
              상태회복 도구
             </a>
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row">
            <th class="navbox__group" scope="row">
             열매
            </th>
            <td class="navbox__list">
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row alt">
            <th class="navbox__group" scope="row">
             장식품
            </th>
            <td class="navbox__list">
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             <a href="/ko/wiki/%EA%B5%BF%EC%A6%88" title="굿즈">
              굿즈
             </a>
             (
             [linkx]
             
             )
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row">
            <th class="navbox__group" scope="row">
             [ahref]
             
            </th>
            <td class="navbox__list">
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EB%85%B8%EB%A0%A5%EC%B9%98_%EC%A1%B0%EC%A0%88_%EB%8F%84%EA%B5%AC" title="노력치 조절 도구">
              노력치 조절 도구
             </a>
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EB%B0%B0%ED%8B%80_%EC%A0%84%EC%9A%A9_%EB%8F%84%EA%B5%AC" title="배틀 전용 도구">
              배틀 전용 도구
             </a>
             ᛫
             [ahref]
             
             ᛫
             <strong class="selflink">
              기술 강화 도구
             </strong>
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row alt">
            <th class="navbox__group" scope="row">
             그외
            </th>
            <td class="navbox__list">
             [linkx]
             
             (
             [ahref]
             
             ,
             [linkx]
             
             ,
             [linkx]
             
             ,
             <a href="/ko/wiki/%EC%A4%91%EC%9A%94%ED%95%9C_%EB%8F%84%EA%B5%AC/4%EC%84%B8%EB%8C%80" title="중요한 도구/4세대">
              4
             </a>
             ,
             [linkx]
             
             ,
             <a href="/ko/wiki/%EC%A4%91%EC%9A%94%ED%95%9C_%EB%8F%84%EA%B5%AC/6%EC%84%B8%EB%8C%80" title="중요한 도구/6세대">
              6
             </a>
             ,
             [ahref]
             
             ) ᛫
             [ahref]
             
             ᛫
             [linkx]
             
            </td>
           </tr>
          </table>
          <noscript>
          </noscript>
         </hr>
        </div>
        <div class="printfooter">
         원본 주소 ‘
         [linkx]
         
         ’
        </div>
       </div>
       <nav class="article-categories CategorySelect articlePage" id="articleCategories">
        <div class="container">
         <div class="special-categories">
          [linkx]
          
          :
         </div>
         <ul class="categories">
          <li class="category normal" data-name="도구" data-namespace="" data-outertag="" data-sortkey="" data-type="normal">
           <span class="name">
            <a href="/ko/wiki/%EB%B6%84%EB%A5%98:%EB%8F%84%EA%B5%AC" title="분류:도구">
             도구
            </a>
           </span>
           <ul class="toolbar">
            <li class="tool editCategory sprite-small edit" title="">
            </li>
            <li class="tool removeCategory sprite-small delete" title="">
            </li>
           </ul>
          </li>
         </ul>
        </div>
       </nav>
       <div class="license-description">
        Community content is available under
        <a href="/licensing">
         CC-BY-SA
        </a>
        unless otherwise noted.
       </div>
      </div>
     </article>
     <div class="WikiaRail" id="WikiaRailWrapper">
      <div class="wikia-rail-inner" id="WikiaRail">
       <div id="top-right-boxad-wrapper">
        <div class="wikia-ad noprint default-height" id="top_boxad">
        </div>
       </div>
       <div class="loading">
       </div>
      </div>
     </div>
     <footer class="WikiaFooter notoolbar" id="WikiaFooter">
      <div id="bottomLeaderboardWrapper">
       <div class="wikia-ad noprint default-height" id="bottom_leaderboard">
       </div>
      </div>
      <div class="mcf-international" data-number-of-wiki-articles="13" id="mixed-content-footer">
       <div class="mcf-content">
        <h1 class="mcf-header">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h1>
        <div class="mcf-mosaic">
         <div class="mcf-column">
          <div class="mcf-card mcf-card-wiki-articles">
           <header class="mcf-card-wiki-articles__header">
            <span class="mcf-card-wiki-articles__header-text">
             More 포켓몬 위키
            </span>
           </header>
           <ul class="mcf-card-wiki-articles__list">
            <li class="mcf-card-wiki-articles__item">
             [linkx]
             
            </li>
            <li class="mcf-card-wiki-articles__item">
             [linkx]
             
            </li>
            <li class="mcf-card-wiki-articles__item">
             [linkx]
             
            </li>
           </ul>
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-4">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-7">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-10">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-13">
          </div>
         </div>
         <div class="mcf-column">
          <div class="mcf-card-wiki-placeholder mcf-card-sponsored-content" data-tracking="footer-card-2">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-5">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-8">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-11">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-14">
          </div>
         </div>
         <div class="mcf-column">
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-3">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-6">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-9">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-12">
          </div>
          <div class="mcf-card mcf-card-related-wikis">
           <header class="mcf-card-related-wikis__header">
            Explore Wikis
           </header>
           <ul class="mcf-card-related-wikis__list">
            <li class="mcf-card-related-wikis__item">
             [linkx]
             
            </li>
            <li class="mcf-card-related-wikis__item">
             [ahref]
             
            </li>
            <li class="mcf-card-related-wikis__item">
             <a class="mcf-card-related-wikis__item-link" data-tracking="explore-wikis-3" href="/en-spotlight-HPwizardsunite" title="Harry Potter: Wizards Unite wiki">
              [content11[linkx]content12[linkx]content13[linkx]content14]
             </a>
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
      </div>
     </footer>
    </div>
   </section>
   <footer class="wds-global-footer">
    <h2 class="wds-global-footer__header">
     [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </h2>
    <div class="wds-global-footer__main">
     <div class="wds-global-footer__fandom-sections">
      <section class="wds-global-footer__fandom-section wds-is-fandom-overview">
       <h3 class="wds-global-footer__section-header">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__fandom-section wds-is-follow-us">
       <h3 class="wds-global-footer__section-header">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       [ahref]
       
      </section>
     </div>
     <div class="wds-global-footer__wikia-sections">
      <section class="wds-global-footer__wikia-section wds-is-company-overview">
       <h3 class="wds-global-footer__section-header">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-site-overview">
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="site-overview.terms-of-use" href="/terms-of-use">
          이용 약관
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="site-overview.privacy-policy" href="/privacy-policy">
          개인정보 보호정책
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="site-overview.global-sitemap" href="/Sitemap">
          글로벌 사이트맵
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="site-overview.local-sitemap" href="/ko/wiki/Local_Sitemap">
          커뮤니티 사이트맵
         </a>
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-community">
       <h3 class="wds-global-footer__section-header">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-create-wiki">
       <span class="wds-global-footer__section-description">
        원하는 커뮤니티를 찾지 못하셨나요? 그럼 직접 원하는 커뮤니티를 만들어 보세요!
       </span>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-community-apps">
       <h3 class="wds-global-footer__section-header">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <span class="wds-global-footer__section-description">
        모바일에서도 팬덤과 함께해 보세요!
       </span>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-advertise">
       <h3 class="wds-global-footer__section-header">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
       </ul>
      </section>
     </div>
    </div>
    <div class="wds-global-footer__bottom-bar">
     <div class="wds-global-footer__bottom-bar-row wds-has-padding">
      포켓몬 위키는 팬덤의 게임 커뮤니티입니다.
     </div>
     <div class="wds-global-footer__bottom-bar-row wds-has-border-top mobile-site-link">
      [ahref]
      
     </div>
    </div>
   </footer>
   <div id="WikiaBar">
    <div class="WikiaBarWrapper hidden" id="WikiaBarWrapper">
     <div class="wikia-bar wikia-bar-anon">
      <a class="arrow" data-tooltip="숨기기" data-tooltipshow="보이기" href="#">
      </a>
      <div class="ad">
       <div class="noprint" id="WIKIA_BAR_BOXAD_1" style="width: 300px; position: relative;">
       </div>
      </div>
      <div class="message failsafe" data-messagetooltip="여기를 클릭해서 더 많은 정보를 볼 수 있습니다." data-wikiabarcontent='[{"text":"How the Twilight fandom saved a small town","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town?","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town?","href":"https:\/\/fandom.link\/Twilight"}]'>
      </div>
      [ahref]
      
      [ahref]
      
      [ahref]
      
     </div>
    </div>
    <div class="WikiaBarCollapseWrapper">
     [ahref]
     
    </div>
   </div>
   <div class="wikia-ad noprint default-height" id="gpt_flush">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0461
  </b>
 </body>
</html>
|<---