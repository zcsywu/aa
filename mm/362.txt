--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="no" http-equiv="Imagetoolbar"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
  <meta content="http://file.ssenhosting.com/data1/totostory/totostory-toto20141110.jpg?201801" property="og:image">
   <meta content="summary_large_image" name="twitter:card"/>
   <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:url"/>
   <meta content="@podbbang" name="twitter:creator"/>
   <meta content="http://file.ssenhosting.com/data1/totostory/totostory-toto20141110.jpg?201801" name="twitter:image"/>
   <noscript>
   </noscript>
  </meta>
 </head>
 <body>
  <div id="wrapper">
   <div id="header">
    <div id="top_banner" style="background-color: #ffffff;display:none;">
     <div banner_bgcolor="#FFEA00" banner_position="PC_CHANNEL_HEADER" banner_uid="13329" class="link banner_log_click bnr_header" id="bnr_header13329" style="display:none;">
      [linkx]
      
     </div>
     <button class="btn_close_banner" onclick="close_topbanner()" style="display:none;" type="button">
     </button>
    </div>
    <div id="headerTopWrap">
     <div class="header-top">
      <div class="header-nav">
       <ul>
        <li class="f-bold">
         [linkx]
         
        </li>
        <li>
         [linkx]
          [content12][content13][linkx][content14][linkx][content15][linkx][content16]
         
        </li>
        <li class="last">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="right-nav">
       <iframe frameborder="0" height="0" id="ini_plugin" name="ini_plugin" scrolling="no" src="" style="margin-bottom: 3px;" width="0">
       </iframe>
       <iframe frameborder="0" height="25" id="login_top" name="login_top" scrolling="no" src="/podbbangchnew/login_top?ch=8414&amp;cert=yes&amp;adult=no" style="margin-bottom: 3px;" width="305">
       </iframe>
      </div>
     </div>
    </div>
    <div id="header_wrap">
     <div class="header_con clearfix">
      <div class="header_left_con clearfix">
       <div class="point-area">
        <div class="cont">
         <div class="bc-desc">
          <p id="podcast_summary" style="" title="언제 어디서나 들을 수 있는 아이들을 위한 동화 이야기(Audio) 토토의 이야기 나라입니다. 
이동하는 차 안에서도, 잠들기 전 베갯머리에서도, 일상 생활 어느 곳에서든 쉽고 편하게 들을 수 있는 창작 동화 위주로 구성되어 있습니다. 매주 1편 이상 업데이트 됩니다.
※본 팟캐스트에 방송되는 콘텐츠는 무단전재를 금합니다.   storypacker@gmail.com">
           언제 어디서나 들을 수 있는 아이들을 위한 동화 이야기(Audio) 토토의 이야기 나라입니다. 
이동하는 차 안에서도, 잠들기 전 베갯머리에서도, 일상 생...
          </p>
         </div>
         <div class="col2-num">
          <ul class="clearfix">
           <li class="btn-goods" style="cursor:pointer;">
            [linkx]
            
            <span cnt="2735" id="count_goods">
             2,735
            </span>
           </li>
           <li class="favorite-no" id="count_sub_favorite">
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <p id="podcast_thumb" style="">
       </p>
       <div class="article">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <span style="line-height:1.5;">
         [카테고리]
         [ahref]
         
        </span>
        <dl id="all_title" style="">
         <dt style="height: 27px;">
          <div style="position:absolute;top:30px;">
           <p title="토토의 이야기나라 _ 창작 동화">
            토토의 이야기나라 _ 창작 동화
           </p>
          </div>
         </dt>
         <dd>
         </dd>
        </dl>
       </div>
      </div>
      <div class="header_right_con clearfix">
       <p class="rank" style="margin-left: 130px; padding: 3px 10px; border:1px solid #212121; border-radius: 3px; background-color:#424242; color:#adadad;">
        실시간 순위
       </p>
       <ul style="width: 280px;">
        <li class="front clearfix">
         <p class="rank-sum">
          24
         </p>
         <p class="rank2">
          <span>
           4
          </span>
         </p>
        </li>
       </ul>
       <div class="rank-cate-n">
        [content2][content3][linkx][content4][content5]
       </div>
      </div>
     </div>
    </div>
    <div id="container">
     <div id="con_wrap">
      <div class="live-cont" id="live_state_on" style="display:none;">
       <p class="txt">
        [linkx]
        
       </p>
       [ahref]
       
       <p class="btn-share">
        [linkx]
        
       </p>
       <p class="ico-live">
        <span>
         LIVE
        </span>
       </p>
      </div>
      <div class="live-cont live-off" id="live_state_off" style="display:none;">
       <dl>
        <dt>
         <span>
         </span>
         <span>
         </span>
        </dt>
        <dd>
         ( ~ )
        </dd>
       </dl>
       <p class="btn-share">
        [ahref]
        
       </p>
       <p class="live-time">
        <span class="" id="live_time">
        </span>
       </p>
      </div>
      <div class="layer-gray" style="display:none; width:475px; margin-left:-287px;">
       <form action="">
        <div class="cont">
         [linkx]
         
         <p class="tit">
          팟캐스트 라이브 공유
         </p>
         <div class="share-area">
          <p class="btn">
           [linkx]
           
           [linkx]
           
          </p>
          <p class="input">
          </p>
          [linkx]
          
         </div>
        </div>
       </form>
      </div>
      <div id="support_layer">
      </div>
      <div class="pop_layer addsub" id="pop_layer_sub_result" style="display:none;">
       <p>
        구독함에 추가되었습니다.
        <br/>
        구독함을 확인하러 가시겠습니까?
       </p>
       <ul class="clearfix">
        <li>
         [ahref]
         
        </li>
        <li>
         <a href=";" onclick="$('#pop_layer_sub_result').hide();">
          나중에
         </a>
        </li>
       </ul>
      </div>
      <div class="pop_layer addsub" id="pop_layer_sub_login" style="display:none;">
       <p>
        구독기능은
        <br/>
        로그인 후 이용하실 수 있습니다.
       </p>
       <ul class="clearfix">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="pop_layer_yellow" id="pop_layer_qrcode" style="display:none;">
       <div class="pop_con_wrap">
        <p class="pop_tit">
         토토의 이야기나라 _ 창작 동화
        </p>
        <span class="btn_close">
         [linkx]
         
        </span>
        <div class="bot">
         <dl class="qrcode clearfix">
          <dt>
           QR코드
          </dt>
          <dd class="qr_code_area">
          </dd>
         </dl>
         <dl class="clearfix">
          <dt>
           방송링크
          </dt>
          <dd>
           <span class="btn_social">
            <a href=")">
            </a>
           </span>
           <span class="btn_social">
            [linkx]
            
           </span>
           <span class="btn_social">
            [content3[linkx]content4[linkx]content5][content8[linkx]content9]
           </span>
          </dd>
         </dl>
         <div class="player">
          <div class="size_group clearfix">
           <span class="txt_bold">
            사이즈선택
           </span>
           <ul class="clearfix">
            <li>
             <label>
              600*147
             </label>
            </li>
            <li>
             [linkx]
             
            </li>
           </ul>
          </div>
          <dl class="clearfix">
           <dt>
            플레이어
           </dt>
           <dd class="player_file">
           </dd>
          </dl>
          <span>
           [ahref]
           
          </span>
         </div>
        </div>
       </div>
      </div>
      <div class="pop_layer_yellow" id="pop_layer_report_comment" style="display:none;">
       <form name="reportCommentForm">
        <div class="pop_con_wrap">
         <p class="pop_tit">
          신고하기
         </p>
         <span class="btn_close">
          [linkx]
          
         </span>
         <div class="bot">
          <p class="txt_info">
           팟빵의 댓글 차단 안내를 확인해 주세요.
           [ahref]
           
          </p>
         </div>
        </div>
       </form>
      </div>
      <div class="pop_layer_yellow" id="pop_layer_report_podcast" style="display:none;">
       <form name="reportCastForm">
        <div class="pop_con_wrap">
         <p class="pop_tit">
          신고하기
         </p>
         <span class="btn_close">
          [linkx]
          
         </span>
         <div class="bot">
          <p class="txt_info" style="margin-top:10px; line-height:20px;">
           이 방송 콘텐츠를 이용하면서 팟빵 서비스에 문제가 있거나 혹은
           <br/>
           방송 콘텐츠 자체가 불법적인 내용이거나 서비스 이용 목적에 맞지 않을 시
           <br/>
           신고해 주시면 바로 처리해 드리겠습니다!
           <br/>
           답변은 입력해 주신 이메일로 전송됩니다.
          </p>
          <dl class="report clearfix">
           <dt style="width:80px;">
            이메일주소
           </dt>
           <dd class="email_2">
           </dd>
          </dl>
          <dl class="report clearfix" style="margin-top: 5px;">
           <dt style="width:80px;">
            신고사유
           </dt>
           <dd style="background: none; margin: 7px 0px 0px 0px; padding-left: 0px;">
            <label>
             팟캐스트 관련
            </label>
            <label>
             댓글이용 불편
            </label>
            <label>
             팥후원
            </label>
            <label>
             청취이용
            </label>
            <label>
             기타[content19[linkx]content20[linkx]content1[linkx]content2]
            </label>
           </dd>
          </dl>
          <dl class="report clearfix" style="margin-top: 5px;">
           <dt style="width:80px;">
            신고 내용<li>[link]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
           </dt>
           <dd class="textarea_report">
           </dd>
          </dl>
          <div class="btn_group">
           <span class="mr20">
            [ahref]
            
           </span>
           <span>
            [ahref]
            
           </span>
          </div>
         </div>
        </div>
       </form>
      </div>
      <div class="pop_layer addsub" id="pop_layer_report_result" style="display:none;">
       <p style="padding-top:80px;">
        신고 접수가 완료되었습니다.
       </p>
       <ul style="padding:50px 0 0 170px;">
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="fix2" id="login_wrap">
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0379
  </b>
 </body>
</html>
<div class="cash_info">
 <h2>
  [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
 </h2>
 <ul>
  <li>
   · 에피소드 후원하기는 구매하신 캐시로만 이용이 가능하며, 무료 적립 및 이벤트로 지급받은 캐시는 사용 할 수 없습니다.
  </li>
  <li>
   · 후원에 사용된 캐시에 대해서는 후원취소 하실 수 없습니다.
  </li>
  <li>
   · 캐시가 부족한 경우 캐시 충전소에서 캐시 충전 후 이용해 주세요.
  </li>
  <li>
   · 후원 내역은 팟빵앱 메인의 三 아이콘 (좌측상단) > 후원내역에서 확인 가능 합니다.
  </li>
 </ul>
</div>
[ahref]

[ahref]

<div class="layer_spon" id="cashPop" style="display:none;">
 <div class="pop_content">
  [linkx]
  
 </div>
</div>
<div class="layer-sponsor-n" id="layer-s-n3" style="display:none; ">
 <div class="top-cont">
  <p class="tit">
   후원하기
  </p>
  [ahref]
  
 </div>
 <div class="cont">
  <div>
   <p class="tit ng">
    1.후원금액
   </p>
   <div class="amount">
    <ul class="clearfix" id="pay_input">
     <li class="pay_li" id="p1">
      <label id="abcd">
      </label>
     </li>
     <li class="pay_li" id="p2">
      <label id="abc">
      </label>
     </li>
     <li class="pay_li">
      <label>
      </label>
     </li>
     <li class="last pay_li">
      <label>
       <span class="num" id="pay_up_dw">
        10,000
       </span>
       <span>
        원
       </span>
      </label>
      <div class="add" style="display:none;">
       [linkx]
       
       <a href="#" onclick="payControll(3, 0); return false;">
       </a>
      </div>
     </li>
    </ul>
   </div>
   <div class="gray-area clearfix">
    <p>
     총 후원금액<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
    </p>
    <p>
     <span class="sum">
      1,000
     </span>
     <span>
      원
     </span>
    </p>
   </div>
  </div>
  <div class="pay-method">
   <p class="tit ng">
    2.후원금 결제수단
   </p>
   <ul class="btn btn2">
    <li class="paymethod_li">
     <label>
      <span>
       신용카드
      </span>
     </label>
    </li>
    <li class="paymethod_li">
     <label>
      <span>
       휴대폰
      </span>
     </label>
    </li>
    <li class="paymethod_li">
     <label>
      <span>
       가상계좌 (무통장입금)
      </span>
     </label>
    </li>
   </ul>
   <p class="btn-y">
    [linkx]
    
   </p>
  </div>
 </div>
</div>
<div id="layer-spon" style="display:none;">
 <form action="/podbbangchnew/supportmsg_save" name="supportmsgForm" target="podbbang_login">
 </form>
</div>
<div style="position:absolute; top:15px; left:-130px">
</div>
<div class="clearfix" id="contWrap">
 <div id="con_wrap_left">
  <div class="top_area">
   <div class="tit" id="player_top" title="">
    <strong id="player_top_title">
    </strong>
    <strong id="player_top_title_pl" style="display:none; color:#ffffff;">
    </strong>
    <span id="player_num_like">
    </span>
    <span id="player_num_like_pl" style="color:#ffffff;">
     현재접속자
     <span id="listeners" style="position:relative; right:0px; color:#ff0000">
     </span>
     명
    </span>
   </div>
   <div class="episode_play" style="height: 430px;">
   </div>
   <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,0,0" data="/flash/flashls_test.swf" height="0" id="mfplayer" type="application/x-shockwave-flash" width="0">
    <param name="movie" value="/flash/flashls_test.swf"/>
    <param name="quality" value="high"/>
    <param name="allowScriptAccess" value="sameDomain">
     <param name="bgcolor" value="#ffffff"/>
     <embed bgcolor="#ffffff" height="0" name="mfplayer" pluginspage="http://www.macromedia.com/go/getflashplayer" quality="high" src="/flash/flashls_test.swf" type="application/x-shockwave-flash" width="573"/>
    </param>
   </object>
   <div class="episode_play2 jp-video jp-video-573p" id="jp_container" style="height: 430px;display:none;">
    <div class="wrap_waveform">
     <div id="waveform">
     </div>
     <div id="bar">
     </div>
    </div>
    <div id="episode_player">
    </div>
    <div class="jp-gui" style="position:relative;">
     <div class="jp-interface">
      <div class="jp-progress">
       <div class="jp-seek-bar" onclick="play_seek(event);" style="width: 100%;">
        <div class="jp-play-bar" id="jp-play-bar" style="width: 0%;">
        </div>
       </div>
      </div>
      <div id="playnotice" style="display:none;width:100%;position:absolute;top:-30px;z-index:999;text-align:center;color:white;font-size:15px;">
       "에피소드 파일을 불러오는 중입니다. 잠시만 기다려 주세요"
      </div>
      <div class="time_area">
       <div aria-label="time" class="jp-current-time" role="timer">
        00:00
       </div>
       <div aria-label="duration" class="jp-duration" role="timer">
        00:00
       </div>
      </div>
      <div class="jp-controls" onclick="play_toggle();">
       <button class="jp-play" role="button" tabindex="0">
        play
       </button>
      </div>
      <div class="jp-volume-controls">
       <button class="jp-mute" onclick="volume_toggle();" role="button" tabindex="0">
        mute
       </button>
       <div class="jp-volume-bar" id="volumebar">
        <div class="jp-volume-bar-value" style="width: 70%;" volume="70">
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="description clearfix">
    <ul class="tabmenu-n clearfix">
     <li class="on">
      <a href="a">
       후원
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <div id="sponsor-area">
    </div>
    <div id="cont-area">
     <div class="desc_area" style="">
      <strong>
      </strong>
      <div class="section_con">
       <p class="txt txt-empty">
       </p>
      </div>
     </div>
    </div>
    <div class="spon-nick">
     <dl class="clearfix">
      <dt>
      </dt>
      <dd alt="" class="s-lst clearfix" title="">
       <div class="fl-l">
        <strong class="supporters_nick1">
        </strong>
        <strong class="supporters_price1">
        </strong>
       </div>
       <div class="fl-r">
        <strong class="supporters_nick2">
        </strong>
        <strong class="supporters_price2">
        </strong>
       </div>
      </dd>
     </dl>
     <p class="btn-all">
      [linkx]
      
     </p>
     <div class="spon-area2" style="display:none;">
      <div class="scrollbar-inner">
       <div class="cont" id="supporters">
       </div>
      </div>
     </div>
    </div>
    <ul class="btn-area">
     <li class="left">
     </li>
     <li class="right">
      [ahref]
      
     </li>
    </ul>
   </div>
   <div class="description_pl clearfix" style="dislay:none;">
    <div id="cont-area">
     <div class="desc_area" style="">
      <strong>
      </strong>
      <div class="section_con">
       <p class="txt txt-empty" id="live_content1">
       </p>
       <p class="txt txt-empty" id="live_content2">
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
 <div id="con_wrap_right">
  <div class="right_top_area">
   <div class="episode clearfix">
    <div class="episode_total" style="float: left;margin-bottom: 5px;">
     [linkx]
     
    </div>
    <div class="fl-l" style="">
     [linkx]
      [link][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
     
     <span id="txt_update" style="float: left; margin: 5px 0px 10px 10px; font-size: 11px; font-weight: normal; display: none;">
     </span>
    </div>
    <p class="stats">
     <span>
      오디오 143개
     </span>
     <span style="display:none;">
      비디오 0개
     </span>
    </p>
   </div>
   <div class="sch-area">
    <label>
    </label>
    [ahref]
    
    [linkx]
    
    [ahref]
    
    [linkx]
    
    <a href="" id="sort_past" onclick="episode_list('past');return false;" style="display:none;">
    </a>
   </div>
   <div class="sch-result" style="display:none;">
    <div class="exp">
     <p>
      총
      <strong>
       <span id="search_count">
       </span>
       건
      </strong>
      이 검색되었습니다.
     </p>
    </div>
   </div>
   <div id="episode-list">
    <div class="epi_repeat" epi_sort="latest" id="epi_list_latest1" style="margin-top: 1px;">
     <ul>
      <li class=" epi23026426 " epiuid="23026426" id="episode_latest_23026426">
       <dl class="second" onclick="login_top.showEpisode('23026426','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="144_용서의 기적">
         144_용서의 기적
        </dt>
        <dd class="dd_date">
         19.05.23
        </dd>
        <dd class="dd_time">
         0:13:29
        </dd>
        <dd class="dd_heart">
         <span id="num_like23026426">
          32
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [linkx]
        
       </p>
      </li>
      <li class="deep epi23012477 " epiuid="23012477" id="episode_latest_23012477">
       <dl class="second" onclick="login_top.showEpisode('23012477','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="143_인도 수학자 비크람">
         143_인도 수학자 비크람
        </dt>
        <dd class="dd_date">
         19.05.15
        </dd>
        <dd class="dd_time">
         0:13:08
        </dd>
        <dd class="dd_heart">
         <span id="num_like23012477">
          28
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        <a href="/download?pid=8414&amp;eid=23012477" onclick="countEpisode('23012477');fbq('track','EpisodeDownload');" target="_blank">
        </a>
       </p>
      </li>
      <li class=" epi22980818 " epiuid="22980818" id="episode_latest_22980818">
       <dl class="second" onclick="login_top.showEpisode('22980818','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="142_율리나의 요술장갑">
         142_율리나의 요술장갑
        </dt>
        <dd class="dd_date">
         19.04.23
        </dd>
        <dd class="dd_time">
         0:12:07
        </dd>
        <dd class="dd_heart">
         <span id="num_like22980818">
          47
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        <a href="/download?pid=8414&amp;eid=22980818" onclick="countEpisode('22980818');fbq('track','EpisodeDownload');" target="_blank">
        </a>
       </p>
      </li>
      <li class="deep epi22903880 " epiuid="22903880" id="episode_latest_22903880">
       <dl class="second" onclick="login_top.showEpisode('22903880','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="141_덴마크왕 하랄 블로탄">
         141_덴마크왕 하랄 블로탄
        </dt>
        <dd class="dd_date">
         19.04.11
        </dd>
        <dd class="dd_time">
         0:14:53
        </dd>
        <dd class="dd_heart">
         <span id="num_like22903880">
          45
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [ahref]
        
       </p>
      </li>
      <li class=" epi22896772 " epiuid="22896772" id="episode_latest_22896772">
       <dl class="second" onclick="login_top.showEpisode('22896772','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="140_ 네 친구의 우정">
         140_ 네 친구의 우정
        </dt>
        <dd class="dd_date">
         19.04.03
        </dd>
        <dd class="dd_time">
         0:16:24
        </dd>
        <dd class="dd_heart">
         <span id="num_like22896772">
          39
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [linkx]
        
       </p>
      </li>
      <li class="deep epi22890041 " epiuid="22890041" id="episode_latest_22890041">
       <dl class="second" onclick="login_top.showEpisode('22890041','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="139_우연한 발명">
         139_우연한 발명
        </dt>
        <dd class="dd_date">
         19.03.27
        </dd>
        <dd class="dd_time">
         0:15:19
        </dd>
        <dd class="dd_heart">
         <span id="num_like22890041">
          42
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [ahref]
        
       </p>
      </li>
      <li class=" epi22885048 " epiuid="22885048" id="episode_latest_22885048">
       <dl class="second" onclick="login_top.showEpisode('22885048','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="138_천리마 경주대회">
         138_천리마 경주대회
        </dt>
        <dd class="dd_date">
         19.03.21
        </dd>
        <dd class="dd_time">
         0:15:42
        </dd>
        <dd class="dd_heart">
         <span id="num_like22885048">
          38
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [linkx]
        
       </p>
      </li>
      <li class="deep epi22877769 " epiuid="22877769" id="episode_latest_22877769">
       <dl class="second" onclick="login_top.showEpisode('22877769','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="137_미래도시 더스틴">
         137_미래도시 더스틴
        </dt>
        <dd class="dd_date">
         19.03.13
        </dd>
        <dd class="dd_time">
         0:15:57
        </dd>
        <dd class="dd_heart">
         <span id="num_like22877769">
          37
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [linkx]
        
       </p>
      </li>
      <li class=" epi22870587 " epiuid="22870587" id="episode_latest_22870587">
       <dl class="second" onclick="login_top.showEpisode('22870587','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="136_칼디와 빨간열매">
         136_칼디와 빨간열매
        </dt>
        <dd class="dd_date">
         19.03.06
        </dd>
        <dd class="dd_time">
         0:13:02
        </dd>
        <dd class="dd_heart">
         <span id="num_like22870587">
          44
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [linkx]
        
       </p>
      </li>
      <li class="deep epi22864072 " epiuid="22864072" id="episode_latest_22864072">
       <dl class="second" onclick="login_top.showEpisode('22864072','audio/mp3')" style="cursor:pointer;">
        <dt class="title_none" title="135_래니의 알밤 주머니">
         135_래니의 알밤 주머니
        </dt>
        <dd class="dd_date">
         19.02.27
        </dd>
        <dd class="dd_time">
         0:15:50
        </dd>
        <dd class="dd_heart">
         <span id="num_like22864072">
          45
         </span>
        </dd>
       </dl>
       <p class="download download_none">
        [linkx]
        
       </p>
      </li>
     </ul>
    </div>
    <div class="paging epi_paging" id="epi_page_latest1">
     <span class="current">
      1
     </span>
     [ahref]
     
     [ahref]
     
     [linkx]
     
     [linkx]
     
     [linkx]
     
     [linkx]
     
     [linkx]
     
     [ahref]
     
     [ahref]
     
     [linkx]
     
    </div>
   </div>
   <div id="search-list">
   </div>
  </div>
 </div>
</div>
<div id="reply_con">
 <div class="reply_left_area">
  <div id="btn_gotop">
   [ahref]
   
  </div>
  <iframe name="if" style="display:none;">
  </iframe>
  <form action="/podbbangchnew/comment_save" enctype="multipart/form-data" method="post" name="cmtFrm" target="if">
   <div class="reply_area">
    <div class="reply_con" id="ch_form_login">
     <div class="add_files">
     </div>
     <dl class="clearfix" id="notice_title" style="display:none;">
      <dt>
       제목
      </dt>
      <dd class="replay_text">
      </dd>
     </dl>
     <dl class="clearfix">
      <dt style="line-height:91px">
       내용
      </dt>
      <dd class="replay_text">
      </dd>
      <dd>
       <button class="btn_regist" disabled="" onclick="cmtSave();" type="button">
        등록
       </button>
      </dd>
     </dl>
     <dl class="first clearfix">
      <dt>
      </dt>
      <dd id="comment_notice">
       [linkx]
       
      </dd>
      <dt>
      </dt>
      <dd id="content_len" style="margin-right:140px; margin-top:10px; float:right; font-weight:bold;">
       1/1000
      </dd>
     </dl>
     <div class="attach_img">
      <span>
       첨부이미지 :
      </span>
      <span class="f_name_value" id="attach_name">
       없음
      </span>
      <span id="attach_ico" style="display:none;">
       [ahref]
       
      </span>
     </div>
    </div>
   </div>
  </form>
  <div id="comment_list_top">
   <div class="blue-spon">
    <ul class="clearfix">
     <li>
      <p>
      </p>
      [linkx]
      
     </li>
     <li onclick="supportComment();return false;" style="cursor:pointer;">
      <ul class="row2">
       <li>
        <div class="cont">
         <p class="id">
          길동이네
         </p>
         <dl class="row1 clearfix">
          <dt>
           32_상어와 돌고래
          </dt>
         </dl>
         <dl class="row2 clearfix">
          <dt>
          </dt>
          <dd>
           <span>
            1,000캐시
           </span>
           <span>
           </span>
           <span class="exp">
            32_상어와 돌고래
           </span>
          </dd>
         </dl>
        </div>
       </li>
      </ul>
     </li>
    </ul>
   </div>
  </div>
  <div style="padding:0px 30px 15px 30px;">
   <div banner_position="PC_CHANNEL_COMMENT1" banner_uid="13734" class="bnr_comment_t banner_log_click" style="display:none;">
    [linkx]
    
   </div>
   <div banner_position="PC_CHANNEL_COMMENT1" banner_uid="13727" class="bnr_comment_t banner_log_click" style="display:none;">
    <li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
   </div>
  </div>
  <div class="layer-wrap">
   <div id="sponmodal" style="display:none;">
   </div>
   <div class="layer-reply-col" id="comment_collect" style="display:none;">
   </div>
   <div class="layer-archive-col" id="archive_collect" style="display:none;">
   </div>
  </div>
  <div id="comment_list" style="padding-top: 10px;">
  </div>
 </div>
 <div class="reply_right_area">
  <div id="dailyNews" style="margin-top:0 !important;">
   <div class="news-list clearfix">
    <h2>
     <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
    </h2>
    <div class="section_thum_geesik section_thum section1">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       정영진 최욱의 불금쇼
      </dt>
      <dd>
       [linkx]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section1">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       정영진 최욱의 매불쇼
      </dt>
      <dd>
       [linkx]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section1">
     <p>
      <a href="/ch/11897" target="_blank">
      </a>
     </p>
     <dl>
      <dt>
       요조 장강명 책, 이게뭐라고?!
      </dt>
      <dd>
       <a href="/category/lists?type=N&amp;category=1028" target="_blank">
        도서
       </a>
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section1">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       자동차 전문방송, 이차저차
      </dt>
      <dd>
       [ahref]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section1">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       정선희 문천식의 행복하십SHOW!
      </dt>
      <dd>
       [ahref]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section2" style="display:none;">
     <p>
      <a href="/ch/11413" target="_blank">
      </a>
     </p>
     <dl>
      <dt>
       소설 속 역사
      </dt>
      <dd>
       [ahref]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section2" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       윤형빈 미키광수 이재선의 싸움의 기…
      </dt>
      <dd>
       [ahref]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section2" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       최은경 안선영의 미시코리아
      </dt>
      <dd>
       [ahref]
       
      </dd>
     </dl>
    </div>
    <div class="section_thum_geesik section_thum section2" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       프로파일러 배상훈의 CRIME
      </dt>
      <dd>
       [ahref]
       
      </dd>
     </dl>
    </div>
    <div class="page-area">
     <div class="btn_area clearfix">
      <p>
       <strong id="pg_now">
        1
       </strong>
       /
       <span id="pg_tot">
        2
       </span>
      </p>
      <div class="btn clearfix">
       <ul>
        <li class="l_btn">
         [ahref]
         
        </li>
        <li class="r_btn">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
    <h2>
     [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </h2>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13433" class="section_thum rookie_pod banner_log_click" id="rookie0" style="display:none;">
     <p>
      <li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
     </p>
     <dl>
      <dt>
       [블랙리스트] 영화평론가, 기자, 항해사의 팟캐스트
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13809" class="section_thum rookie_pod banner_log_click" id="rookie1" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       방송현장을 콕! 찌르는 방콕
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13806" class="section_thum rookie_pod banner_log_click" id="rookie2" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       교양한스푼
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13437" class="section_thum rookie_pod banner_log_click" id="rookie3" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       [배우자 외도] 여풍당당!! 배우자 외도 당당하게 말한다.
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13431" class="section_thum rookie_pod banner_log_click" id="rookie4" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       영.무.시.필(영화무비시네마필름)
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13804" class="section_thum rookie_pod banner_log_click" id="rookie5" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       [전망좋은 망한카페]재벌3세부터 평사원까지 찾아오는
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13428" class="section_thum rookie_pod banner_log_click" id="rookie6" style="display:none;">
     <p>
      <a href="/ch/1769507" target="_blank">
      </a>
     </p>
     <dl>
      <dt>
       국옹의 영성 에니어그램
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13446" class="section_thum rookie_pod banner_log_click" id="rookie7" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       부동산-뉴스까보기
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13445" class="section_thum rookie_pod banner_log_click" id="rookie8" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       시크릿가든
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13773" class="section_thum rookie_pod banner_log_click" id="rookie9" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       초코빵
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13430" class="section_thum rookie_pod banner_log_click" id="rookie10" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       구라다~ 클래식!
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13438" class="section_thum rookie_pod banner_log_click" id="rookie11" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       대한민국 도슨트
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13447" class="section_thum rookie_pod banner_log_click" id="rookie12" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       [음악, 문학, 영화] 지금이 아니면 안 돼
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13467" class="section_thum rookie_pod banner_log_click" id="rookie13" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       [노발대발 시즌2] 노동자가 발전해야 대한민국이 발전한다
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13442" class="section_thum rookie_pod banner_log_click" id="rookie14" style="display:none;">
     <p>
      <a href="/ch/15868" target="_blank">
      </a>
     </p>
     <dl>
      <dt>
       주식, 뉴스와 테마주!
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13439" class="section_thum rookie_pod banner_log_click" id="rookie15" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       [심야북카페] 책 영화 음악의 만남
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13432" class="section_thum rookie_pod banner_log_click" id="rookie16" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       주식수다 대주주(大株酒)
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13441" class="section_thum rookie_pod banner_log_click" id="rookie17" style="display:none;">
     <p>
      <a href="/ch/15326" target="_blank">
      </a>
     </p>
     <dl>
      <dt>
       부자아빠 주식학교 (실전매매복기)
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13451" class="section_thum rookie_pod banner_log_click" id="rookie18" style="display:none;">
     <p>
      [linkx]
      
     </p>
     <dl>
      <dt>
       작/지/만 위대한 드라마
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13805" class="section_thum rookie_pod banner_log_click" id="rookie19" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       [아사모사] 아는 사람 모르는 사람
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
    <div banner_position="PC_CHANNEL_PODCAST" banner_uid="13427" class="section_thum rookie_pod banner_log_click" id="rookie20" style="display:none;">
     <p>
      [ahref]
      
     </p>
     <dl>
      <dt>
       [책을 부르다] 책으로 부르는 노래, 노래로 읽는 책
      </dt>
      <dd>
      </dd>
     </dl>
    </div>
   </div>
  </div>
 </div>
</div>
<form action="/certify" method="post" name="certifyForm" target="certifyWindow">
</form>
<iframe height="0" name="podbbang_login" style="display:none;" width="0">
</iframe>
<div id="overlay">
</div>
|<---