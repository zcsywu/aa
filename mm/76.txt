--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="width=1100px" name="viewport"/>
 </head>
 <body onload="">
  <div class="skipNavi">
   <a href="b" onclick="document.getElementById('gnb').tabIndex = -1;document.getElementById('gnb').focus();return false;">
    대메뉴바로가기
   </a>
   <a href="x" onclick="document.getElementById('sub-page-content').tabIndex = -1;document.getElementById('sub-page-content').focus();return false;">
    본문바로가기
   </a>
  </div>
  <div class="wrap">
   <header>
    <div class="top-menu-wrap">
     <div class="inner-wrap cf">
      <ul class="kotra-sns cf">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/channel/UCPvcRkwx_IDYag3MO_n1nHg" target="_blank" title="youtube 새창">
         youtube
        </a>
       </li>
      </ul>
      <ul class="member-area cf">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="logo_search_area cf">
     <h1 class="fl" id="newLogo">
      <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h1>
     <form action="/user/extra/kotranews/search/index/jsp/Page.do" class="fl" id="total_search_form" method="post" name="sform">
      <fieldset class="cf">
       <legend>
        통합검색
       </legend>
       <select class="fl" id="headerSearchField" name="searchField" title="검색타이틀">
        <option value="ALL">
         통합검색
        </option>
        <option value="TITLE">
         제목
        </option>
        <option value="CONTENTS">
         내용
        </option>
       </select>
       <div id="ark_header">
       </div>
      </fieldset>
      <div>
      </div>
     </form>
    </div>
    <div class="inner-wrap">
     <nav class="gnb-wrap cf" id="gnb">
      <h3 class="hidden">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <button class="btn-total-menu" type="button" value="">
       전체메뉴
       <span>
       </span>
       <span>
       </span>
      </button>
      <ul class="gnbDp-1">
       <li class="gnbDp-1-1">
        <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_01000000000000000000" data-url="/user/globalAllBbs/kotranews/album/2/globalBbsDataAllList.do" href="/user/globalAllBbs/kotranews/album/2/globalBbsDataAllList.do" title="뉴스 ">
         뉴스
        </a>
        <ul class="gnbDp-2">
         <li class="gnbDp-2-1">
          [ahref]
          
         </li>
         <li class="gnbDp-2-2">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_01020000000000000000" data-url="/user/globalBbs/kotranews/3/globalBbsDataList.do?setIdx=242" href="/user/globalBbs/kotranews/3/globalBbsDataList.do?setIdx=242" title="경제·무역 ">
           경제·무역
          </a>
         </li>
         <li class="gnbDp-2-3">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_01040000000000000000" data-url="/user/globalBbs/kotranews/5/globalBbsDataList.do?setIdx=244" href="/user/globalBbs/kotranews/5/globalBbsDataList.do?setIdx=244" title="통상·규제 ">
           통상·규제
          </a>
         </li>
         <li class="gnbDp-2-4">
          [linkx]
          
         </li>
         <li class="gnbDp-2-5">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_01060000000000000000" data-url="/user/globalBbs/kotranews/7/globalBbsDataList.do?setIdx=245" href="/user/globalBbs/kotranews/7/globalBbsDataList.do?setIdx=245" title="현장·인터뷰 ">
           현장·인터뷰
          </a>
         </li>
         <li class="gnbDp-2-6">
          [linkx]
          
         </li>
         <li class="gnbDp-2-7">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="gnbDp-1-2">
        <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_14000000000000000000" data-url="/user/globalAllBbs/kotranews/album/781/globalBbsDataAllList.do" href="/user/globalAllBbs/kotranews/album/781/globalBbsDataAllList.do" title="상품·산업 ">
         상품·산업
        </a>
        <ul class="gnbDp-2">
         <li class="gnbDp-2-8">
          [linkx]
          
         </li>
         <li class="gnbDp-2-9">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_14020000000000000000" data-url="/user/globalBbs/kotranews/782/globalBbsDataList.do?setIdx=243" href="/user/globalBbs/kotranews/782/globalBbsDataList.do?setIdx=243" title="트렌드 ">
           트렌드
          </a>
         </li>
         <li class="gnbDp-2-10">
          [ahref]
          
         </li>
         <li class="gnbDp-2-11">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_14040000000000000000" data-url="/user/globalBbs/kotranews/784/globalBbsDataList.do?setIdx=403" href="/user/globalBbs/kotranews/784/globalBbsDataList.do?setIdx=403" title="국별 주요산업 ">
           국별 주요산업
          </a>
         </li>
        </ul>
       </li>
       <li class="gnbDp-1-3">
        <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_02000000000000000000" data-url="http://news.kotra.or.kr/user/nationInfo/kotranews/14/nationIntro.do" href="/user/nationInfo/kotranews/14/nationIntro.do" title="국가·지역정보 ">
         국가·지역정보
        </a>
        <ul class="gnbDp-2">
         <li class="gnbDp-2-12">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_02010000000000000000" data-url="/user/nationInfo/kotranews/14/nationIntro.do" href="/user/nationInfo/kotranews/14/nationIntro.do" title="국가·지역정보 ">
           국가·지역정보
          </a>
         </li>
         <li class="gnbDp-2-13">
          [linkx]
          
         </li>
         <li class="gnbDp-2-14">
          [linkx]
          
         </li>
         <li class="gnbDp-2-15">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_02040000000000000000" data-url="/user/globalBbs/kotranews/17/globalBbsDataList.do?setIdx=302" href="/user/globalBbs/kotranews/17/globalBbsDataList.do?setIdx=302" title="출장자료 ">
           출장자료
          </a>
         </li>
         <li class="gnbDp-2-16">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_02090000000000000000" data-url="/user/globalBbs/kotranews/789/globalBbsDataList.do?setIdx=306" href="/user/globalBbs/kotranews/789/globalBbsDataList.do?setIdx=306" title="현지소식 ">
           현지소식
          </a>
         </li>
         <li class="gnbDp-2-17">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="gnbDp-1-4">
        [linkx]
        
        <ul class="gnbDp-2">
         <li class="gnbDp-2-18">
          [linkx]
          
         </li>
         <li class="gnbDp-2-19">
          [linkx]
          
         </li>
         <li class="gnbDp-2-20">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04120000000000000000" data-url="/user/globalBbs/kotranews/699/globalBbsDataList.do?setIdx=383" href="/user/globalBbs/kotranews/699/globalBbsDataList.do?setIdx=383" title="무역관 현장DB ">
           무역관 현장DB
          </a>
         </li>
         <li class="gnbDp-2-21">
          [linkx]
          
         </li>
         <li class="gnbDp-2-22">
          [linkx]
          
         </li>
         <li class="gnbDp-2-23">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04100000000000000000" data-url="/user/globalBbs/kotranews/33/globalBbsDataList.do?setIdx=303" href="/user/globalBbs/kotranews/33/globalBbsDataList.do?setIdx=303" title="기업검색사이트 ">
           기업검색사이트
          </a>
         </li>
         <li class="gnbDp-2-24">
          [linkx]
          
         </li>
         <li class="gnbDp-2-25">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04110000000000000000" data-url="/kotranews/subIndex/34.do" href="/kotranews/subIndex/34.do" title="국제무역통계(ITC)">
           국제무역통계(ITC)
          </a>
         </li>
        </ul>
       </li>
       <li class="gnbDp-1-5">
        [linkx]
        
        <ul class="gnbDp-2">
         <li class="gnbDp-2-26">
          [linkx]
          
         </li>
         <li class="gnbDp-2-27">
          <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_03040000000000000000" data-url="/user/reports/kotranews/679/usrReportsList.do?hotClipType=TRADE" href="/user/reports/kotranews/679/usrReportsList.do?hotClipType=TRADE" title="수출동향 ">
           수출동향
          </a>
         </li>
        </ul>
       </li>
      </ul>
     </nav>
    </div>
    <div class="total-menu-wrap">
     <ul class="gnbDp-1">
      <li class="gnbDp-1-1">
       [linkx]
       
       <ul class="gnbDp-2">
        <li class="gnbDp-2-1">
         [linkx]
         
        </li>
        <li class="gnbDp-2-2">
         [ahref]
         
        </li>
        <li class="gnbDp-2-3">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_01040000000000000000" data-url="/user/globalBbs/kotranews/5/globalBbsDataList.do?setIdx=244" href="/user/globalBbs/kotranews/5/globalBbsDataList.do?setIdx=244" title="통상·규제 ">
          통상·규제
         </a>
        </li>
        <li class="gnbDp-2-4">
         [ahref]
         
        </li>
        <li class="gnbDp-2-5">
         [linkx]
         
        </li>
        <li class="gnbDp-2-6">
         [ahref]
         
        </li>
        <li class="gnbDp-2-7">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_01100000000000000000" data-url="/user/globalBbs/kotranews/604/globalBbsDataHotClipList.do?hotClipType=jt&amp;searchJB=" href="/user/globalBbs/kotranews/604/globalBbsDataHotClipList.do?hotClipType=jt&amp;searchJB=" title="일자리 ">
          일자리
         </a>
        </li>
       </ul>
      </li>
      <li class="gnbDp-1-2">
       <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_14000000000000000000" data-url="/user/globalAllBbs/kotranews/album/781/globalBbsDataAllList.do" href="/user/globalAllBbs/kotranews/album/781/globalBbsDataAllList.do" title="상품·산업 ">
        상품·산업
       </a>
       <ul class="gnbDp-2">
        <li class="gnbDp-2-8">
         [linkx]
         
        </li>
        <li class="gnbDp-2-9">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_14020000000000000000" data-url="/user/globalBbs/kotranews/782/globalBbsDataList.do?setIdx=243" href="/user/globalBbs/kotranews/782/globalBbsDataList.do?setIdx=243" title="트렌드 ">
          트렌드
         </a>
        </li>
        <li class="gnbDp-2-10">
         [ahref]
         
        </li>
        <li class="gnbDp-2-11">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="gnbDp-1-3">
       [ahref]
       
       <ul class="gnbDp-2">
        <li class="gnbDp-2-12">
         [linkx]
         
        </li>
        <li class="gnbDp-2-13">
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]<li>[link]</li><li>[link]</li>
        </li>
        <li class="gnbDp-2-14">
         [ahref]
         
        </li>
        <li class="gnbDp-2-15">
         [linkx]
         
        </li>
        <li class="gnbDp-2-16">
         [linkx]
         
        </li>
        <li class="gnbDp-2-17">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_02100000000000000000" data-url="/user/extra/kotranews/790/calendar/calendarListByMonth/jsp/LayOutPage.do?searchYear=2019" href="/user/extra/kotranews/790/calendar/calendarListByMonth/jsp/LayOutPage.do?searchYear=2019" title="정치·통상캘린더 ">
          정치·통상캘린더
         </a>
        </li>
       </ul>
      </li>
      <li class="gnbDp-1-4">
       [ahref]
       
       <ul class="gnbDp-2">
        <li class="gnbDp-2-18">
         [ahref]
         
        </li>
        <li class="gnbDp-2-19">
         [linkx]
         
        </li>
        <li class="gnbDp-2-20">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04120000000000000000" data-url="/user/globalBbs/kotranews/699/globalBbsDataList.do?setIdx=383" href="/user/globalBbs/kotranews/699/globalBbsDataList.do?setIdx=383" title="무역관 현장DB ">
          무역관 현장DB
         </a>
        </li>
        <li class="gnbDp-2-21">
         [ahref]
         
        </li>
        <li class="gnbDp-2-22">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04080000000000000000" data-url="/user/globalBbs/kotranews/31/globalBbsDataList.do?setIdx=259" href="/user/globalBbs/kotranews/31/globalBbsDataList.do?setIdx=259" title="해외인증컨설팅회사 ">
          해외인증컨설팅회사
         </a>
        </li>
        <li class="gnbDp-2-23">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04100000000000000000" data-url="/user/globalBbs/kotranews/33/globalBbsDataList.do?setIdx=303" href="/user/globalBbs/kotranews/33/globalBbsDataList.do?setIdx=303" title="기업검색사이트 ">
          기업검색사이트
         </a>
        </li>
        <li class="gnbDp-2-24">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04090000000000000000" data-url="/user/globalBbs/kotranews/32/globalBbsDataList.do?setIdx=260" href="/user/globalBbs/kotranews/32/globalBbsDataList.do?setIdx=260" title="전문조사기관 ">
          전문조사기관
         </a>
        </li>
        <li class="gnbDp-2-25">
         <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_04110000000000000000" data-url="/kotranews/subIndex/34.do" href="/kotranews/subIndex/34.do" title="국제무역통계(ITC)">
          국제무역통계(ITC)
         </a>
        </li>
       </ul>
      </li>
      <li class="gnbDp-1-5">
       <a data-auth="Y,Y,Y,Y,Y,Y,Y,Y,Y,Y" data-seed="kotranews_03000000000000000000" data-url="/user/reports/kotranews/20/usrReportsList.do" href="/user/reports/kotranews/20/usrReportsList.do" title="보고서 ">
        보고서
       </a>
       <ul class="gnbDp-2">
        <li class="gnbDp-2-26">
         [ahref]
         
        </li>
        <li class="gnbDp-2-27">
         [linkx]
         
        </li>
       </ul>
      </li>
     </ul>
    </div>
   </header>
   <span class="rolling">
   </span>
   <div class="sub contents">
    <div class="sub-top-wrap">
     <div class="inner-wrap cf">
      <ul class="sub-navigation cf">
       <li>
        <a href="/kotranews/index.do">
         HOME
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/user/globalBbs/kotranews/782/globalBbsDataList.do?setIdx=243">
         트렌드
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div class="contents-wrap cf">
     <div class="left-cotents-box">
      <div class="sub-tit-area">
       <h3>
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
      </div>
      <div class="snb-wrap">
       <ul class="subMDp-1 subPos-14">
        <li class="subMDp-1-1">
         [ahref]
         
        </li>
        <li class="subMDp-1-2">
         [ahref]
         
        </li>
        <li class="subMDp-1-3">
         [linkx]
         
        </li>
        <li class="subMDp-1-4">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="right-cotents-box seed-print">
      <div class="content-tit-wrap">
       <h4 class="content-tit">
        트렌드
       </h4>
       <span class="content-sub-tit">
        트렌드
       </span>
      </div>
      <div class="sub-page-content" id="sub-page-content">
       <div id="snsMainNew">
        <ul id="snsUlNew">
         <li id="snsLi_url">
          [linkx]
          
         </li>
         <li id="snsLi_contents">
          [ahref]
          
         </li>
         <li id="snsLi_facebook">
          <a href="/sharer.php" id="sns_facebook" target="_blank" title="facebook 새창으로 바로가기">
           facebook
          </a>
         </li>
         <li id="snsLi_twitter">
          [ahref]
          
         </li>
         <li id="snsLi_kakaostory">
          <a href="/share" id="sns_kakaostory" target="_blank" title="kakaostory 새창으로 바로가기">
           kakaostory
          </a>
         </li>
         <li id="snsLi_kakao">
          [ahref]
          
         </li>
         <li id="snsLi_blog">
          [linkx]
          
         </li>
         <li id="snsLi_copy">
          [ahref]
          
         </li>
        </ul>
       </div>
       <form action="/user/extra/kotranews/bbs/toPdf/jsp/Page.do" id="pdfSendForm" method="post" name="pdfSendForm">
        <div>
        </div>
       </form>
       <div class="global-news-view-wrap bbsPrintArea">
        <h5 class="tit">
         치열한 경쟁 중인 미국 우유 및 우유 대체품 시장
        </h5>
        <div class="etc-list cf">
         <span>
          2019-03-08
         </span>
         <span>
          김수현
         </span>
         <span>
          미국
         </span>
         <span>
          시카고무역관
         </span>
        </div>
        <div class="global-news-content">
         <p style="margin: 0px;">
          <b>
           <span style="font-family: 바탕;">
            <span style="font-size: 16px;">
             <span style="color: rgb(0, 0, 0);">
              - 콩
             </span>
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             ,
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             아몬드
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             ,
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             오트밀
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             ,
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             쌀 등을 이용한 기존 제품에 이어 새로운 상품도 지속 개발되는 추세
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             -
            </span>
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <b>
           <span style="font-family: 바탕;">
            <span style="font-size: 16px;">
             <span style="color: rgb(0, 0, 0);">
              - 제품 선택 범위가 넓어짐에 따라 영양 성분
             </span>
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             ,
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             패키지 차별화 등 경쟁력 확보가 필요
            </span>
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             -
            </span>
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <b>
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <b>
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <b>
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <b>
           <span style="font-family: 바탕,serif;">
            □ 우유 소비 현황[content1[linkx]content2]
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          <span style="font-family: 바탕;">
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             ㅇ
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            2014
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            년 이후 꾸준히 하락하는 우유 판매량
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            미국 우유 판매액은
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            2014
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            년
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            200
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            억원을 돌파한 이후 꾸준히 하락하여
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            2018
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            년
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            180
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            억 달러 규모로 하락함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            [content20[linkx]content1[linkx]content2]
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            - USDA(
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            미 농무부
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            )
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            의 낙농장 수익 보호 프로그램은 우유 판매 위축에도 불구하고 지속적인 생산을 장려
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            결과적으로 우유 공급 과잉을 초래함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="font-family: 바탕,serif;">
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             우유 판매 추이
            </span>
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             (단위
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            :
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            백만 달러
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            )
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            [content11[linkx]content12]
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : 유로모니터
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          ㅇ 자구책 찾는 우유 회사들<li>[link]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            우유 판매사들은 우유 대체품
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            두유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드 우유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            오트밀 우유 등
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            )
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            에 대항하기 위해 패키지 변경 및 우유의 장점을 홍보하는 노력을 기울이고 있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            페어라이프
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (Fairlife)
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            는 단순한 포장 디자인으로 리플
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (Ripple)
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            의 식물성 우유 같은 제품과 나란히 배치 함으로써 전통적인 우유와 차별화된 상품을 내놓음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            동시에
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            유제품이 가지는 장점을 강조하는 라벨 디자인으로 기존 우유의 장점을 홍보함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             Ripple 의 식물성 우유
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            좌
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ), Fairlife
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            의 저지방 우유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            우<li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            )
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: Calibri;">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : Ripple, Fairlife 웹사이트
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            우유 회사들은 버터
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            분유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            치즈로의 상품 전환 및 제빵과 요리에 유용한 우유의 이점을 소비자들에게 알림으로써
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ‘
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            마시는 우유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ’
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            의 이미지 이외의 판매 포인트를 찾고있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            유제품 단일 브랜드로서 가장 큰 기업인 딘 푸드
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (Dean Foods Co)
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            는 초코렛맛 우유 라인인
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            TruMoo
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            로 지속적인 인기를 끌고있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            운동선수 등을 포함한 모든 연령층의 소비자들에게 우유가 주는 에너지
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            회복력을 강조하면서 판매량을 유지함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            트럼프 정부 집권 후 연방정부에서 지원하는 어린이 급식 지원 프로그램에 초코 우유 등 특정한 맛이 가미된 우유 유통을 허가함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            . 2018
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            년
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            7
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            월부터 발효되었으며
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            비소매 구호 영역에서 흰우유 이외의 우유의 유통이 늘어날 것으로 보임
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
            제조 회사별 우유 판매 점유율
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : 유로모니터
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          <b>
           <span style="font-family: 바탕,serif;">
            <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
             □ 우유 대체 음료의 성장
            </span>
           </span>
          </b>
         </p>
         <p style="margin: 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             ㅇ 높은 성장률 속 재료 다양화로 시장 확대 중
            </span>
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            우유 대체 음료
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            두유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드 우유 등
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            )
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            는 지난
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            5
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            년 간
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            7.7%
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            성장률을 기록하며 같은 기간 일반 우유 성장률인
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -2.7%
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            와 상반되는 흐름을 보임[link][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            미국인의
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            19%
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            는 락토스 소화 능력부진
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            포화지방 과다 섭취 우려
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            유제품 알러지 등 건강상의 이유로 우유와 같은 유제품을 덜 소비하고 있다고 밝힘
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            이 중에서도 우유 대체 음료의 시초이자 대표격인 두유의 성장률은 주춤하는데 비해
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드 우유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            , [content16][content17][linkx][content18][content19][linkx][content20][linkx]
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            오트밀 우유 등의 시장은
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            20%
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            에 근접한 높은 성장률을 보이며 시장 확대에 가속도가 붙음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            피칸
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            퀴노아
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            헤이즐넛
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            캐슈넛
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            쌀 등을 이용한 음료의 개발도 지속적으로 진행됨에 따라 우유의 영양소와 맛을 겨냥한 대체 음료의 성장은 당분간 계속될 것으로 전망
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="font-family: 바탕,serif;">
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             우유 판매 변화 추이
            </span>
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             (우유 대체 음료 포함
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            )
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: Calibri;">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : 유로모니터
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          <span style="font-family: 바탕;">
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             ㅇ 주춤하는 두유
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드우유의 인기
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            마트나 카페에서 우유 대체품으로 오랫동안 사용되었던 두유의 단점이 부각되고 있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            . GMO,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            피토에스트로겐
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             식물 에스트로겐으로  내분비 장애를 일으킬 수 있음
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ),
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            비타민
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            D
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            결핍 등
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            콩의 과도한 섭취로 인한 부작용의 우려가 커짐에 따라 다양한 문제가 제기되는 추세
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 13px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드 우유의 경우
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            1
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            개 생산에 소요되는 물의 양이 약
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            3.7L
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            로 아몬드 우유의 지속적 대규모 생산이 가뭄에 영향을 줄 우려가 제기되면서 환경 보호 측면에서 단점이 부각됨
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 8px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px 0px 8px;">
          <span style="font-family: 바탕;">
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             ㅇ 오트밀 우유
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            카페를 기반으로 급성장
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 8px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            결제 대행 업체인
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            Square
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            에 따르면 지난
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            1
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            년 간 카페에서 사용된 오트밀 우유의 매출은
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            425%
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            가량 성장하여 기존의 우유 대체 음료보다 월등히 높은 매출 성장률을 기록함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 8px; text-align: center;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 8px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="font-family: 바탕,serif;">
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             카페 내 아몬드 우유
            </span>
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             , 두유
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            캐슈넛 우유
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            오트밀 우유 성장세
           </span>
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 8px; text-align: center;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 13px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: Calibri;">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 8px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : Square
            </span>
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 8px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px 0px 13px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            라떼 음료 등에 우유 대신 사용되어온 두유나 아몬드 우유는 일반 우유와는 분명히 다른 맛과 풍미로
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            완전한 우유의 대체품으로 자리잡기엔 부족한 면이 있었음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .[content8][content9][linkx]
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 13px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             오트밀 우유는 우유와 가장 근접한 맛과 다양한 영양소를
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            강점으로 내세워 최근 몇 년간 급성장하고 있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            특히 유제품 섭취는 꺼리지만 우유가 첨가된 커피의 맛을 좋아하는 고객들 사이에서 인기가 상승함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            따뜻하거나 차갑게 했을 때 맛의 차이가 크게 없어 커피와 혼합 후에 이질감을 느끼게 하지 않는 것도 매출 증가의 큰 요인으로 작용함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 8px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 8px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
            주요 오트밀 우유
           </span>
          </span>
         </p>
         <p align="center" style="margin: 0px 0px 8px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </span>
         </p>
         <p style="margin: 0px 0px 8px; text-align: left;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           <b>
            <span style="font-family: 바탕,serif;">
             <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
              <br/>
             </span>
            </span>
           </b>
          </span>
         </p>
         <p style="margin: 0px 0px 8px; text-align: left;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           <b>
            <span style="font-family: 바탕,serif;">
             <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
              □ 시사점 및 전문가 의견
             </span>
            </span>
           </b>
          </span>
         </p>
         <p>
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             ㅇ 시장 성장에 힘입은 새로운 음료 개발이 당분간 계속될 것
            </span>
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            콩
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            쌀 코코넛
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            아몬드 이외에도 캐슈넛
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            헤이즐넛
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            마카다미아
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            피칸과 같은 견과류를 이용한 우유 대체음료 제조도 늘어나고 있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            나아가 바나나
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            감자
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            보리
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            퀴노아 등을 이용한 음료 개발도 예정되어 있어 우유 대체 음료 시장은 향후 몇 년간 지속 성장이 가능한 것으로 보임
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            국내에서도 정식품
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            베지밀
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ),
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            매일유업
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            연세우유 등에서 우유 대체 음료 라인을 확대하고 상품을 개발하고 있음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            미국 시장 성장에 힘입어 수출 기회도 노려볼 만함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
            정식품과 연세우유의 우유 대체음료
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: Calibri;">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : 각 사 웹사이트
            </span>
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            미국 식음료 바이어
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            (
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            유통사
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ) A
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            사 관계자 인터뷰에 따르면
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            최근 아이스크림
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            요거트 등의 디저트류에서도 우유 대체 음료로 만들어진 제품이 늘어나고 있으며
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            이러한 상품 라인 확대는 계속되는 추세라고 평가함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            또한 우유 대체 음료의 약점으로 지적되었던 부족한 칼슘
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            비타민
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            D
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            등의 함량을 보완한 제품이 늘어나면서 시장 경쟁이 더욱 치열해 질 것으로 전망함
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
            매장에 진열된 우유 대체 음료들
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-family: 바탕,serif;">
           <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: Calibri;">
            </span>
           </span>
          </span>
         </p>
         <p align="center" style="margin: 8px 0px; text-align: center;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             <span style="font-family: 바탕,serif;">
              자료원
             </span>
             : KOTRA 시카고 무역관 자체 촬영
            </span>
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 0px;">
          <span style="font-size: 16px;">
           <span style="color: rgb(0, 0, 0);">
            <span style="font-family: 바탕;">
             ㅇ 우유 및 우유 대체 음료에 대한 올바른 정보 제공 및 습득 필요
            </span>
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            최근 몇 년간 우유 대체 음료의 인기 상승과 동시에 장점이 급격히 부각되면서 상대적으로 기존 우유의 단점만 지적되는 경향이 있었음
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            -
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            기존 음료와 새롭게 떠오르는 음료의 단백질
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            칼슘
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            ,
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            비타민 함유량 등을 정확히 전달하고 장단점을 명확히 표현하는 것이 장기적인 고객 유지 및 판매 상승에서 중요한 부분을 차지하게 될 것
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            .
           </span>
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="color: rgb(0, 0, 0); font-family: 바탕; font-size: 16px;">
          </span>
         </p>
         <p style="margin: 8px 0px;">
          <span style="font-family: 바탕;">
           <span style="font-family: 바탕,serif;">
            <span style="color: rgb(0, 0, 0); font-size: 16px;">
             자료원
            </span>
           </span>
           <span style="font-size: 16px;">
            <span style="color: rgb(0, 0, 0);">
             : 유로모니터
            </span>
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            , USA Today, Square, Ripple, Fairlife, Pacific, Oatly, Elmhurst
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            웹사이트
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            , Forbes, Mintel, CNN, CNBC, Refinery29, KOTRA
           </span>
           <span style="color: rgb(0, 0, 0); font-size: 16px;">
            시카고 무역관 자료 종합
           </span>
          </span>
         </p>
         <p class="bbs-copyright">
          < 저작권자 ⓒ KOTRA ＆ KOTRA 해외시장뉴스 >
         </p>
        </div>
       </div>
       <div class="btn-bbs-area cf">
        <button class="orange fl mr5" id="recommendButton" type="button">
         추천(
         <span id="recommendNum">
          0
         </span>
         )
        </button>
        <button class="orange fl mr5" id="scrapButton" type="button">
         스크랩
        </button>
        <a class="blue list fr" href="/user/globalBbs/kotranews/782/globalBbsDataList.do?setIdx=243&amp;pageViewType=&amp;column=&amp;search=&amp;searchAreaCd=&amp;searchNationCd=&amp;searchTradeCd=&amp;searchStartDate=&amp;searchEndDate=&amp;searchCategoryIdxs=&amp;searchIndustryCateIdx=&amp;searchItemCode=&amp;searchItemName=&amp;page=1&amp;row=0">
         목록
        </a>
       </div>
       <div class="next-post-wrap mt35">
        <ul>
         <li class="prev-post cf">
          <span>
           이전글
          </span>
          <p>
           <a class="ellipsis" href="/user/globalBbs/kotranews/782/globalBbsDataView.do?setIdx=243&amp;dataIdx=173786&amp;pageViewType=&amp;column=&amp;search=&amp;searchAreaCd=&amp;searchNationCd=&amp;searchTradeCd=&amp;searchStartDate=&amp;searchEndDate=&amp;searchCategoryIdxs=&amp;searchIndustryCateIdx=&amp;searchItemCode=&amp;searchItemName=&amp;page=1&amp;row=0">
            미국 정부의 국가주도형 5G 네트워크 구축계획 관련 논란
           </a>
          </p>
         </li>
         <li class="next-post cf">
          <span>
           다음글
          </span>
          <p class="ellipsis">
           <a href="/user/globalBbs/kotranews/782/globalBbsDataView.do?setIdx=243&amp;dataIdx=173712&amp;pageViewType=&amp;column=&amp;search=&amp;searchAreaCd=&amp;searchNationCd=&amp;searchTradeCd=&amp;searchStartDate=&amp;searchEndDate=&amp;searchCategoryIdxs=&amp;searchIndustryCateIdx=&amp;searchItemCode=&amp;searchItemName=&amp;page=1&amp;row=0">
            브랜드의 메시지를 전달한다, 미국 콘텐츠 마케팅 트렌드
           </a>
          </p>
         </li>
        </ul>
       </div>
       <div class="newest-wrap">
        <h5>
         이 뉴스를 본 사람들이 많이 본 다른 뉴스
        </h5>
        <div class="tbl-style td-custom">
         <table>
          <li>[link]</li>[link]<li>[link]</li>
         </table>
        </div>
       </div>
       <div class="comment-wrap sub-inner-wrap">
        <h5>
         댓글 (0)
        </h5>
        <span>
         로그인 후 의견을 남겨주세요.
        </span>
        <div class="comment-area">
         <form action="/common/proc/kotranews/globalBbs/user/173713/globalCommonCommentReg.do" class="frm-comment clear" id="frmComment" method="post" name="frmComment">
          <fieldset>
           <legend>
            댓글 폼
           </legend>
           <button class="btn-comment-complete" type="submit">
            확인
           </button>
          </fieldset>
          <div>
          </div>
         </form>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="banner-wrap">
     <div class="inner-wrap cf">
     </div>
    </div>
   </div>
   <div class="side-menu-area js-sideMenuArea">
    <button class="btn-side-menu js-sideMenuBtn" type="button" value="메뉴열림">
    </button>
    <div class="side-menu-wrap">
     <ul class="snbDp-1" data-toggle-tab="{'tab':'>li>a.tit'}">
      <li class="snbDp-1-1 on">
       [ahref]
       
       <div class="snbDp-2">
        <strong class="tit">
         해외직접투자
        </strong>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/user/oisBbs/kotranews/669/userOisBbsDataList.do?setIdx=1020">
           직접 투자절차
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li class="bar-none">
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="snbDp-1-2">
       [linkx]
       
       <div class="snbDp-2">
        <strong class="tit">
         생생현장
        </strong>
        <ul>
         <li>
          <a href="/user/globalBbs/kotranews/36/globalBbsDataList.do?setIdx=261">
           포토뉴스
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/user/video/kotranews/4/625/usrVideoBoardList.do">
           생생글로벌 비즈 트렌드
          </a>
         </li>
         <li class="bar-none">
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
      <li class="snbDp-1-3">
       [ahref]
       
       <div class="snbDp-2">
        [ahref]
        
        <ul>
         <li>
          <a href="/kotranews/subIndex/321.do">
           무역자료실안내
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li class="bar-none">
          <a href="/" target="_blank">
           리포지터리
          </a>
         </li>
         <li>
          <a href="/user/publication/kotranews/402/usrPublicationBuyGuide.do">
           간행물판매
          </a>
         </li>
        </ul>
       </div>
      </li>
      <li class="snbDp-1-4">
       [linkx]
       
       <div class="snbDp-2">
        <strong class="tit">
         열린마당
        </strong>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/user/customerContribute/kotranews/739/userCustomerContributeGuide.do">
           고객기고
          </a>
         </li>
         <li>
          <a href="/user/proposal/kotranews/760/userProposalList.do">
           고객 조사제안
          </a>
         </li>
         <li>
          <a href="/user/globalBbs/kotranews/57/globalBbsDataList.do?setIdx=262">
           공지사항
          </a>
         </li>
         <li class="bar-none">
          <a href="/user/newsLetter/kotranews/58/usrGwNewsLetterList.do">
           뉴스레터
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </li>
     </ul>
    </div>
   </div>
   <footer class="cf">
    <div class="f-logo-area">
     <h2 class="f-logo">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h2>
     <ul class="law cf">
      <li>
       <a href="/kh/main/KHMIUI010M.html">
        대한무역투자진흥공사 KOTRA
       </a>
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
    <ul class="public-mark cf">
     <li>
      2015년도 정부 3.5 우수기관
     </li>
    </ul>
    <p class="address">
     (06792) 서울시 서초구 헌릉로 13 TEL 1600-7119 ㅣ 사업자등록번호 120-82-00275
    </p>
    <p class="copyright">
     COPYRIGHT(C)2012 KOTRA. ALL RIGHTS RESERVED 대한무역투자진흥공사
    </p>
   </footer>
  </div>
  <div class="overlay">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0079
  </b>
 </body>
</html>|<---