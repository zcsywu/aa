--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer">
   <li>[linkx]</li>[ahref]<li>[linkx]</li>[mkey1]
  </meta>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/2005apple.svg/1200px-2005apple.svg.png" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-사과_생산_국가_목록 rootpage-사과_생산_국가_목록 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [ahref]
    
    [linkx]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <div class="thumb tright">
       <div class="thumbinner" style="width:302px;">
        [ahref]
        
        <div class="thumbcaption">
         <div class="magnify">
          [ahref]
          
         </div>
         2005년 사과 생산
        </div>
       </div>
      </div>
      <p>
       <b>
        사과 생산 국가의 목록
       </b>
       은 2008년
       <a class="external text" href="/site/567/DesktopDefault.aspx?PageID=567" rel="nofollow">
        FAOSTAT
       </a>
       [linkx]
       
       자료를 기초로 2011년 4월에 작성하였다. 2008년 전 세계 사과 생산량은 69,819,324 톤이다.
      </p>
      <div class="toc" id="toc">
       <div class="toctitle" dir="ltr" lang="ko">
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <span class="toctogglespan">
         <label class="toctogglelabel" for="toctogglecheckbox">
         </label>
        </span>
       </div>
       <ul>
        <li class="toclevel-1 tocsection-1">
         <a href="상">
          <span class="tocnumber">
           1
          </span>
          <span class="toctext">
           100만톤 이상
          </span>
         </a>
        </li>
        <li class="toclevel-1 tocsection-2">
         [ahref]
         
        </li>
        <li class="toclevel-1 tocsection-3">
         <a href="톤">
          <span class="tocnumber">
           3
          </span>
          <span class="toctext">
           5만 - 10만 톤
          </span>
         </a>
        </li>
        <li class="toclevel-1 tocsection-4">
         [pkeyx][pkeyx]<li>[keywordx]</li>
        </li>
        <li class="toclevel-1 tocsection-5">
         [linkx]
         
        </li>
        <li class="toclevel-1 tocsection-6">
         [linkx]
         
        </li>
        <li class="toclevel-1 tocsection-7">
         [linkx]
         
        </li>
       </ul>
      </div>
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <table class="wikitable sortable">
       <tbody>
        <tr bgcolor="#ececec">
         <th>
          순위
         </th>
         <th>
          국가/지역
         </th>
         <th>
          사과 생산량 (톤)
         </th>
        </tr>
        <tr>
         <td>
          1
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_the_People%27s_Republic_of_China.svg">
           </a>
          </span>
          <a href="/wiki/%EC%A4%91%EA%B5%AD" title="중국">
           중국
          </a>
         </td>
         <td align="left">
          29,851,163
         </td>
        </tr>
        <[keywordx]>
        </[keywordx]>
        <tr>
         <td>
          3
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Poland.svg">
            [pkeyx][linkx][keywordx][linkx][mkey1][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][keywordx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][linkx][pkeyx][linkx][ahref][linkx][ahref][linkx][linkx][mkey1][pkeyx]
           </a>
          </span>
          <a href="/wiki/%ED%8F%B4%EB%9E%80%EB%93%9C" title="폴란드">
           폴란드
          </a>
         </td>
         <td align="left">
          2,830,870
         </td>
        </tr>
        <tr>
         <td>
          4
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%9D%B4%EB%9E%80" title="이란">
           이란
          </a>
         </td>
         <td align="left">
          2,718,775
         </td>
        </tr>
        <tr>
         <td>
          5
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%ED%84%B0%ED%82%A4" title="터키">
           터키
          </a>
         </td>
         <td align="left">
          2,504,490
         </td>
        </tr>
        <tr>
         <td>
          6
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          2,208,227
         </td>
        </tr>
        <tr>
         <td>
          7
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%9D%B8%EB%8F%84" title="인도">
           인도
          </a>
         </td>
         <td align="left">
          1,985,000
         </td>
        </tr>
        <tr>
         <td>
          8
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_France.svg">
           </a>
          </span>
          <a href="/wiki/%ED%94%84%EB%9E%91%EC%8A%A4" title="프랑스">
           프랑스
          </a>
         </td>
         <td align="left">
          1,940,200
         </td>
        </tr>
        <tr>
         <td>
          9
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EB%9F%AC%EC%8B%9C%EC%95%84" title="러시아">
           러시아
          </a>
         </td>
         <td align="left">
          1,467,000
         </td>
        </tr>
        <tr>
         <td>
          10
         </td>
         <td>
          <span class="flagicon">
           [ahref]
            [linkx]<li>[keywordx]</li><li>[linkx]</li><li>[pkeyx]</li>
           
          </span>
          <a href="/wiki/%EC%B9%A0%EB%A0%88" title="칠레">
           칠레
          </a>
         </td>
         <td align="left">
          1,370,000
         </td>
        </tr>
        <tr>
         <td>
          11
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          1,300,000
         </td>
        </tr>
        <tr>
         <td>
          12
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EB%B8%8C%EB%9D%BC%EC%A7%88" title="브라질">
           브라질
          </a>
         </td>
         <td align="left">
          1,124,155
         </td>
        </tr>
        <tr>
         <td>
          13
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EB%8F%85%EC%9D%BC" title="독일">
           독일
          </a>
         </td>
         <td align="left">
          1,046,995
         </td>
        </tr>
       </tbody>
      </table>
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <table class="wikitable sortable">
       <tbody>
        <tr bgcolor="#ececec">
         <th>
          순위[ahref]<li>[mkey1]</li><li>[keywordx]</li><li>[keywordx]</li>
         </th>
         <th>
          국가/니역
         </th>
         <th>
          사과 생산량 (톤)
         </th>
        </tr>
        <tr>
         <td>
          14
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          840,100
         </td>
        </tr>
        <tr>
         <td>
          15
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_South_Africa.svg">
           </a>
          </span>
          [linkx]
          
         </td>
         <td align="left">
          770,741
         </td>
        </tr>
        <tr>
         <td>
          16
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          719,300
         </td>
        </tr>
        <tr>
         <td>
          17
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Spain.svg">
           </a>
          </span>
          <a href="/wiki/%EC%8A%A4%ED%8E%98%EC%9D%B8" title="스페인">
           스페인
          </a>
         </td>
         <td align="left">
          687,500
         </td>
        </tr>
        <tr>
         <td>
          18
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_North_Korea.svg">
           </a>
          </span>
          [linkx]
          
         </td>
         <td align="left">
          635,000
         </td>
        </tr>
        <tr>
         <td>
          19
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          585,000
         </td>
        </tr>
        <tr>
         <td>
          20
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          582,512
         </td>
        </tr>
        <tr>
         <td>
          21
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          568,600
         </td>
        </tr>
        <tr>
         <td>
          22
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          551,356
         </td>
        </tr>
        <tr>
         <td>
          23
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EC%9D%B4%EC%A7%91%ED%8A%B8" title="이집트">
           이집트
          </a>
         </td>
         <td align="left">
          550,743
         </td>
        </tr>
        <tr>
         <td>
          24
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Mexico.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          524,755
         </td>
        </tr>
        <tr>
         <td>
          25
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          470,865
         </td>
        </tr>
        <tr>
         <td>
          26
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          459,016
         </td>
        </tr>
        <tr>
         <td>
          27
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          426,858
         </td>
        </tr>
        <tr>
         <td>
          28
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Morocco.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          404,310
         </td>
        </tr>
        <tr>
         <td>
          29
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EB%B2%A8%EB%9D%BC%EB%A3%A8%EC%8A%A4" title="벨라루스">
           벨라루스<li>[linkx]</li><li>[pkeyx]</li><li>[keywordx]</li>
          </a>
         </td>
         <td align="left">
          379,809
         </td>
        </tr>
        <tr>
         <td>
          30
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EB%84%A4%EB%8D%9C%EB%9E%80%EB%93%9C" title="네덜란드">
           네덜란드
          </a>
         </td>
         <td align="left">
          375,000
         </td>
        </tr>
        <tr>
         <td>
          31
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%8B%9C%EB%A6%AC%EC%95%84" title="시리아">
           시리아
          </a>
         </td>
         <td align="left">
          360,700
         </td>
        </tr>
        <tr>
         <li>[linkx]</li>[mkey1][ahref]
        </tr>
        <tr>
         <td>
          33
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Belgium_(civil).svg">
           </a>
          </span>
          [linkx]
          
         </td>
         <td align="left">
          350,000
         </td>
        </tr>
        <tr>
         <td>
          34
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Australia.svg" title="오스트레일리아">
           </a>
          </span>
          <a href="/wiki/%EC%98%A4%EC%8A%A4%ED%8A%B8%EB%A0%88%EC%9D%BC%EB%A6%AC%EC%95%84" title="오스트레일리아">
           오스트레일리아
          </a>
         </td>
         <td align="left">
          265,481
         </td>
        </tr>
        <tr>
         <td>
          35
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          260,967
         </td>
        </tr>
        <tr>
         <td>
          36
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%8A%A4%EC%9C%84%EC%8A%A4" title="스위스">
           스위스
          </a>
         </td>
         <td align="left">
          258,530
         </td>
        </tr>
        <tr>
         <td>
          37
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          255,086
         </td>
        </tr>
        <tr>
         <td>
          38
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EC%98%81%EA%B5%AD" title="영국">
           영국
          </a>
         </td>
         <td align="left">
          243,100
         </td>
        </tr>
        <tr>
         <td>
          39
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          238,800
         </td>
        </tr>
        <tr>
         <td>
          40
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%84%B8%EB%A5%B4%EB%B9%84%EC%95%84" title="세르비아">
           세르비아
          </a>
         </td>
         <td align="left">
          235,601
         </td>
        </tr>
        <tr>
         <td>
          41
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          234,700
         </td>
        </tr>
        <tr>
         <td>
          42
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          205,021
         </td>
        </tr>
        <tr>
         <td>
          43
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          185,500
         </td>
        </tr>
        <tr>
         <td>
          44
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          174,315
         </td>
        </tr>
        <tr>
         <td>
          45
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          157,790
         </td>
        </tr>
        <tr>
         <td>
          46
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%ED%8E%98%EB%A3%A8" title="페루">
           페루
          </a>
         </td>
         <td align="left">
          135,209
         </td>
        </tr>
        <tr>
         <td>
          47
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Kyrgyzstan.svg">
           </a>
          </span>
          <a href="/wiki/%ED%82%A4%EB%A5%B4%EA%B8%B0%EC%8A%A4%EC%8A%A4%ED%83%84" title="키르기스스탄">
           키르기스스탄
          </a>
         </td>
         <td align="left">
          135,000
         </td>
        </tr>
        <tr>
         <td>
          48
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EB%A0%88%EB%B0%94%EB%85%BC" title="레바논">
           레바논
          </a>
         </td>
         <td align="left">
          125,200
         </td>
        </tr>
        <tr>
         <td>
          49
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EC%95%84%EB%A5%B4%EB%A9%94%EB%8B%88%EC%95%84" title="아르메니아">
           아르메니아
          </a>
         </td>
         <td align="left">
          110,000
         </td>
        </tr>
        <tr>
         <td>
          50
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          110,000
         </td>
        </tr>
        <tr>
         <td>
          51
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          102,893
         </td>
        </tr>
       </tbody>
      </table>
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <table class="wikitable sortable">
       <tbody>
        <tr bgcolor="#ececec">
         <th>
          순위
         </th>
         <th>
          국가/지역
         </th>
         <th>
          사과 생산량 (톤)
         </th>
        </tr>
        <tr>
         <td>
          52
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%9D%B4%EC%8A%A4%EB%9D%BC%EC%97%98" title="이스라엘">
           이스라엘
          </a>
         </td>
         <td align="left">
          97,425
         </td>
        </tr>
        <tr>
         <td>
          53
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          94,740
         </td>
        </tr>
        <tr>
         <td>
          54
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Croatia.svg">
           </a>
          </span>
          <a href="/wiki/%ED%81%AC%EB%A1%9C%EC%95%84%ED%8B%B0%EC%95%84" title="크로아티아">
           크로아티아
          </a>
         </td>
         <td align="left">
          80,201
         </td>
        </tr>
        <tr>
         <td>
          55
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Lithuania.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          74,251
         </td>
        </tr>
        <tr>
         <td>
          56
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          61,500
         </td>
        </tr>
        <tr>
         <td>
          57
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EB%B3%B4%EC%8A%A4%EB%8B%88%EC%95%84_%ED%97%A4%EB%A5%B4%EC%B2%B4%EA%B3%A0%EB%B9%84%EB%82%98" title="보스니아 헤르체고비나">
           보스니아 헤르체고비나
          </a>
         </td>
         <td align="left">
          51,946
         </td>
        </tr>
        <tr>
         <td>
          58
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EC%9A%B0%EB%A3%A8%EA%B3%BC%EC%9D%B4" title="우루과이">
           우루과이
          </a>
         </td>
         <td align="left">
          51,266
         </td>
        </tr>
       </tbody>
      </table>
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <table class="wikitable sortable">
       <tbody>
        <tr bgcolor="#ececec">
         <th>
          순위
         </th>
         <th>
          국가/지역
         </th>
         <th>
          사과 생산량 (톤)
         </th>
        </tr>
        <tr>
         <td>
          59
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          45,000
         </td>
        </tr>
        <tr>
         <td>
          60
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Ireland.svg">
           </a>
          </span>
          <a href="/wiki/%EC%95%84%EC%9D%BC%EB%9E%9C%EB%93%9C" title="아일랜드">
           아일랜드
          </a>
         </td>
         <td align="left">
          45,000
         </td>
        </tr>
        <tr>
         <td>
          61
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          41,803
         </td>
        </tr>
        <tr>
         <td>
          62
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          41,500
         </td>
        </tr>
        <tr>
         <td>
          63
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          36,396
         </td>
        </tr>
        <tr>
         <td>
          64
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Iraq.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          36,362
         </td>
        </tr>
        <tr>
         <td>
          65
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Jordan.svg">
           </a>
          </span>
          <a href="/wiki/%EC%9A%94%EB%A5%B4%EB%8B%A8" title="요르단">
           요르단
          </a>
         </td>
         <td align="left">
          34,913
         </td>
        </tr>
        <tr>
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx][ahref]<li>[keywordx]</li><li>[linkx]</li>
        </tr>
        <tr>
         <td>
          67
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EB%9D%BC%ED%8A%B8%EB%B9%84%EC%95%84" title="라트비아">
           라트비아
          </a>
         </td>
         <td align="left">
          28,859
         </td>
        </tr>
        <tr>
         <td>
          68
         </td>
         <td>
          <span class="flagicon">
           [mkey1]<li>[mkey1]</li>[ahref]<li>[keywordx]</li>
          </span>
          <a href="/wiki/%EB%B6%88%EA%B0%80%EB%A6%AC%EC%95%84" title="불가리아">
           불가리아
          </a>
         </td>
         <td align="left">
          23,500
         </td>
        </tr>
        <tr>
         <td>
          69
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Guatemala.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          22,226
         </td>
        </tr>
        <tr>
         <td>
          70
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          22,200
         </td>
        </tr>
        <tr>
         <td>
          71
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EC%98%88%EB%A9%98" title="예멘">
           예멘
          </a>
         </td>
         <td align="left">
          20,840
         </td>
        </tr>
        <tr>
         <td>
          72
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EB%A6%AC%EB%B9%84%EC%95%84" title="리비아">
           리비아
          </a>
         </td>
         <td align="left">
          20,000
         </td>
        </tr>
        <tr>
         <td>
          73
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          17,500
         </td>
        </tr>
        <tr>
         <td>
          74
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          17,500
         </td>
        </tr>
        <tr>
         <td>
          75
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Norway.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          17,035
         </td>
        </tr>
        <tr>
         <td>
          76
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Luxembourg.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          10,190
         </td>
        </tr>
       </tbody>
      </table>
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <table class="wikitable sortable">
       <tbody>
        <tr bgcolor="#ececec">
         <th>
          순위
         </th>
         <th>
          국가/지역
         </th>
         <th>
          사과 생산량 (톤)
         </th>
        </tr>
        <tr>
         <td>
          77
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Bolivia_(state).svg">
           </a>
          </span>
          <a href="/wiki/%EB%B3%BC%EB%A6%AC%EB%B9%84%EC%95%84" title="볼리비아">
           볼리비아
          </a>
         </td>
         <td align="left">
          9,850
         </td>
        </tr>
        <tr>
         <td>
          78
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%A7%90%EB%B0%94%EB%B8%8C%EC%9B%A8" title="짐바브웨">
           짐바브웨
          </a>
         </td>
         <td align="left">
          8,000
         </td>
        </tr>
        <tr>
         <td>
          79
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          <a href="/wiki/%EB%A7%88%EB%8B%A4%EA%B0%80%EC%8A%A4%EC%B9%B4%EB%A5%B4" title="마다가스카르">
           마다가스카르
          </a>
         </td>
         <td align="left">
          7,100
         </td>
        </tr>
        <tr>
         <td>
          80
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Bhutan.svg">
           </a>
          </span>
          [ahref]
          
         </td>
         <td align="left">
          7,076
         </td>
        </tr>
        <tr>
         <td>
          81
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          6,543
         </td>
        </tr>
        <tr>
         <td>
          82
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Montenegro.svg">
           </a>
          </span>
          [linkx]
          
         </td>
         <td align="left">
          5,374
         </td>
        </tr>
        <tr>
         <td>
          83
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%ED%95%80%EB%9E%80%EB%93%9C" title="핀란드">
           핀란드
          </a>
         </td>
         <td align="left">
          4,282
         </td>
        </tr>
        <tr>
         <td>
          84
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%BC%80%EB%83%90" title="케냐">
           케냐
          </a>
         </td>
         <td align="left">
          3,564
         </td>
        </tr>
        <tr>
         <td>
          85
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%97%90%EC%8A%A4%ED%86%A0%EB%8B%88%EC%95%84" title="에스토니아">
           에스토니아
          </a>
         </td>
         <td align="left">
          2,248
         </td>
        </tr>
        <tr>
         <td>
          86
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Saint_Vincent_and_the_Grenadines.svg">
           </a>
          </span>
          <a href="/wiki/%EC%84%B8%EC%9D%B8%ED%8A%B8%EB%B9%88%EC%84%BC%ED%8A%B8_%EA%B7%B8%EB%A0%88%EB%82%98%EB%94%98" title="세인트빈센트 그레나딘">
           세인트빈센트 그레나딘
          </a>
         </td>
         <td align="left">
          1,300
         </td>
        </tr>
        <tr>
         <td>
          87
         </td>
         <td>
          <span class="flagicon">
           [ahref]
            [ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][linkx][linkx][keywordx][linkx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][keywordx][mkey1][keywordx][ahref][keywordx][mkey1][pkeyx]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          1,269
         </td>
        </tr>
        <tr>
         <td>
          88
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
         <td align="left">
          1,050
         </td>
        </tr>
        <tr>
         <td>
          89
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Paraguay.svg">
           </a>
          </span>
          <a href="/wiki/%ED%8C%8C%EB%9D%BC%EA%B3%BC%EC%9D%B4" title="파라과이">
           파라과이
          </a>
         </td>
         <td align="left">
          650
         </td>
        </tr>
        <tr>
         <td>
          90
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [ahref]
          
         </td>
         <td align="left">
          570
         </td>
        </tr>
        <tr>
         <td>
          91
         </td>
         <td>
          <span class="flagicon">
           [linkx]
           
          </span>
          <a href="/wiki/%EC%98%A8%EB%91%90%EB%9D%BC%EC%8A%A4" title="온두라스">
           온두라스
          </a>
         </td>
         <td align="left">
          175
         </td>
        </tr>
        <tr>
         <td>
          92
         </td>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
           [ahref][mkey1][mkey1][mkey1][keywordx][keywordx][pkeyx][pkeyx][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
          
         </td>
         <td align="left">
          120
         </td>
        </tr>
        <tr>
         <td>
          93
         </td>
         <td>
          <span class="flagicon">
           <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Flag_of_Malta.svg">
           </a>
          </span>
          <a href="/wiki/%EB%AA%B0%ED%83%80" title="몰타">
           몰타
          </a>
         </td>
         <td align="left">
          100
         </td>
        </tr>
       </tbody>
      </table>
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul>
       <li>
        <b>
         <span style="color: #555; font-size: smaller;" title="언어: 영어">
          (영어)
         </span>
        </b>
        <a class="external text" href="/site/567/DesktopDefault.aspx?PageID=567" rel="nofollow">
         FAO 전체 목록
        </a>
       </li>
      </ul>
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <ul>
       <li>
        <b>
         <span style="color: #555; font-size: smaller;" title="언어: 영어">
          (영어)
         </span>
        </b>
        [ahref]
        
       </li>
      </ul>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     <a dir="ltr" href="/w/index.php?title=사과_생산_국가_목록&amp;oldid=23730133">
      https://ko.wikipedia.org/w/index.php?title=사과_생산_국가_목록&amp;oldid=23730133
     </a>
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:%EC%82%AC%EA%B3%BC" title="분류:사과">
         사과
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [ahref]
       
      </li>
      <li id="pt-anoncontribs">
       [linkx]
       
      </li>
      <li id="pt-createaccount">
       <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EA%B3%84%EC%A0%95%EB%A7%8C%EB%93%A4%EA%B8%B0&amp;returnto=%EC%82%AC%EA%B3%BC+%EC%83%9D%EC%82%B0+%EA%B5%AD%EA%B0%80+%EB%AA%A9%EB%A1%9D" title="계정을 만들고 로그인하는 것이 좋습니다; 하지만, 필수는 아닙니다">
        계정 만들기
       </a>
      </li>
      <li id="pt-login">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [linkx]
         
        </span>
       </li>
       <li id="ca-talk">
        <span>
         <a accesskey="t" href="/wiki/%ED%86%A0%EB%A1%A0:%EC%82%AC%EA%B3%BC_%EC%83%9D%EC%82%B0_%EA%B5%AD%EA%B0%80_%EB%AA%A9%EB%A1%9D" rel="discussion" title="문서의 내용에 대한 토론 문서 [t]">
          토론
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         <a href="/wiki/%EC%82%AC%EA%B3%BC_%EC%83%9D%EC%82%B0_%EA%B5%AD%EA%B0%80_%EB%AA%A9%EB%A1%9D">
          읽기
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      [mkey1][linkx][keywordx]
     </div>
     <div id="p-search" role="search">
      <h3>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       [pkeyx][keywordx][pkeyx][pkeyx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][mkey1][ahref][ahref][linkx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1]
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        <a accesskey="k" href="/wiki/%ED%8A%B9%EC%88%98:%EB%A7%81%ED%81%AC%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C/%EC%82%AC%EA%B3%BC_%EC%83%9D%EC%82%B0_%EA%B5%AD%EA%B0%80_%EB%AA%A9%EB%A1%9D" rel="nofollow" title="이 문서에서 링크한 문서의 최근 바뀜 [k]">
         가리키는 글의 최근 바뀜
        </a>
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        [linkx]
        
       </li>
       <li id="t-permalink">
        <a href="/w/index.php?title=%EC%82%AC%EA%B3%BC_%EC%83%9D%EC%82%B0_%EA%B5%AD%EA%B0%80_%EB%AA%A9%EB%A1%9D&amp;oldid=23730133" title="문서의 이 판에 대한 고유링크">
         고유 링크
        </a>
       </li>
       <li id="t-info">
        <a href="/w/index.php?title=%EC%82%AC%EA%B3%BC_%EC%83%9D%EC%82%B0_%EA%B5%AD%EA%B0%80_%EB%AA%A9%EB%A1%9D&amp;action=info" title="이 문서에 대한 자세한 정보">
         문서 정보
        </a>
       </li>
       <li id="t-wikibase">
        [linkx]
        
       </li>
       <li id="t-cite">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EC%9D%B4%EB%AC%B8%EC%84%9C%EC%9D%B8%EC%9A%A9&amp;page=%EC%82%AC%EA%B3%BC_%EC%83%9D%EC%82%B0_%EA%B5%AD%EA%B0%80_%EB%AA%A9%EB%A1%9D&amp;id=23730133" title="이 문서를 인용하는 방법에 대한 정보">
         이 문서 인용하기
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[ahref]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[pkeyx]</li>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-ar">
        <a class="interlanguage-link-target" href="/wiki/%D9%82%D8%A7%D8%A6%D9%85%D8%A9_%D8%A7%D9%84%D8%AF%D9%88%D9%84_%D8%AD%D8%B3%D8%A8_%D8%A5%D9%86%D8%AA%D8%A7%D8%AC_%D8%A7%D9%84%D8%AA%D9%81%D8%A7%D8%AD" hreflang="ar" lang="ar" title="قائمة الدول حسب إنتاج التفاح – 아랍어">
         العربية
        </a>
       </li>
       <li class="interlanguage-link interwiki-en">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-fa">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-id">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ta">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-th">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-tr">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-uk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ur">
        <a class="interlanguage-link-target" href="/wiki/%D9%81%DB%81%D8%B1%D8%B3%D8%AA_%D9%85%D9%85%D8%A7%D9%84%DA%A9_%D8%A8%D9%84%D8%AD%D8%A7%D8%B8_%D9%BE%DB%8C%D8%AF%D8%A7%D9%88%D8%A7%D8%B1_%D8%B3%DB%8C%D8%A8" hreflang="ur" lang="ur" title="فہرست ممالک بلحاظ پیداوار سیب – 우르두어">
         اردو
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh">
        [ahref]
        
       </li>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-edit wb-langlinks-link">
        [linkx]
        
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2019년 2월 18일 (월) 22:23에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     [linkx]
     
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     [linkx]
     
     을 참고하십시오.
     <br/>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     [ahref]
     
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     <a class="extiw" href="/wiki/Privacy_policy" title="wmf:Privacy policy">
      개인정보 정책
     </a>
    </li>
    <li id="footer-places-about">
     [ahref]
     
    </li>
    <li id="footer-places-disclaimer">
     [ahref]
     
    </li>
    <li id="footer-places-developers">
     [linkx]
     
    </li>
    <li id="footer-places-cookiestatement">
     [linkx]
     
    </li>
    <li id="footer-places-mobileview">
     [linkx]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [linkx]
     
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0528
  </b>
 </body>
</html>
|<---