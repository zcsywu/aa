--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible" id="document_mode"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body>
  <div>
   <div id="skipArea">
    <a href="p">
     메인메뉴 바로가기
    </a>
    [ahref]
    
   </div>
   <div class="area_header">
    <div class="bg_header_1">
    </div>
    <div class="box_header">
     <header>
      <div class="box_header_1">
       <h1 class="logo">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
      </div>
      <div class="area_gnb" id="gnb">
       <div class="top_util util_left">
        <ul class="clearfix">
         <li class="util_left_bg1">
          [ahref]
          
         </li>
         <li class="util_left_bg2">
          <a href="/apiMain.do" title="공공데이터활용서비스">
           공공데이터
          </a>
         </li>
         <li class="util_left_bg3">
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="top_util util_right">
        <ul class="clearfix">
         <li class="util_right_bg1">
          [linkx]
          
         </li>
         <li class="util_right_bg2">
          <a href="/portal/member/policyView.do" title="개인회원가입">
           개인회원가입
          </a>
         </li>
         <li class="util_right_bg3">
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="total_menu">
        <a class="gnb_btn gnb_btn_bg1" href=";" id="sitemap" title="전체메뉴보기">
         전체메뉴보기
        </a>
       </div>
       <nav id="nav_area_01">
        <h3 class="gnb_tit">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <ul id="ul_gnb_1">
         <li>
          [ahref]
          
          <div class="box_gnb_1">
           <h2>
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h2>
           <div class="gnb_2_point">
            <a class="gnb_2_point_bg_1_1" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2660" title="건강기능식품 원료별정보">
             건강기능식품
             <br/>
             원료별정보
            </a>
            [ahref]
            
            [linkx]
            
           </div>
           <ul class="ul_gnb_2 clearfix">
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2603" title="국가식품안전관리체계">
                국가식품안전관리체계
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2606" title="수입식품정보">
              수입식품정보
             </a>
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2606" title="관련 법령 및 제도">
                관련 법령 및 제도
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2616" title="영업등록 방법">
                영업등록 방법
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2640" title="우수수입해외업소">
                우수수입해외업소
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/healthyfoodlife/functionality.do?menu_grp=MENU_NEW01&amp;menu_no=2657" title="건강기능식품 기능별정보">
                건강기능식품 기능별정보
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2664&amp;ctgType=CTG_TYPE01&amp;ctgryno=1155" title="인허가/GMP/표시광고">
                인허가/GMP/표시광고
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3725" title="식품첨가물이란?">
                식품첨가물이란?
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/healthyfoodlife/alReg.do?menu_grp=MENU_NEW01&amp;menu_no=2720" title="영업등록 절차">
                영업등록 절차
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3800" title="GMO의 이해">
                GMO의 이해
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3819" title="위생용품 정보">
              위생용품 정보
             </a>
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3701" title="위생용품 안전관리">
                위생용품 안전관리
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3802" title="기구 및 용기포장정보">
                기구 및 용기포장정보
               </a>
              </li>
              <li>
               [ahref]
                <li>[area1][mkey1]</li>[area1][mkey1][pkeyx]<li>[area1][keywordx]</li>[ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </li>
         <li>
          [linkx]
          
          <div class="box_gnb_1">
           <h2>
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h2>
           <div class="gnb_2_point">
            [linkx]
            
            <a class="gnb_2_point_bg_1_2" href="/portal/fooddanger/testUnfitDom.do?menu_no=2710&amp;menu_grp=MENU_NEW02" title="국내식품부적합">
             국내식품부적합
            </a>
            <a class="gnb_2_point_bg_1_3" href="/portal/fooddanger/administMeasureList.do?menu_no=2714&amp;menu_grp=MENU_NEW02" title="행정처분">
             행정처분
            </a>
           </div>
           <ul class="ul_gnb_2 clearfix">
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/fooddanger/testUnfitDom.do?menu_no=2710&amp;menu_grp=MENU_NEW02" title="국내식품 부적합">
                국내식품 부적합
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/fooddanger/falseAdvertisement.do?menu_grp=MENU_NEW02&amp;menu_no=2768" title="허위과대광고 현황">
                허위과대광고 현황
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/fooddanger/eggHazardList.do?menu_grp=MENU_NEW02&amp;menu_no=3497" title="살충제 검출 계란 확인">
                살충제 검출 계란 확인
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3703" title="식중독이란?">
                식중독이란?
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3704" title="식중독 예방법">
                식중독 예방법
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3705" title="식중독 발생 시 대응 요령">
                식중독 발생시 대응 요령
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3707" title="식중독 예방 동영상">
                식중독 예방 동영상
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/fooddanger/preventDangerStatusList.do?menu_no=3080&amp;menu_grp=MENU_NEW02" title="지역별 위해정보 공개">
              지역별 위해정보 공개
             </a>
            </li>
            <li class="row">
             <a href="/portal/fooddanger/agriCrackdownList.do?menu_grp=MENU_NEW02&amp;menu_no=2799" title="원산지표시광고">
              원산지표시광고
             </a>
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/fooddanger/agriCrackdownList.do?menu_grp=MENU_NEW02&amp;menu_no=2799" title="농축산물 원산지표시위반">
                농축산물 원산지표시위반
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/fooddanger/foodDirectImportBlock.do?menu_grp=MENU_NEW02&amp;menu_no=3594" title="해외직구정보">
              해외직구정보
             </a>
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3609" title="해외직구식품 질의응답방">
                해외직구식품 질의응답방
               </a>
              </li>
              <li>
               <a href="/portal/fooddanger/foodDirectImportTestResult.do?menu_grp=MENU_NEW02&amp;menu_no=3597" title="소비자참여 검사결과">
                소비자참여 검사결과
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3599" title="해외직구 안전 홍보">
                해외직구 안전 홍보
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </li>
         <li>
          <a class="ul_gnb_href" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2735" title="건강·영양">
           <span>
            건강·영양
           </span>
          </a>
          <div class="box_gnb_1">
           <h2>
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <div class="gnb_2_point">
            [ahref]
            
            <a class="gnb_2_point_bg_1_2" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2735" title="생애주기별 정보">
             생애주기별 정보
            </a>
            [ahref]
            
           </div>
           <ul class="ul_gnb_2 clearfix">
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/exhealthyfoodlife/index.html" target="_blank" title="영양상담프로그램">
                영양상담프로그램
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3397" title="위생등급제 지정절차">
                위생등급제 지정절차
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3405" title="위생등급제 지정현황">
                위생등급제 지정현황
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
            </li>
            <li class="row">
             <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2874" title="나의 영양식단관리">
              나의 영양식단관리
             </a>
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2874" title="이용안내">
                이용안내
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/healthyfoodlife/myPlanList.do?menu_grp=MENU_NEW03&amp;menu_no=2878" title="나의 식단관리">
                나의 식단관리
               </a>
              </li>
              <li>
               <li>[linkx]</li>[linkx][area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/specialinfo/childCenterList.do?menu_grp=MENU_NEW03&amp;menu_no=3604" title="어린이·청소년 식생활 안전관리">
              어린이·청소년 식생활 안전관리
             </a>
             <ul class="ul_gnb_3">
              <li>
               [ahref]
               
              </li>
              <li>
               <li>[linkx]</li>[linkx]<li>[area1][keywordx]</li>[linkx]
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/healthyfoodlife/NatriASacchaLetdown.do?menu_grp=MENU_NEW03&amp;menu_no=2897" title="나트륨/당류 줄이기">
              나트륨/당류 줄이기
             </a>
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2912" title="나트륨 정보">
                나트륨 정보
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2919" title="당 정보">
                당 정보
               </a>
              </li>
              <li>
               <a href="/portal/cookrcp/cookRcpInfoList.do?rcp_cat=RC_COOK03&amp;menu_no=3608&amp;menu_grp=MENU_NEW03" title="나트륨·당류 줄인 메뉴">
                나트륨·당류 줄인 메뉴
               </a>
              </li>
              <li>
               <a href="/portal/healthyfoodlife/naDownProgram.do?menu_grp=MENU_NEW03&amp;menu_no=2954" title="미각 판정도구">
                미각 판정도구
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/healthyfoodlife/bmiCalcurator.do?menu_no=3071&amp;menu_grp=MENU_NEW03" title="계산기">
              계산기
             </a>
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/healthyfoodlife/bmiCalcurator.do?menu_no=3071&amp;menu_grp=MENU_NEW03" title="BMI 계산기">
                BMI 계산기
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3714" title="가공식품 영양표시">
                가공식품 영양표시
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3717" title="자주하는 질문">
                자주하는 질문
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3718" title="교육/홍보자료">
                교육/홍보자료
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </li>
         <li>
          [ahref]
          
          <div class="box_gnb_1">
           <h2>
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <div class="gnb_2_point">
            <a class="gnb_2_point_bg_1_1" href="/portal/specialinfo/searchInfoCompany.do?menu_grp=MENU_NEW04&amp;menu_no=2813" title="업체검색">
             업체검색
            </a>
            [ahref]
            
            [ahref]
            
           </div>
           <ul class="ul_gnb_2 clearfix">
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/safefoodlife/foodTraceability/foodTraceability.do?menu_grp=MENU_NEW04&amp;menu_no=2819" title="이력추적정보조회">
                이력추적정보조회
               </a>
              </li>
              <li>
               <a href="/portal/healthyfoodlife/searchHomeHF.do?menu_grp=MENU_NEW04&amp;menu_no=2823" title="건강기능식품검색">
                건강기능식품검색
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/specialinfo/infoMapLaw.do?menu_no=2846&amp;menu_grp=MENU_NEW04" title="법령정보">
              법령정보
             </a>
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/specialinfo/infoMapLaw.do?menu_grp=MENU_NEW04&amp;menu_no=2846" title="식품안전법령정보맵">
                식품안전법령정보맵
               </a>
              </li>
              <li>
               <a href="/portal/specialinfo/infoMapCodex.do?menu_grp=MENU_NEW04&amp;menu_no=2848" title="식품안전기준규격정보맵">
                식품안전기준규격정보맵
               </a>
              </li>
              <li>
               <a href="/portal/specialinfo/infoMapStat.do?menu_grp=MENU_NEW04&amp;menu_no=2850" title="식품안전통계정보맵">
                식품안전통계정보맵
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=2719" title="주류법령자료">
                주류법령자료
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/safefoodlife/food/foodRvlv/foodRvlv.do?menu_grp=MENU_NEW04&amp;menu_no=3101" title="기준규격정보">
              기준규격정보
             </a>
             <ul class="ul_gnb_3">
              <li>[area1][keywordx]</li>[pkeyx][area1][mkey1]
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=2947" title="식품원료 이해">
                식품원료 이해
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=2909&amp;ctgryno=1823" title="CODEX 정보">
              CODEX 정보
             </a>
             <ul class="ul_gnb_3">
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/specialinfo/codexStandardList.do?data_type=STAN&amp;menu_grp=MENU_NEW04&amp;menu_no=2926" title="CODEX 관련 규정">
                CODEX 관련 규정
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/specialinfo/myFoodType.do?menu_grp=MENU_NEW04&amp;menu_no=2971" title="My 식품유형">
                My 식품유형
               </a>
              </li>
              <li>
               <a href="/portal/specialinfo/myQualityIndicator.do?menu_grp=MENU_NEW04&amp;menu_no=2973" title="My 설정실험지표">
                My 설정실험지표
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3831" title="농약PLS란">
                농약PLS란
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3832" title="자료실">
                자료실
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3834" title="수입식품 농약잔류허용기준(IT) 신청">
                수입식품 농약잔류허용기준(IT) 신청
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3835" title="제외국 기준">
                제외국 기준
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3504" title="영업자 4대 준수사항">
                영업자 4대 준수사항
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/specialinfo/overseasFoodSafetyInfo.do?menu_grp=MENU_NEW04&amp;menu_no=3513" title="해외식품안전정보 사이트">
                해외식품안전정보 사이트
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3116" title="수출식품지원정보">
                수출식품지원정보
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </li>
         <li>
          [linkx]
          
          <div class="box_gnb_1">
           <h2>
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <div class="gnb_2_point">
            [ahref]
            
            [linkx]
            
           </div>
           <ul class="ul_gnb_2 clearfix">
            <li class="row">
             [linkx]
             
             <ul class="ul_gnb_3">
              <li>
               <a href="/portal/issue/hotIssueList.do?menu_grp=MENU_NEW05&amp;menu_no=2832" title="핫이슈">
                핫이슈
               </a>
              </li>
              <li>
               <a href="/portal/issue/issueSafeFoodList.do?menu_grp=MENU_NEW05&amp;menu_no=2834" title="식품안전">
                식품안전
               </a>
              </li>
              <li>
               <a href="/portal/issue/issueNutriFood.do?menu_grp=MENU_NEW05&amp;menu_no=2837" title="식품영양">
                식품영양
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=3409" title="식품 안전이슈 20가지">
                식품 안전이슈 20가지
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2857" title="보도자료">
                보도자료
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2858" title="해명설명참고자료">
                해명설명참고자료
               </a>
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2864" title="해외뉴스">
                해외뉴스
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             [ahref]
              [linkx][linkx][area1][keywordx][area1][keywordx][ahref][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx][pkeyx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][mkey1]
             
             <ul class="ul_gnb_3">
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2882" title="영상자료">
                영상자료
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/sympathyplus/supporters.do?menu_grp=MENU_NEW05&amp;menu_no=3816" title="식품안전나라 서포터즈">
                식품안전나라 서포터즈
               </a>
              </li>
             </ul>
            </li>
            <li class="row">
             <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2887" title="간행물자료실">
              간행물자료실
             </a>
             <ul class="ul_gnb_3">
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2904" title="매거진F">
                매거진F
               </a>
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </li>
            <li class="row">
             [linkx]
             
            </li>
           </ul>
          </div>
         </li>
        </ul>
       </nav>
       <div class="box_search">
        <form id="searchForm" name="searchForm">
         <dl class="hit_keyword">
          <dt>
           인기검색어 ▶
          </dt>
          <dd id="favoriteKWD_Div">
           [linkx]
           
           <a href=";" title="건강기능식품의 검색어로 통합검색">
            건강기능식품
           </a>
          </dd>
         </dl>
         <label class="hid" for="searchTermTop">
          검색
         </label>
         <button class="gnb_btn gnb_btn_bg2" id="totalSearchBtn" onclick="javaScript:fn_searchTop();">
          <span>
           검색
          </span>
         </button>
        </form>
       </div>
       <div class="bookmark btnBmark">
        <a class="gnb_btn gnb_btn_bg3" href=";" id="bookmark_btn">
         즐겨찾기
        </a>
        <div class="layerBmark">
         <div class="layerBmark_inner">
          <ul id="tabs">
           <li>
            <div class="tabscontents t1">
             [area1][mkey1][area1][keywordx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][linkx][pkeyx]
            </div>
           </li>
          </ul>
          <a class="btnMybmark" href=";">
           My 즐겨찾기 설정
          </a>
         </div>
         <a class="btnBookMarkSave" href=";">
          저장
         </a>
         [ahref]
         
        </div>
       </div>
      </div>
     </header>
    </div>
   </div>
   <div class="path">
    <div class="inner">
     <div class="catn01" id="cdsn00">
      <a class="home" href="/main.do">
      </a>
     </div>
     <div class="catn02" id="cdsn01">
      [linkx]
      
      <ul style="display: none;">
       <li>
        [ahref]
        
       </li>
       <li class="dpt02_ul">
        [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
       </li>
       <li>
        [linkx]
        
       </li>
       <li class="on">
        <a href="#">
         식품전문정보
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="catn02" id="cdsn02">
      <a class="prt" href="#">
       국내식품부적합
      </a>
      <ul style="display: none;">
       <li>
        [ahref]
        
       </li>
       <li class="on">
        [ahref]
        
       </li>
       <li class="dpt02_ul">
        [ahref]
        
        <ul style="display: none;">
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="#">
           위해·예방정보
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="#">
         해외직구정보
        </a>
       </li>
      </ul>
     </div>
     <div class="catn02" id="cdsn03">
      <a class="prt" href="#">
       식품등 광고의 이해
      </a>
      <ul style="display: none;">
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="#">
         위해·예방정보
        </a>
       </li>
       <li class="on">
        <a href="#">
         건강·영양정보
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="catn02" id="cdsn04">
      [linkx]
      
      <ul style="display: none;">
       <li>
        <a href="#">
         식품·안전정보
        </a>
       </li>
       <li>
        <a href="#">
         위해·예방정보
        </a>
       </li>
       <li class="on">
        [linkx]
        
       </li>
       <li>
        <a href="#">
         식품전문정보
        </a>
       </li>
       <li>
        <a href="#">
         이슈·뉴스·식품·홍보·교육
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <form id="baseForm" method="post" name="baseForm" onsubmit="return false;">
    <div id="wrap">
     <main>
      <div class="asideFrameDiv">
       <div id="aside_bottom" style="width:60px;">
        <div>
         <ul class="share_bottom">
          <li>
           [linkx]
           
          </li>
          <li>
           <a class="email" href=":">
            이메일
           </a>
          </li>
          <li>
           <a class="fb" href="/portal/healthyfoodlife/naDownProgram.do?menu_grp=MENU_NEW03&amp;menu_no=2954', 'facebook share');">
            페이스북
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a class="url" href=";">
            URL보내기
           </a>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div id="content-wrap">
       <section>
        <h3 class="h1" style="font-weight: bold; margin-bottom: 30px;">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <div class="page-container">
         <div style="width:100%; margin:10px 0px; float: left;">
          [linkx]
          
         </div>
         <div style="width:100%; margin:10px 0px; float: left;">
          * 미각판정결과 업로드 페이지 유지보수 관계로 담당자 메일(juhee02@korea.kr)로 결과 발송 부탁드립니다.
         </div>
         <div style="clear: both;">
         </div>
         <div class="cat-container">
          <ul class="category">
           <li>
            <h2 style="">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h2>
           </li>
           <li>
            <a href="/popup/healthyfoodlife/fileDownload.do?fileFlag=naManual">
             사용설명서
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="nutri fileDownload fancybox.iframe" href="/popup/healthyfoodlife/fileDownload.do?fileFlag=naProgram" target="_blank">
             프로그램 다운
            </a>
           </li>
          </ul>
          <div id="teach01">
          </div>
         </div>
        </div>
       </section>
      </div>
     </main>
    </div>
    <footer id="footer">
     <div id="fnb">
      <div class="container-fluid clearfix">
       <h2 class="hid">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[area1][keywordx][linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]
       </h2>
       <ul class="nav">
        <li>
         [ahref]
         
        </li>
        <li>
         <a class="fontWn" href="/wpge/m_30/de010802l001.do" target="_blank" title="새창열림">
          개인정보처리방침
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a class="fontWn" href="/portal/board/board.do?menu_no=2922&amp;menu_grp=MENU_NEW07">
          포털이용관련 질의응답
         </a>
        </li>
        <li>
         <a class="fontWn" href="/portal/board/board.do?menu_no=2938&amp;menu_grp=MENU_NEW07">
          관련사이트
         </a>
        </li>
        <li>
         <a class="fontWn" href="/portal/board/board.do?menu_no=2928&amp;menu_grp=MENU_NEW07">
          정보오류 신고
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <div class="relate-site">
        [ahref]
        
        <ul class="list">
         <li>
          <a href="/" target="_blank" title="새창열림">
           식품의약품안전처
          </a>
         </li>
         <li>
          <a href="/" target="_blank" title="새창열림">
           교육부
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/" target="_blank" title="새창열림">
           국방부
          </a>
         </li>
         <li>
          <a href="/" target="_blank" title="새창열림">
           행정안전부
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/" target="_blank" title="새창열림">
           보건복지부
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="siteinfo">
      <div class="container-fluid">
       <div class="fL">
        <p class="foot-logo">
         <br/>
        </p>
        <div class="address-copyr">
         <address class="address">
          우)28159 충청북도 청주시 흥덕구 오송읍 오송생명2로 187 오송보건의료행정타운 식품의약품안전처
         </address>
         <p class="copyr">
          Copyright ⓒ Ministry of Food and Drug Safety. All Rights Reserved.
         </p>
         <p class="copyr">
          소비자신고(식품안전정보원): 국번없이 1399, 종합민원센터 : 1577-1255, 시스템 문의 : 1899-5590
         </p>
        </div>
       </div>
       <div class="gov-share">
        <ul class="share">
         <li>
          <a href="/365daysfoodsafety/" target="_blank" title="페이스북 새창열림">
           페이스북
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/_xnGxkWC?from=qr" target="_blank" title="카카오플러스 새창열림">
           트위터
          </a>
         </li>
        </ul>
       </div>
       <br/>
       <br/>
       <br/>
       <div class="gov-share" style="margin-top:1px">
        <ul class="share">
         <li>
         </li>
         <li>
         </li>
         <li>
         </li>
         <li>
         </li>
        </ul>
       </div>
       <div class="clearfix">
       </div>
      </div>
     </div>
    </footer>
    <div class="sitemap_op">
    </div>
    <div class="sitemap" style="z-index :110000">
     <div class="title">
      메뉴 한눈에 보기
      <a href="#">
      </a>
     </div>
     <div class="site_cnt">
      <div id="footerLink">
       <ul>
        [ahref][ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>
       </ul>
       <br>
       </br>
      </div>
      <div class="site_div">
       <div class="boxx">
        <h1 class="h01">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <ul>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3120">
           ·  식품안전정보
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/workFlow.do?menu_grp=MENU_NEW01&amp;menu_no=2602">
           -  식품행정업무안내
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2606">
           -  관련 법령 및 제도
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2611&amp;ctgType=CTG_TYPE01&amp;ctgryno=1138">
           - 수입신고 및 검사
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/safefoodlife/foodImport/statistics/year.do?menu_grp=MENU_NEW01&amp;menu_no=2632">
           - 수입식품통계
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/pgm/m_596/rdSafeMngInfo.do" target="_blank">
           - 식품등 방사능 정보
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2664&amp;ctgType=CTG_TYPE01&amp;ctgryno=1155">
           - 인허가/GMP/표시광고
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=2675">
           - 영업자지원
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3612">
           - 의약품 병용 섭취 주의사항
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3702">
           - 건강기능식품 섭취 주의사항
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3799">
           - 술의 이해
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/alReg.do?menu_grp=MENU_NEW01&amp;menu_no=2720">
           - 영업등록 절차
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3853" title="자율 주류안전관리인">
           자율 주류안전관리인
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/alGuide.do?menu_grp=MENU_NEW01&amp;menu_no=2739">
           - 안전한음주
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/alSelft.do?menu_grp=MENU_NEW01&amp;menu_no=2746">
           - 자가 음주진단
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3800">
           - GMO의 이해
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/examState.do?menu_grp=MENU_NEW01&amp;menu_no=3801">
           - GMO 안전성 심사현황
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3819">
           ·  위생용품 정보
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW01&amp;menu_no=3819">
           - 위생용품관련법령
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="fl w190 mgr06">
       <div class="boxx">
        <h1 class="h02">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/fooddanger/testUnfitDom.do?menu_no=2710&amp;menu_grp=MENU_NEW02">
           - 국내식품부적합
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/fooddanger/administMeasureList.do?menu_no=2714&amp;menu_grp=MENU_NEW02">
           ·  행정처분
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=2717">
           - 허위과대광고
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/fooddanger/farmInfoSearch.do?menu_grp=MENU_NEW02&amp;menu_no=3517">
           ·  달걀농장/살충제계란
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3703">
           ·  식중독정보
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/fooddanger/preventDangerStatusList.do?menu_no=3080&amp;menu_grp=MENU_NEW02">
           ·  지역별 위해정보 공개
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/fooddanger/agriCrackdownList.do?menu_grp=MENU_NEW02&amp;menu_no=2799">
           - 농축산물 원산지표시위반
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/fooddanger/foodDirectImportBlock.do?menu_grp=MENU_NEW02&amp;menu_no=3594">
           ·  해외직구정보
          </a>
         </li>
         <li>
          [area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW02&amp;menu_no=3609">
           - 해외직구식품 질의응답방
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="fl w190 mgr06">
       <div class="boxx">
        <h1 class="h03">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <ul>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2735">
           ·  생애주기별정보
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/nutritionindex.do?menu_no=3859&amp;menu_grp=MENU_NEW03">
           - 영양지수
          </a>
         </li>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=2773&amp;ctgType=CTG_TYPE01&amp;ctgryno=1177">
           ·  영양성분정보
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3396">
           - 위생등급제 관계법령
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3491">
           - 위생등급제 신청서류
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/myPlanList.do?menu_grp=MENU_NEW03&amp;menu_no=2878">
           - 나의 식단관리
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/healthyfoodlife/myNutrientList.do?menu_grp=MENU_NEW03&amp;menu_no=2888">
           - 영양성분표 산출
          </a>
         </li>
         <li>
          <a class="dpt01" href="/portal/specialInfo/childFoodService.do?menu_no=3604&amp;menu_grp=MENU_NEW03" style="letter-spacing:-1.3px;">
           ·  어린이·청소년 식생활안전관리
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <li>[linkx]</li><li>[linkx]</li><li>[linkx]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [area1][keywordx]<li>[linkx]</li><li>[pkeyx]</li>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/sensuousmenu/sensuousmenuMain.do?menu_grp=MENU_NEW03&amp;menu_no=2992">
           - 오감만족 식단
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW03&amp;menu_no=3720">
           - 영양표시 교육 동영상
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="fl w190 mgr06">
       <div class="boxx">
        <h1 class="h04">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/searchInfoHaccpCompany.do?menu_grp=MENU_NEW04&amp;menu_no=2816">
           -  HACCP인증현황
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/safefoodlife/foodimport/importFoodList.do?menu_grp=MENU_NEW04&amp;menu_no=2818">
           -  수입식품검색
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/infoMapCodex.do?menu_grp=MENU_NEW04&amp;menu_no=2848">
           - 식품안전기준규격정보맵
          </a>
         </li>
         <li>
          <li>[area1][keywordx]</li>[ahref]<li>[linkx]</li><li>[pkeyx]</li>[area1][mkey1]
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/safefoodlife/food/authintpFaqClCd.do?menu_grp=MENU_NEW04&amp;menu_no=3524">
           - 유권해석 FAQ
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=2947">
           ·  식품원료
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/safefoodlife/foodMeterial/foodMeterialDB.do?menu_grp=MENU_NEW04&amp;menu_no=2968">
           - 식품원료목록
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3519">
           - CODEX 활동
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/codexStandardList.do?data_type=STAN&amp;menu_grp=MENU_NEW04&amp;menu_no=2926">
           - CODEX 관련 규정
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/myQualityIndicator.do?menu_grp=MENU_NEW04&amp;menu_no=2973">
           - My 설정실험지표
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/shelfLife.do?menu_grp=MENU_NEW04&amp;menu_no=2976">
           - 유통기간 라이브러리
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3831">
           - 농약PLS란
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
           [area1][keywordx][pkeyx][ahref][pkeyx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][ahref][ahref][area1][mkey1][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
           [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][mkey1][area1][keywordx][ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=2944">
           - 유해물질정보
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/fooddanger/fungalToxinBoard.do?menu_grp=MENU_NEW04&amp;menu_no=3848">
           - 식품중유해물질간편검색
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3504">
           - 영업자 4대 준수사항
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/specialinfo/examFeeList.do?menu_grp=MENU_NEW04&amp;menu_no=3500">
           - 검사기관별 시험항목 검색
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW04&amp;menu_no=3116">
           - 수출식품지원정보
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="fl w190">
       <div class="boxx">
        <h1 class="h05">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/issue/hotIssueList.do?menu_grp=MENU_NEW05&amp;menu_no=2832">
           - 핫이슈
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=3409">
           - 식품 안전이슈 20가지
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2859">
           - 생활뉴스
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2852">
           - 정책소식
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2857">
           - 보도자료
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2864">
           - 해외뉴스
          </a>
         </li>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2873">
           ·  교육홍보자료실
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2880">
           - 교육자료
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="dpt02" href="/portal/sympathyplus/infographic.do?menu_grp=MENU_NEW05&amp;menu_no=2892">
           - 인포그래픽
          </a>
         </li>
         <li>
          <[area1][keywordx]>
          </[area1][keywordx]>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dpt01" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2887">
           ·  간행물자료실
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2887">
           - 열린마루
          </a>
         </li>
         <li>
          <a class="dpt02" href="/portal/board/board.do?menu_grp=MENU_NEW05&amp;menu_no=2890">
           - 열린포럼
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div id="back-top-wrapper">
     <p id="back-top" style="display:block;">
      <a href="p">
       <span>
        Back to Top
       </span>
      </a>
     </p>
    </div>
   </form>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0442
  </b>
 </body>
</html>
|<---