--->|<!DOCTYPE html>
<html lang="en">
 <head data-react-checksum="-1336989888" data-reactid="1" data-reactroot="">
  <meta charset="utf-8" data-reactid="2"/>
  <meta content="IE=edge" data-reactid="3" http-equiv="X-UA-Compatible"/>
  <title data-reactid="4">
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="no" data-reactid="5" name="msapplication-tap-highlight"/>
  <meta content="user-scalable=yes, width=device-width, initial-scale=1" data-reactid="6" name="viewport"/>
  <meta content="" data-reactid="10" name="author"/>
  <meta content="Copyright (c) Cond&amp;#233; Nast 2019" data-reactid="11" name="copyright"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="12" name="description"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="14" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="15" name="news_keywords">
   <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[area1][mkey1]<li>[area1][keywordx]</li>
  </meta>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="17" property="og:description"/>
  <meta content="https://media.cntraveler.com/photos/5a99a85dafa6cb3864785ca4/master/w_1200,c_limit/Paris_GettyImages-641204660.jpg" data-reactid="18" property="og:image"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="19" property="og:site_name"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="20" property="og:title"/>
  <meta content="" data-reactid="21" property="og:type"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="22" property="og:url"/>
  <meta content="summary_large_image" data-reactid="23" property="twitter:card"/>
  <meta content="@CNTraveler" data-reactid="24" property="twitter:creator"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="25" property="twitter:description"/>
  <meta content="www.cntraveler.com" data-reactid="26" property="twitter:domain"/>
  <meta content="https://media.cntraveler.com/photos/5a99a85dafa6cb3864785ca4/master/w_1200,c_limit/Paris_GettyImages-641204660.jpg?mbid=social_retweet" data-reactid="27" property="twitter:image:src"/>
  <meta content="CNTraveler" data-reactid="28" property="twitter:site"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" data-reactid="29" property="twitter:title"/>
  <meta content="21317493981" data-reactid="30" property="fb:page_id"/>
  <meta content="100009996994525" data-reactid="31" property="fb:admins"/>
 </head>
 <body class="page-destination">
  <noscript>
   <li>[ahref]</li>[pkeyx][ahref]
  </noscript>
  <div data-cns="cns-slot-out-of-page">
  </div>
  <div data-cns="cns-slot-modal">
  </div>
  <div id="react-app">
   <div>
    <div class="rethink page-container destination-container transparent" data-react-checksum="1698563009" data-reactid="1" data-reactroot="">
     <div class="ad-placement cnt-ad-leaderboard top ad ad--hero" data-reactid="2">
      <div class="ad__slot ad__slot--hero" data-reactid="3">
      </div>
     </div>
     <div aria-hidden="false" class="global-site-header" data-reactid="4">
      <div class="global-site-header__placeholder false" data-reactid="5">
      </div>
      <header class="global-header transparent atPageTop" data-reactid="6">
       <div class="global-header-container" data-reactid="7">
        <button aria-label="menu" class="site-menu-btn" data-reactid="9" type="button">
         <span class="site-menu-btn__bar" data-reactid="10">
         </span>
        </button>
        <div class="global-header__logo" data-reactid="11">
         [ahref]
         
        </div>
        <div class="cm-placement subscribe-btn " data-reactid="16" id="AMS_TVL_GLOBAL_NAVBAR_TRANSPARENT">
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][linkx][area1][mkey1][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][ahref][area1][mkey1][linkx]
        </div>
        <button class="global-header-search-toggle" data-reactid="18">
         Search
        </button>
       </div>
       <div class="global-header-search-modal" data-reactid="19">
        <div class="global-header-search-modal__close" data-reactid="20" role="button">
         <span class="visually-hidden" data-reactid="21">
          Close
         </span>
        </div>
        <div class="global-header-search-modal__logo" data-reactid="22">
         <a data-reactid="23" href="/">
          <span aria-hidden="true" class="global-header-search-modal__logo-text" data-reactid="24">
           
          </span>
         </a>
        </div>
        <div class="component-search-form rethink grid" data-component="SearchForm" data-reactid="25">
         <form action="/search" class="ui-open" data-reactid="26" method="GET">
          <div class="search-content" data-reactid="27">
           <label data-reactid="28" for="search-input-field">
           </label>
           <button aria-disabled="true" class="search-button" data-reactid="30" disabled="">
            <span class="search-button-text" data-reactid="31">
             Search
            </span>
           </button>
          </div>
         </form>
        </div>
        <div class="trending-places" data-reactid="32">
         <div class="grid" data-reactid="33">
          <h5 class="rubric" data-reactid="34">
           Trending Places
           <a data-reactid="37" href="/the-places">
            <span class="see-all" data-reactid="38">
             See All
            </span>
           </a>
          </h5>
          <div class="trending-places__list" data-reactid="39">
           <div class="trending-places__tout" data-reactid="40">
            [linkx]
            
           </div>
           <div class="trending-places__tout" data-reactid="45">
            [ahref]
            
           </div>
           <div class="trending-places__tout" data-reactid="50">
            <a class="trending-places__link" data-reactid="51" href="/destinations/barcelona">
             <div class="trending-places__photo" data-reactid="52">
              <div class="component-lazy pending" data-component="Lazy" data-reactid="53">
              </div>
             </div>
             <h3 class="trending-places__hed" data-reactid="54">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
            </a>
           </div>
           <div class="trending-places__tout" data-reactid="55">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="global-header-rollover-ad" data-reactid="60">
        <div class="content" data-reactid="61">
         <div class="cm-placement global-header-rollover-small desktop" data-reactid="62" id="AMS_TVL_GLOBAL_NAVBAR_ROLLOVER_SMALL">
          <div class="cm-failsafe" data-reactid="63">
           <div class="cnt-rollover-small">
            [linkx]
            
            [ahref]
            
            <div class="component-button">
             <a class="component-button__link" href="/go/failsafe" target="_blank">
              Subscribe
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="cm-placement global-header-rollover-full desktop" data-reactid="64" id="AMS_TVL_GLOBAL_NAVBAR_ROLLOVER_FULL">
          <div class="cm-failsafe" data-reactid="65">
           <div class="cnt-rollover-full">
            <div class="cnt-rollover-full__content">
             <a class="cnt-rollover-full__link" href="/go/failsafe" target="_blank">
              <h3 class="cnt-rollover-full__hed">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
              <p class="cnt-rollover-full__tagline">
               The ultimate source of travel inspiration plus 2 free gifts
              </p>
             </a>
             <div class="component-button outline-button">
              <a class="component-button__link" href="/go/failsafe" target="_blank">
               Subscribe
              </a>
             </div>
             <ul>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </div>
            <div class="cnt-rollover-full__img">
             <a href="/go/failsafe" target="_blank">
              <span class="cnt-rollover-full__cnt-logo">
              </span>
             </a>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </header>
      <div data-component="Modal" data-reactid="66">
      </div>
     </div>
     <section class="site-body" data-reactid="68">
      <div class="destination-guide" data-reactid="69">
       <div class="destination-hero" data-reactid="70">
        <div class="destination-hero__lede" data-reactid="71">
         <div class="embed clip-embed-component " data-reactid="72" data-type="clip">
          <div class="clip-component" data-reactid="73">
           <video autoplay="" data-reactid="74" loop="" muted="" playsinline="">
            <source data-reactid="75" src="https://media.cntraveler.com/clips/5a983cebafa6cb3864785bdd/360p/pass/CNT_Marquee_Paris_022618.mp4" type="video/webm"/>
            <source data-reactid="76" src="https://media.cntraveler.com/clips/5a983cebafa6cb3864785bdd/360p/pass/CNT_Marquee_Paris_022618.mp4" type="video/mp4"/>
           </video>
          </div>
         </div>
        </div>
        <div class="destination-hero__content grid" data-reactid="77">
         <h1 class="hed" data-reactid="78">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h1>
         <[area1][keywordx]>
         </[area1][keywordx]>
        </div>
       </div>
       <div class="content-body" data-reactid="80">
        <div class="component-sticky " data-reactid="81" style="top:0;">
         <div data-reactid="82">
          <div class="destination-nav" data-reactid="83">
           <a data-reactid="84" data-target="stay-hotel" href="l">
            Stay
           </a>
           <a data-reactid="85" data-target="eat-drink" href="k">
            Eat &amp; Drink
           </a>
           <a data-reactid="86" data-target="activity-shop" href="p">
            To Do
           </a>
          </div>
         </div>
         <div data-reactid="87">
         </div>
        </div>
        <div class="destination-info" data-reactid="88">
         <div class="destination-info__content grid" data-reactid="89">
          <h2 class="destination-info__hed" data-reactid="90">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h2>
          <div class="destination-info__copy" data-reactid="93">
           <p data-reactid="94">
            This perennial champ, having had its thunder taken by cities like London and Tokyo, now is back with a vengeance with a crop of pilgrimage-worthy restaurants, top-to-bottom overhauls of the world's most iconic hotels, and the elevation of the concept store. And you still can't turn a corner without running into a Rodin. (Video by Albert JutRov)
           </p>
          </div>
          <div class="destination-info__map" data-reactid="95">
           <figure class="embed image-embed-component square " data-id="5a9df559d363c34048b36581" data-reactid="96" data-type="image-embed">
            <div class="image-embed-wrapper" data-reactid="97">
             <div data-reactid="98">
              [pkeyx][linkx]<li>[area1][mkey1]</li><li>[area1][keywordx]</li>
             </div>
            </div>
           </figure>
          </div>
          <div class="destination-info__list" data-reactid="101">
           <ul data-reactid="102">
            <li data-reactid="103">
             <em data-reactid="104">
              Currency
             </em>
             <strong data-reactid="106">
              Euro
             </strong>
            </li>
            <li data-reactid="107">
             <em data-reactid="108">
              Languages
             </em>
             <strong data-reactid="110">
              French
             </strong>
            </li>
            <li data-reactid="111">
             <em data-reactid="112">
              When To Visit
             </em>
             <strong data-reactid="114">
              June to August, September to October
             </strong>
            </li>
           </ul>
          </div>
          <button class="destination-info__read-more" data-reactid="115" type="button">
           Read more
          </button>
         </div>
        </div>
        <div class="venue-carousel grid" data-reactid="116" id="stay-hotel">
         <div class="carousel-header" data-reactid="117">
          <a class="rubric" data-reactid="118" name="stay-hotel">
           <p data-reactid="119">
            HOTELS
           </p>
          </a>
          [linkx]
          
          <h2 class="hed" data-reactid="121">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="dek" data-reactid="122">
          </div>
         </div>
         <div class="slick-initialized slick-slider" data-reactid="123">
          <button class="slick-arrow slick-prev slick-disabled" data-reactid="124" data-role="none" style="display:block;" type="button">
           Previous
          </button>
          <div class="slick-list" data-reactid="125">
           <div class="slick-track" data-reactid="126">
            [area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
           </div>
          </div>
          <button class="slick-arrow slick-next slick-disabled" data-reactid="172" data-role="none" style="display:block;" type="button">
           Next
          </button>
         </div>
        </div>
        <div class="featured-trio" data-reactid="173">
         <div class="grid" data-reactid="174">
          <div class="rubric" data-reactid="175">
           TRENDING
          </div>
          <h3 class="hed" data-reactid="176">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <div class="featured-card-0" data-reactid="177">
           <div class="image-wrapper" data-reactid="178">
            [linkx]
            
           </div>
           <h4 class="card-hed" data-reactid="187">
            <li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
           </h4>
          </div>
          <div class="secondary-cards" data-reactid="190">
           <div class="featured-card-1" data-reactid="191">
            <div class="image-wrapper" data-reactid="192">
             <a data-reactid="193" href="/gallery/best-places-for-shopping-in-paris">
              <div data-reactid="194">
               <picture class="component-responsive-image" data-reactid="195">
                <source data-reactid="196" media="(min-width: 1280px)" srcset="https://media.cntraveler.com/photos/5cfa75d8a2764a8f578da904/3:2/w_280,c_limit/LaTre%25CC%2581sorerie_Suite5_copyrightMollyseyes.jpg"/>
                <source data-reactid="197" media="(min-width: 1024px)" srcset="https://media.cntraveler.com/photos/5cfa75d8a2764a8f578da904/3:2/w_215,c_limit/LaTre%25CC%2581sorerie_Suite5_copyrightMollyseyes.jpg"/>
                <source data-reactid="198" media="(min-width: 768px)" srcset="https://media.cntraveler.com/photos/5cfa75d8a2764a8f578da904/3:2/w_292,c_limit/LaTre%25CC%2581sorerie_Suite5_copyrightMollyseyes.jpg"/>
                <source data-reactid="199" media="(min-width: 0px)" srcset="https://media.cntraveler.com/photos/5cfa75d8a2764a8f578da904/1:1/w_182,c_limit/LaTre%25CC%2581sorerie_Suite5_copyrightMollyseyes.jpg">
                 [area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][linkx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][pkeyx][ahref][ahref][ahref][area1][mkey1][area1][keywordx][area1][keywordx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                </source>
               </picture>
              </div>
             </a>
            </div>
            <h4 class="card-hed" data-reactid="201">
             [ahref]
             
            </h4>
           </div>
           <div class="featured-card-2" data-reactid="204">
            <div class="image-wrapper" data-reactid="205">
             <a data-reactid="206" href="/story/kenzo-takadas-favorite-places-in-paris">
              <div data-reactid="207">
               <picture class="component-responsive-image" data-reactid="208">
                <source data-reactid="209" media="(min-width: 1280px)" srcset="https://media.cntraveler.com/photos/5cd1e420a4c4c6734338234e/3:2/w_280,c_limit/Portrait-Masaru-Mizushima.jpg"/>
                <source data-reactid="210" media="(min-width: 1024px)" srcset="https://media.cntraveler.com/photos/5cd1e420a4c4c6734338234e/3:2/w_215,c_limit/Portrait-Masaru-Mizushima.jpg"/>
                <source data-reactid="211" media="(min-width: 768px)" srcset="https://media.cntraveler.com/photos/5cd1e420a4c4c6734338234e/3:2/w_292,c_limit/Portrait-Masaru-Mizushima.jpg"/>
                <source data-reactid="212" media="(min-width: 0px)" srcset="https://media.cntraveler.com/photos/5cd1e420a4c4c6734338234e/1:1/w_182,c_limit/Portrait-Masaru-Mizushima.jpg"/>
               </picture>
              </div>
             </a>
            </div>
            <h4 class="card-hed" data-reactid="214">
             <a class="card-link" data-reactid="215" href="/story/kenzo-takadas-favorite-places-in-paris">
              <span class="card-text" data-reactid="216">
               Kenzo Takada's Favorite Places in Paris
              </span>
             </a>
            </h4>
           </div>
          </div>
         </div>
        </div>
        <div class="venue-carousel grid" data-reactid="217" id="eat-drink">
         <div class="carousel-header" data-reactid="218">
          [linkx]
          
          [linkx]
          
          <h2 class="hed" data-reactid="222">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="dek" data-reactid="223">
          </div>
         </div>
         <div class="slick-initialized slick-slider" data-reactid="224">
          <button class="slick-arrow slick-prev slick-disabled" data-reactid="225" data-role="none" style="display:block;" type="button">
           Previous
          </button>
          <div class="slick-list" data-reactid="226">
           <div class="slick-track" data-reactid="227">
            <div class="slick-slide slick-active slick-cloned" data-index="0" data-reactid="228" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="229">
              [ahref]
              
             </div>
            </div>
            <div class="slick-slide slick-active slick-cloned" data-index="1" data-reactid="236" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="237">
              <a data-reactid="238" href="/bars/septime-la-cave">
               <div class="embedded-photo" data-reactid="239">
                <div class="component-lazy pending" data-component="Lazy" data-reactid="240">
                </div>
               </div>
               <div class="description-card" data-reactid="241">
                <h4 class="venue-name" data-reactid="242">
                 Septime La Cave
                </h4>
                <div class="venue-description" data-reactid="243">
                 Located just around the corner from one of the best contemporary French restaurants in Paris, this is hip younger sibling.
                </div>
               </div>
              </a>
             </div>
            </div>
            <div class="slick-slide slick-active slick-cloned" data-index="2" data-reactid="244" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="245">
              [linkx]
              
             </div>
            </div>
            <div class="slick-slide slick-active slick-cloned" data-index="3" data-reactid="252" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="253">
              [linkx]
              
             </div>
            </div>
            <div class="slick-slide slick-cloned" data-index="4" data-reactid="260" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="261">
              <div class="end-description-card" data-reactid="262">
               <div class="hed" data-reactid="263">
                <a data-reactid="264" href="/gallery/best-restaurants-in-paris">
                 29 Best Restaurants in Paris
                </a>
               </div>
              </div>
             </div>
            </div>
            <div class="slick-slide slick-cloned" data-index="5" data-reactid="265" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="266">
              <div class="end-description-card" data-reactid="267">
               <div class="hed" data-reactid="268">
                [linkx]
                
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <button class="slick-arrow slick-next slick-disabled" data-reactid="270" data-role="none" style="display:block;" type="button">
           Next
          </button>
         </div>
        </div>
        <div class="featured-trio" data-reactid="271">
         <div class="grid" data-reactid="272">
          <div class="rubric" data-reactid="273">
           POPULAR
          </div>
          <h3 class="hed" data-reactid="274">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <div class="featured-card-0" data-reactid="275">
           <div class="image-wrapper" data-reactid="276">
            [linkx]
            
           </div>
           <h4 class="card-hed" data-reactid="285">
            <a class="card-link" data-reactid="286" href="/gallery/best-museums-galleries-in-paris">
             <span class="card-text" data-reactid="287">
              12 Best Museums &amp; Galleries in Paris
             </span>
            </a>
           </h4>
          </div>
          <div class="secondary-cards" data-reactid="288">
           <div class="featured-card-1" data-reactid="289">
            <div class="image-wrapper" data-reactid="290">
             [linkx]
             
            </div>
            <h4 class="card-hed" data-reactid="299">
             <a class="card-link" data-reactid="300" href="/gallery/best-things-to-do-in-paris-with-kids">
              <span class="card-text" data-reactid="301">
               15 Best Things to Do in Paris With Kids
              </span>
             </a>
            </h4>
           </div>
           <div class="featured-card-2" data-reactid="302">
            <div class="image-wrapper" data-reactid="303">
             <a data-reactid="304" href="/gallery/inside-the-most-romantic-hotel-in-paris">
              <div data-reactid="305">
               <picture class="component-responsive-image" data-reactid="306">
                <source data-reactid="307" media="(min-width: 1280px)" srcset="https://media.cntraveler.com/photos/5cd450616e7960d9e7f05071/3:2/w_280,c_limit/Le-Bristol_2019_100640588-H1-Le_Bristol_Paris-Panoramic_Suite_7-HD.jpg"/>
                <source data-reactid="308" media="(min-width: 1024px)" srcset="https://media.cntraveler.com/photos/5cd450616e7960d9e7f05071/3:2/w_215,c_limit/Le-Bristol_2019_100640588-H1-Le_Bristol_Paris-Panoramic_Suite_7-HD.jpg"/>
                <source data-reactid="309" media="(min-width: 768px)" srcset="https://media.cntraveler.com/photos/5cd450616e7960d9e7f05071/3:2/w_292,c_limit/Le-Bristol_2019_100640588-H1-Le_Bristol_Paris-Panoramic_Suite_7-HD.jpg"/>
                <source data-reactid="310" media="(min-width: 0px)" srcset="https://media.cntraveler.com/photos/5cd450616e7960d9e7f05071/1:1/w_182,c_limit/Le-Bristol_2019_100640588-H1-Le_Bristol_Paris-Panoramic_Suite_7-HD.jpg"/>
               </picture>
              </div>
             </a>
            </div>
            <h4 class="card-hed" data-reactid="312">
             [ahref]
             
            </h4>
           </div>
          </div>
         </div>
        </div>
        <div class="venue-carousel grid" data-reactid="315" id="activity-shop">
         <div class="carousel-header" data-reactid="316">
          <a class="rubric" data-reactid="317" name="activity-shop">
           <p data-reactid="318">
            ACTIVITIES
           </p>
          </a>
          <a class="see-all" data-reactid="319" href="/search?q=paris&amp;section=todo">
           SEE ALL
          </a>
          <h2 class="hed" data-reactid="320">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h2>
          <div class="dek" data-reactid="321">
          </div>
         </div>
         <div class="slick-initialized slick-slider" data-reactid="322">
          <button class="slick-arrow slick-prev slick-disabled" data-reactid="323" data-role="none" style="display:block;" type="button">
           Previous
          </button>
          <div class="slick-list" data-reactid="324">
           <div class="slick-track" data-reactid="325">
            <div class="slick-slide slick-active slick-cloned" data-index="0" data-reactid="326" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="327">
              [ahref]
              
             </div>
            </div>
            <div class="slick-slide slick-active slick-cloned" data-index="1" data-reactid="334" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="335">
              <a data-reactid="336" href="/activities/palais-garnier">
               <div class="embedded-photo" data-reactid="337">
                <div class="component-lazy pending" data-component="Lazy" data-reactid="338">
                </div>
               </div>
               <div class="description-card" data-reactid="339">
                [linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]<li>[area1][mkey1]</li>
               </div>
              </a>
             </div>
            </div>
            <div class="slick-slide slick-active slick-cloned" data-index="2" data-reactid="342" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="343">
              [ahref][area1][mkey1][linkx][ahref][area1][mkey1][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][ahref][area1][mkey1][ahref][ahref][linkx][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx]
             </div>
            </div>
            <div class="slick-slide slick-active slick-cloned" data-index="3" data-reactid="350" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="351">
              [linkx]
              
             </div>
            </div>
            <div class="slick-slide slick-cloned" data-index="4" data-reactid="358" style="outline:none;" tabindex="-1">
             <div class="carousel-card-wrapper" data-reactid="359">
              <div class="end-description-card" data-reactid="360">
               <div class="hed" data-reactid="361">
                <a data-reactid="362" href="/gallery/best-things-to-do-in-paris">
                 25 Best Things to Do in Paris
                </a>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <button class="slick-arrow slick-next slick-disabled" data-reactid="363" data-role="none" style="display:block;" type="button">
           Next
          </button>
         </div>
        </div>
        <div class="destination-search" data-reactid="364">
         [ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
        </div>
        <div class="destination-hedlist grid" data-reactid="381">
         [pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][pkeyx][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][mkey1][ahref][area1][keywordx][area1][keywordx][area1][keywordx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
        </div>
       </div>
       <div class="destination-map" data-reactid="396">
       </div>
       <div class="guides-list" data-reactid="398">
        <div class="grid" data-reactid="399">
         <div class="rubric" data-reactid="400">
          PLACES
         </div>
         <a class="see-all" data-reactid="401" href="/search">
          SEE ALL
         </a>
         <h3 class="hed" data-reactid="402">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <div class="guides-list-card" data-reactid="403">
          [linkx]
           <li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li><li>[pkeyx]</li>
          
         </div>
         <div class="guides-list-card" data-reactid="408">
          <a data-reactid="409" href="/destinations/barcelona">
           <div class="responsive-image" data-reactid="410">
            <div class="component-lazy pending" data-component="Lazy" data-reactid="411">
            </div>
           </div>
           <h4 class="card-hed" data-reactid="412">
            Barcelona
           </h4>
          </a>
         </div>
         <div class="guides-list-card" data-reactid="413">
          [linkx]
          
         </div>
         <div class="guides-list-card" data-reactid="418">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </section>
     <div class="global-subscription-footer" data-reactid="423">
      <div class="global-subscription-footer__container" data-reactid="424">
       <div class="global-footer-subscribe" data-reactid="425">
        <div class="cm-placement " data-reactid="426" id="AMS_TVL_GLOBAL_FOOTER_SUBSCRIBE">
         <div class="cm-failsafe" data-reactid="427">
          <div class="cnt-global-footer">
           [linkx]
           
           [ahref]
           
           [ahref]
           
           <div class="component-button">
            [linkx]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="global-footer-newsletter" data-reactid="428">
        <section class="component-newsletter-subscribe undefined-action" data-reactid="429" role="region" tabindex="0">
         <div class="component-newsletter-subscribe__content" data-reactid="430">
          <div class="component-newsletter-subscribe__rubric" data-reactid="431">
           Daily Traveler
          </div>
          <div class="component-newsletter-subscribe__hed subscribe" data-reactid="432">
           Newsletter
          </div>
          <div class="component-newsletter-subscribe__dek" data-reactid="433">
           Get daily traveler inspiration right to your inbox.
          </div>
          <form class="newsletter-form--optdown" data-reactid="434">
          </form>
          <form class="newsletter-form" data-reactid="435">
           <fieldset data-reactid="436" tabindex="0">
            <label class="newsletter-form__label" data-reactid="437" for="dailyTraveler">
             <span class="newsletter-form__title" data-reactid="439">
              Daily Traveler
             </span>
            </label>
            <label class="newsletter-form__label" data-reactid="440" for="travelerIntel">
             <span class="newsletter-form__title" data-reactid="442">
              Travel Intel
             </span>
            </label>
            <label class="newsletter-form__label" data-reactid="443" for="womenWhoTravel">
             <span class="newsletter-form__title" data-reactid="445">
              Women Who Travel
             </span>
            </label>
           </fieldset>
           <button class="component-button newsletter-form__button newsletter-form__button--submit" data-reactid="447" type="submit">
            Sign Up
           </button>
          </form>
          <p class="component-newsletter-subscribe__copyright" data-reactid="448">
           Will be used in accordance with our
           <a data-reactid="451" href="/privacy-policy">
            User Agreement
           </a>
           and
           [linkx]
           
          </p>
         </div>
        </section>
       </div>
      </div>
     </div>
     <footer class="site-footer" data-reactid="456">
      <ul aria-label="Social media" class="social-media site-footer__social-media" data-reactid="457" role="navigation">
       <li data-reactid="458">
        [ahref]
        
       </li>
       <li data-reactid="462">
        [linkx]
        
       </li>
       <li data-reactid="466">
        [linkx]
        
       </li>
       <li data-reactid="470">
        <a aria-label="Follow us on Instagram" class="external-link social-media__social-link social-media__social-link--Instagram" data-reactid="471" href="/cntraveler" rel="noopener noreferrer" target="_blank">
         <svg data-reactid="472" height="18" viewbox="0 0 15 15" width="18" xmlns="http://www.w3.org/2000/svg">
          <g data-reactid="473" fill="#FFF" fill-rule="evenodd">
           <path d="M7.498 10.002a2.5 2.5 0 1 1 0-4.999 2.5 2.5 0 0 1 0 4.999zm0-6.35a3.85 3.85 0 1 0 0 7.7 3.85 3.85 0 0 0 0-7.7zM12.4 3.5a.9.9 0 1 1-1.8 0 .9.9 0 0 1 1.8 0" data-reactid="474">
           </path>
           <path d="M7.498.005C5.46.005 5.206.013 4.406.05c-.798.036-1.343.163-1.82.348a3.675 3.675 0 0 0-1.328.865 3.675 3.675 0 0 0-.864 1.328c-.186.477-.312 1.022-.349 1.82C.01 5.211 0 5.466 0 7.502c0 2.037.009 2.292.045 3.092.037.798.163 1.343.349 1.82.191.493.448.91.864 1.328.417.416.835.673 1.328.864.477.186 1.022.312 1.82.349.8.036 1.055.045 3.092.045 2.036 0 2.291-.009 3.09-.045.799-.037 1.344-.163 1.82-.349a3.676 3.676 0 0 0 1.329-.864 3.68 3.68 0 0 0 .865-1.328c.185-.477.312-1.022.348-1.82.037-.8.045-1.055.045-3.092 0-2.036-.008-2.291-.045-3.09-.036-.799-.163-1.344-.348-1.82a3.676 3.676 0 0 0-.865-1.329 3.675 3.675 0 0 0-1.328-.865c-.477-.185-1.022-.312-1.82-.348-.8-.037-1.055-.045-3.091-.045zm0 1.35c2.002 0 2.239.008 3.03.044.73.034 1.127.156 1.392.259.35.136.6.298.862.56.262.263.424.513.56.862.103.265.225.662.259 1.393.036.79.043 1.027.043 3.03 0 2.001-.007 2.238-.043 3.03-.034.73-.156 1.127-.259 1.391-.136.35-.298.6-.56.862a2.323 2.323 0 0 1-.862.561c-.265.103-.662.225-1.393.258-.79.036-1.027.044-3.03.044-2.001 0-2.239-.008-3.03-.044-.73-.033-1.127-.155-1.391-.258-.35-.136-.6-.298-.862-.56a2.323 2.323 0 0 1-.561-.863c-.103-.264-.225-.66-.258-1.392-.036-.79-.044-1.028-.044-3.03s.008-2.239.044-3.03c.033-.73.155-1.127.258-1.392.136-.35.298-.6.56-.862.263-.262.513-.424.863-.56.264-.103.66-.225 1.392-.259.79-.036 1.028-.043 3.03-.043z" data-reactid="475">
           </path>
          </g>
         </svg>
        </a>
       </li>
      </ul>
      <nav aria-label="Footer" class="navigation site-footer__navigation" data-reactid="476">
       <ul class="navigation__list" data-reactid="477">
        <li class="navigation__list-item" data-reactid="478">
         [linkx]
         
        </li>
        <li class="navigation__list-item" data-reactid="480">
         [linkx]
         
        </li>
        <li class="navigation__list-item" data-reactid="482">
         <a class="external-link navigation__link" data-reactid="483" href="/" rel="noopener noreferrer" target="_blank">
          Condé Nast Store
         </a>
        </li>
        <li class="navigation__list-item" data-reactid="484">
         [ahref]
         
        </li>
        <li class="navigation__list-item" data-reactid="486">
         [linkx]
         
        </li>
        <li class="navigation__list-item" data-reactid="488">
         [ahref]
         
        </li>
        <li class="navigation__list-item" data-reactid="490">
         <a class="external-link navigation__link" data-reactid="491" href="/careers/" rel="noopener noreferrer" target="_blank">
          Careers
         </a>
        </li>
        <li class="navigation__list-item" data-reactid="492">
         [ahref]
         
        </li>
        <li class="navigation__list-item" data-reactid="494">
         [ahref]
         
        </li>
       </ul>
      </nav>
      <div aria-expanded="false" class="sister-sites site-footer__sister-sites" data-reactid="496">
       <button class="sister-sites__label" data-reactid="497">
        Our Sites[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][keywordx][pkeyx][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][linkx][ahref][linkx][linkx][area1][keywordx][area1][mkey1]
       </button>
       <ul class="sister-sites__menu" data-reactid="498" role="menu">
        <li data-reactid="499">
         <a class="external-link" data-reactid="500" href="m" rel="noopener noreferrer" target="_blank">
          Allure
         </a>
        </li>
        <li data-reactid="501">
         <a class="external-link" data-reactid="502" href="m" rel="noopener noreferrer" target="_blank">
          Ars Technica
         </a>
        </li>
        <li data-reactid="503">
         <a class="external-link" data-reactid="504" href="m" rel="noopener noreferrer" target="_blank">
          Backchannel
         </a>
        </li>
        <li data-reactid="505">
         [linkx]
         
        </li>
        <li data-reactid="507">
         <a class="external-link" data-reactid="508" href="m" rel="noopener noreferrer" target="_blank">
          Brides
         </a>
        </li>
        <li data-reactid="509">
         [linkx]
         
        </li>
        <li data-reactid="511">
         [ahref]
         
        </li>
        <li data-reactid="513">
         [ahref]
         
        </li>
        <li data-reactid="515">
         [linkx]
         
        </li>
        <li data-reactid="517">
         [linkx]
         
        </li>
        <li data-reactid="519">
         [linkx]
         
        </li>
        <li data-reactid="521">
         <a class="external-link" data-reactid="522" href="/gqstyle" rel="noopener noreferrer" target="_blank">
          GQ Style
         </a>
        </li>
        <li data-reactid="523">
         [ahref]
         
        </li>
        <li data-reactid="525">
         <a class="external-link" data-reactid="526" href="m" rel="noopener noreferrer" target="_blank">
          Self
         </a>
        </li>
        <li data-reactid="527">
         [ahref]<li>[linkx]</li>[pkeyx][linkx][area1][keywordx]
        </li>
        <li data-reactid="529">
         <a class="external-link" data-reactid="530" href="m" rel="noopener noreferrer" target="_blank">
          Teen Vogue
         </a>
        </li>
        <li data-reactid="531">
         <a class="external-link" data-reactid="532" href="m" rel="noopener noreferrer" target="_blank">
          The New Yorker
         </a>
        </li>
        <li data-reactid="533">
         [ahref]
         
        </li>
        <li data-reactid="535">
         <a class="external-link" data-reactid="536" href="m" rel="noopener noreferrer" target="_blank">
          Vanity Fair
         </a>
        </li>
        <li data-reactid="537">
         <a class="external-link" data-reactid="538" href="m" rel="noopener noreferrer" target="_blank">
          Vogue
         </a>
        </li>
        <li data-reactid="539">
         [linkx]
         
        </li>
        <li data-reactid="541">
         <a class="external-link" data-reactid="542" href="m" rel="noopener noreferrer" target="_blank">
          Wired
         </a>
        </li>
       </ul>
      </div>
      [ahref]
      
      <p class="site-footer__legalese" data-reactid="544">
       ©
       2019
       Condé Nast. All rights reserved. Use of and/or registration on any portion of this site constitutes acceptance of our
       <a class="external-link" data-reactid="549" href="/privacy-policy" rel="noopener noreferrer" target="_blank">
        User Agreement
       </a>
       (updated
       5/25/18
       ) and
       [linkx]
       
       (updated
       5/25/18
       ).
       <a class="external-link" data-reactid="561" href="/privacy-policy#privacypolicy-california" rel="noopener noreferrer" target="_blank">
        Your California Privacy Rights
       </a>
       The material on this site may not be reproduced, distributed, transmitted, cached or otherwise used, except with the prior written permission of Condé Nast.
       [linkx]
       
      </p>
      <p class="site-footer__collection" data-reactid="567">
       CNT
       Collection
      </p>
     </footer>
     <div data-reactid="571" id="amzn-assoc-ad-7d9461e2-9324-47b2-b40c-973fcf660428">
     </div>
    </div>
   </div>
  </div>
  <div id="parsely-root" style="display: none">
   <div data-parsely-site="cntraveler.com" id="parsely-cfg">
   </div>
  </div>
  <iframe height="0" scrolling="no" src="https://js-sec.indexww.com/um/ixmatch.html" style="display: none;" width="0">
  </iframe>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0238
  </b>
 </body>
</html>
|<---