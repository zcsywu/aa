--->|<!DOCTYPE html>
<html lang="ko-KR">
 <head>
  <base href="/"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta charset="utf-8"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover" name="viewport"/>
  <meta content="black" name="apple-mobile-web-app-status-bar-style"/>
  <meta content="yes" name="apple-mobile-web-app-capable"/>
  <meta content="yes" name="mobile-web-app-capable"/>
  <meta content="text/html;charset=utf-8" http-equiv="content-type"/>
  <meta content="yVB-DfJkyFs3sHdr8au7wnKgM7DwVWM3Asb9XShxabM" name="google-site-verification"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
 </head>
 <body class="home " data-ng-app="hyatt">
  <header data-js="header">
   <nav class="global-header">
    <div class="b-container" data-js="global-header">
     <div class="b-row">
      <div class="b-col">
       <div class="hnav--rwd hnav--slim" data-locator="slim-rwd">
        <div class="m-nav" lang="ko-KR">
         <div class="hnav-h-container">
          <div class="hnav-h-row">
           <div class="hnav-h-alpha">
            <div class="hnav-pull-left">
             [linkx]
             
             <div class="hnav-menu hnav-menu--left">
              <div>
               <div class="h6 hnav-section-h6">
                하얏트 리젠시 파리 에뚜왈
               </div>
               <ul class="hnav-section-list" data-locator="subnav">
                <li>
                 [linkx]
                 
                </li>
                <li>
                 <a href="/ko-KR/hotel/france/hyatt-regency-paris-etoile/parhr/rooms">
                  객실
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
               </ul>
               <div class="hnav-section-h6">
                하얏트에 대한 자세한 소개
               </div>
               <ul class="hm hnav-section-list">
                <li>
                 <a href="/ko-KR/explore-hotels/map">
                  호텔 및 리조트
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 <a href="/ko-KR/offers">
                  스페셜 오퍼
                 </a>
                </li>
                <li>
                 [ahref]
                 
                </li>
                <li>
                 <a href="/content/gp/ko.html">
                  하얏트 월드
                 </a>
                </li>
                <li>
                 [linkx]
                 
                </li>
               </ul>
              </div>
             </div>
            </div>
            <div class="hnav-pull-left">
             <a class="hnav-logo-link" href="m">
              <i aria-hidden="true" class="hnav-logo">
              </i>
              <span class="sr-only">
               Hyatt
              </span>
             </a>
            </div>
           </div>
           <div class="hnav-h-omega">
            <div class="hnav-h-delta">
             <div class="hnav-pull-right">
              [linkx]
              
              <div class="js-hide-header-signin-form-woh">
               <div class="hnav-menu hnav-menu--right">
                <div>
                 <div class="hnav-signin" data-profile-href="/bin/profile">
                  <div class="h4 js-hide-header-partial">
                   <small>
                    재방문을 환영합니다.
                   </small>
                   <span class="js-member-name" id="js-member-name">
                   </span>
                  </div>
                  <div class="h4 js-hide-header-signin">
                   하얏트 월드 로그인
                  </div>
                  <form action="/auth/web/login" method="post">
                   <label class="hnav-input-text js-hide-header-signin" style="display: none">
                    하얏트 월드 번호 또는 사용자 이름:
                    <span class="message-blank">
                     필수 입력 사항입니다.
                    </span>
                   </label>
                   <div class="hnav-signin-forgetMemberNumber js-hide-header-signin" style="display: none">
                    [linkx]
                     [ahref]<li>[keywordx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[linkx]</li>
                    
                   </div>
                   <label class="hnav-input-text tooltip-label js-hide-header-signin" style="display: none">
                    <div>
                     성:
                     <i aria-describedby="tooltipMsg" class="hnav-tooltip-icon hnav-icon--info" data-js="tooltip-icon" id="nav-signin-woh-tooltip" tabindex="0">
                      <li>[keywordx]</li>[mkey1][ahref]
                     </i>
                    </div>
                    <span class="message-blank">
                     필수 입력 사항입니다.
                    </span>
                   </label>
                   <label class="hnav-input-password">
                    암호:
                    <span class="message-blank">
                     필수 입력 사항입니다.
                    </span>
                   </label>
                   <div class="hnav-signin-row">
                    <div class="hnav-signin-1of2">
                     <label class="hnav-input-checkbox">
                      <span class="hnav-input-indicator">
                      </span>
                      로그인 정보 기억하기
                     </label>
                    </div>
                    <div class="hnav-signin-2of2">
                     [linkx]
                     
                    </div>
                   </div>
                   <button class="hnav-form-submit-woh" type="submit">
                    로그인
                   </button>
                  </form>
                  <ul class="hnav-signin-list">
                   <li class="js-hide-header-partial js-insert-member-name" style="display:none">
                    <form action="/auth/web/logout" class="button-in-form" method="post">
                     <button class="button-as-simple-link" type="submit">
                      아니오
                      <span>
                      </span>
                     </button>
                    </form>
                   </li>
                   <li class="js-hide-header-signin-help" style="display:none">
                    <a href="/content/gp/ko/help-signing-in.html">
                     로그인 도움말
                    </a>
                   </li>
                   <li>
                    [ahref]
                    
                   </li>
                  </ul>
                 </div>
                 [ahref]
                 
                 <ul class="hnav-section-list-woh">
                  <li>
                   <a href="/content/gp/ko.html">
                    하얏트 월드 홈
                   </a>
                  </li>
                  <li>
                   <a href="/content/gp/ko/member-benefits.html">
                    회원 혜택
                   </a>
                  </li>
                  <li>
                   [linkx]
                   
                  </li>
                 </ul>
                </div>
               </div>
              </div>
              <div class="js-hide-header-member-woh">
               <div class="hnav-menu hnav-menu--right">
                <div class="hnav-member">
                 <div data-locator="member">
                  <div class="hnav-member-id-woh">
                   <h5 class="hnav-copy-center hnav-divider-woh">
                    하얏트 월드
                   </h5>
                   <dl>
                    <dt class="js-hide-member">
                     회원
                    </dt>
                    <dt class="js-hide-discoverist">
                     디스커버리스트
                    </dt>
                    <dt class="js-hide-explorist">
                     익스플로리스트
                    </dt>
                    <dt class="js-hide-globalist">
                     글로벌리스트
                    </dt>
                    <dt class="js-hide-courtesy">
                     Courtesy
                    </dt>
                    <dt class="js-hide-lifetimeGlobalist">
                     평생 글로벌리스트
                    </dt>
                    <dt class="js-hide-gold-member">
                     회원 번호:
                    </dt>
                    <dt class="js-hide-platinum-member">
                     플래티늄 회원 번호:
                    </dt>
                    <dt class="js-hide-diamond-member">
                     다이아몬드 회원 번호:
                    </dt>
                    <dd class="js-member-number">
                    </dd>
                   </dl>
                  </div>
                  <div class="hnav-member-points">
                   <dl>
                    <dt>
                     현재 포인트:
                    </dt>
                    <dd id="js-woh-points">
                    </dd>
                    <dt>
                     금년부터 현재까지 자격 요건을 갖춘 숙박일 수:
                    </dt>
                    <dd id="js-woh-nights">
                    </dd>
                    <dt>
                     금년의 현재까지 기본 포인트:
                    </dt>
                    <dd id="js-woh-points-ytd">
                    </dd>
                   </dl>
                  </div>
                 </div>
                 <ul class="hnav-section-list-woh">
                  <li>
                   [ahref]
                   
                  </li>
                  <li>
                   [ahref]
                   
                  </li>
                  <li>
                   <a href="/content/gp/ko/member-benefits.html">
                    회원 혜택<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][linkx][mkey1][ahref]
                   </a>
                  </li>
                  <li>
                   <a href="/content/gp/ko/rewards.html">
                    리워드
                   </a>
                  </li>
                  <li>
                   <form action="/auth/web/logout" class="button-in-form" method="post">
                    <button class="button-as-link" type="submit">
                     로그아웃
                    </button>
                   </form>
                  </li>
                 </ul>
                </div>
               </div>
              </div>
              <div class="js-hide-header-unavailable-woh">
               <[keywordx]>
               </[keywordx]>
              </div>
             </div>
             <div class="hnav-pull-right">
              <a class="hnav-item--gp" href="/content/gp/ko.html">
               <span>
                하얏트 월드
               </span>
              </a>
             </div>
             <div class="hnav-pull-right">
              [ahref]
               [keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]<li>[keywordx]</li><li>[ahref]</li>[ahref]
              
              <div class="hnav-menu hnav-menu--right">
               <div>
                <ul class="hnav-section-list">
                 <li>
                  [linkx]
                  
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  <a href="/fr-FR/hotel/france/hyatt-regency-paris-etoile/parhr" title="French">
                   Français
                  </a>
                 </li>
                 <li>
                  <a href="/ja-JP/hotel/france/hyatt-regency-paris-etoile/parhr" title="Japanese">
                   日本語
                  </a>
                 </li>
                 <li>
                  <a href="/ko-KR/hotel/france/hyatt-regency-paris-etoile/parhr" title="Korean">
                   한국어
                  </a>
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                 <li>
                  <a href="/ru-RU/hotel/france/hyatt-regency-paris-etoile/parhr" title="Russian">
                   Русский
                  </a>
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [linkx]
                  
                 </li>
                </ul>
               </div>
              </div>
             </div>
            </div>
            <div class="hnav-h-gamma">
             <ul class="hnav-navigation-primary">
              <li>
               <a href="/ko-KR/explore-hotels/map">
                호텔 및 리조트[keywordx][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][keywordx][pkeyx][ahref][keywordx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][linkx][keywordx][keywordx][pkeyx][ahref][ahref][keywordx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx]
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/ko.html">
                미팅 및 행사
               </a>
              </li>
              <li>
               <a href="/ko.html">
                소개
               </a>
              </li>
             </ul>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </nav>
   <section class="site-header">
    <div class="b-container brand-container">
     <div class="b-row brand-row">
      <div class="b-col-12@xs b-col-7@xl logo-column">
       <div class="brand-logo b-d-block b-d-inline-block@xl" data-js="brand-logo">
        [linkx]
        
       </div>
      </div>
      <div class="b-col-12@xs b-col-5@xl quickbook-column gold-standard has-market-rate">
       <div class="quickbook-container">
        <section class="quickbook component" data-js="psr-quickbook">
         <div class="mobile-button" data-js="narrow-site-header">
          <button bw-rebook="" class="quickbookSearchFormButton b-button b-button_icon-down b-button-shop b-button-block b-button_icon-down" data-has-quickbook="true" data-modal-class="quickbook-modal" data-modal-clear="true" data-modal-selector="#quickbookModal" data-toggle="modal" ng-click="showQuickbook($event)" type="submit">
           지금 예약하기
          </button>
         </div>
         <div class="m-quickbook " data-js="quickbook">
          <div class="b-row">
           <div class="b-col-12 ph0-md">
            <div>
             <form action="/HyattSearch" method="get" name="searchForm">
              <div class="b-row b-pc3 b-row_gutter-3">
               <div class="qb-first-col b-col-12 b-col-9@xl ">
                <div class="b-row qb-first-row b-row_gutter-3">
                </div>
                <div class="b-row b-pl0 drpdwn-buttons-row b-row_gutter-3 ">
                 <div class="b-col rooms room-col">
                  <div class="qb-popover" data-js="dropdown room-dropdown">
                   <div class="qb-popover-overflow">
                    <div class="popover-header">
                     <div class="link-menu link-menu-xl-inline">
                      [linkx]
                      
                     </div>
                    </div>
                    <div class="room-popover-body b-layer-popover">
                     <div class="room-popover-content">
                      <div class="row">
                       <div class="col lg6">
                        <div class="row">
                         <div class="col xs6">
                          <div class="input-stepper" data-js="stepper">
                           <label data-js="room-label" for="rooms">
                            객실
                           </label>
                           <label class="b-d-none" data-js="rooms-label" for="rooms">
                            객실
                           </label>
                           <div class="stepper-container">
                            <button aria-hidden="true" class="minus" type="button">
                            </button>
                            <button aria-hidden="true" class="plus" type="button">
                            </button>
                           </div>
                          </div>
                         </div>
                         <div class="col lg6 accessibilityChkBx">
                          <label class="input-checkbox">
                           <span class="checkbox-indicator">
                           </span>
                           <i class="b-icon b-icon-accessible">
                           </i>
                           장애인용
                          </label>
                         </div>
                        </div>
                       </div>
                       <div class="col lg6">
                        <hr class="b-d-none@lg"/>
                        <div class="row">
                         <div class="col xs6">
                          <div class="input-stepper" data-js="stepper">
                           <div data-js="adult-label">
                            <label for="adults">
                             성인
                            </label>
                           </div>
                           <div class="b-d-none" data-js="adults-label">
                            <label for="adults">
                             성인
                            </label>
                           </div>
                           <div class="stepper-container">
                            <button aria-hidden="true" class="minus" type="button">
                            </button>
                            <button aria-hidden="true" class="plus" type="button">
                            </button>
                           </div>
                          </div>
                         </div>
                         <div class="col xs6">
                          <div class="input-stepper" data-id="stepper-kids" data-js="stepper">
                           <div data-js="kid-label">
                            <label for="kids">
                             아동
                            </label>
                           </div>
                           <div class="b-d-none" data-js="kids-label">
                            <label for="kids">
                             아동
                            </label>
                           </div>
                           <div class="stepper-container">
                            <button aria-hidden="true" class="minus" type="button">
                            </button>
                            <button aria-hidden="true" class="plus" type="button">
                            </button>
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                      <div class="row b-d-none" data-js="kids-panel">
                       <div class="col lg6 lg-offset6">
                        어린이 연령
                        <i>
                         (투숙 시)
                        </i>
                        <div class="row">
                         <div class="col xs3">
                          <label class="input-select b-d-none" data-kid="1">
                           <label class="b-sr-only">
                            Child 1
                           </label>
                           <div class="select-container">
                            <select data-cacheable="true" data-id="childAge1" data-value="" name="childAge1">
                             <option selected="" value="-1">
                              --
                             </option>
                             <option value="0">
                              <1
                             </option>
                             <option value="1">
                              1
                             </option>
                             <option value="2">
                              2
                             </option>
                             <option value="3">
                              3
                             </option>
                             <option value="4">
                              4
                             </option>
                             <option value="5">
                              5
                             </option>
                             <option value="6">
                              6
                             </option>
                             <option value="7">
                              7
                             </option>
                             <option value="8">
                              8
                             </option>
                             <option value="9">
                              9
                             </option>
                             <option value="10">
                              10
                             </option>
                             <option value="11">
                              11
                             </option>
                             <option value="12">
                              12
                             </option>
                             <option value="13">
                              13
                             </option>
                             <option value="14">
                              14
                             </option>
                             <option value="15">
                              15
                             </option>
                             <option value="16">
                              16
                             </option>
                             <option value="17">
                              17
                             </option>
                             <option value="18">
                              18
                             </option>
                            </select>
                           </div>
                          </label>
                         </div>
                         <div class="col xs3">
                          <label class="input-select b-d-none" data-kid="2">
                           <label class="b-sr-only">
                            Child 2
                           </label>
                           <div class="select-container">
                            <select data-cacheable="true" data-id="childAge2" data-value="" name="childAge2">
                             <option selected="" value="-1">
                              --
                             </option>
                             <option value="0">
                              <1
                             </option>
                             <option value="1">
                              1
                             </option>
                             <option value="2">
                              2
                             </option>
                             <option value="3">
                              3
                             </option>
                             <option value="4">
                              4
                             </option>
                             <option value="5">
                              5
                             </option>
                             <option value="6">
                              6
                             </option>
                             <option value="7">
                              7
                             </option>
                             <option value="8">
                              8
                             </option>
                             <option value="9">
                              9
                             </option>
                             <option value="10">
                              10
                             </option>
                             <option value="11">
                              11
                             </option>
                             <option value="12">
                              12
                             </option>
                             <option value="13">
                              13
                             </option>
                             <option value="14">
                              14
                             </option>
                             <option value="15">
                              15
                             </option>
                             <option value="16">
                              16
                             </option>
                             <option value="17">
                              17
                             </option>
                             <option value="18">
                              18
                             </option>
                            </select>
                           </div>
                          </label>
                         </div>
                         <div class="col xs3">
                          <label class="input-select b-d-none" data-kid="3">
                           <label class="b-sr-only">
                            Child 3
                           </label>
                           <div class="select-container">
                            <select data-cacheable="true" data-id="childAge3" data-value="" name="childAge3">
                             <option selected="" value="-1">
                              --
                             </option>
                             <option value="0">
                              <1
                             </option>
                             <option value="1">
                              1
                             </option>
                             <option value="2">
                              2
                             </option>
                             <option value="3">
                              3
                             </option>
                             <option value="4">
                              4
                             </option>
                             <option value="5">
                              5
                             </option>
                             <option value="6">
                              6
                             </option>
                             <option value="7">
                              7
                             </option>
                             <option value="8">
                              8
                             </option>
                             <option value="9">
                              9
                             </option>
                             <option value="10">
                              10
                             </option>
                             <option value="11">
                              11
                             </option>
                             <option value="12">
                              12
                             </option>
                             <option value="13">
                              13
                             </option>
                             <option value="14">
                              14
                             </option>
                             <option value="15">
                              15<li>[mkey1]</li>[ahref]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[mkey1]</li>
                             </option>
                             <option value="16">
                              16
                             </option>
                             <option value="17">
                              17
                             </option>
                             <option value="18">
                              18
                             </option>
                            </select>
                           </div>
                          </label>
                         </div>
                         <div class="col xs3">
                          <label class="input-select b-d-none" data-kid="4">
                           <label class="b-sr-only">
                            Child 4
                           </label>
                           <div class="select-container">
                            <select data-cacheable="true" data-id="childAge4" data-value="" name="childAge4">
                             <option selected="" value="-1">
                              --
                             </option>
                             <option value="0">
                              <1
                             </option>
                             <option value="1">
                              1
                             </option>
                             <option value="2">
                              2
                             </option>
                             <option value="3">
                              3
                             </option>
                             <option value="4">
                              4
                             </option>
                             <option value="5">
                              5
                             </option>
                             <option value="6">
                              6
                             </option>
                             <option value="7">
                              7
                             </option>
                             <option value="8">
                              8
                             </option>
                             <option value="9">
                              9
                             </option>
                             <option value="10">
                              10
                             </option>
                             <option value="11">
                              11
                             </option>
                             <option value="12">
                              12
                             </option>
                             <option value="13">
                              13
                             </option>
                             <option value="14">
                              14
                             </option>
                             <option value="15">
                              15
                             </option>
                             <option value="16">
                              16[mkey1][pkeyx]<li>[mkey1]</li>
                             </option>
                             <option value="17">
                              17
                             </option>
                             <option value="18">
                              18
                             </option>
                            </select>
                           </div>
                          </label>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                    <div class="popover-footer b-mt3">
                     <button class="button-secondary button-block" data-js="close-button" data-scope="dropdown-footer" type="button">
                      끝난
                     </button>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="b-col rates rate-col">
                  <div class="qb-popover" data-id="rate-dropdown" data-js="dropdown rate-dropdown">
                   <div class="popover-header">
                    <div class="link-menu link-menu-xl-inline">
                     [linkx]
                     
                    </div>
                   </div>
                   <div class="popover-body b-layer-popover">
                    <div class="popover-content">
                     <radiogroup class="radio-menu b-pt0" data-cacheable="true" data-id="rate" data-value="">
                      <label>
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        없음
                       </span>
                      </label>
                      <label>
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        정부요금
                       </span>
                      </label>
                      <label>
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        Veteran
                       </span>
                      </label>
                      <label>
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        AAA / CAA 회원요금
                       </span>
                      </label>
                      <label>
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        고령자
                       </span>
                      </label>
                      <label data-js="rate-offer">
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        특별 행사 코드
                       </span>
                      </label>
                      <label data-js="rate-corp">
                       <span class="radio-indicator">
                       </span>
                       <span class="radio-label">
                        기업 또는 단체 코드
                       </span>
                      </label>
                     </radiogroup>
                    </div>
                   </div>
                   <div class="popover-footer b-mt3">
                    <button class="button-secondary button-block" data-js="close-button" data-scope="dropdown-footer" type="button">
                     닫다
                    </button>
                   </div>
                  </div>
                  <label class="input-text input-attached b-d-none" data-js="input-offer">
                   <span class="b-sr-only">
                    특별 행사 코드
                   </span>
                   <span class="input-arrow-top">
                   </span>
                  </label>
                  <label class="input-text input-attached b-d-none" data-js="input-corp">
                   <span class="b-sr-only">
                    기업 또는 단체 코드
                   </span>
                   <span class="input-arrow-top">
                   </span>
                  </label>
                 </div>
                </div>
               </div>
               <div class="b-col-12 b-col-3@xl submit-button-container">
                <button class="quickbookSearchFormButton button-shop button-block" type="submit">
                 호텔 찾기
                </button>
               </div>
              </div>
             </form>
            </div>
           </div>
          </div>
         </div>
         <div class="b-row b-row_gutter-3 b-row_align-middle qb-woh-row">
          <div class="b-col-12@xs b-col-6@lg qb-woh">
           <span class="qb-woh-text">
            보너스 카테고리 4
           </span>
          </div>
          <div class="b-col-12@xs b-col-6@lg use-points b-text_copy-3 qb-woh">
           <i class="b-icon b-icon-points b-d-inline-block b-mr1">
           </i>
           <label class="input-checkbox">
            <span class="checkbox-indicator">
            </span>
            포인트 사용
           </label>
          </div>
         </div>
        </section>
       </div>
       <div class="hotel-promotions">
        <li>[mkey1]</li>[linkx]<li>[ahref]</li><li>[pkeyx]</li>
       </div>
      </div>
     </div>
     <div class="b-row display-xl-block display-xx-block nav-row">
      <div class="b-col-12@xs">
       <nav class="navigation">
        <ul class="list-inline">
         <li class="active b-text_weight-bold">
          [ahref]
          
         </li>
         <li class="b-text_weight-normal">
          [linkx]
          
         </li>
         <li class="b-text_weight-normal">
          [linkx]
          
         </li>
        </ul>
       </nav>
      </div>
     </div>
    </div>
   </section>
  </header>
  <main aria-hidden="false">
   <div>
   </div>
   <div class="regency-masthead-hex-wrapper">
    <div>
     <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
      <div class="masthead aem-GridColumn aem-GridColumn--default--12">
       <section class="masthead component" data-js="masthead">
        <div class="banner">
         <div class="component inline-gallery " data-galleryid="gallery1cb710263db8421d9f625bf3cf302b9e">
          <div class="b-container inline-gallery-background">
           <div class="b-row">
            <div class="b-col inline-gallery-content single-image" data-disable-modal-toggle="true">
             <div class="section-image">
              <div class="image-frame single-image" data-autoplay="false" data-autoplayinterval="0" data-total="1" role="listbox">
               <div aria-describedby="slide-0" aria-hidden="false" class="image active" data-type="property-sites/components/content/overlayimage" id="image-0" role="option" tabindex="-1">
                <div class="overlay-image ">
                 <div class="overlay-responsive-image">
                  <div class="image-par js-object-fit cq-dd-imageDesktop">
                   <picture>
                    <source media="(min-width: 1280px)" srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2016/12/05/1725/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.jpg/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.16x9.jpg?imwidth=1920"/>
                    <source media="(min-width: 960px)" srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2016/12/05/1725/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.jpg/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.16x9.jpg?imwidth=1920"/>
                    <source media="(min-width: 768px)" srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2016/12/05/1725/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.jpg/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.16x9.jpg?imwidth=1280"/>
                    <source media="(min-width: 640px)" srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2016/12/05/1725/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.jpg/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.16x9.jpg?imwidth=1280"/>
                    <source media="(min-width: 480px)" srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2016/12/05/1725/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.jpg/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.4x3.jpg?imwidth=960"/>
                    <source media="(min-width: 320px)" srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2016/12/05/1725/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.jpg/Hyatt-Regency-Paris-Etoile-P326-Deluxe-Room-Eiffel-Tower-View.4x3.jpg?imwidth=640"/>
                   </picture>
                   <noscript>
                   </noscript>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
             <div class="section-control dotsInIndex">
              <div class="control-view">
               <label class="fullscreen-toggle-control" data-id="gallery1cb710263db8421d9f625bf3cf302b9e" for="fullscreen-toggle-gallery1cb710263db8421d9f625bf3cf302b9e" onclick="window.HYATT_PSR.components.inlineGallery.fullscreen(this.dataset.id)">
                <div class="control-button fullscreen-toggle-background">
                 <i class="b-icon b-icon-view-expand control-icon">
                 </i>
                 <i class="b-icon b-icon-view-collapse control-icon">
                 </i>
                </div>
               </label>
              </div>
             </div>
             <div class="section-index useDots single-image">
              <ul class="dot-counter" role="tablist">
               <li aria-selected="true" class="dot active" id="slide-0" role="presentation">
                <button data-id="gallery1cb710263db8421d9f625bf3cf302b9e" data-index="0" onclick="window.HYATT_PSR.components.inlineGallery.goToSlide(this.dataset.id, this.dataset.index, false)" tabindex="0">
                </button>
               </li>
              </ul>
              <div class="numeral-counter">
               <p class="numerals">
                <span class="current-index">
                 1
                </span>
                of 1
               </p>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="view-photos">
          <div>
           <button class="featuredGalleryButton b-button b-button_icon-photos b-button-brand" data-load-photos="true" data-modal-selector=".photoGalleryModal" data-modal-title="하얏트 리젠시 파리 에뚜왈" data-toggle="modal">
            사진 보기
           </button>
           <div aria-labelledby="photosfilter2ddf1f37e4fa407ca432469c6c82adb7-dialog-title" aria-modal="true" class="photoGalleryModal featuredGalleryModal modal" data-js="photoGalleryModal" id="photosfilter2ddf1f37e4fa407ca432469c6c82adb7" role="dialog">
            <div class="modal-content" tabindex="0">
             [linkx][keywordx][pkeyx]
            </div>
           </div>
          </div>
         </div>
        </div>
       </section>
       <div class="mobile-tagline">
        <h1 class="b-text_display-b2">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h1>
       </div>
      </div>
     </div>
    </div>
   </div>
   <section class="component regency-leadin">
    <div class="b-container">
     <div class="b-row">
      <div class="b-col-8@md b-col-12@xs b-text_copy-b4 home-page-leadin">
       <div class="cq-placeholder" data-emptytext="Hotel Description">
       </div>
       <section class="component hotel-description">
        <div class="b-container description-block">
         <div class="b-row psr-row">
          <div class="b-col-12@xs b-text_display-b2 content-block">
           <div>
            <h1 class="page-title" data-js="narrow-site-header-trigger">
             [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h1>
           </div>
           <hr class="short-line"/>
          </div>
         </div>
         <div class="b-row psr-row">
          <div class="b-col-12@xs b-text_weight-light b-text_copy-3 content-block desc-block">
           <div class="cq-dd-fragment" data-emptytext="Content Fragment">
            <div>
             <div>
              <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
              </div>
             </div>
             <p>
              <i>
               2년 간의 대대적인 재단장 공사를 거쳐 새로운 모습을 선보이는 파리 유일의 고층 호텔, 하얏트 리젠시 파리 에투알을 소개합니다. 총 995개의 현대적이고 편안한 객실과 스위트룸에서 내려다보는 파리 시내 건물 지붕과 도시를 대표하는 건축물의 전경이 아주 근사합니다. 라데팡스 상업 지구와 샹젤리제 거리 사이에 위치하여 편리한 접근성을 자랑하며,인근에는 쇼핑 센터, 극장, 레스토랑 및 주차 시설이 마련되어 있는  팔레 데 콩그레가 있습니다.
              </i>
             </p>
             <div>
              <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
              </div>
             </div>
             <p>
              로비 한가운데 자리잡고 있는 마요 레스토랑은 현지 농산물을 주재료로 하여 다 함께 나눠 먹을 수 있는 요리를 제공합니다. 일과 후 근사한 곳에서 근사한 식사를 즐겨보세요.
             </p>
             <div>
              <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
              </div>
             </div>
             <p>
              번화한 파리의 거리에 우뚝 서 있는 높이 140m의 윈도 바는 창의력 넘치는 칵테일과 진귀한 샴페인을 맛보기에 최고의 장소입니다. 호텔 34층에 자리하여 파리 시내를 내려다보는 빼어난 전망이 가히 일품입니다.
             </p>
             <div>
              <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </section>
      </div>
      <div class="b-col-4@md b-col-12@xs dual-image">
       <div class="hex">
        <svg height="261px" preserveaspectratio="xMinYMin meet" version="1.1" viewbox="700 30 300 100" width="228px" xmlns="http://www.w3.org/2000/svg">
         <polygon class="hex-stroke" fill="" fill-opacity="0" points="850,75  958,137.5 958,262.5
                    850,325 742,262.6 742,137.5" stroke-linejoin="miter" stroke-width="4">
         </polygon>
        </svg>
       </div>
       <div>
        <section class="img-cluster">
         <div class="b-container">
          <div class="b-row">
           <div class="first-image b-col">
            <div>
             <div class="image-par js-object-fit has-lazyload cq-dd-imageDesktop">
              <picture>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.jpg/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.16x9.jpg?imwidth=1280" media="(min-width: 1280px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.jpg/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.16x9.jpg?imwidth=1280" media="(min-width: 960px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.jpg/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.16x9.jpg?imwidth=960" media="(min-width: 768px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.jpg/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.16x9.jpg?imwidth=960" media="(min-width: 640px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.jpg/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.4x3.jpg?imwidth=640" media="(min-width: 480px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.jpg/Hyatt-Regency-Paris-Etoile-P626-Facade-Nighttime.4x3.jpg?imwidth=480" media="(min-width: 320px)"/>
              </picture>
              <noscript>
              </noscript>
             </div>
            </div>
           </div>
           <div class="second-image b-col">
            <div>
             <div class="image-par js-object-fit has-lazyload cq-dd-imageDesktop">
              <picture>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.jpg/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.16x9.jpg?imwidth=1280" media="(min-width: 1280px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.jpg/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.16x9.jpg?imwidth=1280" media="(min-width: 960px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.jpg/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.16x9.jpg?imwidth=960" media="(min-width: 768px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.jpg/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.16x9.jpg?imwidth=960" media="(min-width: 640px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.jpg/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.4x3.jpg?imwidth=640" media="(min-width: 480px)"/>
               <source data-srcset="https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2018/10/11/1550/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.jpg/Hyatt-Regency-Paris-Etoile-P636-Windo-at-Sunset.4x3.jpg?imwidth=480" media="(min-width: 320px)"/>
              </picture>
              <noscript>
              </noscript>
             </div>
            </div>
           </div>
          </div>
         </div>
        </section>
       </div>
      </div>
     </div>
    </div>
   </section>
   <div>
    <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
     <div class="promoexperiencefragment experiencefragment aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="promoexperiencefragment experiencefragment aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="staticmap aem-GridColumn aem-GridColumn--default--12">
      <section class="component map-container">
       <div class="b-container outer-container">
        <div class="b-row">
         <div class="map-image b-col-12@xs b-col-4@md b-col-6@xl b-col-7@xx">
          <div>
           <div class="static-map image-par js-object-fit">
           </div>
          </div>
         </div>
         <div class="content b-col-12@xs b-col-8@md b-col-6@xl b-col-5@xx">
          <div class="content-container">
           <h2 class="b-text_copy-b6 heading">
            <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
           </h2>
           <dl>
            <dt class="address b-text_weight-bold">
             주소
            </dt>
            <dd class="address">
             <a class="google-map-link-unwrap" href="/maps/search/?api=1&amp;query=3%2C+Place+du+G%C3%A9n%C3%A9ral+K%C5%93nig%2C+%ED%8C%8C%EB%A6%AC%2C+%ED%94%84%EB%9E%91%EC%8A%A4%2C+75017" target="_blank">
              3, Place du Général Kœnig
              <br/>
              파리, 프랑스, 75017
             </a>
            </dd>
           </dl>
           <div class="b-row psr-row">
            <div class="col-phone b-col">
             <dl>
              <dt class="phone b-text_weight-bold">
               전화번호
              </dt>
              <dd class="phone">
               [ahref]
               
              </dd>
             </dl>
            </div>
            <div class="col-email b-col">
             <dl>
              <dt class="email b-text_weight-bold">
               이메일
              </dt>
              <dd class="email">
               [ahref]
               
              </dd>
             </dl>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </section>
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="sectionheader aem-GridColumn aem-GridColumn--default--12">
      <section class="section-header component">
       <div class="b-container">
        <div class="b-row">
         <div class="b-col divider">
          <h2 class="title b-text_display-b3">
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h2>
         </div>
        </div>
       </div>
      </section>
     </div>
     <div class="featuredamenities aem-GridColumn aem-GridColumn--default--12">
      <div class="b-container component featured-amenities">
       <div class="b-row">
        <div class="b-col-12@xs">
         <h2 class="b-text_copy-3 title">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h2>
         <ul class="list-inline">
          <li class="RESTAURANT_ONSITE">
           <i class="b-icon b-icon-RESTAURANT_ONSITE icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            호텔 내 레스토랑
           </div>
          </li>
          <li class="ROOM_SERVICE">
           <i class="b-icon b-icon-ROOM_SERVICE icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            룸 서비스
           </div>
          </li>
          <li class="FREE_INTERNET">
           <i class="b-icon b-icon-FREE_INTERNET icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            무료 인터넷 액세스
           </div>
          </li>
          <li class="FITNESS_CENTER">
           <i class="b-icon b-icon-FITNESS_CENTER icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            휘트니스 센터
           </div>
          </li>
          <li class="LAUNDRY">
           <i class="b-icon b-icon-LAUNDRY icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            세탁
           </div>
          </li>
          <li class="BUSINESS_SERVICES">
           <i class="b-icon b-icon-BUSINESS_SERVICES icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            비즈니스 서비스
           </div>
          </li>
          <li class="MEETING_FACILITIES">
           <i class="b-icon b-icon-MEETING_FACILITIES icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            미팅 시설
           </div>
          </li>
          <li class="CONCIERGE">
           <i class="b-icon b-icon-CONCIERGE icon">
           </i>
           <div class="amenity b-text_copy-1 text-uppercase">
            컨시어지
           </div>
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
     <div class="collapsiblepanel aem-GridColumn aem-GridColumn--default--12">
      <div class="collapsible-panel collapsible component b-container">
       <div class="b-row">
        <div class="b-col-12@xs collapse" data-autoscroll="true" id="CP458a57cfa1e3aa46c6aa686a3cc795f0e60f">
         <div class="responsivecolumncontrol">
          <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
           <div class="responsivecolumncontrol aem-GridColumn aem-GridColumn--default--12">
            <section class="responsive-column-control">
             <div class="b-container">
              <div class="b-row ">
               <div class="b-col-4@md b-col-12@xs responsive-column">
                <div>
                 <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
                  <div class="titledlist aem-GridColumn aem-GridColumn--default--12">
                   <div class="cq-placeholder" data-emptytext="Titled List">
                   </div>
                   <section class="titled-list 호텔 특전">
                    <div class="b-row">
                     <div class="b-col-12">
                      <div class="heading-container">
                       <i class="icon b-icon b-icon-hotel">
                       </i>
                       <h3 class="heading b-text_weight-bold">
                        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                       </h3>
                      </div>
                      <ul>
                       <li>
                        새로 리모델링한 객실 및 스위트 룸 995개
                       </li>
                       <li>
                        환상적인 파노라마 파리 전망
                       </li>
                       <li>
                        무료 Wi-Fi
                       </li>
                       <li>
                        라 데팡스와 샹젤리제 사이의 이상적인 위치
                       </li>
                       <li>
                        윈도, 호텔 34층에 위치한 멋진 파노라마 바(2018년 9월 재개장)
                       </li>
                       <li>
                        마요, 애프터워크 레스토랑, 로비 중심부에 위치
                       </li>
                      </ul>
                     </div>
                    </div>
                   </section>
                  </div>
                 </div>
                </div>
               </div>
               <div class="b-col-4@md b-col-12@xs responsive-column">
                <div>
                 <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
                  <div class="titledlist aem-GridColumn aem-GridColumn--default--12">
                   <div class="cq-placeholder" data-emptytext="Titled List">
                   </div>
                   <section class="titled-list 서비스">
                    <div class="b-row">
                     <div class="b-col-12">
                      <div class="heading-container">
                       <i class="icon b-icon b-icon-CONCIERGE">
                       </i>
                       <h3 class="heading b-text_weight-bold">
                        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                       </h3>
                      </div>
                      <ul>
                       <li>
                        클레 도어 컨시어지, 연중 상주
                       </li>
                       <li>
                        다국어 가능 직원
                       </li>
                       <li>
                        마요 세프레 코너 메뉴 객실 배달
                       </li>
                       <li>
                        휘트니스 클럽, 투숙객 전용 연중 무휴
                       </li>
                      </ul>
                     </div>
                    </div>
                   </section>
                  </div>
                 </div>
                </div>
               </div>
               <div class="b-col-4@md b-col-12@xs responsive-column">
                <div>
                 <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
                  <div class="titledlist aem-GridColumn aem-GridColumn--default--12">
                   <div class="cq-placeholder" data-emptytext="Titled List">
                   </div>
                   <section class="titled-list 특별 이벤트">
                    <div class="b-row">
                     <div class="b-col-12">
                      <div class="heading-container">
                       <i class="icon b-icon b-icon-cal-star">
                       </i>
                       <h3 class="heading b-text_weight-bold">
                        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                       </h3>
                      </div>
                      <ul>
                       <li>
                        자연광이 들어오며 최대 2,800명을 수용할 수 있는 3,500제곱미터의 다목적 미팅 공간
                       </li>
                       <li>
                        세계적인 셰프들로 구성된 팀이 운영하는 구내 케이터링 서비스
                       </li>
                      </ul>
                     </div>
                    </div>
                   </section>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </section>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="b-row">
        <div class="b-col-12@xs align-center">
         <span data-target="#CP458a57cfa1e3aa46c6aa686a3cc795f0e60f" data-toggle="collapsible">
          <div>
           <li>[ahref]</li>[keywordx][ahref][pkeyx]
          </div>
         </span>
        </div>
       </div>
      </div>
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
     <div class="ghost aem-GridColumn aem-GridColumn--default--12">
     </div>
    </div>
   </div>
  </main>
  <footer>
   <div class="site-footer component mb0">
    <div class="b-container">
     <div class="b-row">
      <div class="left-column">
       <div class="address">
        <p>
         [linkx]
         
         전화:
         <a href="4">
          +33 (0) 1 40 68 12 34
         </a>
         | 
        
        
            팩스:
         [linkx]
         
         |
         [linkx]
         
        </p>
       </div>
      </div>
      <div class="right-column">
       <nav role="navigation">
       </nav>
      </div>
     </div>
    </div>
   </div>
   <div data-bookends="brand-bar" data-prop-domain="hyatt.com">
   </div>
   <div class="hnav--rwd" data-locator="full-rwd">
    <div class="m-nav" lang="ko-KR">
     <div class="hnav-f-container">
      <div class="hnav-f-row">
       <div class="hnav-f-alpha">
        [linkx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][mkey1][keywordx][ahref][keywordx][linkx][pkeyx][mkey1][keywordx]
       </div>
       <div class="hnav-f-omega">
        <div class="hnav-f-gamma hnav-f-links">
         <div class="h6">
          예약
         </div>
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/contact-hyatt/retrieve-hotel-bill">
            호텔 청구서 조회
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="h6">
          기업 사이트
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="m">
            하얏트 개발<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[ahref]</li><li>[ahref]</li>
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/info/traveladvisors">
            여행사
           </a>
          </li>
         </ul>
        </div>
        <div class="hnav-f-gamma hnav-f-links">
         <div class="h6">
          새로운 소식
         </div>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/ko-KR/promo/new-hotel-openings">
            신규 호텔
           </a>
          </li>
         </ul>
         <div class="h6">
          추가 검색
         </div>
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/en/hyatt-residences.html">
            하얏트 레지던스
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
     <div class="hnav-l-container">
      <div class="hnav-l-row">
       <ul class="hnav-lists--legal">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         © 2019 Hyatt Corporation
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
  </footer>
  <div class="spinner-wrapper">
   <div class="spinner">
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
    <div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0159
  </b>
 </body>
</html>
|<---