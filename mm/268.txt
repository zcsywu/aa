--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description">
   [keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li><li>[linkx]</li><li>[keywordx]</li>[keywordx]
  </meta>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
 </head>
 <body>
  <noscript>
   [pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx]
  </noscript>
  <div class="person_InfoBg" id="personInfoBgBox" style="display:none">
  </div>
  <div id="global">
   <div class="global_wrap">
    <div class="globalbtn">
     [ahref]
     
     [ahref]
     
     [ahref]
     
     [ahref]
     
    </div>
   </div>
  </div>
  <div id="all_menu">
   <form action="/product/maniaworld/surporterhome/surporterHome.mvc" id="surporterForm" name="surporterForm">
   </form>
   <form action="/product/maniaworld/teachermain/teacherMain.mvc" id="teacherForm" name="teacherForm">
   </form>
   <div class="am_wrap_1">
   </div>
  </div>
  <hr/>
  <div id="wrap">
   <div class="in_wrap">
    <div id="header">
     <div class="headtop jn_mainHead">
      <h1 class="logo">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h1>
      <form action="/product/maniaworld/surporterhome/surporterHome.mvc" id="surporterForm" name="surporterForm">
      </form>
      <form action="/product/maniaworld/teachermain/teacherMain.mvc" id="teacherForm" name="teacherForm">
      </form>
      <form action="/product/autonomy/autonomyHomeSubmit.mvc" id="autonomySearchForm" method="post">
       <div class="topsearch">
        <select id="headerSearchMenu" name="searchMenu" style="width:100px;" title="">
         <option value="A00">
          전체
         </option>
         <option value="A01">
          정보찾기
         </option>
         <option value="A02">
          척척박사연구소
         </option>
         <option value="A03">
          창의탐험대
         </option>
         <option value="A04">
          과학송
         </option>
         <option value="A05">
          과학아!놀자
         </option>
         <option value="A06">
          기타
         </option>
        </select>
        [linkx]
         [linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][linkx][linkx][mkey1][pkeyx][ahref][keywordx][linkx][mkey1][mkey1][mkey1][ahref][mkey1][ahref]
        
       </div>
      </form>
      <div class="recommend_words">
       [ahref]
       
       ,
       <a href=";">
        이동 거리
       </a>
       ,
       [linkx]
       
       ,
       [linkx]
       
       ,
       [linkx]
       
       ,
       <a href=";">
        등속직선운동
       </a>
       ,
       <a href=";">
        진폭[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][ahref][pkeyx][mkey1][pkeyx][mkey1][ahref]
       </a>
       ,
       [linkx]
       
      </div>
      <div class="jn_mainVsualBg" style="margin-right:-20px;">
      </div>
     </div>
     <div class="gnbwrap">
      <div class="mbox">
       <div class="login_box">
        <form action="/loginSubmit.mvc" id="topLogin" method="post" name="topLogin">
         <h3>
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         [linkx]
         
        </form>
       </div>
       <div class="mini_science_box none" id="mini_science_box">
       </div>
      </div>
      <ul id="gnb">
       <li class="dept1">
        [linkx]
        
        <div class="gnbsub cate1" style="display:none;">
         <p>
          [linkx]
          
         </p>
         <ul>
          <li>
           [pkeyx]<li>[ahref]</li><li>[mkey1]</li><li>[mkey1]</li><li>[ahref]</li>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       [ahref]
       
       <li class="dept1">
        <a class="dept1_btn" href="#">
        </a>
        <div class="gnbsub cate3" style="display:none;">
         <p>
          [ahref]
          
         </p>
         <ul>
          <li>
           <a href="/product/creativeexpedition/creativeexpcontent/creativeExpContentList.mvc?initPage=init">
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [linkx]
        
        <div class="gnbsub cate4" style="display:none;">
         <p>
          [linkx]
          
         </p>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/product/sciencesong/usrsongboard/usrsongBoardList.mvc?initPage=init">
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        <a class="dept1_btn" href="/product/scienceenjoy/submain/subMain.mvc">
        </a>
        <div class="gnbsub cate5" style="display:none;">
         <p>
          [pkeyx][pkeyx][ahref][pkeyx][keywordx][pkeyx][pkeyx][pkeyx][pkeyx][keywordx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1][ahref]<li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
         </p>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/product/scienceenjoy/photoalb/photoalbList.mvc?initPage=init">
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [ahref]
        
        <div class="gnbsub cate6" style="display:none;">
         <p>
          <a href="/product/maniaworld/submain/subMain.mvc">
          </a>
         </p>
         <ul>
          <li>
           <a href="/product/maniaworld/mybox/myBoxHome.mvc">
           </a>
          </li>
          <li>
           <a href="/product/maniaworld/newsletter/newsLetterList.mvc?initPage=init">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
    <hr/>
    <div id="container">
     <div id="lnbsection">
      <h1 class="lnbtit">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h1>
      <ul class="lnbmenu" id="lnb">
       <li>
        <a class="dept1" href="/product/infosearch/subjhotissue/subjHotissueList.mvc?initPage=init">
        </a>
       </li>
       <li class="on">
        [ahref]
        
       </li>
       <li>
        [linkx]
        
        <ol class="lnb2">
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dept2" href="/product/infosearch/tebocode/EL04/teboCodeList.mvc?initPage=init">
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a class="dept2" href="/product/infosearch/tebocode/EL06/teboCodeList.mvc?initPage=init">
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ol>
       </li>
      </ul>
     </div>
     <div id="contsection">
      <div class="content_top">
       <p class="line">
       </p>
       <p class="illust">
       </p>
       <span class="location_warp_left">
        <span class="location_warp_right">
         <span class="location_warp_center">
          <span>
           [ahref]
           
          </span>
          <span>
           [ahref]
           
          </span>
          <span class="now">
           호기심해결사
          </span>
         </span>
        </span>
       </span>
       <h2 class="cont_title">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <p class="cont_title_comment">
        과학에 대한 궁금한 질문과 답변을 공유하는 공간입니다.
       </p>
      </div>
      <form action="/product/infosearch/curiosityres/deleteCuriosityRes.mvc" id="deleteForm" method="post">
      </form>
      <form action="/product/infosearch/curiosityres/readCuriosityRes.mvc" id="redirectForm" method="get">
      </form>
      <div class="content_up" id="content">
       <div class="big_round_wrap_top">
        <div class="big_round_wrap_bottom">
         [linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx][pkeyx][ahref][linkx]
        </div>
       </div>
       <div class="subject_words_box">
        <strong>
         관련주제가 없습니다.
        </strong>
       </div>
       <div class="article_control_box">
        <span class="sns">
         [ahref]
         
         [linkx]
         
         [linkx]
         
         [linkx]
         
         [linkx]
         
         [linkx]
         
        </span>
        <span class="mail">
         [ahref]
         
        </span>
       </div>
       <div class="big_round_wrap_top">
        <div class="big_round_wrap_bottom">
         <div class="big_round_wrap_center">
          <div class="reply_box">
           <p class="rb_title">
            <span id="addedscriptAddCnt">
             <em>
              0
             </em>
             개의 댓글이 있습니다.
            </span>
           </p>
           <div class="replay_applicate">
            <form id="addedscriptForm" method="post">
             [mkey1][mkey1][keywordx]<li>[linkx]</li>
            </form>
           </div>
           <div id="addedscriptContent">
            <table cellpadding="0" cellspacing="0" class="reply_table">
             <colgroup>
              <col width="500"/>
              <col width=""/>
             </colgroup>
            </table>
            <form id="searchForm" method="post">
            </form>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="curi_btn_range_right">
        <a href="/product/infosearch/curiosityres/createCuriosityRes.mvc">
        </a>
        [ahref]
        
       </div>
       <p class="view_title">
       </p>
       <table cellpadding="0" cellspacing="0" class="table_list_sty1">
        <colgroup>
         <col width=""/>
         <col width="85"/>
         <col width="78">
          [ahref][keywordx][pkeyx][ahref][keywordx][linkx][keywordx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][linkx][ahref][ahref][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][linkx][ahref][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref]
         </col>
         <col width="92"/>
        </colgroup>
        <tr>
         <td>
          [ahref]
          
          <span class="curi_renum">
           (0)
          </span>
         </td>
         <td class="l">
          [linkx]
          
         </td>
         <td class="c">
          2010-10-11
         </td>
         <td class="c">
          [ahref]
          
         </td>
        </tr>
        <tr>
         <td>
          [ahref]
          
          <span class="curi_renum">
           (0)
          </span>
         </td>
         <td class="l">
          [linkx]
          
         </td>
         <td class="c">
          2011-07-22 
						[ahref]<li>[linkx]</li><li>[pkeyx]</li>
         </td>
         <td class="c">
          [ahref]
          
         </td>
        </tr>
        <tr>
         <td>
          [ahref]
          
          <span class="curi_renum">
           (2)
          </span>
         </td>
         <td class="l">
          [linkx]
          
         </td>
         <td class="c">
          2003-10-23
         </td>
         <td class="c">
          [linkx]
          
         </td>
        </tr>
        <tr>
         <td>
          [ahref]
          
          <span class="curi_renum">
           (1)
          </span>
         </td>
         <td class="l">
          <a class="mem_bul myInfoPopButton" data-ids="sladmin2" href="a">
           호기심지*
          </a>
         </td>
         <td class="c">
          2011-02-07
         </td>
         <td class="c">
          [ahref]
          
         </td>
        </tr>
        <tr>
         <td>
          [ahref]
          
          <span class="curi_renum">
           (1)
          </span>
         </td>
         <td class="l">
          [ahref]
          
         </td>
         <td class="c">
          2014-01-10
         </td>
         <td class="c">
          [keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1]<li>[keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
         </td>
        </tr>
       </table>
      </div>
     </div>
    </div>
   </div>
  </div>
  <hr/>
  <div id="footer">
   <div class="ft_wrap" id="ftWrapArea">
    <h1 class="footer_logo">
     [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </h1>
    <div class="footer_cont">
     <div class="footer_util">
      [linkx]
      
      [linkx]
      
      [ahref]
       [keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]
      
      [ahref]
      
      [ahref]
      
      [linkx]
      
     </div>
     <p class="copy">
     </p>
    </div>
    <div class="family_site">
     <div class="site">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [mkey1]<li>[mkey1]</li>[mkey1][linkx]
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      Family Site
     </p>
    </div>
   </div>
  </div>
  <div id="quickmenu">
   <p class="copy">
   </p>
   <div class="history" style="display:none">
    <fieldset>
     <legend>
     </legend>
     <div class="flexslider">
      <ul class="slides">
      </ul>
      <div class="flex-container">
       <span class="current-slide">
       </span>
       /
       <span class="total-slides">
       </span>
      </div>
     </div>
    </fieldset>
   </div>
   <div class="banner">
    [mkey1]<li>[linkx]</li><li>[pkeyx]</li><li>[pkeyx]</li>[pkeyx]
   </div>
   <p>
    [linkx]
    
   </p>
   <p>
    [linkx]
    
   </p>
   <p>
    [ahref]
    
   </p>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0286
  </b>
 </body>
</html>|<---