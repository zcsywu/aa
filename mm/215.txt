--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width, viewport-fit=cover" name="viewport"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="always" name="referrer"/>
  <meta content="Nwk1ztJqEu" property="mccp:docId"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="https://t1.daumcdn.net/news/201907/02/yonhap/20190702120006315dglk.jpg" name="twitter:image"/>
  <meta content="https://news.v.daum.net/v/20190702120006970" property="dg:uoc:pcUrl:"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:android:url"/>
  <meta content="net.daum.android.daum" property="al:android:package"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:android:app_name"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:ios:url"/>
  <meta content="365494029" property="al:ios:app_store_id"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:ios:app_name"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:app:url:googleplay"/>
  <meta content="net.daum.android.daum" property="twitter:app:id:googleplay"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:app:name:googleplay"/>
  <meta content="KR" property="twitter:app:country"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:app:url:iphone"/>
  <meta content="365494029" property="twitter:app:id:iphone"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:app:name:iphone"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:app:url:ipad"/>
  <meta content="365494029" property="twitter:app:id:ipad"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:app:name:ipad"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title">
   <li>[ahref]</li>[ahref][linkx]
  </meta>
  <meta content="20190702120006" property="og:regDate"/>
  <meta content="article" property="og:type"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image"/>
  <meta content="1200" property="og:image:width"/>
  <meta content="630" property="og:image:height"/>
  <meta content="http://t1.daumcdn.net/media/img-media/mobile/meta/news.png" property="og:image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="news" property="dg:uoc:svc"/>
  <meta content="20190702120006970" property="dg:uoc:uid"/>
  <meta content="article" property="dg:uoc:sc"/>
  <meta content="https://news.v.daum.net/v/20190702120006970" property="dg:uoc:pcUrl"/>
  <meta content="https://news.v.daum.net/v/20190702120006970?f=m" property="dg:uoc:mUrl"/>
  <meta content="m.media.daum.net" name="svcdomain"/>
  <meta content="https://news.v.daum.net/v/20190702120006970" name="plink"/>
  <meta content="https://news.v.daum.net/v/20190702120006970" property="article:txid"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="article:media_name"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="article:service_name">
   <li>[area1][keywordx]</li><li>[linkx]</li><li>[pkeyx]</li>
  </meta>
  <meta content="20190702120006" property="article:published_time"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="article:mobile_url"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="article:mobile_view_url"/>
  <meta content="http://m.media.daum.net/" property="article:mobile_service_home"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="article:pc_url"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="article:pc_view_url"/>
  <meta content="http://media.daum.net/" property="article:pc_service_home"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="article:talk_channel_view_url"/>
 </head>
 <body data-is-normal-device="OTHER">
  <div class="wrap_view head_fixed" id="kakaoWrap">
   <header class="head_vtype #gnb #default hcg_news_mobile_header" data-category="society" data-layout="" id="kakaoHead">
    <div class="k_head">
     <div class="wrap_tit">
      <h1 class="tit_daum">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h1>
      [ahref]
      
      <a class="link_fold #media_drop" href="e">
       <span class="ico_media">
        메뉴 펼치기/접기
       </span>
      </a>
     </div>
    </div>
    <div class="gnb_type1">
     <nav class="media_gnb hc_news_mobile_head_scroll_nav" id="kakaoGnb">
      <h2 class="screen_out">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <div class="slide_scroll slide_gnb">
       <div class="inner_scroll" style="left: 0px;">
        <ul class="list_scroll list_media">
         <li class="home">
          [ahref]
          
         </li>
         <li class="society">
          [linkx]
          
         </li>
         <li class="politics">
          [ahref]
          
         </li>
         <li class="economic">
          <a class="link_gnb #media_economic" href="/m/media/economic">
           <span class="txt_gnb">
            경제
           </span>
          </a>
         </li>
         <li class="foreign">
          [linkx]
          
         </li>
         <li class="culture">
          [linkx]
          
         </li>
         <li class="digital">
          [ahref]
          
         </li>
         <li class="ranking">
          [ahref]
          
         </li>
         <li class="series">
          [ahref]
          
         </li>
         <li class="photo">
          [linkx]
          
         </li>
         <li class="tv">
          <a class="link_gnb #media_tv" href="/m/media/tv">
           <span class="txt_gnb">
            TV
           </span>
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
           <li>[area1][keywordx]</li><li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>
          
         </li>
        </ul>
       </div>
      </div>
     </nav>
    </div>
    <div class="gnb_type2">
     <div class="view_util">
      <a class="link_util #search" href="/" id="link_search">
       <span class="ico_media ico_search">
        통합검색
       </span>
      </a>
      [linkx]
      
     </div>
    </div>
   </header>
   <div class="wrap_schall hide hcg_news_mobile_header" id="daumTotalSearchLayer">
    <div class="d_schall">
     <form action="/search" class="inner_schall" id="daumTotalSearchForm" method="get">
      <fieldset>
       <legend class="screen_out">
        통합 검색어 입력폼
       </legend>
       <div class="box_search">
        <button class="btn_sch btn_reset" id="btn_reset_totalsearch" type="button">
         <span class="img_g ico_del">
          검색어 지우기
         </span>
        </button>
        <button class="btn_sch btn_search" id="btn_search_totalsearch" type="submit">
         <span class="img_g ico_search">
          검색
         </span>
        </button>
        <button class="btn_close" id="btn_close_totalsearch" type="button">
         취소
        </button>
       </div>
      </fieldset>
     </form>
    </div>
    <div class="suggest-layer-holder d_sgt" id="suggest_layer">
    </div>
   </div>
   <main class="cont_view" id="kakaoContent">
    <h2 class="screen_out">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h2>
    <div class="section_main">
     <div class="box_g box_view" id="sectionBox">
      <div class="head_view hcg_news_mobile_bodyHead">
       <em class="info_cp">
        [ahref]
        
       </em>
       <h3 class="tit_view" data-translation="">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <div class="info_view">
        <span class="txt_info">
         입력 2019.07.02. 12:00
        </span>
        <button class="emph_g2 link_cmt #body #comment" id="alexCounter">
         <span class="ico_view ico_cmt">
          댓글
         </span>
         <span class="alex-count-area">
          0
         </span>
        </button>
        <div class="util_view">
         <div class="btn_util hc_news_mobile_bodyHead_digestButton" style="display:none">
          <button class="btn_news btn_synop #util #summary" type="button">
           <span class="ico_view">
            요약보기
           </span>
          </button>
         </div>
         <div class="btn_util hc_news_mobile_common_tts">
          <button class="btn_news btn_tts #util #tts" type="button">
           <span class="ico_view ico_tts">
            음성으로 듣기
           </span>
          </button>
          <div class="view_layer set_layer" id="layer_tts" style="display:none">
           <div class="inner_set_layer">
            <div class="layer_head">
             <strong class="screen_out">
              음성 설정 레이어
             </strong>
             <p class="tit_speak">
              3G, LTE에서 음성 재생시 별도의 데이터
              <br/>
              요금이 부과될 수 있습니다.
             </p>
             <button class="btn_speak" type="button">
              음성재생
             </button>
            </div>
            <div class="layer_body">
             <p>
              음성설정
             </p>
             <ul class="list_set">
              <li>
               <label class="lab_set" for="ttsGenderMale">
                <span class="ico_view">
                </span>
                남성
               </label>
              </li>
              <li>
               <label class="lab_set" for="ttsGenderFemale">
                <span class="ico_view">
                </span>
                여성
               </label>
              </li>
             </ul>
             <ul class="list_set list_setspeed">
              <li>
               <label class="lab_set" for="ttsSpeedSlow">
                <span class="ico_view">
                </span>
                느림
               </label>
              </li>
              <li>
               <label class="lab_set" for="ttsSpeedNormal">
                <span class="ico_view">
                </span>
                보통
               </label>
              </li>
              <li>
               <label class="lab_set" for="ttsSpeedFast">
                <span class="ico_view">
                 [area1][mkey1][area1][mkey1][area1][keywordx][linkx][ahref][area1][keywordx][linkx][pkeyx][area1][keywordx][linkx][linkx][pkeyx][ahref][area1][keywordx][area1][mkey1][linkx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][mkey1][ahref]
                </span>
                빠름
               </label>
              </li>
             </ul>
            </div>
            <div class="layer_foot">
             [ahref]
             
            </div>
           </div>
           <audio id="ttsPlayer" preload="none" style="display:none">
           </audio>
          </div>
         </div>
         <div class="btn_util hc_news_mobile_bodyHead_translateButtons" style="display:none;">
          <button class="btn_news btn_translate #util #translate #set" data-tiara-layer="util translate set" type="button">
           <span class="ico_view">
            번역 설정
           </span>
          </button>
          <div class="view_layer set_layer" id="translateSetLayer" style="display:none;">
           <div class="inner_set_layer inner_translate_layer">
            <div class="layer_body">
             <strong class="tit_translate">
              번역
              <span class="ico_view">
               beta
              </span>
             </strong>
             <p class="desc_translate ico_view">
              Translated by
              [ahref]
              
             </p>
             <strong class="screen_out">
              번역할 언어 선택
             </strong>
             <ul class="list_lang">
              <li>
               <button class="btn_lang btn_en #util #translate #lang_en" data-tiara-layer="util translate lang_en" name="en" type="button">
                <span class="ico_view ico_flag">
                </span>
                <strong class="ico_view tit_lang">
                 English
                </strong>
               </button>
              </li>
              <li>
               <button class="btn_lang btn_ch #util #translate #lang_cn" data-tiara-layer="util translate lang_cn" name="cn" type="button">
                <span class="ico_view ico_flag">
                </span>
                <strong class="ico_view tit_lang">
                 简体中文
                </strong>
               </button>
              </li>
              <li>
               <button class="btn_lang btn_jp #util #translate #lang_jp" data-tiara-layer="util translate lang_jp" name="jp" type="button">
                [ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][linkx][linkx][linkx][area1][mkey1][ahref][linkx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </button>
              </li>
              <li>
               <button class="btn_lang btn_ind #util #translate #lang_id" data-tiara-layer="util translate lang_id" name="id" type="button">
                <span class="ico_view ico_flag">
                </span>
                <strong class="ico_view tit_lang">
                 Bahasa Indonesia
                </strong>
               </button>
              </li>
              <li>
               <button class="btn_lang btn_viet #util #translate #lang_vi" data-tiara-layer="util translate lang_vi" name="vi" type="button">
                <span class="ico_view ico_flag">
                </span>
                <strong class="ico_view tit_lang">
                 tiếng Việt
                </strong>
               </button>
              </li>
              <li>
               <button class="btn_lang btn_ko #util #translate #lang_kr" data-tiara-layer="util translate lang_kr" name="kr" type="button">
                <span class="ico_view ico_flag">
                </span>
                <strong class="ico_view tit_lang">
                 한국어
                </strong>
               </button>
              </li>
             </ul>
            </div>
            <div class="layer_foot">
             [linkx]
             
            </div>
           </div>
          </div>
          <div class="view_layer set_layer" id="translatingLayer" style="display:none;">
           <div class="inner_loading_layer">
            <strong class="tit_translate">
             번역중
             <span class="eng_tit">
              Now in translation
             </span>
            </strong>
           </div>
          </div>
          <div class="view_layer set_layer" id="translateErrorLayer" style="display:none;">
           <div class="inner_error_layer">
            <span class="ico_view">
            </span>
            <strong class="tit_translate">
             잠시 후 다시 시도해 주세요
             <span class="eng_tit">
              Please try again in a moment
             </span>
            </strong>
           </div>
          </div>
         </div>
         <div class="hc_translator" style="display:none;">
         </div>
         <div class="btn_util hc_news_mobile_bodyHead_fontSizeController">
          <button class="btn_news btn_font #util #font #change_btn" id="open_font_size" type="button">
           <span class="ico_view">
            글씨크기 조절하기
           </span>
          </button>
          <div class="view_layer set_layer" id="font_size_layer" style="display:none">
           <div class="inner_set_layer inner_font_layer">
            <div class="layer_body">
             <p class="txt_set">
              글자크기 설정
             </p>
             <ul class="list_set">
              <li>
               <label class="lab_set lab_size0" for="inpFont17">
                <span class="ico_view">
                </span>
                가나다라마바사
               </label>
              </li>
              <li>
               <label class="lab_set lab_size1" for="inpFont19">
                <span class="ico_view">
                </span>
                가나다라마바사
               </label>
              </li>
              <li>
               <label class="lab_set lab_size2" for="inpFont21">
                <span class="ico_view">
                </span>
                가나다라마바사
               </label>
              </li>
             </ul>
            </div>
            <div class="layer_foot">
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="hcg_news_mobile_body">
       <div class="view_layer synop_layer" id="digestLayer">
        <div class="layer_head">
         <span class="ico_synop">
          <span class="ico_view">
          </span>
         </span>
         <strong class="tit_synop">
          자동 요약
         </strong>
        </div>
        <div class="layer_body">
         <p>
          국내 주요 제과업체인 파리바게뜨와 뚜레쥬르의 비닐봉지 사용량이 최근 1년 만에 최고 84%까지 줄어든 것으로 집계됐다.
         </p>
         <p>
          환경부는 작년 7월 2일 파리바게뜨, 뚜레쥬르와 1회용품 사용을 줄이기 위한 자발적 협약을 체결한 이후 실태를 조사한 결과를 2일 공개했다.
         </p>
         <p>
          자발적 협약 체결한 작년 7월∼올해 5월 사이의 비닐봉지 사용량은 7천277만장으로 2017년 7월∼작년 5월 사이의 사용량(1억9천869장)과 비교해 63.4%가 줄어든 것으로 나타났다.
         </p>
         <span class="info_synop">
          <span class="ico_view">
          </span>
          기사 제목과 주요 문장을 기반으로 자동요약한 결과입니다.
          <br/>
          전체 맥락을 이해하기 위해서는 본문 보기를 권장합니다.
         </span>
        </div>
        <div class="layer_foot">
         [linkx]
         
        </div>
       </div>
       <div class="status_view" id="translateNotice" style="display:none;">
        <span class="notice_lang notice_lang_en" style="display:none;">
         The copyright belongs to the original writer of the content, and there may be errors in machine translation results.
        </span>
        <span class="notice_lang notice_lang_cn" style="display:none;">
         版权归内容原作者所有。机器翻译结果可能存在错误。
        </span>
        <span class="notice_lang notice_lang_jp" style="display:none;">
         原文の著作権は原著著作者にあり、機械翻訳の結果にエラーが含まれることがあります。
        </span>
        <span class="notice_lang notice_lang_id" style="display:none;">
         Hak cipta milik penulis asli dari konten, dan mungkin ditemukan kesalahan dalam hasil terjemahan mesin.
        </span>
        <span class="notice_lang notice_lang_vi" style="display:none;">
         Bản quyền thuộc về tác giả gốc của nội dung và có thể có lỗi trong kết quả dịch bằng máy.
        </span>
       </div>
       <div class="news_view" style="font-size:17px">
        <div class="txt_news" id="newsContents">
         <strong class="summary_view" data-translation="">
          '1회용품 사용 줄이기 협약' 1년 만에 비닐봉지 사용 대폭 줄어
         </strong>
         <div class="article_view" data-translation-body="" id="harmonyContainer">
          <section dmcf-sid="NB6CYJg7gp">
           <figure class="figure_frm origin_fig" dmcf-pid="NLjmvYivN6" dmcf-ptype="figure">
            <p class="link_figure">
            </p>
            <figcaption class="txt_caption default_figure">
             작년 7월 2일 '1회용품 줄이기' 자발적 협약 당시 모습 [연합뉴스 자료 사진]
            </figcaption>
           </figure>
           <p dmcf-pid="NYEy74VvXT" dmcf-ptype="general">
            (세종=연합뉴스) 김승욱 기자 = 국내 주요 제과업체인 파리바게뜨와 뚜레쥬르의 비닐봉지 사용량이 최근 1년 만에 최고 84%까지 줄어든 것으로 집계됐다.
           </p>
           <p dmcf-pid="NUiQNLupLr" dmcf-ptype="general">
            환경부는 작년 7월 2일 파리바게뜨, 뚜레쥬르와 1회용품 사용을 줄이기 위한 자발적 협약을 체결한 이후 실태를 조사한 결과를 2일 공개했다.
           </p>
           <p dmcf-pid="NiFArEZFYD" dmcf-ptype="general">
            파리바게뜨는 전국에 매장 3천459곳을 보유한 SPC그룹 소속, 뚜레쥬르는 1천347곳의 매장을 둔 CJ푸드빌 소속 제과업체다.
           </p>
           <p dmcf-pid="NrsRFYQTP8" dmcf-ptype="general">
            이들 업체는 환경오염의 심각성을 고려해 비닐봉지 사용을 줄이기로 작년 7월 환경부와 협약했다. 비닐봉지 줄이기에 본격적으로 나선 것은 작년 10월이다. 올해 1월부터는 비닐봉지 무상 제공이 금지됐다.
           </p>
           <p dmcf-pid="NpgDRpmA6k" dmcf-ptype="general">
            자발적 협약 체결한 작년 7월∼올해 5월 사이의 비닐봉지 사용량은 7천277만장으로 2017년 7월∼작년 5월 사이의 사용량(1억9천869장)과 비교해 63.4%가 줄어든 것으로 나타났다.
           </p>
           <p dmcf-pid="NxH02rR1A2" dmcf-ptype="general">
            1회용품 줄이기를 본격적으로 시행한 시기를 기준으로 비교하면 2017년 10월부터 작년 5월까지는 1억4천158만장에 달했지만, 작년 10월부터 올해 5월까지는 3천33만장으로 78.6%나 줄었다.
           </p>
           <p dmcf-pid="NC9HdCHtdj" dmcf-ptype="general">
            특히 파리바게뜨는 비닐봉지 대신 재생 종이봉투를 전면 도입한 덕분에 비닐봉지 사용이 대폭 줄었다고 환경부는 전했다.
           </p>
           <p dmcf-pid="NcRByn3zlb" dmcf-ptype="general">
            비닐봉지 무상 제공이 금지된 시기를 기준으로 비교하면 사용량 감소가 더욱 두드러진다. 작년 1월부터 5월까지 9천66만장이던 비닐봉지 사용량은 무상 제공 금지를 시작한 올해 1월부터 5월 사이 1천479만장을 기록, 83.7% 감소했다.
           </p>
           <p dmcf-pid="N6phJbMbdV" dmcf-ptype="general">
            한편 올해 4월부터 본격적으로 시행된 대규모 점포 및 면적 165㎡ 이상 슈퍼마켓의 1회용 비닐봉지 전면 사용금지 정책은 현장에서 순조롭게 시행되고 있다고 환경부는 전했다.
           </p>
           <p dmcf-pid="NICvdbUuB5" dmcf-ptype="general">
            올해 4월부터 6월까지 1만8천224회 단속한 결과 과태료는 41건 부과된 것으로 집계됐다.
           </p>
           <p dmcf-pid="NPA6wlsUML" dmcf-ptype="general">
            이채은 환경부 자원순환정책과장은 "앞으로 1회용품 사용이 없는 자원 순환 사회를 구현하겠다"고 말했다.
           </p>
           <p dmcf-pid="NwY5o5S2TY" dmcf-ptype="general">
            ksw08@yna.co.kr
           </p>
           <dl dmcf-pid="NhbfmICmLe" dmcf-ptype="general">
            <dt>
            </dt>
           </dl>
          </section>
         </div>
         <div id="harmonyBodyInsider" style="display:none">
          <div class="hc_harmony_body_insider">
          </div>
          <div class="ad_body" data-adfit-param-channel="harmony" data-adfit-param-cp-postfix="bodyad" data-adfit-unit-id="DAN-sohdblm4u8v5" data-body-inside-component-index="0" data-body-inside-component-name="bodyAd" id="harmonyBodyAdWrap" style="display:none">
           <div class="hc_news_body_ad" id="harmonyBodyAdComponent">
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="foot_view">
        <span class="hc_empty_component">
        </span>
        <div class="wrap_brunch hc_news_pc_mArticle_brunchAuthor" style="display:none;">
        </div>
        <div class="hc_news_mobile_body_cluster" id="body_cluster">
        </div>
        <div class="wrap_empathy">
         <button class="btn_news btn_share hc_news_mobile_common_shareButton" type="button">
          <span class="ico_view">
           SNS 공유하기
          </span>
         </button>
         <div class="hc_news_mobile_body_empathy" id="likeButton">
         </div>
        </div>
        <div class="wrap_plus plus_type2">
         <div class="info_plus">
          [linkx]
          
          <div class="wrap_cont">
           [linkx]
           
           <span class="count_plus">
            친구 215,903명
           </span>
           [linkx]
           
          </div>
         </div>
        </div>
        <div class="wrap_viewrelate">
         <strong class="tit_viewrelate">
          <span class="txt_cp">
           연합뉴스
          </span>
          주요뉴스
          <span class="txt_viewrelate">
           해당 언론사로 이동합니다.
          </span>
         </strong>
         <ul class="list_viewrelate">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <span class="txt_copy">
          저작권자(c)연합뉴스. 무단전재-재배포금지
         </span>
        </div>
        <div class="hc_news_mobile_body_bottomAd">
         <ins class="daum_ddn_area" data-ad-height="100" data-ad-type="M" data-ad-unit="0Qv33" data-ad-width="100%" id="daumAd" style="display:block;width:100%;height:100px">
         </ins>
        </div>
        <div class="cmt_news cmt_view">
         <div data-base-url="//comment.daum.net" data-client-id="26BXAvKny5WF5Z09lr5k77Y8" data-hide-footer="true" data-initial-limit="3" data-is-mobile="true" data-kakao-appkey="53e566aa17534bc816eb1b5d8f7415ee" data-margin-top="46" data-max-length="300" data-page-limit="10" data-post-id="@20190702120006970" data-show-mask-alert="true" data-sort="R" data-use-attachment="false" data-use-emoticon="true" data-use-my="true" data-use-official="true" data-use-reply="true" data-use-social-share="true" id="alex-area">
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="section_sub hcg_news_mobile_aside_v3" id="news_mobile_aside">
     <div class="box_g box_realtime">
      <h3 class="screen_out">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul class="list_news" id="recommend1">
       <li class="item_toros">
       </li>
       <li class="item_toros">
        <li>[ahref]</li><li>[area1][mkey1]</li>[area1][mkey1]<li>[area1][keywordx]</li>
       </li>
       <li class="item_toros">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_ad">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_nachoo">
       </li>
      </ul>
     </div>
     <div class="box_g box_age hc_news_mobile_aside_age_ranking">
      <h3 class="tit_g">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="tab_ranking">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
      <strong class="screen_out">
       전체
      </strong>
      <div class="slide_area" id="keySlide_bt">
       <div class="slide">
        <div class="panel">
         <ol class="list_ranking">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ol>
        </div>
        <div class="panel">
         <ol class="list_ranking">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a class="link_ranking #bottom #ranking #age_list @3" href="/v/20190703210906317?f=m">
            <em class="num_issue num3">
             <!-- 데이터가 없어요 -->
            </em>
            <span class="screen_out">
             위
            </span>
            <strong class="tit_ranking">
             개에 물려 끌려간 35개월 아이..'입마개 약속' 어긴 견주
            </strong>
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ol>
        </div>
        <div class="panel">
         <ol class="list_ranking">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ol>
        </div>
        <div class="panel">
         <ol class="list_ranking">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ol>
        </div>
        <div class="panel">
         <ol class="list_ranking">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a class="link_ranking #bottom #ranking #age_list @3" href="/v/20190703210309204?f=m">
            <em class="num_issue num3">
             <!-- 데이터가 없어요 -->
            </em>
            <span class="screen_out">
             위
            </span>
            <strong class="tit_ranking">
             '3일 지났으면 죽었겠네' 문자 나눈 부모, 딸 살인죄 적용
            </strong>
           </a>
          </li>
          <li>
           <a class="link_ranking #bottom #ranking #age_list @4" href="/v/20190703203106574?f=m">
            <em class="num_issue num4">
             <!-- 데이터가 없어요 -->
            </em>
            <span class="screen_out">
             위
            </span>
            <strong class="tit_ranking">
             "차 번호판 왜 접어놨지?"..'직감'으로 추격 검거
            </strong>
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ol>
        </div>
       </div>
      </div>
      [linkx]
      
     </div>
     <div class="box_g box_realtime">
      <h3 class="screen_out">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[pkeyx][pkeyx]<li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
      </h3>
      <ul class="list_news" id="recommend2">
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_ad">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
      </ul>
     </div>
     <div class="box_g box_detailed hc_news_mobile_aside_kkomkkom_ranking">
      <h3 class="tit_g">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ol class="list_ranking">
       <li>
        <a class="link_ranking #bottom #ranking #kkomkkom_list @1" href="/v/20190703195511887">
         <em class="num_issue num1">
          1
         </em>
         <span class="screen_out">
          위<li>[area1][keywordx]</li>[area1][mkey1][area1][mkey1]<li>[linkx]</li>
         </span>
         <strong class="tit_ranking">
          손정의 회장 4일 방한..이재용·정의선·구광모 만난다
         </strong>
        </a>
       </li>
       <li>
        [pkeyx][area1][mkey1][area1][keywordx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][mkey1][ahref][area1][mkey1][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][pkeyx][area1][mkey1][linkx][linkx]
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
       </li>
       <li>
        [ahref]
        
       </li>
      </ol>
      [ahref]
      
     </div>
     <div class="box_g box_realtime">
      <h3 class="screen_out">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="list_news" id="recommend3">
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
      </ul>
     </div>
     <div class="box_g box_realtime">
      <h3 class="screen_out">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="list_news" id="recommend4">
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
       <li class="item_nachoo">
       </li>
       <li class="item_toros">
       </li>
      </ul>
     </div>
     <div class="hc_news_mobile_aside_asideAd_v2" id="nativeAdWrap" style="display:none">
     </div>
     <div class="#bottom #searchword hc_news_mobile_aside_hottrends_v2" id="hottrendsContainer">
      <div class="d_isu" role="complementary">
       <div class="head_issue">
        <h2 class="screen_out">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h2>
        <div class="roll_issue">
        </div>
        <ul class="tab_issue tab_issue4">
         <li class="fst on">
          [linkx]
          
         </li>
         <li class="">
          <a class="link_tab" href="e" idx="1">
           뉴스
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li class="lst">
          [linkx]
          
         </li>
        </ul>
       </div>
       <strong class="screen_out cur_tit">
        실시간 이슈
       </strong>
       <div class="slide_area" id="keySlide_bt">
        <div class="slide">
         <div class="panel">
          <ul class="list_issue">
           <li>
            [ahref][pkeyx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx][ahref][area1][mkey1][area1][keywordx]
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
          <ul class="list_issue">
           <li>
            [ahref]
            
           </li>
           <[area1][keywordx]>
           </[area1][keywordx]>
           <li>
            [linkx]
             <li>[pkeyx]</li>[ahref]<li>[ahref]</li>[area1][mkey1]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
         <div class="panel">
          <ul class="list_issue">
           <li>
            <a class="link_issue" href="/search?w=tot&amp;q=%EC%8B%A4%ED%99%94+%ED%83%90%EC%82%AC%EB%8C%80&amp;DA=23I&amp;pin=news">
             <em class="num_issue txt_num1">
              1
             </em>
             <span class="screen_out">
              1위
             </span>
             <span class="txt_issue">
              실화 탐사대
             </span>
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
          <ul class="list_issue">
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <div class="panel">
          <ul class="list_issue">
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="link_issue" href="/search?w=tot&amp;q=%EC%95%88%ED%98%84%EB%AA%A8&amp;DA=23K&amp;pin=entertain">
             <em class="num_issue txt_num4">
              4
             </em>
             <span class="screen_out">
              4위
             </span>
             <span class="txt_issue">
              안현모
             </span>
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
          <ul class="list_issue">
           <li>
            <a class="link_issue" href="/search?w=tot&amp;q=%EC%9D%B4%EA%B4%91%EC%97%B0+%EC%97%AC%EC%9E%90%EC%B9%9C%EA%B5%AC&amp;DA=23K&amp;pin=entertain">
             [linkx][ahref][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="link_issue" href="/search?w=tot&amp;q=%EC%9E%84%ED%95%98%EB%A3%A1&amp;DA=23K&amp;pin=entertain">
             <em class="num_issue txt_num10">
              10
             </em>
             <span class="screen_out">
              10위
             </span>
             <span class="txt_issue">
              임하룡
             </span>
            </a>
           </li>
          </ul>
         </div>
         <div class="panel">
          <ul class="list_issue">
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
          <ul class="list_issue">
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="paging_issue">
        <button class="btn_page btn_prev">
         <span class="ico_comm2 ico_prev">
          이전페이지
         </span>
        </button>
        <span class="paging_dots">
         <span class="num_page">
          1
         </span>
         <span class="num_page">
          2
         </span>
         <span class="screen_out">
          현재페이지
         </span>
         <em class="num_page">
          3
         </em>
         <span class="num_page">
          4
         </span>
        </span>
        <button class="btn_page btn_next" type="button">
         <span class="ico_comm2 ico_next">
          다음페이지
         </span>
        </button>
       </div>
      </div>
     </div>
     <div class="direct_link #bottom #directlink hc_news_mobile_aside_directLink" id="mediaDirectLink">
      <div class="d_isu">
       <ul class="tab_issue #tab @op">
        <li class="on" id="0">
         [ahref]
         
        </li>
        <li id="1">
         [ahref]
         
        </li>
        <li id="2">
         [ahref]
         
        </li>
       </ul>
       <strong class="screen_out">
        주요메뉴 바로가기 링크
       </strong>
       <div id="mediaDirectLinkList">
        <div class="slide" id="slide-3">
         <div class="panel" style="height: 190px; width: 460px;">
          <ul class="list_link #news @op">
           <li class="fst">
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <li>[area1][keywordx]</li>[ahref][ahref]
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a class="link_menu @11" href="/m/media/newsbox/">
             배열이력
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="link_menu @13" href="/m/media/photo">
             포토
            </a>
           </li>
           <li>
            <li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>[area1][mkey1]
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <div class="panel" style="height: 190px; width: 460px;">
          <ul class="list_link #enter @op">
           <li class="fst">
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li class="fst">
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li class="fst">
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li class="fst">
            <a class="link_menu @10" href="t">
             영화
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <div class="panel" style="height: 190px; width: 460px;">
          <ul class="list_link #sports @op">
           <li class="fst">
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li class="fst">
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li class="fst">
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li class="fst">
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
   <footer class="k_foot hcg_news_mobile_foot" id="kakaoFoot">
    <ul class="list_foot">
     <li>
      [ahref]
      
     </li>
     <li id="daumMinidaum">
      [linkx]
      
     </li>
     <li>
      <a class="btn_foot" href="/v/Nwk1ztJqEu?f=p">
       PC화면
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <small class="copr_info">
     <span class="info_policy">
      [linkx]
      
      <span class="txt_dot">
       ・
      </span>
      기사배열책임자 : 손정아
      <span class="txt_dot">
       ・
      </span>
      청소년보호책임자 : 권대열
     </span>
     [linkx]
     
    </small>
   </footer>
  </div>
  <div class="hcg_mobile_go_daumapp" data-layoutid="news_mobile" style="display:none;">
   <div class="bnr_layer">
    <div class="inner_bnr">
     <div class="layer_body">
      [ahref]
      
     </div>
     <div class="layer_foot">
      [linkx]
      
     </div>
    </div>
   </div>
  </div>
  <div class="hcg_news_mobile_last_js">
   <div class="hc_gallery_icon_on_image_mobile">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0229
  </b>
 </body>
</html>|<---