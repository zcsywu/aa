--->|<!DOCTYPE html>
<html class="pageFlicker" data-placeholder-focus="false" lang="ko-KR">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=8; IE=Edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="on" http-equiv="x-dns-prefetch-control"/>
 </head>
 <body id="top" style="opacity:1">
  <div class="hidden-xs contact-us">
   <div class="contact-us-cta contact-us-slider" data-loaded="" data-supportaccessenabled="False" id="contactslidertitle" onclick="loadContactSliderDetails()">
    <h4>
     <span class="editable">
      문의처
     </span>
    </h4>
   </div>
   <div class="contact-us-panel white" id="ContactUsDetails">
   </div>
  </div>
  <div class="site-wrapper" id="site-wrapper">
   <div class="site-canvas site-canvas-mob mh-sim-canvas">
    <header class="masthead dellEmcSiteCls" id="masthead">
     <nav class="navbar navbar-inverse" id="navbar" role="navigation">
      <div class="utility-section-wrapper blue">
       <li>[linkx]</li>[area1][keywordx]<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
      </div>
     </nav>
     <div class="mastheadMenu-wrapper hidden-xs">
      <div class="masthead-shadow-section">
      </div>
      <div class="main-nav-section-wrapper">
       <div class="visibility main-nav-section">
        <div class="shadow-overlay-left">
        </div>
        <ul class="tier1">
         <li class="open" id="umh_t1_1">
          [ahref][pkeyx][pkeyx][pkeyx]<li>[linkx]</li>
         </li>
         <li class="open" id="umh_t1_2">
          [linkx]
          
         </li>
         <li class="open" id="umh_t1_3">
          <a href="/learn/kr/ko/krbsd1/by-service-type?~ck=mn">
           서비스
          </a>
         </li>
         <li class="open" id="umh_t1_4">
          <a class="active" href="/support/home/kr/ko/krbsd1?~ck=mn">
           지원
           <i class="icon-ui-triangleup">
           </i>
          </a>
          <div class="hidden-lg hidden-md hidden-sm">
           <ul class="tier2">
            <li id="umh_t1_4_t2_1">
             [linkx]
             
            </li>
            <li id="umh_t1_4_t2_2">
             <a href="/support/home/kr/ko/krbsd1?app=knowledgebase&amp;~ck=mn">
              기술 문서
             </a>
            </li>
            <li id="umh_t1_4_t2_3">
             [ahref]
             
            </li>
            <li id="umh_t1_4_t2_4">
             [linkx]
             
            </li>
            <li id="umh_t1_4_t2_5">
             <a href="/support/contents/kr/ko/krbsd1/category/esupport-order-support?~ck=mn">
              주문 지원
             </a>
            </li>
            <li id="umh_t1_4_t2_6">
             [linkx]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="open" id="umh_t1_5">
          <a href="/support/home/kr/ko/krbsd1?app=community&amp;~ck=mn">
           커뮤니티
          </a>
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="sub-masthead hidden-xs">
      <div class="container">
       [area1][mkey1][pkeyx][ahref][area1][mkey1][area1][mkey1][ahref][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][pkeyx][ahref][linkx][area1][keywordx][area1][mkey1][area1][mkey1][linkx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][mkey1][pkeyx][ahref][area1][mkey1]
      </div>
     </div>
     <div class="mastheadMenu-wrapper visible-xs mobile">
      <div class="masthead-shadow-section">
      </div>
      <div class="main-nav-section-wrapper">
       <div class="visibility main-nav-section">
        <div class="shadow-overlay-left">
        </div>
        <ul class="tier1">
         <li class="open" id="umh_t1_1">
          <a href="/ko-kr/work/shop?~ck=mn">
           제품
          </a>
         </li>
         <li class="open" id="umh_t1_2">
          [linkx]
          
         </li>
         <li class="open" id="umh_t1_3">
          <a href="/learn/kr/ko/krbsd1/by-service-type?~ck=mn">
           서비스
          </a>
         </li>
         <li class="open" id="umh_t1_4">
          [ahref]
          
          <div class="hidden-lg hidden-md hidden-sm">
           <ul class="tier2">
            <li id="umh_t1_4_t2_1">
             [ahref]
             
            </li>
            <li id="umh_t1_4_t2_2">
             [linkx]
             
            </li>
            <li id="umh_t1_4_t2_3">
             [ahref]
             
            </li>
            <li id="umh_t1_4_t2_4">
             [ahref]
             
            </li>
            <li id="umh_t1_4_t2_5">
             <a href="/support/contents/kr/ko/krbsd1/category/esupport-order-support?~ck=mn">
              주문 지원
             </a>
            </li>
            <li id="umh_t1_4_t2_6">
             [linkx]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="open" id="umh_t1_5">
          <a href="/support/home/kr/ko/krbsd1?app=community&amp;~ck=mn">
           커뮤니티
          </a>
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="hidden-xs top-offset-40">
      <div class="breadcrumbs hidden-xs" style="position:inherit">
       <div class="container masthead-row-content" id="mh-breadcrumb-section">
        <div class="row">
         <div class="col-xs-12">
          <ul id="ul-mh-breadcrumb">
           <li class="home ">
            <span class="sep">
            </span>
            <a class="breadcrumb-home-icon" href="m" id="mh-breadcrumb-0">
             <span class="icon-small-house">
             </span>
            </a>
           </li>
           <li class="">
            <span class="sep">
            </span>
            [linkx]
            
           </li>
           <li class="">
            <span class="sep">
            </span>
            [linkx]
            
           </li>
           <li class="">
            <span class="sep">
            </span>
            [linkx]
            
           </li>
           <li class="">
            [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][pkeyx][linkx][area1][mkey1][ahref][linkx][ahref][area1][keywordx][ahref][area1][keywordx][area1][mkey1]
           </li>
           <li class="int-crumb-active">
            <span class="sep">
            </span>
            <span class="breadcrumb-home-icon" id="mh-breadcrumb-5">
             서비스 도구
            </span>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div hidden="" id="mastheadInvisibleCaptchaContainer">
      <div class="form-group" id="mastheadInvisiblecaptcha">
       <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="g-recaptcha" data-sitekey="6LeyGCAUAAAAAL6kWhxsm3v3_1YLX42mB60eL53L" data-size="invisible" id="mastheadInvisbleReCaptcha">
        </div>
       </div>
       <div class="masthead_invisible_captcha_nonclickable" id="masthead_invisible_captcha_nonclickable">
       </div>
      </div>
     </div>
     <div class="modal fade" id="mastheadProductsListModal" role="dialog">
      <div class="modal-dialog" id="mastheadMultipleMatchSelectionModel">
      </div>
     </div>
    </header>
    <div class="site-canvas-mob min-height-body" id="maincontent">
     <div class="clearfix">
     </div>
     <div class="container kb-article-template bottom-offset-40">
      <h1 class="top-offset-10">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h1>
      <div class="clearfix">
      </div>
      <div class="row">
       <div class="col-xs-12">
       </div>
      </div>
      <div class="row">
       <div class="col-xs-12">
        <h4>
        </h4>
       </div>
      </div>
      <div class="row">
       <div class="col-lg-9">
        <div class="col-lg-12">
         <ul class="unstyled">
          <li>
           <h4>
            [ahref]
            
           </h4>
          </li>
          <li class="bottom-offset-10">
           SupportAssist Enterprise는 Dell EMC 엔터프라이즈 시스템(서버, 스토리지 및 네트워킹)을 위한 신속한 문제 해결을 위해 자동 장애 감지, 알림 및 사례 생성을 포함하는 사전 예방 모니터링 소프트웨어입니다. SupportAssist Enterprise는 무료로 제공되는 안전하고 간단한 일반 지원 루틴입니다.
          </li>
          <li>
           <h4>
            [ahref]
            
           </h4>
          </li>
          <li class="bottom-offset-10">
          </li>
          <li>
           <h4>
            <a href="/support/contents/kr/ko/krbsd1/article/product-support/self-support-knowledgebase/enterprise-resource-center/enterprise-tools/useful-tools-idrac7">
             PowerEdge 12 및 13세대 서버 기반 시스템용 iDRAC 7 및 8을 통한 SupportAssist 컬렉션
            </a>
           </h4>
          </li>
          <li class="bottom-offset-10">
          </li>
          <li>
           <h4>
            [linkx]
            
           </h4>
          </li>
          <li class="bottom-offset-10">
          </li>
          <li>
           <h4>
            <a href="/support/contents/kr/ko/krbsd1/article/product-support/self-support-knowledgebase/enterprise-resource-center/enterprise-tools/support-live-image">
             Support Live Image
            </a>
           </h4>
          </li>
          <li class="bottom-offset-10">
           <div>
            설명: Support Live Image는 고객의 지원 요구 사항을 위한 Dell 도구 모음이 포함된 부팅 가능한 라이브 이미지입니다.
            <br/>
            이점: 운영 체제를 터치하지 않고 Dell 도구에 액세스
           </div>
          </li>
         </ul>
        </div>
        <div class="row top-offset-medium">
        </div>
        <div class="row top-offset-medium">
        </div>
       </div>
      </div>
      <div class="clearfix">
       <div class="bottom-offset-micro">
       </div>
      </div>
     </div>
    </div>
    <footer class="footer-menu" id="footerSimplified">
     <div class="footer-top-section gray-light footer-emc-section">
      <div class="container">
       <div class="row">
        <div class="col-sm-8 col-md-8">
         <div class="menu-container">
          <ul class="menu-links">
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            커뮤니티<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][linkx]
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx][pkeyx][ahref][linkx][ahref][area1][keywordx][ahref][pkeyx][pkeyx][linkx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="col-sm-4 col-md-4">
         <div class="country-selector btn-group dropup" id="countryselector" tabindex="0">
          <a class="dropdown-toggle" data-toggle="dropdown" href="#">
           <div id="imgcountryselector">
           </div>
           <div class="country-name">
            대한민국
           </div>
          </a>
          <ul class="dropdown-menu pull-right countrylist" role="menu">
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('rs', 'ru', 'rsdhs1');return false;" title="CIS(독립 국가 연합) (CIS)">
             CIS(독립 국가 연합) (CIS)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ga', 'fr', 'gadhs1');return false;" title="가봉 (Gabon)">
             가봉 (Gabon)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('gy', 'en', 'gydhs1');return false;" title="가이아나 (Guyana)">
             가이아나 (Guyana)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="개발도상국 - EMEA (Emerging Countries – EMEA)">
             개발도상국 - EMEA (Emerging Countries – EMEA)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('gt', 'es', 'gtdhs1');return false;" title="과테말라 (Guatemala)">
             과테말라 (Guatemala)
            </a>
           </li>
           <li>
            [linkx]
             <li>[area1][mkey1]</li>[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ng', 'en', 'ngdhs1');return false;" title="나이지리아 (Nigeria)">
             나이지리아 (Nigeria)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('an', 'en', 'andhs1');return false;" title="네덜란드령 앤틸리스제도/퀴라소 섬 (Netherlands Antilles/Curaçao)">
             네덜란드령 앤틸리스제도/퀴라소 섬 (Netherlands Antilles/Curaçao)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('np', 'en', 'npdhs1');return false;" title="네팔 (Nepal)">
             네팔 (Nepal)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('nz', 'en', 'nzdhs1');return false;" title="뉴질랜드 (New Zealand)">
             뉴질랜드 (New Zealand)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="니제르 (Niger)">
             니제르 (Niger)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('tw', 'zh', 'twdhs1');return false;" title="대만 (台灣)">
             대만 (台灣)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('do', 'es', 'dodhs1');return false;" title="도미니카 공화국 (República Dominicana)">
             도미니카 공화국 (República Dominicana)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('de', 'de', 'dedhs1');return false;" title="독일 (Deutschland)">
             독일 (Deutschland)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('lv', 'en', 'lvdhs1');return false;" title="라트비아 (Latvia)">
             라트비아 (Latvia)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx]<li>[linkx]</li>[linkx]
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('mk', 'en', 'mkdhs1');return false;" title="마케도니아 (Macedonia)">
             마케도니아 (Macedonia)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx]
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="말리 (Mali)">
             말리 (Mali)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('mx', 'es', 'mxdhs1');return false;" title="멕시코 (México)">
             멕시코 (México)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="모리셔스 (Maurice)">
             모리셔스 (Maurice)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="모리타니 (Mauritanie)">
             모리타니 (Mauritanie)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="몬테네그로 (Montenegro)">
             몬테네그로 (Montenegro)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('mv', 'en', 'mvdhs1');return false;" title="몰디브 (Maldives)">
             몰디브 (Maldives)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="몰타 (Malta)">
             몰타 (Malta)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('us', 'en', '19');return false;" title="미국 (United States)">
             미국 (United States)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ve', 'es', 'vedhs1');return false;" title="베네수엘라 (Venezuela)">
             베네수엘라 (Venezuela)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <h3>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            보츠와나 (Botswana)<li>[pkeyx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ws', 'en', 'wsdhs1');return false;" title="사모아 (Samoa)">
             사모아 (Samoa)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="세이셸 (Seychelles)">
             세이셸 (Seychelles)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('vc', 'en', 'vcdhs1');return false;" title="세인트 빈센트 그레나딘 (St. Vincent &amp; Grenadines)">
             세인트 빈센트 그레나딘 (St. Vincent &amp; Grenadines)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('kn', 'en', 'kndhs1');return false;" title="세인트 키츠 앤 네비스 (St. Kitts &amp; Nevis)">
             세인트 키츠 앤 네비스 (St. Kitts &amp; Nevis)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('sr', 'en', 'srdhs1');return false;" title="수리남 (Suriname)">
             수리남 (Suriname)[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][linkx][pkeyx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][linkx][ahref][area1][keywordx][linkx][ahref][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ch', 'de', 'chdhs1');return false;" title="스위스 (Schweiz)">
             스위스 (Schweiz)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('si', 'en', 'sidhs1');return false;" title="슬로베니아 (Slovenia)">
             슬로베니아 (Slovenia)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('sg', 'en', 'sgdhs1');return false;" title="싱가포르 (Singapore)">
             싱가포르 (Singapore)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ae', 'en', 'aedhs1');return false;" title="아랍에미리트 (United Arab Emirates)">
             아랍에미리트 (United Arab Emirates)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('is', 'en', 'isdhs1');return false;" title="아이슬란드 (Iceland)">
             아이슬란드 (Iceland)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            아제르바이잔 (Азербайджан)[pkeyx]<li>[ahref]</li>[area1][mkey1][area1][keywordx][area1][mkey1]
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('al', 'en', 'aldhs1');return false;" title="알바니아 (Albania)">
             알바니아 (Albania)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'pt', 'eddhs1');return false;" title="앙골라 (Angola)">
             앙골라 (Angola)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ee', 'en', 'eedhs1');return false;" title="에스토니아 (Estonia)">
             에스토니아 (Estonia)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ec', 'es', 'ecdhs1');return false;" title="에콰도르 (Ecuador)">
             에콰도르 (Ecuador)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            영국 (United Kingdom)[area1][mkey1]<li>[ahref]</li><li>[area1][mkey1]</li><li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('vg', 'en', 'vgdhs1');return false;" title="영국령 버진 아일랜드 (British Virgin Islands)">
             영국령 버진 아일랜드 (British Virgin Islands)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
             [area1][mkey1][area1][mkey1]<li>[ahref]</li><li>[linkx]</li>[pkeyx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ae', 'en', 'aedhs1');return false;" title="이라크 (Iraq)">
             이라크 (Iraq)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('il', 'en', 'ildhs1');return false;" title="이스라엘 (ישראל)">
             이스라엘 (ישראל)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('jm', 'en', 'jmdhs1');return false;" title="자메이카 (Jamaica)">
             자메이카 (Jamaica)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="카메룬 (Cameroon)">
             카메룬 (Cameroon)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="카보베르데 (Cabo Verde)">
             카보베르데 (Cabo Verde)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="코모로 (Comoros)">
             코모로 (Comoros)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('co', 'es', 'codhs1');return false;" title="콜롬비아 (Colombia)">
             콜롬비아 (Colombia)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('cx', 'en', 'krdhs1');return false;" title="크리스마스 섬 (Christmas Island)">
             크리스마스 섬 (Christmas Island)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('rs', 'ru', 'rsdhs1');return false;" title="키르기스스탄 (Kyrgyzstan)">
             키르기스스탄 (Kyrgyzstan)
            </a>
           </li>
           <li>
            [ahref]
             [area1][keywordx][linkx][area1][mkey1][linkx][pkeyx][ahref][linkx][ahref][area1][mkey1][area1][mkey1][ahref][area1][keywordx][ahref][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][linkx][area1][mkey1][linkx][area1][keywordx][pkeyx][area1][keywordx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="키프로스 (Cyprus)">
             키프로스 (Cyprus)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="탄자니아 (Tanzania)">
             탄자니아 (Tanzania)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('th', 'en', 'thdhs1');return false;" title="태국 (Thailand)">
             태국 (Thailand)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="토고 (Togo)">
             토고 (Togo)
            </a>
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('rs', 'ru', 'rsdhs1');return false;" title="투르크메니스탄 (Turkmenistan)">
             투르크메니스탄 (Turkmenistan)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <[area1][keywordx]>
           </[area1][keywordx]>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('pe', 'es', 'pedhs1');return false;" title="페루 (Perú)">
             페루 (Perú)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('ed', 'en', 'eddhs1');return false;" title="프랑스령 폴리네시아 (Polynésie française)">
             프랑스령 폴리네시아 (Polynésie française)
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="" onclick="Dell.Types.SupportHomepage.prototype.rewriteUrlLWP('hu', 'hu', 'hudhs1');return false;" title="헝가리 (Magyarország)">
             헝가리 (Magyarország)
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="footer-shadow-section">
     </div>
     <div class="footer-bottom-section">
      <div class="menu-container">
       <div class="menu-links-container">
        <div class="container">
         <div class="row">
          <div class="col-sm-12 col-md-12">
           <ul class="list-item">
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a class="" href="/learn/kr/ko/krcorp1/cr?ref=footer">
              기업의 사회적 책임
             </a>
            </li>
            <li>
             <a class="" href="/support/contents/kr/ko/krbsd1/category/contact-information?ref=footer">
              문의처
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
       <div class="footer-shadow-section">
       </div>
      </div>
     </div>
    </footer>
   </div>
  </div>
  <span class="visible-md visible-lg" id="desktop-breakpoint">
  </span>
  <span class="visible-md" id="tablet-breakpoint">
  </span>
  <span class="visible-xs" id="phone-breakpoint">
  </span>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0451
  </b>
 </body>
</html>|<---