--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <meta content="text/html;charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=1170" name="viewport"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="title"/>
  <meta content="이정우" name="author"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="book" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="http://image.yes24.com/goods/7168971/L" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="8976823818" property="books:isbn"/>
  <meta content="0" property="books:rating:value"/>
  <meta content="5" property="books:rating:scale"/>
  <meta content="1" property="books:rating:normalized_value"/>
 </head>
 <body>
  <dl id="yesSkip">
   <dt>
    콘텐츠 바로가기
   </dt>
   <dd>
    [ahref]
    
   </dd>
  </dl>
  <hr/>
  <div id="partnerHeaderFrm">
  </div>
  <hr/>
  <div class="xl" id="yesWrap">
   <div id="yesHeaderArea" style="">
    <section>
     <div id="upperBnWrap" style="display:none;">
      <div id="upperBnRoll">
       <div class="upperBnSet" style="display:none;background-color:#ffefbe">
        <div class="upperBnArea">
         <div class="upperBnSetLft">
          [ahref]
          
         </div>
         <div class="upperBnSetRgt">
          [linkx]
          
         </div>
        </div>
        <div class="upperBnBg" style="background-color:#cedef5">
        </div>
       </div>
       <div class="upperBnSet" style="display:none;background-color:#d3a9e9">
        <div class="upperBnArea">
         <div class="upperBnSetLft">
          [linkx]
          
         </div>
         <div class="upperBnSetRgt">
          [ahref]
          
         </div>
        </div>
        <div class="upperBnBg" style="background-color:#b5feff">
        </div>
       </div>
       <div class="upperBnSet" style="display:none;background-color:#dadff9">
        <div class="upperBnArea">
         <div class="upperBnSetLft">
          [ahref]
          
         </div>
         <div class="upperBnSetRgt">
          [ahref]
          
         </div>
        </div>
        <div class="upperBnBg" style="background-color:#85d0f7">
        </div>
       </div>
      </div>
      <div class="upperClose">
       [ahref]
       
      </div>
     </div>
    </section>
    <div class="" id="yHeader">
     <h1>
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h1>
     <div id="yHeaderWrap">
      <div class="yHeaderTop">
       <h2 class="yBlind">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <ul class="cateLi" id="ulCategoryList">
        <li class="cate001 cateOn">
         [linkx]
         
        </li>
        <li class="cate002">
         [linkx]
         
        </li>
        <li class="cate017">
         [ahref]
         
        </li>
        <li class="cateWNL">
         [keywordx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx]<li>[keywordx]</li>
        </li>
        <li class="cate003">
         [linkx]
         
        </li>
        <li class="cate004">
         [ahref]
         
        </li>
        <li class="cateMOV">
         [linkx]
         
        </li>
        <li class="cateENT">
         [ahref]
         
        </li>
        <li class="cate006">
         [linkx]
         
         <span class="sticker">
         </span>
        </li>
        <li class="cate018">
         [ahref]
         
        </li>
       </ul>
       <h2 class="yBlind">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <ul class="utilLi">
        [linkx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]
       </ul>
       <dl class="globalYesInfoDl">
        <dt>
         [ahref]
         
        </dt>
        <dd>
         <div class="globalYesInfoContArea">
          <div class="globalYesInfoCont">
           <p class="yesInfo_tit">
            Global YES24는?
           </p>
           <p class="yesInfo_des">
            K-POP/K-Drama 관련상품(음반,도서,DVD)을
            <br/>
            영문/중문 으로 이용하실 수 있습니다.
           </p>
           <div class="yesInfo_globalTxt">
            <p class="globalTxt_des">
             Korean wave shopping mall, sell the
             <br/>
             K-POP/K-Drama (CD,DVD,Blu-ray,Book)
										We aceept PayPal/UnionPay/Alipay
             <br/>
             and support English/Chinese Language service
            </p>
            [ahref]
            
            <p class="globalTxt_des">
             作为出售正规 K-POP/K-Drama 相关(CD,图书,DVD) 韩流商品的网站, 支持 中文/英文 等海外结账方式
            </p>
            [ahref]
            
           </div>
          </div>
         </div>
        </dd>
       </dl>
      </div>
      <hr/>
      <div class="yHeaderMid">
       <div class="yesSearch">
        <form action="/searchcorner/Search?" id="yesSForm" method="get" name="HeadForm" onsubmit="return check_search();">
         [mkey1]<li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[ahref]</li>
        </form>
       </div>
       <hr/>
       <div class="hotIssueDl" id="hotIssue">
        <div class="hotIssueCont">
         <dl id="hotIssueRoll">
          <dt>
           YES24 핫이슈
          </dt>
          <dd>
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             <a href="/searchcorner/Search?keywordAd=&amp;keyword=&amp;domain=ALL&amp;qdomain=%C0%FC%C3%BC&amp;Wcode=001_005&amp;query=%C7%C3%B7%A3%C6%AE+%C6%D0%B7%AF%B5%B6%BD%BA" onclick="setWcode('001_007');" target="_self">
              <em class="bgGNB bl_dot">
               [ahref]<li>[pkeyx]</li><li>[mkey1]</li>[mkey1]<li>[keywordx]</li>
              </em>
              플랜트 패러독스
              <em class="bgGNB ico_arrD">
              </em>
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </dd>
         </dl>
        </div>
       </div>
       <hr/>
       <div class="bnAdArea" id="gnbBnWrap">
        <div class="bnAd">
         <h2 class="yBlind">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h2>
         <div id="gnbBnList">
          <div style="display:none;">
           [ahref]
           
          </div>
          <div style="display:none;">
           [linkx]
           
          </div>
          <div style="display:none;">
           [linkx]
           
          </div>
          <div style="display:none;">
           [ahref]
           
          </div>
         </div>
         <div class="bnNav">
          <span class="pagenNum">
           <strong>
            1
           </strong>
           /6
          </span>
          <button class="bgGNB prev" title="이전 광고 보기" type="button" value="이전 광고 보기">
           이전 광고 보기
          </button>
          <button class="bgGNB next" title="다음 광고 보기" type="button" value="다음 광고 보기">
           다음 광고 보기
          </button>
         </div>
        </div>
       </div>
      </div>
      <hr>
       <div class="yHeaderBot">
        <div class="quickCateZone">
         [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][linkx][keywordx][mkey1][keywordx][linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][mkey1][linkx][keywordx][ahref][mkey1][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][keywordx][mkey1][ahref]
        </div>
        <div class="yesCornerServ" id="yesFixCorner">
         <dl>
          <dt class="yBlind">
           YES24 코너/서비스
          </dt>
          <dd>
           <ul class="yesCornerLi">
            <li>
             [linkx]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li class="liBl">
             [ahref]
             
            </li>
           </ul>
           <em class="divi">
           </em>
           <ul class="yesServLi">
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
           </ul>
          </dd>
         </dl>
        </div>
        <div class="yesSubCorner">
         <dl>
          <dt class="yBlind">
           YES24 분야별코너
          </dt>
          <dd>
           <ul id="areaSubMenu">
            <li class="firstLi">
             [ahref]
             
            </li>
            <li class="">
             [linkx]
             
            </li>
            <li class="">
             [linkx]
             
            </li>
            <li class="">
             [ahref]
             
            </li>
            <li class="">
             [linkx]
             
            </li>
            <li class="commonSub" id="liSpecialBanner">
            </li>
           </ul>
          </dd>
         </dl>
        </div>
       </div>
      </hr>
     </div>
    </div>
    <hr/>
    <div id="ySkyWrap" style="">
     <div id="ySkyLft">
      <div class="wingTotArea">
       <h2 class="yBlind">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="wingSImg" id="yWingSimg">
        [linkx]
        
        <span class="wingMouseTiny timeChk3">
         마우스를 올려주세요.
        </span>
       </div>
       <div class="wingBImg" id="yWingBimg" style="width:1px;height:1px;display:none;">
        [ahref]
        
       </div>
       <div class="wingBClose" id="yWingClose" style="display:none;">
        [linkx]
        
       </div>
      </div>
      <div class="wingSuperWeek">
       <h2>
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="wingSBn" id="wingSSet">
        <span class="ywingSBnUnit" style="display:none">
         [ahref]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][keywordx][mkey1][ahref][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx][ahref][ahref][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx]<li>[linkx]</li>
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [ahref]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [ahref]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [ahref]
         
        </span>
        <span class="ywingSBnUnit" style="display:none">
         [linkx]
         
        </span>
       </div>
      </div>
     </div>
     <div id="ySkyRgt">
      <div class="yWingTopBn onlyYES" name="divWingRightOnlySale" style="display:none">
       [linkx]
       
      </div>
      <div class="yWingTopBn onlyYES" name="divWingRightOnlySale" style="display:none">
       [ahref]
       
      </div>
      <div class="yWingTopBn" name="divWingRightOnlySale" style="display:none">
       [linkx]
       
      </div>
      <div class="yWingTopBn" name="divWingRightOnlySale" style="display:none">
       [linkx]
       
      </div>
      <div class="yWingTopBn" name="divWingRightOnlySale" style="display:none">
       [linkx]
       
      </div>
      <div class="ySkyRemote">
       <h2 class="remoTit remoTop" id="remoMy">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="remoCont" id="remoMyCont" style="display:none;">
        <dl class="myAccount">
         <dt class="item item01">
          <strong>
           할인쿠폰
          </strong>
         </dt>
         <dd>
          [pkeyx]<li>[linkx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1]
         </dd>
         <dt class="item item02">
          <strong>
           YES포인트
          </strong>
         </dt>
         <dd>
          [linkx]
          
         </dd>
         <dt class="item item03">
          <strong>
           YES머니
          </strong>
         </dt>
         <dd>
          [linkx]
          
         </dd>
        </dl>
        <div class="myShortcut myShortcut_2nd">
         <ul>
          <li class="myPag">
           [ahref]
           
          </li>
          <li class="myLst">
           [linkx]
           
          </li>
          <li class="myWnl">
           [ahref]
           
          </li>
          <li class="myBsh">
           [ahref]
            [pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx]<li>[mkey1]</li>
           
          </li>
          <li class="myEln">
           [linkx]
           
          </li>
          <li class="myVod">
           [ahref]
           
          </li>
          <li class="myMov">
           [linkx]
           
          </li>
          <li class="myEnt">
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
       <h2 class="remoTit remoMid" id="remoRctG">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="remoCont" id="remoRctGCont" style="display:none;">
        <div id="ulRecentViewGoods">
        </div>
        <div class="noData" id="RecentViewGoodsNodata" style="display:none;">
         최근
         <br/>
         본 상품이
         <br/>
         없습니다.
        </div>
        <div class="skyPagen">
         [ahref]
         
         <span class="yPgNum">
          <strong>
           0
          </strong>
          /0
         </span>
         [linkx]
         
        </div>
       </div>
       <h2 class="remoTit remoBot remoBotOpen" id="remoThemG">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h2>
       <div class="remoCont" id="remoThemGCont">
        <ul class="themGLi">
         <li>
          [linkx]
          
          <p class="themName">
           [linkx]
           
          </p>
         </li>
         <li>
          [ahref]
          
          <p class="themName">
           [linkx]
           
          </p>
         </li>
        </ul>
       </div>
      </div>
      <div class="ySkyTBn">
       <h2 class="yBlind">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="ySkyTxtBn" id="ySkyTBnSet">
        <span class="ySkyTxtUnit">
         <em>
          [ahref]
          
         </em>
         <span class="ySkyTxt" style="display: none;">
          [ahref]
          
         </span>
        </span>
        <span class="ySkyTxtUnit">
         <em>
          [linkx]
          
         </em>
         <span class="ySkyTxt" style="display: none;">
          [ahref]
           [ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx][ahref][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx][linkx][linkx][pkeyx][linkx][ahref][mkey1]
          
         </span>
        </span>
        <span class="ySkyTxtUnit">
         <em>
          [ahref]
          
         </em>
         <span class="ySkyTxt" style="display: none;">
          [linkx]
          
         </span>
        </span>
        <span class="ySkyTxtUnit">
         <em>
          [linkx]
          
         </em>
         <span class="ySkyTxt" style="display: none;">
          <li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx][keywordx]
         </span>
        </span>
        <span class="ySkyTxtUnit">
         <em>
          [linkx]
          
         </em>
         <span class="ySkyTxt" style="display: none;">
          [linkx]
          
         </span>
        </span>
       </div>
      </div>
      <div class="wingChYes">
       <h2>
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="wingCYBn" id="wingChYesSet">
       </div>
      </div>
      <div class="btnSTop" id="btnScllTop" style="display:none;">
       [linkx]
       
      </div>
     </div>
    </div>
    <hr/>
    <div id="yesPartnerLayers">
     <div id="divPartnerCertification" style="position:absolute;left:191px;top:-15px;z-index:11;display:none">
      <div class="size_480" id="yCPopWrap">
       <div class="yCPopCertify certify_ing">
        <em class="bgB2b ico_certiAlert">
        </em>
        <p class="certi_txt">
         <strong>
          본인인증 처리가 이루어 지지 않았습니다.
         </strong>
         <br/>
         아이핀 인증 후 영화/공연(19세이상) 예매가 가능합니다.
        </p>
        <span class="certi_btn">
         [linkx]
         
        </span>
       </div>
       <div class="yCPopBot">
        <div class="pTxt">
         <label>
          오늘만 다시보지 않기
         </label>
        </div>
        <div class="pBtn">
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
     <div id="divPartnerInformation" style="display:none;position:absolute;left:198px;top:0;z-index:10;">
     </div>
     <div id="divPartnerBuyBookPopup" style="display:none;position:absolute;left:690px;top:0;z-index:11;">
     </div>
     <div id="divCorporateMem" style="display:none;position:absolute;left:198px;top:0;z-index:12;">
     </div>
     <div id="divCorporateMem2" style="display:none;position:absolute;left:598px;top:0;z-index:13;">
     </div>
     <div id="divCorporateMem3" style="display:none;position:absolute;left:598px;top:0;z-index:14;">
     </div>
     <div id="divNexon" style="display:none;position:absolute;left:654px;top:0;z-index:14;">
     </div>
     <div id="divB2BNotice" style="display:none;position:absolute;left:198px;top:0;z-index:14;">
     </div>
     <div class="yPartnerPop sizeTp01" id="divYes24SCMEvent" style="display:none;margin-left:0px">
      <div class="yPopCo">
      </div>
      <div class="yPopBot">
       <div class="pTxt">
        <label onclick="closeWindow_HeaderPid();">
         오늘만 다시보지 않기
        </label>
       </div>
       <div class="pBtn">
        [linkx]
        
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0321
  </b>
 </body>
</html>
|<---