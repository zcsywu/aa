--->|<!DOCTYPE html>
<html>
 <head>
  <meta charset="utf-8"/>
  <meta content="text/html;charset=utf-8" http-equiv="content-type"/>
  <meta content="en" http-equiv="content-language"/>
  <meta content="en" http-equiv="language"/>
  <meta content="en" name="language"/>
  <meta name="google" value="notranslate"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
 </head>
 <body class="languages">
  [linkx]
  
  <aside class="site-switch-toggle">
   <a class="navbar-brand" href="#" role="button">
    <span class="babla-logo">
     bab.la
    </span>
    <span class="material-icons">
     arrow_drop_down
    </span>
   </a>
  </aside>
  <nav class="navbar">
   <div class="navbar-header">
    [ahref]
    
    <button aria-expanded="false" class="navbar-toggle collapsed" data-target="#babla-navbar-collapse" data-toggle="collapse" type="button">
     <span class="sr-only">
      Toggle navigation
     </span>
     <span class="icon-bar">
     </span>
     <span class="icon-bar">
     </span>
     <span class="icon-bar">
     </span>
    </button>
   </div>
   <div class="collapse navbar-collapse" id="babla-navbar-collapse">
    <ul class="nav navbar-nav">
     <li class="active">
      [linkx]
      
     </li>
     <li>
      <a href="/conjugation/">
       Conjugation
      </a>
     </li>
     <li>
      <a href="/phrases/">
       Phrases
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li class="dropdown">
      <a aria-expanded="false" aria-haspopup="true" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button">
       More by bab.la
       <span class="material-icons">
        arrow_drop_down
       </span>
      </a>
      <ul class="dropdown-menu">
       <li>
        <a href="/quiz/">
         Quizzes
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </li>
    </ul>
    <ul class="nav navbar-nav site-switch-nav">
     <li class="languages active">
      <a alt="Dictionaries and language learning" href="/">
       Dictionaries
      </a>
     </li>
     <li class="magazine">
      [linkx]
      
     </li>
     <li class="corporate">
      <a alt="About bab.la" href="/company/">
       About bab.la
      </a>
     </li>
    </ul>
    <ul class="nav navbar-nav navbar-right">
     <li class="language-setting dropdown">
      [linkx]
      
      <ul class="dropdown-menu">
       <li class="dropdown-header">
        Website Language
       </li>
       <li>
        <a href="/bahasa-korea-bahasa-inggris/도구">
         <span class="flag id">
          id
         </span>
         Bahasa Indonesia
        </a>
       </li>
       <li>
        <a href="/朝鲜语-英语/도구">
         <span class="flag cn">
          cn
         </span>
         汉语
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/ordbog/koreansk-engelsk/도구">
         <span class="flag dk">
          da
         </span>
         Dansk
        </a>
       </li>
       <li>
        <a href="/woerterbuch/koreanisch-englisch/도구">
         <span class="flag de">
          de
         </span>
         Deutsch
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li class="active">
        <a href="/dictionary/korean-english/도구">
         <span class="flag uk-us">
          en
         </span>
         English
        </a>
       </li>
       <li>
        <a href="/diccionario/coreano-ingles/도구">
         <span class="flag es">
          es
         </span>
         Español
        </a>
       </li>
       <li>
        <a href="/dictionnaire/coreen-anglais/도구">
         <span class="flag fr">
          fr
         </span>
         Français
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/woordenboek/koreaans-engels/도구">
         <span class="flag nl">
          nl
         </span>
         Nederlands
        </a>
       </li>
       <li>
        <a href="/koreansk-engelsk/도구">
         <span class="flag no">
          no
         </span>
         Norsk
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/sanakirja/korea-englanti/도구">
         <span class="flag fi">
          fi
         </span>
         Suomi
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/korean-english/도구">
         <span class="flag th">
          th
         </span>
         ไทย
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </li>
    </ul>
   </div>
  </nav>
  <main class="main">
   <i id="scrollhelper">
   </i>
   <aside class="action-wrapper" id="fixed2">
    <div class="logo-flash" onclick='window.location.href="/"'>
     Search dictionary
    </div>
    <div class="keyboard-wrapper carousel" data-ride="carousel">
     <div class="container-fluid carousel-inner">
     </div>
    </div>
    <div class="action-panel">
     <div class="container-fluid">
      <div class="action-panel-form">
       <div class="action-panel-form-item action-panel-form-item-language">
        [content14][content15][linkx]
       </div>
       <div class="action-panel-form-item action-panel-form-item-input" id="prefetch">
        <span class="form-prefix">
         <span class="material-icons">
          search
         </span>
        </span>
        <a class="action-panel-form-clear" href="#">
         <span class="material-icons">
          cancel
         </span>
        </a>
       </div>
       <div class="action-panel-form-item action-panel-form-item-submit">
        [ahref]
        
       </div>
      </div>
     </div>
    </div>
   </aside>
   <aside class="action-links">
    <div class="container-fluid">
     <div class="dict-switch-help">
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <p>
       Did you know? All our dictionaries are bidirectional, meaning that you can look up words in both languages at the same time.
      </p>
     </div>
     <nav class="dict-select-wrapper">
      <div class="dict-select-column">
       <h4 class="dict-select-portion-header">
        Korean Dictionaries
       </h4>
       <ul>
        <li onclick="location.href='/dictionary/korean-english/'+$('#bablasearch').val()">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="dict-select-column">
       <h4 class="dict-select-portion-header">
        English Dictionaries
       </h4>
       <ul>
        <li onclick="location.href='/dictionary/english-korean/'+$('#bablasearch').val()">
         [linkx]
         
        </li>
        <li onclick="location.href='/dictionary/english-spanish/'+$('#bablasearch').val()">
         [linkx]
         
        </li>
        <li onclick="location.href='/dictionary/english-arabic/'+$('#bablasearch').val()">
         [linkx]
         
        </li>
        <li onclick="location.href='/dictionary/english-chinese/'+$('#bablasearch').val()">
         <a class="action-links-toggle" href="/dictionary/english-chinese/">
          <span class="flag uk">
           English
          </span>
          <span class="flag cn">
           Chinese
          </span>
          English – Chinese
         </a>
        </li>
        <li onclick="location.href='/dictionary/english-czech/'+$('#bablasearch').val()">
         <a class="action-links-toggle" href="/dictionary/english-czech/">
          <span class="flag uk">
           English
          </span>
          <span class="flag cz">
           Czech
          </span>
          English – Czech
         </a>
        </li>
        <div class="collapse" id="collapseDictsBlock2">
         <li onclick="location.href='/dictionary/english-danish/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-danish/">
           <span class="flag uk">
            English
           </span>
           <span class="flag dk">
            Danish
           </span>
           English – Danish
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-dutch/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/english-finnish/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/english-french/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/english-german/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/english-greek/'+$('#bablasearch').val()">
          [content7][content8][content9][content10][linkx]
         </li>
         <li onclick="location.href='/dictionary/english-hindi/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/english-hungarian/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-hungarian/">
           <span class="flag uk">
            English
           </span>
           <span class="flag hu">
            Hungarian
           </span>
           English – Hungarian
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-indonesian/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-indonesian/">
           <span class="flag uk">
            English
           </span>
           <span class="flag id">
            Indonesian
           </span>
           English – Indonesian
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-italian/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-italian/">
           <span class="flag uk">
            English
           </span>
           <span class="flag it">
            Italian
           </span>
           English – Italian
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-japanese/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/english-norwegian/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/english-polish/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-polish/">
           <span class="flag uk">
            English
           </span>
           <span class="flag pl">
            Polish
           </span>
           English – Polish
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-portuguese/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/english-romanian/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-romanian/">
           <span class="flag uk">
            English
           </span>
           <span class="flag ro">
            Romanian
           </span>
           English – Romanian
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-russian/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/english-swedish/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-swedish/">
           <span class="flag uk">
            English
           </span>
           <span class="flag se">
            Swedish
           </span>
           English – Swedish
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-swahili/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-swahili/">
           <span class="flag uk">
            English
           </span>
           <span class="flag ke">
            Swahili
           </span>
           English – Swahili
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-thai/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-thai/">
           <span class="flag uk">
            English
           </span>
           <span class="flag th">
            Thai
           </span>
           English – Thai
          </a>
         </li>
         <li onclick="location.href='/dictionary/english-turkish/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/english-vietnamese/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/english-esperanto/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/english-esperanto/">
           <span class="flag uk">
            English
           </span>
           <span class="flag eo">
            Esperanto
           </span>
           English – Esperanto
          </a>
         </li>
        </div>
        <li>
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="dict-select-column breaker-column">
       <h4 class="dict-select-portion-header">
        Other Dictionaries
       </h4>
       <ul>
        <li onclick="location.href='/dictionary/german-chinese/'+$('#bablasearch').val()">
         [ahref]
         
        </li>
        <li onclick="location.href='/dictionary/german-danish/'+$('#bablasearch').val()">
         [linkx]
         
        </li>
        <li onclick="location.href='/dictionary/german-french/'+$('#bablasearch').val()">
         [ahref]
          [keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
         
        </li>
        <li onclick="location.href='/dictionary/german-italian/'+$('#bablasearch').val()">
         [linkx]
         
        </li>
        <li onclick="location.href='/dictionary/german-dutch/'+$('#bablasearch').val()">
         <a class="action-links-toggle" href="/dictionary/german-dutch/">
          <span class="flag de">
           German
          </span>
          <span class="flag nl">
           Dutch
          </span>
          German – Dutch
         </a>
        </li>
        <div class="collapse" id="collapseDictsBlock3">
         <li onclick="location.href='/dictionary/german-polish/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/german-portuguese/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/german-russian/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/german-spanish/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/german-swedish/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/german-swedish/">
           <span class="flag de">
            German
           </span>
           <span class="flag se">
            Swedish
           </span>
           German – Swedish
          </a>
         </li>
         <li onclick="location.href='/dictionary/german-turkish/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/german-turkish/">
           <span class="flag de">
            German
           </span>
           <span class="flag tr">
            Turkish
           </span>
           German – Turkish
          </a>
         </li>
         <li onclick="location.href='/dictionary/spanish-french/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/spanish-italian/'+$('#bablasearch').val()">
          [ahref]
          
         </li>
         <li onclick="location.href='/dictionary/spanish-portuguese/'+$('#bablasearch').val()">
          <li>[link]</li>[link]<li>[link]</li>
         </li>
         <li onclick="location.href='/dictionary/italian-french/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/italian-french/">
           <span class="flag it">
            Italian
           </span>
           <span class="flag fr">
            French
           </span>
           Italian – French
          </a>
         </li>
         <li onclick="location.href='/dictionary/italian-romanian/'+$('#bablasearch').val()">
          [linkx]
          
         </li>
         <li onclick="location.href='/dictionary/polish-russian/'+$('#bablasearch').val()">
          <a class="action-links-toggle" href="/dictionary/polish-russian/">
           <span class="flag pl">
            Polish
           </span>
           <span class="flag ru">
            Russian
           </span>
           Polish – Russian
          </a>
         </li>
        </div>
        <li>
         <a aria-controls="collapseDictsBlock1" aria-expanded="false" class="more collapsed" data-toggle="collapse" href="3" role="button">
          <span class="material-icons">
           expand_more
          </span>
          More Dictionaries
         </a>
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </aside>
   <div class="page">
    <nav class="breadcrumbs-nav">
     <ol class="breadcrumb">
      <li>
       <a href="/">
        bab.la
       </a>
      </li>
      <li>
       <a href="/dictionary/">
        Dictionary
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li class="active">
       <strong>
        도구
       </strong>
      </li>
     </ol>
    </nav>
    <div class="column-wrapper">
     <div class="content-column">
      <aside class="info-panel" role="complementary">
       <div class="info-wrapper">
        <div id="div-gpt-7963713579-2">
        </div>
       </div>
      </aside>
      <div class="content">
       <div class="quick-results container">
        <div class="quick-results-header">
         <h2 class="quick-results-h2">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <div class="quick-results-h1">
          <div class="qr-flags">
           <span class="flag kr">
            KO
           </span>
          </div>
          <div class="qr-word">
           <h1>
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h1>
          </div>
         </div>
        </div>
        <div class="quick-result-entry">
         <div class="quick-result-option">
          [linkx]
          
          <a class="babQuickResult" href="1">
           도구
          </a>
          <span class="suffix">
           {noun}
          </span>
         </div>
         <div class="quick-result-overview">
          <span class="flag uk">
           EN
          </span>
          <ul class="sense-group-results">
           <li>
            <a href="/dictionary/english-korean/device" title='"device" in Korean'>
             device
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="/dictionary/english-korean/implement" title='"implement" in Korean'>
             implement<li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
            </a>
           </li>
           <li>
            <a href="/dictionary/english-korean/instrument" title='"instrument" in Korean'>
             instrument
            </a>
           </li>
           <li>
            <a href="/dictionary/english-korean/means" title='"means" in Korean'>
             means
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="quick-result-entry">
         <div class="toc-links-header">
          <h5>
           More information
          </h5>
         </div>
         <div class="toc-links">
          <ul>
           <li>
            <a class="scroll-link babQuickResult" href="1" onclick="babTE('c','cnm','atrans');">
             Translations &amp; Examples
            </a>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
      <div class="content" id="translationsdetails1" name="translationsdetails1">
       <div class="result-block container">
        <span class="section-label">
         Translations &amp; Examples
        </span>
        <div class="result-block-header">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
        </div>
        <div class="sense-group">
         <div class="dict-entry">
          [content2][content3][linkx][content4][linkx][content5][content6]
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             <a href="/dictionary/korean-english/기계-장치" title='"기계 장치" in English'>
              기계 장치
             </a>
             ,
             [linkx]
             
             )
            </span>
           </div>
           <div class="dict-result">
            [linkx]
            
            [linkx]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             [ahref]
             
             ,
             [ahref]
             
             )
            </span>
           </div>
           <div class="dict-result">
            <a class="sound" href=";">
             <div class="material-icons">
              volume_up
             </div>
            </a>
            <a href="/dictionary/english-korean/gear" title='"gear" in Korean'>
             <strong>
              gear
             </strong>
            </a>
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             [ahref]
             
             ,
             [ahref]
             
             )
            </span>
           </div>
           <div class="dict-result">
            [linkx]
            
            [ahref]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          [content14][content15][content16][linkx][content17][content18]
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             [linkx]
             
             ,
             <a href="/dictionary/korean-english/수단" title='"수단" in English'>
              수단
             </a>
             ,
             <a href="/dictionary/korean-english/매개" title='"매개" in English'>
              매개
             </a>
             )
            </span>
           </div>
           <div class="dict-result">
            [ahref]
            
            [ahref]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             [ahref]
             
             ,
             [linkx]
             
             )
            </span>
           </div>
           <div class="dict-result">
            <a class="sound" href=";">
             <div class="material-icons">
              volume_up
             </div>
            </a>
            [linkx]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
           </div>
           <div class="dict-result">
            [ahref]
            
            [linkx]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             <a href="/dictionary/korean-english/연장" title='"연장" in English'>
              연장
             </a>
             ,
             <a href="/dictionary/korean-english/도르래-장치" title='"도르래 장치" in English'>
              도르래 장치
             </a>
             )
            </span>
           </div>
           <div class="dict-result">
            [ahref]
            
            [linkx]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
         <div class="dict-entry">
          <div class="dict-translation">
           <div class="dict-source">
            <strong>
             도구
            </strong>
            <span class="suffix">
             (also:
             [ahref]
             
             )
            </span>
           </div>
           <div class="dict-result">
            [linkx]
            
            [ahref]
            
            <span class="suffix" title="noun">
             {noun}
            </span>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="content" id="similarWords" name="similarWords">
       <div class="quick-results container">
        <div class="quick-results-header">
         <h4 class="section-label">
          More by bab.la
         </h4>
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
        </div>
        <div class="quick-result-entry">
         <div class="quick-result-overview" style="width:100%">
          <span class="flag kr">
           Korean
          </span>
          <ul class="sense-group-results">
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="다" title='"데치다" in English'>
             데치다
            </a>
           </li>
           <li>
            <a href="램" title='"데카그램" in English'>
             데카그램
            </a>
           </li>
           <li>
            <a href="곱" title='"데카르트 곱" in English'>
             데카르트 곱
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="도" title='"도" in English'>
             도
            </a>
           </li>
           <li>
            <a href="니" title='"도가니" in English'>
             도가니
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="관" title='"도관" in English'>
             도관
            </a>
           </li>
           <li>
            <b>
             도구
            </b>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="자" title='"도급업자" in English'>
             도급업자
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="템" title='"도난 경보 시스템" in English'>
             도난 경보 시스템
            </a>
           </li>
           <li>
            <a href="종" title='"도넛형 딱딱한 빵의 일종" in English'>
             도넛형 딱딱한 빵의 일종[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]<li>[link]</li>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="가" title='"도덕가" in English'>
             도덕가
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
          <br/>
          <p>
           Have a look at the English-
           <a class="muted-link" href="/dictionary/english-vietnamese/">
            Vietnamese dictionary
           </a>
           by bab.la.
          </p>
         </div>
        </div>
       </div>
      </div>
      <div class="modal fade in" id="csFlagResponse" role="dialog" tabindex="-1">
       <div class="modal-dialog" role="document">
        <div class="modal-content">
         <div class="modal-header">
          <h4 class="modal-title">
           <span class="material-icons">
            comment
           </span>
           Request revision
          </h4>
         </div>
         <div class="modal-body cs-thanks-body">
          <p class="cs-thanks-message">
          </p>
          <button class="btn btn-default" data-dismiss="modal" type="button">
           Close
          </button>
         </div>
        </div>
       </div>
      </div>
      <div class="teaser-wrapper">
       <div class="teaser ad" style="text-align:center">
        <aside class="info-panel" role="complementary" style="margin:auto">
         <div class="info-wrapper">
          <div id="div-gpt-7963713579-1">
          </div>
         </div>
        </aside>
       </div>
       <div class="teaser languages">
        <div class="content">
         <a class="container" href="/games/hangman" onclick="babTE('c','dtb','hm');">
          <span class="section-label">
           Hangman
          </span>
          <span class="teaser-image" style="background-image:url('//static.bab.la/img/teasers/teaser-hangman.jpg') !important;">
          </span>
          <span class="teaser-header">
           Hangman
          </span>
          <span class="teaser-text">
           Fancy a game? Or learning new words is more your thing? Why not have a go at them together!
          </span>
          <span class="teaser-eyecatcher">
           Play now
           <span class="material-icons">
            
           </span>
          </span>
         </a>
        </div>
       </div>
      </div>
      <div class="teaser-wrapper">
       <div class="teaser magazine">
        <div class="content">
         <a class="container" href="/living-abroad/" onclick="babTE('c','dtb','la');">
          <span class="section-label">
           Living abroad
          </span>
          <span class="teaser-image" style="background-image:url('//static.bab.la/img/teasers/teaser-living-abroad.jpg')">
          </span>
          <span class="teaser-header">
           Tips and Hacks for Living Abroad
          </span>
          <span class="teaser-text">
           Everything you need to know about life in a foreign country.
          </span>
          <span class="teaser-eyecatcher">
           <li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
          </span>
         </a>
        </div>
       </div>
       <div class="teaser languages">
        <div class="content">
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="site-footer">
       <div class="container">
        <nav class="social-links">
         <h5>
          Let's stay in touch
         </h5>
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a class="twitter" href="/babla" target="_blank">
            <span class="fa fa-twitter">
            </span>
            <span class="h-label">
            </span>
           </a>
          </li>
         </ul>
        </nav>
        <div class="footer-nav-wrapper">
         <nav class="footer-nav">
          <div class="footer-nav-block">
           <h5 class="footer-nav-header">
            Dictionaries
           </h5>
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             <a href="/quiz/">
              Quizzes
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="footer-nav-block">
           <h5 class="footer-nav-header">
            Living abroad
           </h5>
           <ul>
            <li>
             <a href="/living-abroad/">
              Magazine
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="footer-nav-block">
           [content2[linkx]content3[linkx]content4[linkx]content5]
          </div>
         </nav>
        </div>
        <footer role="contentinfo">
         <div class="col-sm-8">
          <p>
           Copyright © bab.la, unless otherwise noted.
           <span class="rights">
            All rights reserved.
           </span>
          </p>
          <nav class="legal-nav">
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             <a href="/company/privacy-policy">
              Privacy Policy
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </nav>
         </div>
         <div class="col-sm-4">
         </div>
        </footer>
       </div>
      </div>
      <aside class="back-to-top" style="display:none;">
       [linkx]
       
      </aside>
     </div>
     <aside class="info-column scroll-to-fixed-fixed" id="fixed" role="complementary">
      <div class="info-wrapper">
       <div id="div-gpt-7963713579-3">
       </div>
      </div>
     </aside>
    </div>
   </div>
  </main>
  [ahref]
  
  <div id="div-gpt-7963713579-4">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0401
  </b>
 </body>
</html>
|<---