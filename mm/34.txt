--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/0/0e/Milk_glass.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-우유 rootpage-우유 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   <a id="top">
   </a>
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키낱말사전, 말과 글의 누리
    </div>
    <div id="contentSub">
     [area1][keywordx][ahref][area1][mkey1][area1][keywordx][ahref]
    </div>
    <div id="jump-to-nav">
    </div>
    [linkx]
    
    <a class="mw-jump-link" href="h">
     검색하러 가기
    </a>
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <h2>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <div class="thumb tright">
       <div class="thumbinner" style="width:152px;">
        <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Milk_glass.jpg">
        </a>
        <div class="thumbcaption">
         <div class="magnify">
          [ahref]
          
         </div>
         우유
        </div>
       </div>
      </div>
      <dl>
       <dd>
        <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
         [ahref]
         
        </span>
        <span style="color: #000; font-size: 100%;">
         <span class="IPA">
          <a href="/wiki/%EB%8F%84%EC%9B%80%EB%A7%90:IPA_%EB%B0%9C%EC%9D%8C_%EB%93%A3%EA%B8%B0" title="도움말:IPA 발음 듣기">
           <span class="IPA">
            /uju/
           </span>
          </a>
         </span>
        </span>
       </dd>
      </dl>
      <dd>
       <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
        발음
       </span>
       [
       <span style="font-size:110%">
        우
       </span>
       <span style="font-size:110%">
        유
       </span>
       ]
      </dd>
      <table style="margin: 0 1em .5em 1.6em;">
       <tbody>
        <tr>
         <td>
          <table cellpadding="1" style="border: 1px solid #DFDFDF; line-height: 9pt; padding: .1em .3em .1em .3em">
           <tbody>
            <tr>
             <td id="subheadline" style="padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [linkx]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               Revised Romanization
              </span>
             </td>
             <td class="IPA" id="subheadline" style="padding: .1em .5em; font-size: 100%;">
              uyu
             </td>
            </tr>
            <tr>
             <td id="subheadline" style="border-bottom: 1px solid #FFF; padding: .4em .5em .2em .5em; font-size: 100%;">
              [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][ahref][area1][keywordx][pkeyx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
             </td>
             <td class="IPA" id="subheadline" style="border-bottom: 1px solid #FFF; padding: .1em .5em; font-size: 100%;">
              uyu
             </td>
            </tr>
            <tr>
             <td id="subheadline" style="padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [ahref]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               Yale Romanization
              </span>
             </td>
             <td class="IPA" id="subheadline" style="padding: .1em .5em; font-size: 100%;">
              wuyu
             </td>
            </tr>
            <tr class="mw-empty-elt">
            </tr>
           </tbody>
          </table>
         </td>
        </tr>
       </tbody>
      </table>
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>[pkeyx]
      </h3>
      <ul>
       <li>
        어원: 한자
        <a href="/wiki/%E7%89%9B%E4%B9%B3" title="牛乳">
         牛乳
        </a>
       </li>
       <li>
        <b>
         1.
        </b>
        암소의 젖. 흔히 어린아이나 사람이 마시도록 생산 가공한 암소의 젖.
       </li>
      </ul>
      <dl>
       <dd>
        <ul>
         <li>
          칭얼대는 아이에게 우유를 먹여 잠을 재운 뒤 창가로 와서 섰다.
         </li>
        </ul>
       </dd>
      </dl>
      <ul>
       <li>
        유의어:
        [linkx]
        
        ,
        [linkx]
        
       </li>
      </ul>
      <div class="NavFrame" style="clear: both; margin: .5em 0 1em 2em;">
       <div class="NavHead" style="border-bottom: 1.2px solid #c0c0c0; text-align: left; line-height: 18pt; background-color: transparent; font-size: 100%;">
        <b>
         번역
        </b>
       </div>
       <div class="NavContent">
        <table border="0" style="padding: 3px; background-color: #f5f5f5;" width="100%">
         <tbody>
          <tr>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              가가우스어(gag):
              [ahref]
              
             </li>
             <li>
              갈리시아어(gl):
              <a href="/wiki/leite" title="leite">
               leite
              </a>
              (남성)
             </li>
             <li>
              고대교회슬라브어(cu):
              <a href="/wiki/%D0%BC%D0%BB%D1%A3%D0%BA%D0%BE" title="млѣко">
               млѣко
              </a>
              (키릴)/
              <a href="/wiki/%E2%B0%8F%E2%B0%8E%E2%B0%A1%E2%B0%8D%E2%B0%91" title="ⰏⰎⰡⰍⰑ">
               ⰏⰎⰡⰍⰑ
              </a>
              (글라골 문자)(mlěko) (중성)
             </li>
             <li>
              고대영어(ang):
              [linkx]
               [linkx]<li>[pkeyx]</li>[pkeyx]
              
              (여성)
             </li>
             <li>
              고트어(got):
              <a class="new" href="/w/index.php?title=miluks&amp;action=edit&amp;redlink=1" title="miluks (없는 문서)">
               miluks
              </a>
             </li>
             <li>
              구자라트어(gu):
              [linkx]
              
              (dūdh)
             </li>
             <li>
              과라니어(gn):
              <a class="new" href="/w/index.php?title=kamby&amp;action=edit&amp;redlink=1" title="kamby (없는 문서)">
               kamby
              </a>
             </li>
             <li>
              <li>[linkx]</li>[linkx]<li>[area1][keywordx]</li>[ahref]
             </li>
             <li>
              그리스어(el):
              [ahref]
              
              (ɣála) (중성)
             </li>
             <li>
              그린란드어(kl):
              <a href="/wiki/immuk" title="immuk">
               immuk
              </a>
             </li>
             <li>
              나나이어(gld):
              <a href="/wiki/%D0%BC%D0%BE%D0%BB%D0%BE%D0%BA%D0%BE" title="молоко">
               молоко
              </a>
             </li>
             <li>
              나바호어(nv):
              <a href="/wiki/abe%27" title="abe'">
               abe'
              </a>
             </li>
             <li>
              나와틀어(nah):
              <a href="/wiki/chichihualayotl" title="chichihualayotl">
               chichihualayotl
              </a>
             </li>
             <li>
              나폴리어(nap):
              <a href="/wiki/latte" title="latte">
               latte
              </a>
             </li>
             <li>
              네네츠어(yrk):
              [ahref]
              
              ;
              <a href="/wiki/%D3%88%D0%B0%D0%BC%D1%8F%D0%BD%D0%B4%D0%B5%D1%80%E2%80%99" title="ӈамяндер’">
               ӈамяндер’
              </a>
              ;
              <a class="new" href="/w/index.php?title=%D3%88%D0%B0%D0%BC%D1%8F_%D0%B8%E2%80%99&amp;action=edit&amp;redlink=1" title="ӈамя и’ (없는 문서)">
               ӈамя и’
              </a>
             </li>
             <li>
              네덜란드어(nl):
              <a href="/wiki/melk" title="melk">
               melk
              </a>
              (여성)
             </li>
             <li>
              노르웨이어(no):
              [ahref]
              
              , (뉘노르스크);
              [ahref]
              
             </li>
             <li>
              노비알(nov):
              [ahref]
              
             </li>
             <li>
              [area1][keywordx][area1][keywordx]<li>[area1][keywordx]</li>[ahref]
             </li>
             <li>
              다리어(prs):
              [linkx]
              
              (šīr)
             </li>
             <li>
              덴마크어(da):
              <a href="/wiki/m%C3%A6lk" title="mælk">
               mælk
              </a>
             </li>
             <li>
              독일어(de):
              <a href="/wiki/Milch" title="Milch">
               Milch
              </a>
              (여성)
             </li>
             <li>
              디베히어(dv):
              [ahref]
              
              (kiru)
             </li>
             <li>
              라디노어(lad):
              <a href="/wiki/leche" title="leche">
               leche
              </a>
              (라틴)/
              [linkx]
              
              (히브리 문자)
             </li>
             <li>
              라오어(lo):
              <a class="new" href="/w/index.php?title=%E0%BA%99%E0%BB%89%E0%BA%B3%E0%BA%99%E0%BA%BB%E0%BA%A1&amp;action=edit&amp;redlink=1" title="ນ້ຳນົມ (없는 문서)">
               ນ້ຳນົມ
              </a>
              (nam-nom)
             </li>
             <li>
              라크어(lbe):
              <a href="/wiki/%D0%BD%D0%B0%D0%BA%D3%80" title="накӀ">
               накӀ
              </a>
             </li>
             <li>
              라트비아어(lv):
              [ahref]
              
              (남성)
             </li>
             <li>
              라틴어(la):
              <a href="/wiki/lac" title="lac">
               lac
              </a>
              (중성)
             </li>
             <li>
              레즈긴어(lez):
              <a href="/wiki/%D0%BD%D0%B5%D0%BA" title="нек">
               нек
              </a>
             </li>
             <li>
              러시아어(ru):
              [linkx]
              
              (molokó) (중성)
             </li>
             <li>
              로마니어(rom):
              [ahref]
              
              (키릴)/
              [ahref]
              
              (라틴)
             </li>
             <li>
              로망슈어(rm):
              [linkx]
              
              (남성)
             </li>
             <li>
              로힝야어(rhg):
              <a href="/wiki/dut" title="dut">
               dut
              </a>
             </li>
             <li>
              롬바르드어(lmo):
              <a class="new" href="/w/index.php?title=latt&amp;action=edit&amp;redlink=1" title="latt (없는 문서)">
               latt
              </a>
              ;
              [ahref]
              
             </li>
             <li>
              루마니아어(ro):
              [linkx]
              
              (남성)
             </li>
             <li>
              룩셈부르크어(lb):
              [linkx]
              
             </li>
             <li>
              리투아니아어(lt):
              <a href="/wiki/pienas" title="pienas">
               pienas
              </a>
              (남성)
             </li>
             <li>
              림뷔르흐어(li):
              [linkx]
              
             </li>
             <li>
              링갈라어(ln):
              [ahref]
              
              ;
              <a class="new" href="/w/index.php?title=mabele&amp;action=edit&amp;redlink=1" title="mabele (없는 문서)">
               mabele
              </a>
             </li>
             <li>
              마라티어(mr):
              <a href="/wiki/%E0%A4%A6%E0%A5%82%E0%A4%A7" title="दूध">
               दूध
              </a>
             </li>
             <li>
              마리어(chm):
              [linkx]
               [linkx][pkeyx][pkeyx][linkx][area1][mkey1][area1][keywordx][pkeyx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][ahref][linkx][area1][keywordx]
              
             </li>
             <li>
              마사이어(mas):
              [ahref]
              
             </li>
             <li>
              마오리어(mi):
              <a href="/wiki/wai%C5%AB" title="waiū">
               waiū
              </a>
              ,
              <a class="new" href="/w/index.php?title=miraka&amp;action=edit&amp;redlink=1" title="miraka (없는 문서)">
               miraka
              </a>
             </li>
             <li>
              마케도니아어(mk):
              [ahref]
              
              (중성)
             </li>
             <li>
              말라가시어(mg):
              [ahref]
              
             </li>
             <li>
              말라얄람어(ml):
              <a class="new" href="/w/index.php?title=%E0%B4%AA%E0%B4%BE%E0%B4%B2%E0%B5%8D%E2%80%8D&amp;action=edit&amp;redlink=1" title="പാല്‍ (없는 문서)">
               പാല്‍
              </a>
              (pāl)
             </li>
             <li>
              말레이어(ms):
              <a class="new" href="/w/index.php?title=susu&amp;action=edit&amp;redlink=1" title="susu (없는 문서)">
               susu
              </a>
             </li>
             <li>
              맨어(gv):
              <a class="new" href="/w/index.php?title=bainney&amp;action=edit&amp;redlink=1" title="bainney (없는 문서)">
               bainney
              </a>
             </li>
             <li>
              모크샤어(mdf):
              <a href="/wiki/%D0%BB%D0%BE%D1%84%D1%86%D0%B0" title="лофца">
               лофца
              </a>
             </li>
             <[area1][keywordx]>
             </[area1][keywordx]>
             <li>
              몰타어(mt):
              [ahref]
              
              (남성)
             </li>
             <li>
              몽골어(mn):
              [ahref]
              
              (süü)
             </li>
             <li>
              미얀마어(my):
              [linkx]
              
             </li>
             <li>
              바슈키르어(ba):
              <a href="/wiki/%D2%BB%D3%A9%D1%82" title="һөт">
               һөт
              </a>
             </li>
             <li>
              바스크어(eu):
              <a class="new" href="/w/index.php?title=esne&amp;action=edit&amp;redlink=1" title="esne (없는 문서)">
               esne
              </a>
             </li>
             <li>
              밤바라어(bm):
              <a href="/wiki/n%C9%94n%C9%94" title="nɔnɔ">
               nɔnɔ
              </a>
             </li>
             <li>
              베트남어(vi):
              <a href="/wiki/s%E1%BB%AFa" title="sữa">
               sữa
              </a>
             </li>
             <li>
              벨라루스어(be):
              [ahref]
              
              (중성)
             </li>
             <li>
              벰바어(bem):
              <a class="new" href="/w/index.php?title=umukaka&amp;action=edit&amp;redlink=1" title="umukaka (없는 문서)">
               umukaka
              </a>
             </li>
             <li>
              벱스어(vep):
              <a href="/wiki/maid" title="maid">
               maid
              </a>
             </li>
             <li>
              벵골어(bn):
              [linkx]
              
              (dudʰ)
             </li>
             <li>
              보로어(fiu-vro):
              <a href="/wiki/piim" title="piim">
               piim
              </a>
             </li>
             <li>
              보스니아어(bs):
              <a href="/wiki/mlijeko" title="mlijeko">
               mlijeko
              </a>
             </li>
             <li>
              볼라퓌크(vo):
              [linkx]
              
             </li>
             <li>
              부랴트어(bua):
              [ahref]
              
             </li>
             <li>
              북부사미어(se):
              [linkx]
              
             </li>
             <li>
              불가리아어(bg):
              <a href="/wiki/%D0%BC%D0%BB%D1%8F%D0%BA%D0%BE" title="мляко">
               мляко
              </a>
              (mljáko) (중성)
             </li>
             <li>
              브레통어(br):
              <a class="new" href="/w/index.php?title=laezh&amp;action=edit&amp;redlink=1" title="laezh (없는 문서)">
               laezh
              </a>
              (남성)
             </li>
             <li>
              사르데냐어(sc):
              <a href="/wiki/late" title="late">
               late
              </a>
             </li>
             <li>
              사모기트어(bat-smg):
              <a href="/wiki/p%C4%97ins" title="pėins">
               pėins
              </a>
             </li>
             <li>
              사모아어(sm):
              [linkx]
              
             </li>
             <li>
              산스크리트어(sa):
              <a class="new" href="/w/index.php?title=%E0%A4%A6%E0%A5%81%E0%A4%97%E0%A5%8D%E0%A4%A7&amp;action=edit&amp;redlink=1" title="दुग्ध (없는 문서)">
               दुग्ध
              </a>
              (dugdh),
              [ahref]
              
              (kšīr),
              <a href="/wiki/%E0%A4%AA%E0%A4%AF%E0%A4%B8%E0%A4%83" title="पयसः">
               पयसः
              </a>
             </li>
             <li>
              산탈어(sat):
              [ahref]
              
              (toa)
             </li>
             <li>
              상소르브어(hsb):
              <a href="/wiki/mloko" title="mloko">
               mloko
              </a>
              (중성)
             </li>
             <li>
              샤이엔어(chy):
              <a href="/wiki/matana" title="matana">
               matana
              </a>
             </li>
             <li>
              세르보크로아트어(sh): (키릴);
              [linkx]
              
              (중성, 에카비아 방언),
              <a href="/wiki/%D0%BC%D0%BB%D0%B8%D1%98%D0%B5%D0%BA%D0%BE" title="млијеко">
               млије́ко
              </a>
              (중성, 이예카비아 방언), (라틴);
              <a href="/wiki/mleko" title="mleko">
               mléko
              </a>
              (중성, 에카비아 방언),
              [linkx]
              
              (중성, 이예카비아 방언)
             </li>
             <li>
              세부아노어(ceb):
              [ahref]
              
             </li>
             <li>
              세르비아어(sr):
              <a href="/wiki/%D0%BC%D0%BB%D0%B5%D0%BA%D0%BE" title="млеко">
               млеко
              </a>
              (키릴)/
              <a href="/wiki/mleko" title="mleko">
               mleko
              </a>
              (라틴)
             </li>
             <li>
              셰르파어(xsr):
              <a href="/wiki/%E0%A4%93%E0%A4%AE%E0%A4%BE" title="ओमा">
               ओमा
              </a>
              (omā)
             </li>
             <li>
              서프리지아어(fy):
              <a class="new" href="/w/index.php?title=molke&amp;action=edit&amp;redlink=1" title="molke (없는 문서)">
               molke
              </a>
              (여성)
             </li>
             <li>
              소말리어(so):
              <a href="/wiki/caano" title="caano">
               caano
              </a>
             </li>
             <li>
              소토어(st):
              [linkx]
              
             </li>
             <li>
              쇼나어(sn):
              [ahref]
              
             </li>
             <li>
              스라난통고어(srn):
              [ahref]
              
             </li>
             <li>
              스와티어(ss):
              <a href="/wiki/l%C3%BA-b%C3%AEsi" title="lú-bîsi">
               lú-bîsi
              </a>
             </li>
             <li>
              스와힐리어(sw):
              [linkx]
              
             </li>
             <li>
              스웨덴어(sv):
              [linkx]
              
             </li>
             <li>
              스코트어(sco):
              <a href="/wiki/milk" title="milk">
               milk
              </a>
             </li>
             <li>
              스코틀랜드게일어(gd):
              [ahref]
              
              (남성)
             </li>
             <li>
              슬로바키아어(sk):
              <a class="new" href="/w/index.php?title=mlieko&amp;action=edit&amp;redlink=1" title="mlieko (없는 문서)">
               mlieko
              </a>
              (중성)
             </li>
             <li>
              슬로베니아어(sl):
              [ahref]
              
              (중성)
             </li>
             <li>
              시칠리아어(scn):
              [linkx]
              
              (남성)
             </li>
             <li>
              신드어(sd):
              <a class="new" href="/w/index.php?title=%D8%B4%D9%8A%D8%B1&amp;action=edit&amp;redlink=1" title="شير (없는 문서)">
               شير
              </a>
              (šīru)
             </li>
             <li>
              신할라어(si):
              [ahref]
              
              (kiri)
             </li>
             <li>
              실레지아어(szl):
              [ahref]
              
             </li>
             <li>
              아람어(arc):
              [linkx]
              
              (시리아)/
              [linkx]
              
              (히브리 문자)(ħalbā’) (남성)
             </li>
             <li>
              아디게이어(ady):
              <a href="/wiki/%D1%89%D1%8D" title="щэ">
               щэ
              </a>
             </li>
             <li>
              아라곤어(an):
              [ahref]
              
             </li>
             <li>
              아람어(arc):
              [linkx]
              
              (ḥalṿā)
             </li>
             <li>
              아랍어(ar):
              [linkx]
              
              (ħalīb) (남성),
              [linkx]
              
              (lában) (남성)
             </li>
             <li>
              아르메니아어(hy):
              [linkx]
              
              (kat’)
             </li>
             <li>
              아바르어(av):
              [linkx]
              
             </li>
             <li>
              아바자어(abq):
              [linkx]
              
             </li>
             <li>
              아삼어(asm):
              [linkx]
              
              (dugdʰô)
             </li>
             <li>
              아스투리아스어(ast):
              [ahref]
              
              (남성, 여성)
             </li>
             <li>
              아이누어(ain):
              <a href="/wiki/%E3%83%88%E3%83%9A" title="トペ">
               トペ
              </a>
              (가타카나)/
              [ahref]
              
              (라틴)
             </li>
             <li>
              아이마라어(ay):
              <a href="/wiki/millk%E2%80%99i" title="millk’i">
               millk’i
              </a>
             </li>
             <li>
              아이슬란드어(is):
              [ahref]
              
              (여성)
             </li>
             <li>
              아이티크레올어(ht):
              [ahref]
              
             </li>
             <li>
              아일랜드어(ga):
              [linkx]
              
              (남성)
             </li>
             <li>
              아제르바이잔어(az):
              [linkx]
              
             </li>
             <li>
              아프리칸스어(af):
              <a href="/wiki/melk" title="melk">
               melk
              </a>
             </li>
             <li>
              알레만어(als):
              [linkx]
              
             </li>
             <li>
              알루토르어(alr):
              <a href="/wiki/%D0%BB%D1%8E%D0%BA%27%D1%8D" title="люк'э">
               люк'э
              </a>
             </li>
             <li>
              알바니아어(sq):
              <a href="/wiki/qum%C3%ABsht" title="qumësht">
               qumësht
              </a>
              (남성)
             </li>
             <li>
              알타이어(alt):
              <a href="/wiki/%D1%81%D3%B1%D1%82" title="сӱт">
               сӱт
              </a>
             </li>
             <li>
              암하라어(am):
              [linkx]
              
             </li>
             <li>
              압하스어(ab):
              [linkx]
              
             </li>
             <li>
              앨라배마어(akz):
              <a class="new" href="/w/index.php?title=pisi&amp;action=edit&amp;redlink=1" title="pisi (없는 문서)">
               pisi
              </a>
             </li>
             <li>
              야쿠트어(sah):
              <a href="/wiki/%D2%AF%D2%AF%D1%82" title="үүт">
               үүт
              </a>
             </li>
             <li>
              에르자어(myv):
              [linkx]
              
              (lovso)
             </li>
             <li>
              에벤어(eve):
              [linkx]
              
             </li>
             <li>
              에벤키어(evn):
              [linkx]
              
             </li>
             <li>
              에스토니아어(et):
              [ahref]
              
             </li>
             <li>
              스페인어(es):
              <a href="/wiki/leche" title="leche">
               leche
              </a>
              (여성)
             </li>
            </ul>
           </td>
           <td style="width:1%;" valign="top">
           </td>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              에스페란토(eo):
              [ahref]
              
             </li>
             <li>
              에웨어(ee):
              [ahref]
              
             </li>
             <li>
              <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]<li>[pkeyx]</li><li>[area1][mkey1]</li>
             </li>
             <li>
              오세티야어(os):
              [linkx]
              
             </li>
             <li>
              오크어(oc):
              [linkx]
              
              (남성),
              [linkx]
              
              (여성)
             </li>
             <li>
              요루바어(yo):
              <a class="new" href="/w/index.php?title=w%C3%A0r%C3%A0&amp;action=edit&amp;redlink=1" title="wàrà (없는 문서)">
               wàrà
              </a>
             </li>
             <li>
              우드무르트어(udm):
              [linkx]
              
             </li>
             <li>
              우르두어(ur):
              <a href="/wiki/%D8%AF%D9%88%D8%AF%DA%BE" title="دودھ">
               دودھ
              </a>
              (dūdh) (남성)
             </li>
             <li>
              우즈베크어(uz):
              <a href="/wiki/sut" title="sut">
               sut
              </a>
             </li>
             <li>
              우크라이나어(uk):
              <a href="/wiki/%D0%BC%D0%BE%D0%BB%D0%BE%D0%BA%D0%BE" title="молоко">
               молоко
              </a>
             </li>
             <li>
              유카테코어(yua):
              <a class="new" href="/w/index.php?title=k%E2%80%99aab_liim&amp;action=edit&amp;redlink=1" title="k’aab liim (없는 문서)">
               k’aab liim
              </a>
             </li>
             <li>
              와라이어(war):
              [ahref]
              
             </li>
             <li>
              왈론어(wa):
              [ahref]
              
              ;
              <a class="new" href="/w/index.php?title=laecea&amp;action=edit&amp;redlink=1" title="laecea (없는 문서)">
               laecea
              </a>
             </li>
             <li>
              웨일스어(cy):
              [ahref]
              
             </li>
             <li>
              월로프어(wo):
              <a href="/wiki/meew" title="meew">
               meew
              </a>
             </li>
             <li>
              위구르어(ug):
              [ahref]
              
              (키릴)/
              <a href="/wiki/s%C3%BCt" title="süt">
               süt
              </a>
              (라틴)/
              [linkx]
              
              (아랍 문자)
             </li>
             <li>
              이누이트어(iu):
              [linkx]
              
             </li>
             <li>
              이누피아크어(ik):
              <a href="/wiki/immuk" title="immuk">
               immuk
              </a>
             </li>
             <li>
              이도(io):
              [ahref]
              
             </li>
             <li>
              이디시어(yi):
              [linkx]
              
              (milkh) (여성)
             </li>
             <li>
              이탈리아어(it):
              <a href="/wiki/latte" title="latte">
               latte
              </a>
              (남성)
             </li>
             <li>
              인도네시아어(id):
              <a class="new" href="/w/index.php?title=susu&amp;action=edit&amp;redlink=1" title="susu (없는 문서)">
               susu
              </a>
             </li>
             <li>
              인터링구아(ia):
              [linkx]
              
             </li>
             <li>
              일본어(ja):
              <span class="lang-ja" lang="ja">
               <li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </span>
              (gyūnyū),
              <span class="lang-ja" lang="ja">
               <a href="/wiki/%E3%83%9F%E3%83%AB%E3%82%AF" title="ミルク">
                ミルク
               </a>
              </span>
              (miruku)
             </li>
             <li>
              잉구쉬어(inh):
              <a href="/wiki/%D1%88%D1%83%D1%80%D0%B0" title="шура">
               шура
              </a>
             </li>
             <li>
              자자키어(zza):
              [linkx]
              
             </li>
             <li>
              저지색슨어(nds):
              <a class="new" href="/w/index.php?title=Melk&amp;action=edit&amp;redlink=1" title="Melk (없는 문서)">
               Melk
              </a>
             </li>
             <li>
              줄루어(zu):
              <a class="new" href="/w/index.php?title=ubisi&amp;action=edit&amp;redlink=1" title="ubisi (없는 문서)">
               ubisi
              </a>
             </li>
             <li>
              중국어(zh):
              [ahref]
              
              (nǎi(표준어), naai5(광둥어)),
              [linkx]
              
              (niúnăi)
             </li>
             <li>
              차모로어(ch):
              <a href="/wiki/leche" title="leche">
               leche
              </a>
             </li>
             <li>
              차미쿠로어(ccc):
              [ahref]
              
             </li>
             <li>
              체로키어(chr):
              <a class="new" href="/w/index.php?title=%E1%8E%A4%E1%8F%85%E1%8F%97&amp;action=edit&amp;redlink=1" title="ᎤᏅᏗ (없는 문서)">
               ᎤᏅᏗ
              </a>
              (unvdi)
             </li>
             <li>
              체첸어(ce):
              <a href="/wiki/%D1%88%D1%83%D1%80%D0%B0" title="шура">
               шура
              </a>
             </li>
             <li>
              체코어(cs):
              [ahref]
              
              (중성)
             </li>
             <li>
              추바슈어(cv):
              <a class="new" href="/w/index.php?title=%D1%81%D3%97%D1%82&amp;action=edit&amp;redlink=1" title="сӗт (없는 문서)">
               сӗт
              </a>
             </li>
             <li>
              <li>[ahref]</li><li>[linkx]</li><li>[ahref]</li>
             </li>
             <li>
              츠와나어(tn):
              [linkx]
              
              (
              <a class="new" href="/w/index.php?title=ma%C5%A1i&amp;action=edit&amp;redlink=1" title="maši (없는 문서)">
               maši
              </a>
              )
             </li>
             <li>
              카라차이발카르어(krc):
              [ahref]
              
             </li>
             <li>
              카라칼파크어(kaa):
              <a href="/wiki/su%CA%BBt" title="suʻt">
               suʻt
              </a>
             </li>
             <li>
              카렐리야어(krl):
              <a href="/wiki/maido" title="maido">
               maido
              </a>
             </li>
             <li>
              카바르딘어(kbd):
              [ahref]
              
             </li>
             <li>
              카슈미르어(ks):
              [ahref]
              
             </li>
             <li>
              카슈브어(csb):
              <a href="/wiki/ml%C3%A9k%C3%B2" title="mlékò">
               mlékò
              </a>
             </li>
             <li>
              카자흐어(kk):
              <a href="/wiki/%D1%81%D2%AF%D1%82" title="сүт">
               сүт
              </a>
             </li>
             <li>
              카탈루냐어(ca):
              [linkx]
              
              (여성)
             </li>
             <li>
              칸나다어(kn):
              [linkx]
              
              (hālu);
              <a class="new" href="/w/index.php?title=%E0%B2%95%E0%B3%8D%E0%B2%B7%E0%B3%80%E0%B2%B0&amp;action=edit&amp;redlink=1" title="ಕ್ಷೀರ (없는 문서)">
               ಕ್ಷೀರ
              </a>
              (kṣīra)
             </li>
             <li>
              칼미크어(xal):
              [linkx]
              
             </li>
             <li>
              케추아어(qu):
              [ahref]
              
              ;
              <a href="/wiki/lichi" title="lichi">
               lichi
              </a>
             </li>
             <li>
              코르시카어(co):
              <a href="/wiki/latte" title="latte">
               latte
              </a>
             </li>
             <li>
              코미페르먀크어(koi):
              [ahref]
              
             </li>
             <li>
              코사어(xh):
              <a class="new" href="/w/index.php?title=ubisi&amp;action=edit&amp;redlink=1" title="ubisi (없는 문서)">
               ubisi
              </a>
             </li>
             <li>
              콘월어(kw):
              [linkx]
              
             </li>
             <li>
              콘카니어(kok):
              [linkx]
              
              (dūdʰa)
             </li>
             <li>
              콩고어(kg):
              <a href="/wiki/midiki" title="midiki">
               midiki
              </a>
             </li>
             <li>
              쿠르드어(ku):
              <a href="/wiki/%C5%9F%C3%AEr" title="şîr">
               şîr
              </a>
              (남성),
              <a href="/wiki/%D8%B4%DB%8C%D8%B1" title="شیر">
               شیر
              </a>
             </li>
             <li>
              쿠미크어(kum):
              <a href="/wiki/%D1%81%D1%8E%D1%82" title="сют">
               сют
              </a>
             </li>
             <li>
              크로아티아어(hr):
              <a href="/wiki/mlijeko" title="mlijeko">
               mlijeko
              </a>
             </li>
             <li>
              크림타타르어(crh):
              [ahref]
              
             </li>
             <li>
              크메르어(km):
              <a class="new" href="/w/index.php?title=%E1%9E%91%E1%9E%B9%E1%9E%80%E1%9E%8A%E1%9F%84%E1%9F%87&amp;action=edit&amp;redlink=1" title="ទឹកដោះ (없는 문서)">
               ទឹកដោះ
              </a>
              (dteuk doh)
             </li>
             <li>
              키냐르완다어(rw):
              <a href="/wiki/ta" title="ta">
               ta
              </a>
             </li>
             <li>
              키르기스어(ky):
              [ahref]
              
             </li>
             <li>
              킬딘사미어(sjd):
              <a href="/wiki/%D0%BC%D0%B0%CC%84%D0%B9%D0%B9%D1%82" title="ма̄ййт">
               ма̄ййт
              </a>
             </li>
             <li>
              타갈로그어(tl):
              <a href="/wiki/gatas" title="gatas">
               gatas
              </a>
             </li>
             <li>
              타밀어(ta):
              <a class="new" href="/w/index.php?title=%E0%AE%AA%E0%AE%BE%E0%AE%B2%E0%AF%8D&amp;action=edit&amp;redlink=1" title="பால் (없는 문서)">
               பால்
              </a>
              (pāl),
              <a href="/wiki/%E0%AE%A4%E0%AF%81%E0%AE%A4%E0%AF%8D%E0%AE%A4%E0%AE%AE%E0%AF%8D" title="துத்தம்">
               துத்தம்
              </a>
             </li>
             <li>
              타바사란어(tab):
              [ahref]
              
             </li>
             <li>
              타이어(th):
              <a class="new" href="/w/index.php?title=%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%99%E0%B8%A1&amp;action=edit&amp;redlink=1" title="น้ำนม (없는 문서)">
               น้ำนม
              </a>
              (náam nom),
              [ahref]
              
             </li>
             <li>
              타지크어(tg):
              [ahref]
              
             </li>
             <li>
              타타르어(tt):
              <a href="/wiki/%D1%81%D3%A9%D1%82" title="сөт">
               сөт
              </a>
             </li>
             <li>
              타트어(ttt):
              [ahref]
              
             </li>
             <li>
              타히티어(ty):
              <a class="new" href="/w/index.php?title=%C5%AB&amp;action=edit&amp;redlink=1" title="ū (없는 문서)">
               ū
              </a>
             </li>
             <li>
              테툼어(tet):
              [ahref]
              
             </li>
             <li>
              텔루구어(te):
              <a class="new" href="/w/index.php?title=%E0%B0%AA%E0%B0%BE%E0%B0%B2%E0%B1%81&amp;action=edit&amp;redlink=1" title="పాలు (없는 문서)">
               పాలు
              </a>
              (paalu),
              [ahref]
              
              (ksheeramu)
             </li>
             <li>
              터키어(tr):
              <a href="/wiki/s%C3%BCt" title="süt">
               süt
              </a>
             </li>
             <li>
              투르크멘어(tk):
              <a href="/wiki/s%C3%BC%C3%BDt" title="süýt">
               süýt
              </a>
             </li>
             <li>
              투바어(tyv):
              <a href="/wiki/%D1%81%D2%AF%D1%82" title="сүт">
               сүт
              </a>
             </li>
             <li>
              티그리냐어(tir):
              <a href="/wiki/%E1%8C%B8%E1%89%A3" title="ጸባ">
               ጸባ
              </a>
             </li>
             <li>
              파슈토어(ps):
              [ahref]
              
              (šīde)
             </li>
             <li>
              파피아멘토어(pap):
              [ahref]
              
             </li>
             <li>
              페로어(fo):
              [linkx]
              
              (여성)
             </li>
             <li>
              페르시아어(fa):
              [ahref]
              
              (šīr)
             </li>
             <li>
              펀자브어(pa):
              <a href="/wiki/%E0%A8%A6%E0%A9%81%E0%A9%B1%E0%A8%A7" title="ਦੁੱਧ">
               ਦੁੱਧ
              </a>
              (dudʰdʰ)
             </li>
             <li>
              포르투갈어(pt):
              [linkx]
              
              (남성)
             </li>
             <li>
              폴라브어(pox):
              <a href="/wiki/ml%C3%A5k%C4%83" title="mlåkă">
               mlåkă
              </a>
              (중성)
             </li>
             <li>
              폴란드어(pl):
              <a href="/wiki/mleko" title="mleko">
               mleko
              </a>
              (중성)
             </li>
             <li>
              프랑스어(fr):
              <a href="/wiki/lait" title="lait">
               lait
              </a>
              (남성)
             </li>
             <li>
              프리울리아어(fur):
              <a href="/wiki/lat" title="lat">
               lat
              </a>
             </li>
             <li>
              피에몬테어(pms):
              <a class="new" href="/w/index.php?title=l%C3%A0it&amp;action=edit&amp;redlink=1" title="làit (없는 문서)">
               làit
              </a>
             </li>
             <li>
              피짠짜짜라어(pjt):
              [linkx]
               [ahref][ahref][area1][keywordx][ahref]
              
              ,
              [ahref]
              
             </li>
             <li>
              핀란드어(fi):
              <a href="/wiki/maito" title="maito">
               maito
              </a>
             </li>
             <li>
              하소르브어(dsb):
              [linkx]
              
              (중성)
             </li>
             <li>
              하우사어(ha):
              [linkx]
              
             </li>
             <li>
              하와이어(haw):
              <a href="/wiki/wai%C5%AB" title="waiū">
               waiū
              </a>
             </li>
             <li>
              하카스어(kjh):
              [ahref]
              
             </li>
             <li>
              헝가리어(hu):
              [ahref]
              
             </li>
             <li>
              히브리어(he):
              [ahref]
              
              (khalav) (남성)
             </li>
             <li>
              힌디어(hi):
              [linkx]
              
              (dūdh) (남성)
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [linkx]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      <a href="/wiki/%ED%8A%B9%EC%88%98:%EB%B6%84%EB%A5%98" title="특수:분류">
       분류
      </a>
      :
      <ul>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:%ED%95%9C%EA%B5%AD%EC%96%B4_%EB%8B%A8%EC%9D%BC%EC%96%B4%EB%AA%85%EC%82%AC" title="분류:한국어 단일어명사">
         한국어 단일어명사
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][mkey1][area1][keywordx][linkx][area1][mkey1][ahref]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [linkx]
       
      </li>
      <li id="pt-anoncontribs">
       [ahref]
       
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       <a accesskey="o" href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EB%A1%9C%EA%B7%B8%EC%9D%B8&amp;returnto=%EC%9A%B0%EC%9C%A0" title="꼭 로그인해야 하는 것은 아니지만, 로그인을 권장합니다. [o]">
        로그인
       </a>
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         <a accesskey="c" href="/wiki/%EC%9A%B0%EC%9C%A0" title="본문 보기 [c]">
          문서
         </a>
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         <a accesskey="t" href="/w/index.php?title=%ED%86%A0%EB%A1%A0:%EC%9A%B0%EC%9C%A0&amp;action=edit&amp;redlink=1" rel="discussion" title="문서의 내용에 대한 토론 문서 (없는 문서) [t]">
          토론
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         <a href="/wiki/%EC%9A%B0%EC%9C%A0">
          읽기
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         <a accesskey="e" href="/w/index.php?title=%EC%9A%B0%EC%9C%A0&amp;action=edit" title="이 문서 편집하기 [e]">
          편집
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         <a accesskey="h" href="/w/index.php?title=%EC%9A%B0%EC%9C%A0&amp;action=history" title="문서의 과거 판 [h]">
          역사 보기
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     <a class="mw-wiki-logo" href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%8C%80%EB%AC%B8" title="대문으로 가기">
     </a>
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        <a accesskey="z" href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%8C%80%EB%AC%B8" title="대문으로 가기 [z]">
         대문
        </a>
       </li>
       <li id="n-bulletinboard">
        [ahref]
        
       </li>
       <li id="n-helpdesk">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EC%A7%88%EB%AC%B8%EB%B0%A9">
         질문방
        </a>
       </li>
       <li id="n-recentchanges">
        [ahref]
        
       </li>
       <li id="n-randompage">
        <a accesskey="x" href="/wiki/%ED%8A%B9%EC%88%98:%EC%9E%84%EC%9D%98%EB%AC%B8%EC%84%9C" title="임의 문서 불러오기 [x]">
         임의 문서로
        </a>
       </li>
       <li id="n-editroom">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%ED%8E%B8%EC%A7%91%EC%8B%A4" title="낱말 편집을 위한 도움말">
         편집실
        </a>
       </li>
       <li id="n-createpage">
        [linkx]
        
       </li>
       <li id="n-help">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%8F%84%EC%9B%80%EB%A7%90" title="도움말">
         도움말
        </a>
       </li>
       <li id="n-sitesupport">
        <a href="/?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=spontaneous&amp;uselang=ko" title="지원을 기다립니다">
         기부
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EC%B1%85&amp;bookcmd=book_creator&amp;referer=%EC%9A%B0%EC%9C%A0">
         책 만들기
        </a>
       </li>
       <li id="coll-download-as-rl">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:ElectronPdf&amp;page=%EC%9A%B0%EC%9C%A0&amp;action=show-download-screen">
         PDF로 다운로드
        </a>
       </li>
       <li id="t-print">
        <a accesskey="p" href="/w/index.php?title=%EC%9A%B0%EC%9C%A0&amp;printable=yes" title="이 문서의 인쇄용 판 [p]">
         인쇄용 판
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [ahref]
        
       </li>
       <li id="t-recentchangeslinked">
        [linkx]
        
       </li>
       <li id="t-upload">
        <a accesskey="u" href="/wiki/Special:UploadWizard?uselang=ko" title="파일 올리기 [u]">
         파일 올리기[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][pkeyx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </a>
       </li>
       <li id="t-specialpages">
        <a accesskey="q" href="/wiki/%ED%8A%B9%EC%88%98:%ED%8A%B9%EC%88%98%EB%AC%B8%EC%84%9C" title="모든 특수 문서의 목록 [q]">
         특수 문서 목록
        </a>
       </li>
       <li id="t-permalink">
        [linkx]
        
       </li>
       <li id="t-info">
        <a href="/w/index.php?title=%EC%9A%B0%EC%9C%A0&amp;action=info" title="이 문서에 대한 자세한 정보">
         문서 정보
        </a>
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-az">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="az" lang="az" title="우유 – 아제르바이잔어">
         Azərbaycanca
        </a>
       </li>
       <li class="interlanguage-link interwiki-chr">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="chr" lang="chr" title="우유 – 체로키어">
         ᏣᎳᎩ
        </a>
       </li>
       <li class="interlanguage-link interwiki-csb">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-de">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="de" lang="de" title="우유 – 독일어">
         Deutsch
        </a>
       </li>
       <li class="interlanguage-link interwiki-el">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="el" lang="el" title="우유 – 그리스어">
         Ελληνικά
        </a>
       </li>
       <li class="interlanguage-link interwiki-en">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="en" lang="en" title="우유 – 영어">
         English[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][linkx][linkx][area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx]
        </a>
       </li>
       <li class="interlanguage-link interwiki-et">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-eu">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="eu" lang="eu" title="우유 – 바스크어">
         Euskara
        </a>
       </li>
       <li class="interlanguage-link interwiki-fr">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-id">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ja">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-kn">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="kn" lang="kn" title="우유 – 칸나다어">
         ಕನ್ನಡ
        </a>
       </li>
       <li class="interlanguage-link interwiki-ku">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ky">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-li">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-lt">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="lt" lang="lt" title="우유 – 리투아니아어">
         Lietuvių
        </a>
       </li>
       <li class="interlanguage-link interwiki-mg">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ml">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="ml" lang="ml" title="우유 – 말라얄람어">
         മലയാളം
        </a>
       </li>
       <li class="interlanguage-link interwiki-pl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sk">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-th">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="th" lang="th" title="우유 – 태국어">
         ไทย
        </a>
       </li>
       <li class="interlanguage-link interwiki-tr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-uk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-vi">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="vi" lang="vi" title="우유 – 베트남어">
         Tiếng Việt
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh">
        <a class="interlanguage-link-target" href="/wiki/%EC%9A%B0%EC%9C%A0" hreflang="zh" lang="zh" title="우유 – 중국어">
         中文
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 7월 11일 (수) 01:45에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     내용은
     <a href="/licenses/by-sa/3.0/deed.ko">
      크리에이티브 커먼즈 저작자표시-동일조건변경허락 라이선스
     </a>
     에 따라 사용할 수 있으며
추가적인 조건이 적용될 수 있습니다.
자세한 내용은
     [linkx]
     
     을 참조하십시오.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [ahref]
     
    </li>
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     [linkx]
     
    </li>
    <li id="footer-places-developers">
     <li>[linkx]</li><li>[ahref]</li>[area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     <a href="/">
     </a>
    </li>
    <li id="footer-poweredbyico">
     [ahref]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0036
  </b>
 </body>
</html>
|<---