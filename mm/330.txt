--->|<!DOCTYPE html>
<html class="noJS b_bot b_bot supports_fontface supports_hyphens " lang="ko" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# booking_com: http://ogp.me/ns/fb/booking_com#">
 <head profile="http://a9.com/-/spec/opensearch/1.1/">
  <meta content="origin" name="referrer"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type">
   <title>
    [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  </meta>
 </head>
 <body class="bookings2 b2 city ko lang_is_ltr lang_is_cjk header_reshuffle no_bg_img nobg user_center app_user_center landing lp_flexible_layout b-sprite-3 lt bigblue_std_sm bigblue_std_lg iconfont_is_loading lp_body_constraint_static loc-searchbox-lighter iq-x-bar iq-x-bar-new " data-preload-assets='["https://secure.booking.com/favicon.ico","https://q.bstatic.com/favicon.ico","https://r.bstatic.com/favicon.ico","https://www.google-analytics.com/analytics.js"]' data-preload-assets-onload="false" id="b2cityPage">
  <a class="a11y-skip-to-content" href="t">
   메인 콘텐츠로 바로 가기
  </a>
  <div class="" id="top" role="banner">
   <div class="header-wrapper">
    [ahref]
    
    <div class="ticker_space smaller_booking_nr_login user_center_bar" id="user_form">
     <ul class="user_center_nav">
      <li class=" user_center_option uc_currency js-uc-currency " data-id="currency_selector" data-priority="1">
       <a aria-label="통화를 선택해주세요. 현재 사용 중인 통화는 대한민국 원입니다" class="popover_trigger currency_va_middle" data-et-click="cCcCcCWZcbfdNJdDBKJGOGHRXMJGBAPdKePWOGAVfFfKeWXe:1" data-google-track="Click/Action: city/header_currency_link_box" data-title="통화 선택" href=";" role="button">
        ₩
       </a>
       <div aria-label="통화 선택" class="user_center_popover narrow center_arrow uc_currency" role="dialog" tabindex="0">
        <div class="uc_top_arrow">
        </div>
        <div class="popover_content" id="current_currency">
         <div style="padding:20px;">
          <p>
           로딩 중
          </p>
         </div>
        </div>
        <div class="uc_bottom_arrow">
        </div>
       </div>
      </li>
      <li class="user_center_option uc_language js-uc-language " data-id="language_selector" data-priority="1">
       [ahref]
        [area1][keywordx]<li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][keywordx]</li>[area1][mkey1]
       
       <div aria-describedby="language-popup-description" aria-label="사용 언어 선택" class="user_center_popover narrow center_arrow" role="dialog" tabindex="0">
        <div class="uc_top_arrow">
        </div>
        <div class="js-uc-language-content popover_content" id="current_language">
         <p class="popover_explain" id="language-popup-description">
          원하는 언어를 선택하십시오. 한국어 서비스 외에도 42개의 언어가 준비되어 있습니다.
         </p>
         <div class="select_foldout small_flags_foldout" id="current_language_foldout">
          <div class="select_foldout_wrap">
           <h4>
            대한민국 내 주로 사용되는 언어
           </h4>
           <div role="listbox">
            <ul class="language_flags" role="none">
             <li class="lang_ko selected_country" data-lang="ko">
              [linkx]
              
             </li>
             <li class="lang_en-gb" data-lang="en-gb">
              [linkx]
              
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_en-us" data-lang="en-us">
              [ahref]
              
             </li>
             <li class="lang_zh-cn" data-lang="zh-cn">
              [ahref]
              
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_ja" data-lang="ja">
              <a class="no_target_blank" href="/city/jp/nara.ja.html" hreflang="ja" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-jp">
                </span>
               </span>
               <span class="seldescription">
                日本語
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ru" data-lang="ru">
              [linkx]
              
             </li>
            </ul>
           </div>
          </div>
          <div class="select_foldout_wrap">
           <h4>
            모든 언어
           </h4>
           <div role="listbox">
            <ul class="language_flags" role="none">
             <li class="lang_en-gb" data-lang="en-gb">
              [linkx]
              
             </li>
             <li class="lang_en-us" data-lang="en-us">
              <a class="no_target_blank" href="/city/jp/nara.html" hreflang="en-us" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-us">
                </span>
               </span>
               <span class="seldescription">
                English (US)
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_de" data-lang="de">
              [ahref]
              
             </li>
             <li class="lang_nl" data-lang="nl">
              <a class="no_target_blank" href="/city/jp/nara.nl.html" hreflang="nl" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-nl">
                </span>
               </span>
               <span class="seldescription">
                Nederlands
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_fr" data-lang="fr">
              <a class="no_target_blank" href="/city/jp/nara.fr.html" hreflang="fr" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-fr">
                </span>
               </span>
               <span class="seldescription">
                Français
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_es" data-lang="es">
              <a class="no_target_blank" href="/city/jp/nara.es.html" hreflang="es" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-es">
                </span>
               </span>
               <span class="seldescription">
                Español
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_es-ar" data-lang="es-ar">
              [ahref]
              
             </li>
             <li class="lang_ca" data-lang="ca">
              <a class="no_target_blank" href="/city/jp/nara.ca.html" hreflang="ca" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-catalonia">
                </span>
               </span>
               <span class="seldescription">
                Català
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_it" data-lang="it">
              <a class="no_target_blank" href="/city/jp/nara.it.html" hreflang="it" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-it">
                </span>
               </span>
               <span class="seldescription">
                Italiano
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_pt-pt" data-lang="pt-pt">
              <a class="no_target_blank" href="/city/jp/nara.pt-pt.html" hreflang="pt-pt" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-pt">
                </span>
               </span>
               <span class="seldescription">
                Português (PT)
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_pt-br" data-lang="pt-br">
              <a class="no_target_blank" href="/city/jp/nara.pt-br.html" hreflang="pt-br" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-br">
                </span>
               </span>
               <span class="seldescription">
                Português (BR)
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_no" data-lang="no">
              [ahref]
              
             </li>
             <li class="lang_fi" data-lang="fi">
              [linkx]
              
             </li>
             <li class="lang_sv" data-lang="sv">
              [ahref]
              
             </li>
             <li class="lang_da" data-lang="da">
              [ahref]
              
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_cs" data-lang="cs">
              <a class="no_target_blank" href="/city/jp/nara.cs.html" hreflang="cs" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-cz">
                </span>
               </span>
               <span class="seldescription">
                Čeština
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_hu" data-lang="hu">
              [linkx]
              
             </li>
             <li class="lang_ro" data-lang="ro">
              <a class="no_target_blank" href="/city/jp/nara.ro.html" hreflang="ro" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-ro">
                </span>
               </span>
               <span class="seldescription">
                Română
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ja" data-lang="ja">
              <a class="no_target_blank" href="/city/jp/nara.ja.html" hreflang="ja" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-jp">
                </span>
               </span>
               <span class="seldescription">
                日本語
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_zh-cn" data-lang="zh-cn">
              <a class="no_target_blank" href="/city/jp/nara.zh-cn.html" hreflang="zh-cn" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-cn">
                </span>
               </span>
               <span class="seldescription">
                简体中文
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_zh-tw" data-lang="zh-tw">
              [linkx]
              
             </li>
             <li class="lang_pl" data-lang="pl">
              <a class="no_target_blank" href="/city/jp/nara.pl.html" hreflang="pl" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-pl">
                </span>
               </span>
               <span class="seldescription">
                Polski
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_el" data-lang="el">
              <a class="no_target_blank" href="/city/jp/nara.el.html" hreflang="el" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-gr">
                </span>
               </span>
               <span class="seldescription">
                Ελληνικά
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ru" data-lang="ru">
              [linkx]
              
             </li>
             <li class="lang_tr" data-lang="tr">
              [ahref]
              
             </li>
             <li class="lang_bg" data-lang="bg">
              <a class="no_target_blank" href="/city/jp/nara.bg.html" hreflang="bg" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-bg">
                </span>
               </span>
               <span class="seldescription">
                Български
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ar" data-lang="ar">
              <a class="no_target_blank" href="/city/jp/nara.ar.html" hreflang="ar" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-sa">
                </span>
               </span>
               <span class="seldescription">
                العربية
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_ko selected_country" data-lang="ko">
              [ahref]
              
             </li>
             <li class="lang_he" data-lang="he">
              <a class="no_target_blank" href="/city/jp/nara.he.html" hreflang="he" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-il">
                </span>
               </span>
               <span class="seldescription">
                עברית
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_lv" data-lang="lv">
              [ahref]
              
             </li>
            </ul>
            <ul class="language_flags" role="none">
             <li class="lang_uk" data-lang="uk">
              [ahref]
              
             </li>
             <li class="lang_id" data-lang="id">
              [linkx]
              
             </li>
             <li class="lang_ms" data-lang="ms">
              <a class="no_target_blank" href="/city/jp/nara.ms.html" hreflang="ms" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-my">
                </span>
               </span>
               <span class="seldescription">
                Bahasa Malaysia
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_th" data-lang="th">
              <a class="no_target_blank" href="/city/jp/nara.th.html" hreflang="th" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-th">
                </span>
               </span>
               <span class="seldescription">
                ภาษาไทย
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_et" data-lang="et">
              <a class="no_target_blank" href="/city/jp/nara.et.html" hreflang="et" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-ee">
                </span>
               </span>
               <span class="seldescription">
                Eesti
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_hr" data-lang="hr">
              [ahref]
              
             </li>
             <li class="lang_lt" data-lang="lt">
              [ahref]
              
             </li>
             <li class="lang_sk" data-lang="sk">
              <a class="no_target_blank" href="/city/jp/nara.sk.html" hreflang="sk" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-sk">
                </span>
               </span>
               <span class="seldescription">
                Slovenčina
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
             <li class="lang_sr" data-lang="sr">
              [linkx]
              
             </li>
             <li class="lang_sl" data-lang="sl">
              [ahref]
              
             </li>
             <li class="lang_vi" data-lang="vi">
              [linkx]
              
             </li>
             <li class="lang_tl" data-lang="tl">
              [ahref]
              
             </li>
             <li class="lang_is" data-lang="is">
              <a class="no_target_blank" href="/city/jp/nara.is.html" hreflang="is" role="option">
               <span class="selsymbol">
                <span class="flag_16 sflag slang-is">
                </span>
               </span>
               <span class="seldescription">
                Íslenska
               </span>
               <i class="loading_indicator">
               </i>
              </a>
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
        <div class="uc_bottom_arrow">
        </div>
       </div>
      </li>
      <li class="user_center_option uc_account" data-priority="3" id="add_property_topbar">
       [linkx]
       
      </li>
      <li class=" user_center_option uc_account uc_account-center-item " data-et-click="
" data-priority="2" id="current_account_create">
       [linkx]
       
      </li>
      <li class=" account_register_option user_center_option uc_account " data-et-click="
" data-priority="2" id="current_account">
       [ahref]
       
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div class="xp_index_cross_product " id="cross-product-bar">
   <div class="cross-product-bar__wrapper ">
    <span class="xpb__link selected" data-et-click="goal:xpb_accommodation goal:xpb_total_clicks" data-ga-track="click|Product Expansion|accommodation|booking (index)">
     <span>
      숙소 예약
     </span>
    </span>
    [ahref]
    
    [ahref]
    
    [ahref]
    
   </div>
  </div>
  <div class=" " id="bodyconstraint">
   <div id="bodyconstraint-inner">
    <div class="" id="subheader-wrap" style="">
    </div>
    <div data-block-id="header_survey">
    </div>
    <div class="lp-hero lp-hero--cover">
     <div class="lp-hero__content lp-hero--full-height">
      <div class="lp-hero__bg-image" style="background-image: url('https://s-ec.bstatic.com/xdata/images/city/1680x560/643935.jpg?k=9fadcbd8ef976768810f2fa1359b78960d7a49fcfd7aec1733c5101761e3e93d&amp;o=');">
       <div class="lp-hero__mask">
       </div>
      </div>
      <div class="lp-hero__searchbox-container">
       <div class="lp-hero__searchbox xpi__searchbox ">
        <h2 class=" sb-searchbox__title ">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <h3 class=" sb-searchbox__subtitle-text ">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <div class="sb-searchbox__outer " data-sb-outer="">
         <form action="/searchresults.ko.html" class=" sb-searchbox sb-searchbox--painted -cjk js--sb-searchbox " data-component="search/searchbox/searchbox-xp" data-is-first-visible="1" data-sb-flags=" AEJPAcBacPONDcFGHT:0 calendar_on_destination_change:1 sr_sb_autocomplete_icon_revamp:0" data-sb-id="main" id="frm" method="get" role="search">
         </form>
        </div>
       </div>
      </div>
     </div>
     <div class="lp-horizontal-section lp-hero__breadcrumbs-container bui-spacer--medium clearfix">
      <nav aria-label="현재 위치" class="bui-breadcrumb" data-et-click="IZALOLOLOCDOHJPBJXBHAPFPMdFO:1 customGoal:IZALOLOLOCDOHJPBJXBHAPFPMdFO:1" id="breadcrumb" role="navigation">
       <ol class=" bui-breadcrumb__list bui-inline-container hp-breadcrump__wrapper " typeof="BreadcrumbList" vocab="http://schema.org/">
        <li class="bui-breadcrumb__item hp-breadcrumb__item" data-google-track="Click/Breadcrumb/city -> home/1" property="itemListElement" typeof="ListItem">
         <div class="bui-breadcrumb__text">
          <a class=" bui-link bui-link--primary bui_breadcrumb__link " href="/index.ko.html" property="item" title="Booking.com " typeof="WebPage">
           홈
          </a>
          <meta content="1" property="position"/>
          <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="name"/>
         </div>
        </li>
        <li class="bui-breadcrumb__item hp-breadcrumb__item" data-google-track="Click/Breadcrumb/city -> country/2" property="itemListElement" typeof="ListItem">
         <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
          <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          </path>
         </svg>
         <div class="bui-breadcrumb__text">
          [linkx]
          
          <meta content="2" property="position"/>
          <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="name"/>
         </div>
        </li>
        <li class="bui-breadcrumb__item hp-breadcrumb__item" data-google-track="Click/Breadcrumb/city -> province/3" property="itemListElement" typeof="ListItem">
         <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
          <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          </path>
         </svg>
         <div class="bui-breadcrumb__text">
          <a class=" bui-link bui-link--primary bui_breadcrumb__link " href="/region/jp/nara.ko.html" property="item" title="나라 현 호텔 " typeof="WebPage">
           나라 현
          </a>
          <meta content="3" property="position"/>
          <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="name"/>
         </div>
        </li>
        <li class="bui-breadcrumb__item hp-breadcrumb__item" property="itemListElement" typeof="ListItem">
         <meta content="4" property="position"/>
         <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="name"/>
         <meta href="/city/jp/nara.ko.html" property="item" typeof="WebPage"/>
         <svg class="bk-icon -iconset-navarrow_right bui-breadcrumb__icon" height="16" role="presentation" viewbox="0 0 128 128" width="16">
          <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          </path>
         </svg>
         <div class="bui-breadcrumb__text">
          <h1 class="breadcrumb_h1">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h1>
         </div>
        </li>
       </ol>
      </nav>
     </div>
    </div>
    <div class="lp-bui-section-wrap js-bdlp-st">
     <div class="sr-snippet__container">
      <h2 class="sr-snippet__header">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <div class="filters__col">
       <div class="sr__map_container">
        <a class=" static_map static_map_banner show_map lp_static_map " data-center="34.68454,135.80484" data-height="130" data-offset-x="" data-offset-y="" data-source="map_thumbnail" data-width="264" data-zoom="12" href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
         <div class="static_map_banner_header">
          <div class="static-map__title">
           <strong>
            나라
           </strong>
           호텔 &amp; 숙소 124개 모두 보기
          </div>
         </div>
         <span class="static_map_banner_link_text">
          지도 표시
         </span>
        </a>
       </div>
       <div class="filters__container">
        <h3 class="filters__header">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <hr class="bui-divider bui-spacer--medium"/>
        <div class="bui-spacer--medium">
         <h4 class="filter__title">
          성급
         </h4>
         <div class="bui-group" role="group">
          [linkx]
          
          [ahref]
          
          <a class="bui-checkbox filter" href="/searchresults.ko.html?dest_id=-238469;dest_type=city;nflt=class%3D3&amp;">
           <span class="bui-checkbox__label filter__label">
            3성급
           </span>
          </a>
          [linkx]
          
          [linkx]
          
         </div>
        </div>
        <div class="bui-spacer--medium">
         <h4 class="filter__title">
          후기 평점
         </h4>
         <div class="bui-group" role="group">
          <a class="bui-checkbox filter" href="/searchresults.ko.html?dest_id=-238469;dest_type=city;nflt=review_score%3D90&amp;">
           <span class="bui-checkbox__label filter__label">
            최고: 9 이상
           </span>
          </a>
          [linkx]
          
          <a class="bui-checkbox filter" href="/searchresults.ko.html?dest_id=-238469;dest_type=city;nflt=review_score%3D70&amp;">
           <span class="bui-checkbox__label filter__label">
            좋음: 7 이상
           </span>
          </a>
          <a class="bui-checkbox filter" href="/searchresults.ko.html?dest_id=-238469;dest_type=city;nflt=review_score%3D60&amp;">
           <span class="bui-checkbox__label filter__label">
            만족: 6 이상
           </span>
          </a>
         </div>
        </div>
       </div>
       <div class="filters__container">
        <h3 class="filters__header">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <div class="filters__deals bui-spacer--small">
         <div class="bui-spacer--smaller">
          최저 특가
         </div>
         [linkx]
         
        </div>
        <hr class="bui-divider bui-spacer--small"/>
        <div class="filters__deals bui-spacer--small">
         <div class="bui-spacer--smaller">
          오늘
         </div>
         <a class="bui-link bui-link--primary dates-recs__link-date" href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;;from_city_date_recs=1" title="7월 3일 — 7월 4일">
          7월 3일 — 7월 4일
         </a>
        </div>
        <hr class="bui-divider bui-spacer--small"/>
        <div class="filters__deals bui-spacer--small">
         <div class="bui-spacer--smaller">
          이번 주말
         </div>
         <a class="bui-link bui-link--primary dates-recs__link-date" href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;;from_city_date_recs=1" title="7월 5일 — 7월 7일">
          7월 5일 — 7월 7일
         </a>
        </div>
        <hr class="bui-divider bui-spacer--small"/>
        <div class="filters__deals ">
         <div class="bui-spacer--smaller">
          다음 주말
         </div>
         <a class="bui-link bui-link--primary dates-recs__link-date" href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;;from_city_date_recs=1" title="7월 12일 — 7월 14일">
          7월 12일 — 7월 14일
         </a>
        </div>
       </div>
      </div>
      <div class="content__col">
       <div class="content__nav">
        <a class="content__nav_item active" href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
         <span class="bui-button__text">
          저희가 추천하는 숙소
         </span>
        </a>
        <a class="content__nav_item " href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
         <span class="bui-button__text">
          낮은 요금 순으로
         </span>
        </a>
        [ahref]
        
        <a class="content__nav_item " href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
         <span class="bui-button__text">
          고평점 후기가 많은 순
         </span>
        </a>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            <a href="/hotel/jp/oyado-nono-nara.ko.html" title="온야도 노노 나라 내추럴 핫 스프링">
             <h3 class="bui-card__title bui-spacer--smaller" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
              <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
               <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
               </path>
              </svg>
              <span itemprop="addressLocality">
               나라 호텔
              </span>
             </h4>
            </a>
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             나라에 위치한 Onyado Nono Nara Natural Hot Spring은 JR 나라 역에서 도보로 단 3분 거리에 있으며, 구내 천연 온천탕, 전 구역 무료 Wi-Fi, 구내 전용 주차장, 구내 레스토랑을 제공합니다. 코후쿠지는 도보로 15분 떨어져 있습니다. 모든 객실은 평면 TV, 전기 주전자를 갖추고 있습니다.
             <span class="hotel-card__text_review">
              전체적으로 매우 만족했습니다.
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9.2" class="bui-review-score__badge">
             9.2
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              최고
             </div>
             <div class="bui-review-score__text">
              3,878개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩81,961
             </span>
            </div>
            <a class="bui-button bui-button--primary" href="/hotel/jp/oyado-nono-nara.ko.html" type="button">
             <span class="bui-button__text">
              객실 확인
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             2017년 8월에 개장한 Centurion Hotel Classic Nara는 JR 나라 역(JR Nara Station)에서 도보로 단 5분 거리에 있으며, 에어컨이 설치된 객실을 보유하고 있습니다. 호텔 전 구역에서 무료 Wi-Fi 이용이 가능합니다. 2018년 4월에 보수공사를 마친 구내 레스토랑에서 맛좋은 식사와 수제 맥주를 즐겨보세요.
             <span class="hotel-card__text_review">
              한국어 하시는 직원분이있었고 직원분들이 엄청 친절합니다 위치도 좋아요
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9" class="bui-review-score__badge">
             9
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              최고
             </div>
             <div class="bui-review-score__text">
              3,184개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩57,157
             </span>
            </div>
            [linkx]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            [ahref]
            
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             Nara Visitor Center and Inn은 나라 중심부에 위치해 있으며, 고후쿠지 및 나라마치(Naramachi)에서 도보로 단 3분 거리에 있습니다. 도다이지 및 사슴 공원은 도보로 10분, 긴테츠 선 나라 역은 도보로 7분 거리에 있으며, JR 나라 역까지는 도보로 14분이 소요됩니다.
             <span class="hotel-card__text_review">
              잠자리도 안락하고 전체적으로 좋았음
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9.3" class="bui-review-score__badge">
             9.3
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              최고
             </div>
             <div class="bui-review-score__text">
              1,535개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩45,294
             </span>
            </div>
            <a class="bui-button bui-button--primary" href="/hotel/jp/nara-visitor-center-and-inn.ko.html" type="button">
             <span class="bui-button__text">
              객실 확인
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             현대적인 Super Hotel Lohas는 JR 나라 기차역의 동쪽 출구에서 도보로 불과 1분 거리에 있으며, 갓 구운 빵이 포함된 무료 조식과 천연 온천탕을 자랑합니다. 객실은 무료 유선 인터넷과 VOD 시스템을 갖추고 있습니다. 투숙객은 무료 WiFi를 이용하실 수 있습니다.
             <span class="hotel-card__text_review">
              위치 대박이구요, 일본에서 묵었던 호텔중에 제일 괜찮았던 것 같습니다. 바로 앞에 버스터미널? 같은게 있어서 왠만ㅁ한데 다 갈수 있고 ㅠㅠ 쾌적한게 너무 좋앗어요, 다른 숙소들에서는 일본인 특유의 냄새가 많이 나서 ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ 일본 여행은 다신 안갈거지만 만약 가게된다면 이 숙소  다시 묵고 싶네요 ㅎㅎㅎㅎㅎㅎ 아쉽게도 조식은 못먹어봐서 모르겟지만 그냥 다 좋아여...ㅠㅠ 대중탕이 작긴 했지만 깔끔하고 좋았습니다!
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              [ahref][ahref][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref][ahref][area1][keywordx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][ahref][area1][keywordx][area1][mkey1][linkx][area1][keywordx][area1][mkey1][ahref]
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9" class="bui-review-score__badge">
             9
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              최고
             </div>
             <div class="bui-review-score__text">
              2,317개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩57,157
             </span>
            </div>
            <a class="bui-button bui-button--primary" href="/hotel/jp/super-lohas-jr-nara-eki-nara.ko.html" type="button">
             <span class="bui-button__text">
              객실 확인
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            <a href="/hotel/jp/tsukihitei.ko.html" title="쓰키히테이">
             <h3 class="bui-card__title bui-spacer--smaller" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
              <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
               <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
               </path>
              </svg>
              <span itemprop="addressLocality">
               나라 호텔
              </span>
             </h4>
            </a>
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             Tsukihitei는 유네스코 세계문화유산으로 지정된 가스가야마 원시림에 위치하고 있습니다. 각 객실은 일본식 장식으로 꾸며져 있으며 탁 트인 숲의 전망, 전통적인 다다미 바닥, 쇼지 종이 스크린을 갖추고 있습니다. 모든 객실에는 일본식 요이불 세트 침구가 있습니다. 실내 욕실도 구비되어 있습니다. 가스가타이샤는 호텔에서 400m 떨어져 있습니다.
             <span class="hotel-card__text_review">
              It’s located in Nara Park that you can take a really nice walk to the peak
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9.5" class="bui-review-score__badge">
             9.5
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              강력 추천
             </div>
             <div class="bui-review-score__text">
              103개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩652,238
             </span>
            </div>
            <a class="bui-button bui-button--primary" href="/hotel/jp/tsukihitei.ko.html" type="button">
             <span class="bui-button__text">
              객실 확인
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            [linkx]
             <li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[area1][keywordx]</li><li>[area1][keywordx]</li>
            
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             JR 나라 역(JR Nara Station)에서 도보로 단 5분 거리에 위치한 Guesthouse Nara Komachi는 무료 Wi-Fi 접속 설비 및 샤워 시설을 갖춘 전용 욕실이 마련된 저렴한 객실을 보유하고 있습니다. 금연 정책을 시행하는 이 호스텔은 자전거 대여 서비스를 제공합니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9.1" class="bui-review-score__badge">
             9.1
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              최고
             </div>
             <div class="bui-review-score__text">
              417개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩52,304
             </span>
            </div>
            <a class="bui-button bui-button--primary" href="/hotel/jp/guesthouse-nara-komachi.ko.html" type="button">
             <span class="bui-button__text">
              객실 확인
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            <a href="/hotel/jp/setorenaramati.ko.html" title="Setre Naramachi">
             <h3 class="bui-card__title bui-spacer--smaller" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
              <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
               <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
               </path>
              </svg>
              <span itemprop="addressLocality">
               나라 호텔
              </span>
             </h4>
            </a>
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             Setre Naramachi is located in Nara, 2 km from Nara Park and 5 km from Heijo Palace Ruins. With a garden, the 5-star hotel has air-conditioned rooms with free WiFi, each with a private bathroom.
             <span class="hotel-card__text_review">
              Very nice hotel in Nara!!! Comfort &amp; peaceful! Definitely will come back again.
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9" class="bui-review-score__badge">
             9
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              최고
             </div>
             <div class="bui-review-score__text">
              31개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩258,824
             </span>
            </div>
            <a class="bui-button bui-button--primary" href="/hotel/jp/setorenaramati.ko.html" type="button">
             <span class="bui-button__text">
              객실 확인
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             긴테쓰나라 역에서 도보로 단 3분 거리에 위치한 Noborioji Hotel은 따뜻한 조명과 무료 유선 인터넷을 갖춘 현대적이고 고급스러운 객실을 보유하고 있습니다. 투숙객은 풀코스 프랑스 요리를 즐기거나 아로마테라피 마사지로 피로를 푸실 수 있습니다. 이 호텔은 미슐랭 가이드 간사이 2014에서 4개의 레드 파빌리온을 획득하였습니다.
             <span class="hotel-card__text_review">
              Wonderful boutique hotel, by the entrance to Nara park. Staff excellent and very friendly. Amazing rooms. Awesome restaurant with great French food.  Breakfast equally delicious. Definitely worth staying
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="9.5" class="bui-review-score__badge">
             9.5
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              강력 추천
             </div>
             <div class="bui-review-score__text">
              54개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩421,916
             </span>
            </div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             JR 나라 기차역(JR Nara Train Station)에서 도보로 불과 2분 거리에 있는 Smile Hotel Nara는 에어컨, 무료 유선 인터넷, LCD TV, 녹차와 전기 주전자를 갖춘 객실을 보유하고 있습니다. 추가 요금으로 마사지와 일식/서양식 조식 뷔페를 즐기실 수 있습니다.
             <span class="hotel-card__text_review">
              위치도 좋았고, 체크인을 하는데 한국말을 하실수 있는 분이 계셔서 하기 쉬웠습니다. 무엇보다 방이 아늑했고 욕실에서도 쉴 수 있었으며 서비스가 정말 좋았습니다. 다시 나라를 가게 된다면 다시 이곳을 예약할 것입니다.
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="8.1" class="bui-review-score__badge">
             8.1
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              매우 좋음
             </div>
             <div class="bui-review-score__text">
              1,902개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩45,294
             </span>
            </div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="sr__card">
        <div class="sr__card_photo">
        </div>
        <div class="sr__card_content">
         <div class="sr__card_main_row">
          <div class="sr__card_main">
           <header class="bui-spacer--medium">
            <a href="/hotel/jp/hotel-cube.ko.html" title="호텔 파고다">
             <h3 class="bui-card__title bui-spacer--smaller" itemprop="name">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
              <svg class="bk-icon -iconset-geo_pin" height="20" viewbox="0 0 128 128" width="20">
               <path d="M98.5 42.5a34.5 34.5 0 1 0-64.3 17.2L64 120l29.8-60.3a34.2 34.2 0 0 0 4.7-17.2zM64 59.7a17.2 17.2 0 1 1 17-17 17.2 17.2 0 0 1-17 17z">
               </path>
              </svg>
              <span itemprop="addressLocality">
               나라 호텔
              </span>
             </h4>
            </a>
           </header>
           <div class="hotel-card__text bui-spacer--medium">
            <p class="bui-card__text hotel-card__text--wrapped bui-spacer--small">
             Hotel Pagoda는 나라 공원에서 도보로 단 5분, 이스이엔 정원(Isuien Garden)에서 도보로 10분 거리에 있으며 LCD TV가 놓인 객실을 보유하고 있습니다. 공용 공간에는 무료 Wi-Fi가 완비되어 있습니다. 구내에 마련된 차량 6~7대용 주차 공간은 선착순으로 이용 가능합니다. 차량 높이 제한은 2m입니다.
             <span class="hotel-card__text_review">
              청결하고 기차역과 관광지에 가까워 최고의 위치.
             </span>
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link">
               숨기기
              </span>
             </span>
            </div>
           </div>
          </div>
          <div class="sr__card_review">
           <div class="bui-review-score bui-review-score--end bui-spacer--large">
            <div aria-label="8.4" class="bui-review-score__badge">
             8.4
            </div>
            <div class="bui-review-score__content">
             <div aria-label="Rated Exceptional from 23 reviews" class="bui-review-score__title">
              매우 좋음
             </div>
             <div class="bui-review-score__text">
              1,012개 이용 후기
             </div>
            </div>
           </div>
           <div>
            <div class="sr__card_price bui-spacer--large">
             1박 평균
             <br/>
             <span>
              ₩27,953
             </span>
            </div>
            [linkx]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="lp-bui-section bui-spacer--largest">
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="lp-bui-section bui-spacer--largest">
      <header class="bui-segment-header-exit">
       <h2 class="bui-segment-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
       <div class="bui-segment-header-exit-wrap">
        [linkx]
        
       </div>
      </header>
      <div aria-label="지난 30일 동안 나라에서 가장 많이 예약된 호텔" class="bui-carousel bui-carousel--medium bui-u-bleed@small lp-bui-section" data-bui-component="Carousel" role="region">
       <ul class="bui-carousel__inner" data-bui-ref="carousel-container">
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nara-royal.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.1" class="review-score-badge">
              8.1
             </span>
             <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
              매우 좋음
             </span>
             <span aria-label="828개 이용 후기 기준" class="review-score-widget__subtext">
              828개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nikko-nara.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.3" class="review-score-badge">
              8.3
             </span>
             <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
              매우 좋음
             </span>
             <span aria-label="1,624개 이용 후기 기준" class="review-score-widget__subtext">
              1,624개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/sun-hotel-nara.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.1" class="review-score-badge">
              8.1
             </span>
             <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
              매우 좋음
             </span>
             <span aria-label="1,902개 이용 후기 기준" class="review-score-widget__subtext">
              1,902개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/super-lohas-jr-nara-eki-nara.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.0" class="review-score-badge">
              9.0
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="2,317개 이용 후기 기준" class="review-score-widget__subtext">
              2,317개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nara-visitor-center-and-inn.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            <a class="bui-card__header_full_link_wrap" href="/hotel/jp/nara-visitor-center-and-inn.ko.html" title="NARA 비지트 센터 앤 인">
             <h3 class="bui-card__title" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
              <span itemprop="addressLocality">
               나라 호텔
              </span>
             </h4>
            </a>
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.3" class="review-score-badge">
              9.3
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="1,535개 이용 후기 기준" class="review-score-widget__subtext">
              1,535개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/piazza-nara.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            [linkx]
            
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.8" class="review-score-badge">
              8.8
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="683개 이용 후기 기준" class="review-score-widget__subtext">
              683개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/sentiyurionhoterunai-liang.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            [ahref]
            
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.9" class="review-score-badge">
              8.9
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="3,184개 이용 후기 기준" class="review-score-widget__subtext">
              3,184개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
        <div class="bui-carousel__item " data-bui-ref="carousel-item">
         <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPFeNJMDeeELSdXNZLO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/oyado-nono-nara.ko.html'">
          <div class="bui-card__image-container">
          </div>
          <div class="bui-card__content">
           <header class="bui-card__header">
            <a class="bui-card__header_full_link_wrap" href="/hotel/jp/oyado-nono-nara.ko.html" title="온야도 노노 나라 내추럴 핫 스프링">
             <h3 class="bui-card__title" itemprop="name">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
              <span itemprop="addressLocality">
               나라 호텔
              </span>
             </h4>
            </a>
           </header>
           <div class="hotel-card__text bui-spacer--large">
            <p class="most-booked__text bui-card__text">
             <svg class="bk-icon -iconset-checkmark_bold" fill="#077812" height="20" viewbox="0 0 128 128" width="20">
              <path d="M52 102a8 8 0 0 1-5.7-2.3l-28-28a8 8 0 0 1 11.4-11.4L52 82.7l46.3-46.4a8 8 0 0 1 11.4 11.4l-52 52A8 8 0 0 1 52 102z">
              </path>
             </svg>
             나라 호텔 예약객 사이에서 인기
            </p>
           </div>
           <div class="bui-card__text">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.2" class="review-score-badge">
              9.2
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="3,878개 이용 후기 기준" class="review-score-widget__subtext">
              3,878개 이용 후기
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
       </ul>
       <div class="bui-carousel__nav">
        <button aria-label="Previous content" class="bui-carousel__button" data-bui-ref="carousel-prev" type="button">
         <svg class="bk-icon -iconset-navarrow_left bui-carousel__prev" height="32" role="presentation" viewbox="0 0 128 128" width="32">
          <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
          </path>
         </svg>
        </button>
        <button aria-label="Next content" class="bui-carousel__button" data-bui-ref="carousel-next" type="button">
         <svg class="bk-icon -iconset-navarrow_right bui-carousel__next" height="32" role="presentation" viewbox="0 0 128 128" width="32">
          <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          </path>
         </svg>
        </button>
       </div>
      </div>
     </div>
     <div data-et-view="IZVGPSePXYEae:1">
     </div>
     <div class="lp-bui-section bui-spacer--large">
      <div class="bui-spacer--largest">
       <header class="bui-segment-header-exit">
        <h2 class="bui-segment-header">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <div class="bui-segment-header-exit-wrap">
         [ahref]
         
        </div>
       </header>
       <div aria-label="나라 최고의 조식 제공 호텔" class="bui-carousel bui-carousel--medium bui-u-bleed@small" data-bui-component="Carousel" role="region">
        <ul class="bui-carousel__inner lp-bui-section" data-bui-ref="carousel-container">
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/mikasa.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              조식 옵션
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              노천탕 및 아름다운 나라의 전망을 보유한 식당을 자랑하는 Mikasa는 긴데쓰 나라 기차역에서 호텔의 무료 셔틀로 10분 거리에 위치해 있습니다. 구내 주차장은 무료로 이용 가능합니다. Mikasa Ryokan의 일본 스타일 객실은 전통 요이불 세트와 짚으로 엮은 다다미 바닥을 갖추고 있습니다.
              <span class="hotel-card__text_review">
               Everything was great - great hospitality, lovely view from the room, amazing service...
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩384,354
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.9" class="review-score-badge">
               8.9
              </span>
              <span aria-label="평가 - 우수함" class="review-score-widget__text">
               우수함
              </span>
              <span aria-label="125개 이용 후기 기준" class="review-score-widget__subtext">
               125개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/sunroute-nara.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              조식 옵션
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              Hotel Sunroute Nara offers rooms with free WiFi and parking in the heart of Japan’s ancient capital, a few steps from the Naramachi area and within a 10 minutes’ walk from Kintetsu Nara Station,...
              <span class="hotel-card__text_review">
               The staff was friendly and helpful, the room was very clean and comfortable.
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩76,871
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.5" class="review-score-badge">
               8.5
              </span>
              <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
               매우 좋음
              </span>
              <span aria-label="253개 이용 후기 기준" class="review-score-widget__subtext">
               253개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nara.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              조식 옵션
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              100년의 역사를 지닌 Nara Hotel은 고전적인 일본식 건축 양식과 무료 Wi-Fi가 완비된 우아한 객실을 자랑합니다. 나라 공원의 아름다운 언덕에 자리 잡고 있는 이 호텔은 일본 고도의 유적지를 내려다보고 있습니다.
              <span class="hotel-card__text_review">
               주변 사슴공원. 정원. 호텔 역사. 직원 봉사. 근대풍 객실. 시설. 위치. 모두 좋았음
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩204,989
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.6" class="review-score-badge">
               8.6
              </span>
              <span aria-label="평가 - 우수함" class="review-score-widget__text">
               우수함
              </span>
              <span aria-label="810개 이용 후기 기준" class="review-score-widget__subtext">
               810개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/wellness-asukaji.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             <a class="bui-card__header_full_link_wrap" href="/hotel/jp/wellness-asukaji.ko.html" title="웰니스 아스카지 호텔">
              <h3 class="bui-card__title" itemprop="name">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[ahref][ahref][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][area1][keywordx][ahref][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][area1][mkey1][area1][keywordx][pkeyx]
              </h3>
              <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
               <span itemprop="addressLocality">
                나라 호텔
               </span>
              </h4>
             </a>
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              조식 옵션
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              Just 300 metres from Nara Park, Hotel Wellness Asukaji offers spacious rooms with a private bathroom and flat-screen TV. A public bath and Japanese restaurant with Nara-style breakfast are featured.
              <span class="hotel-card__text_review">
               친절하고 깨끗함. 방도 일본치고 넓고 대욕실도 잘 관리되고있음 조식도 정성스럽게 준비해 주심
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <li>[pkeyx]</li>[ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩59,098
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.0" class="review-score-badge">
               8.0
              </span>
              <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
               매우 좋음
              </span>
              <span aria-label="73개 이용 후기 기준" class="review-score-widget__subtext">
               73개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
        </ul>
       </div>
      </div>
      <div class="bui-spacer--largest">
       <header class="bui-segment-header-exit">
        <h2 class="bui-segment-header">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <div class="bui-segment-header-exit-wrap">
         [linkx]
         
        </div>
       </header>
       <div aria-label="나라 버짓 호텔" class="bui-carousel bui-carousel--medium bui-u-bleed@small" data-bui-component="Carousel" role="region">
        <ul class="bui-carousel__inner lp-bui-section" data-bui-ref="carousel-container">
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nikko-nara.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              버짓 호텔
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              Hotel Nikko Nara는 JR 나라 역과 연결되어 있으며, 도다이지 사원과 나라 공원에서 도보로 30분 거리에 있습니다. 호텔에는 대중목욕탕, 피트니스 짐, 스파와 마사지 시설이 운영됩니다. 객실에는 에어컨과 난방 시설이 모두 완비되어 있습니다. 각 객실에 냉장고, 전기 주전자, 무료 Wi-Fi와 위성 평면 TV도 제공됩니다.
              <span class="hotel-card__text_review">
               친절한 접객, 깨끗한 숙소, JR나라역 접근성 최고
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩83,040
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.4" class="review-score-badge">
               8.4
              </span>
              <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
               매우 좋음
              </span>
              <span aria-label="1,624개 이용 후기 기준" class="review-score-widget__subtext">
               1,624개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/piazza-nara.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              버짓 호텔
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              2017년 6월에 오픈한 Piazza Hotel Nara는 JR 나라역에서 도보로 단 1분 거리에 있으며, 모든 객실에 무료 Wi-Fi를 제공합니다. 이 숙소는 전면 금연 시설입니다. 모든 객실은 에어컨, 평면 TV, 냉장고, 전기 주전자를 갖추고 있습니다. 전용 욕실에는 무료 세면도구가 비치되어 있으며, 일부 객실에는 욕조가 구비되어 있습니다.
              <span class="hotel-card__text_review">
               현대적이고 모던한 분위기 청결도 야경이 보이는 방등 모든면에서 다 좋았습니다.
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩73,334
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.9" class="review-score-badge">
               8.9
              </span>
              <span aria-label="평가 - 우수함" class="review-score-widget__text">
               우수함
              </span>
              <span aria-label="683개 이용 후기 기준" class="review-score-widget__subtext">
               683개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nara-royal.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [linkx]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              버짓 호텔
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             [area1][keywordx][linkx][pkeyx]
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩63,628
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.1" class="review-score-badge">
               8.1
              </span>
              <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
               매우 좋음
              </span>
              <span aria-label="828개 이용 후기 기준" class="review-score-widget__subtext">
               828개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/hoteruhuzitanai-liang.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             <a class="bui-card__header_full_link_wrap" href="/hotel/jp/hoteruhuzitanai-liang.ko.html" title="호텔 후지타 나라 ">
              <h3 class="bui-card__title" itemprop="name">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
              <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
               <span itemprop="addressLocality">
                나라 호텔
               </span>
              </h4>
             </a>
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              버짓 호텔
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              Hotel Fujita Nara는 JR 나라 기차역과 긴테쓰 나라 기차역에서 단 500m 거리에 있고, 피로를 풀어주는 마사지 서비스를 제공합니다. 호텔에 2곳의 레스토랑이 있고, 호텔은 자전거 대여 서비스를 제공합니다.
              <span class="hotel-card__text_review">
               직원분들이 너무 친절하셨어요. 작은 질문하나라도 놓치지 않고 해결해주시려는 부분이 인상적이었어요:D 룸도 여성전용룸이라서 그런지 귀엽고 디테일하게 신경쓴 부분들이 감동적이었어요.
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩57,157
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.5" class="review-score-badge">
               8.5
              </span>
              <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
               매우 좋음
              </span>
              <span aria-label="606개 이용 후기 기준" class="review-score-widget__subtext">
               606개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
        </ul>
       </div>
      </div>
      <div class="bui-spacer--largest">
       <header class="bui-segment-header-exit">
        <h2 class="bui-segment-header">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <div class="bui-segment-header-exit-wrap">
         <a class="bui-button bui-button--secondary" data-et-click="customGoal:IZVGPCbGNMPXKdXUC:1" href="/searchresults.ko.html?city=-238469;nflt=ht_id%3D204&amp;" type="button">
          <span class="bui-button__text">
           모두 보기
          </span>
         </a>
        </div>
       </header>
       <div aria-label="나라 시내 호텔" class="bui-carousel bui-carousel--medium bui-u-bleed@small" data-bui-component="Carousel" role="region">
        <ul class="bui-carousel__inner lp-bui-section" data-bui-ref="carousel-container">
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/hakushikaso.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              도심 위치
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              공중 목욕탕을 제공하는 Nara Hakushikaso은 킨테츠 나라 기차역(Kintetsu Nara Train Station)에서 도보로 2분 거리에 있습니다. 객실은 에어컨, 무료 Wi-Fi 및 완비된 전용 욕실을 갖추고 있습니다. Nara Hakushikaso Ryokan의 객실은 다다미 바닥으로 마감되어 있으며, 일본식 요이불 세트를 갖추고 있습니다....
              <span class="hotel-card__text_review">
               나라 사슴공원, 나라마치 등 관광지들을 걸어서 이용하기에 편하고, 가격 대비 괜찮은 료칸임. 온천수는 아니지만, 은이 함유된 특수한 이온수를 사용하는 욕장이 있슴. 조용하고...
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1][pkeyx][area1][mkey1]
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩178,201
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="8.4" class="review-score-badge">
               8.4
              </span>
              <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
               매우 좋음
              </span>
              <span aria-label="152개 이용 후기 기준" class="review-score-widget__subtext">
               152개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/hotel-asyl-nara.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             <a class="bui-card__header_full_link_wrap" href="/hotel/jp/hotel-asyl-nara.ko.html" title="호텔 아질 나라">
              <h3 class="bui-card__title" itemprop="name">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
              <h4 class="bui-card__subtitle" itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
               <span itemprop="addressLocality">
                나라 호텔
               </span>
              </h4>
             </a>
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              도심 위치
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              JR 나라 기차역(JR Nara Train Station)에서 도보로 단 5분, 나라 공원(Nara Park)에서 도보로 10분 거리에 있는 Hotel Asyl Nara는 2013년 미슐랭 가이드에서 2 레드 파빌리온을 획득한 호텔입니다. 무료 대중탕과 일식당을 갖춘 이 숙박 시설은 객실 내 무료 인터넷을 제공합니다.
              <span class="hotel-card__text_review">
               조식 메뉴와 맛 좋음. 친절한 직원.
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩56,079
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="7.8" class="review-score-badge">
               7.8
              </span>
              <span aria-label="평가 - 좋음" class="review-score-widget__text">
               좋음
              </span>
              <span aria-label="247개 이용 후기 기준" class="review-score-widget__subtext">
               247개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/hotel-allamanda.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              도심 위치
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              Featuring stylish modern rooms with hardwood floors, an in-room breakfast and a satellite LCD TV, Hotel Allamanda is a 10-minute walk from Hokke-ji Temple and a 5-minute drive from Kintetsu Shinomiya...
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩106,043
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="7.8" class="review-score-badge">
               7.8
              </span>
              <span aria-label="평가 - 좋음" class="review-score-widget__text">
               좋음
              </span>
              <span aria-label="5개 이용 후기 기준" class="review-score-widget__subtext">
               5개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div class="bui-carousel__item" data-bui-ref="carousel-item">
          <div class="hotel-card__default bui-card bui-card--media" data-et-click="IZVGPWVJPAKBcEZTcVTIbYO:1" itemscope="" itemtype="http://schema.org/Hotel" onclick="location.href='/hotel/jp/nara-washington-plaza.ko.html'">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <header class="bui-card__header">
             [ahref]
             
            </header>
            <div class="bui-spacer--medium">
             <span class="bui-badge bui-badge--outline">
              도심 위치
             </span>
            </div>
            <div class="hotel-card__text bui-spacer--medium">
             <p class="bui-card__text hotel-card__text--wrapped">
              Nara Washington Hotel Plaza는 JR 나라 역(JR Nara Station)에서 도보로 5분거리에 있으며, 무료 유선 인터넷이 설치된 객실을 제공합니다. 나라(Nara) 중심부에 자리한 이 호텔은 많은 상점과 레스토랑에서 가깝습니다. 구내에 일본식 및 양식 아침 식사를 제공하는 일식 레스토랑이 있습니다.
              <span class="hotel-card__text_review">
               직원이 친절 했던점.청결한 시설
              </span>
             </p>
             <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
              <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
               <span class="hotel-card__read_more bui-link bui-link--secondary">
                더 보기
               </span>
               <span class="hotel-card__read_less bui-link bui-link--secondary">
                숨기기
               </span>
              </span>
             </div>
            </div>
            <div class="hotel-card__price bui-spacer--small">
             1박 평균 ₩48,530
            </div>
            <div class="bui-card__text">
             <span class=" review-score-widget review-score-widget__good review-score-widget__text-only review-score-widget__inline ">
              <span aria-label="7.4" class="review-score-badge">
               7.4
              </span>
              <span aria-label="평가 - 좋음" class="review-score-widget__text">
               좋음
              </span>
              <span aria-label="648개 이용 후기 기준" class="review-score-widget__subtext">
               648개 이용 후기
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
        </ul>
       </div>
      </div>
     </div>
     <div class="lp-bui-section lp-bui-section-faq bui-spacer--largest">
      <div class="lp-bui-section-faq-inner bui-grid bui-grid--bleed">
       <div class="bui-grid__column-3">
        <div class="lp-bui-section-faq-intro">
         <h3 class="bui-segment-header">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
        </div>
       </div>
       <div class="bui-grid__column-9">
        <div class="lp-bui-section-faq-content">
         <ul aria-label="Accordion control" class="bui-accordion bui-u-bleed@small" data-bui-component="Accordion" itemscope="" itemtype="https://schema.org/FAQPage">
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-1" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-1" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              뛰어난 객실 전망으로 여행객 사이에서 호평받은 나라 호텔은
              [linkx]
              
              ,
              [ahref]
              
              ,
              <a href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
               미카사
              </a>
              입니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-2" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-2" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              나라의 도다이지 주변에서 가장 좋은 호텔로
              [linkx]
              
              ,
              <a href="/hotel/jp/wakasa-annex.ko.html">
               와카사 어넥스
              </a>
              ,
              <a href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
               마운틴 홈 롯지 인 디어 파크
              </a>
              등을 꼽을 수 있습니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-3" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-3" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              나라에서 가장 호평받고 있는 호텔로
              [linkx]
              
              ,
              <a href="/hotel/jp/oyado-nono-nara.ko.html">
               온야도 노노 나라 내추럴 핫 스프링
              </a>
              ,
              <a href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
               수퍼 호텔 로하스 JR 나라 에키
              </a>
              등을 꼽을 수 있습니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-4" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-4" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              평균적으로 이번 주말 나라 3성급 호텔과 4성급 호텔의 1박 요금은 각각 ₩332,263, ₩397,658입니다. 보다 럭셔리한 숙박 경험을 원할 경우 이번 주말 1박당 ₩550,702의 요금(Booking.com 요금 기준)으로 나라 5성급 호텔에서 머무실 수 있습니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-5" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-5" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              커플 여행객 사이에서 호평받은 나라 호텔은
              <a href="/hotel/jp/tsukihitei.ko.html">
               쓰키히테이
              </a>
              ,
              <a href="/hotel/jp/noborioji.ko.html">
               Noborioji Hotel Nara
              </a>
              ,
              <a href="/searchresults.ko.html?dest_id=-238469;dest_type=city&amp;">
               NARA 비지트 센터 앤 인
              </a>
              입니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-6" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-6" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              평균적으로 오늘 밤 나라 3성급 호텔과 4성급 호텔의 1박 요금은 각각 ₩93,976, ₩129,529입니다. 보다 럭셔리한 숙박 경험을 원할 경우 오늘 밤 1박당 ₩200,432의 요금(Booking.com 요금 기준)으로 나라 5성급 호텔에서 머무실 수 있습니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-7" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-7" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              조식으로 호평받은 나라 호텔은
              <a href="/hotel/jp/tsukihitei.ko.html">
               쓰키히테이
              </a>
              ,
              [linkx]
              
              ,
              [ahref]
              
              입니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-8" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx]
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-8" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              평균적으로 나라 3성급 호텔과 4성급 호텔의 1박 요금은 각각 ₩136,382, ₩235,558입니다. 보다 럭셔리한 숙박 경험을 원할 경우 1박당 ₩292,203의 요금(Booking.com 요금 기준)으로 나라 5성급 호텔에서 머무실 수 있습니다.
             </p>
            </div>
           </div>
          </li>
          <li class="bui-accordion__row bui-accordion__row-slim" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Question">
           <button aria-controls="content-9" aria-expanded="false" class="bui-accordion__row-inner" data-bui-ref="accordion-button" type="button">
            <div class="bui-accordion__row-header">
             <h3 class="bui-accordion__title" itemprop="name">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
            </div>
            <span class="bui-accordion__icon-container" role="presentation">
             <svg class="bk-icon -iconset-navarrow_down bui-accordion__icon" height="24" role="presentation" viewbox="0 0 128 128" width="24">
              <path d="M64 88L33.2 57.2a4 4 0 0 1 5.6-5.7L64 76.7l25.2-25.2a4 4 0 0 1 5.6 5.7z">
              </path>
             </svg>
            </span>
           </button>
           <div class="bui-accordion__content" id="content-9" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
            <div itemprop="text">
             <p>
              가족 여행객 사이에서 호평을 받은 나라 호텔은
              <a href="/hotel/jp/noborioji.ko.html">
               Noborioji Hotel Nara
              </a>
              ,
              [linkx]
              
              ,
              [linkx]
              
              입니다.
             </p>
            </div>
           </div>
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
     <div data-et-view="IZVEdScdJXITbYFNbZdMENPIHe:1">
     </div>
     <div class="bui-spacer--largest">
      <div class="bui-banner bui-banner--image bui-u-bleed@small emk-banner" data-bui-component="Banner" data-component="dismissible-item/block" data-emk-subscription-success-remove="" data-item-id="emk_banner_index" id="emk_banner_index">
       <div class="bui-banner__image-container emk-banner__image">
        <svg height="96" style="margin: -1px;" viewbox="0 0 32 32" width="96" xmlns="http://www.w3.org/2000/svg">
         <path d="M15.967-.072C7.158-.072-.008 7.106-.008 15.929c0 8.822 7.166 15.999 15.975 15.999 8.837 0 16.025-7.177 16.025-15.999S24.803-.072 15.967-.072zm7.602 26.823l.034-.134c.054-.216.104-.431.157-.647a.936.936 0 0 0-1.147-1.077c-.404.117-.461-.135-.462-.144a.933.933 0 0 0-.77-.936.933.933 0 0 0-.543.062c-.246.03-.315-.106-.332-.155a.938.938 0 0 0-.772-.91 1.011 1.011 0 0 0-.486.038s-.437.01-.335-.588a.592.592 0 0 0 .009-.186l.698-5.066c.071-.654-.053-1.048-.554-1.132-.543-.09-.822.29-.914.799 0 0-1.602 7.001-1.859 9.367-.079.717-.143 1.843-.196 3.091l-.103.002c-4.35 0-8.208-2.112-10.61-5.368.19-.455.524-.986 1.105-1.529 1.589-1.488 3.391-.193 3.972.058.582.25 3.469 1.043 3.934-.464 0 0 .155-.522.116-1.565 0 0 .039-.483.775-.347.736.134 1.162-.812.406-1.605 0 0 .737-.56 1.124-1.198.388-.637-.135-.676-.251-.772-.116-.097-.426-.812.174-1.024s2.481-.541 1.609-1.933c-.872-1.391-1.512-2.145-1.802-3.265-.291-1.121-.251-1.372.136-1.874s.33-1.237.33-2.01c0-.294.035-.928-.023-1.699l-.068.119c-.556.965-1.855 1.774-2.72 2.413-1.728 1.274-3.82 1.951-5.627 3.09-1.999 1.261-3.188 3.21-3.852 5.441a19.076 19.076 0 0 0-.717 4.099c-.036.528-.031 1.09.008 1.653-2.351-4.849-1.522-10.844 2.512-14.867 2.781-2.773 6.502-4.012 10.14-3.758l-.002-.009c6.993.349 12.566 6.126 12.566 13.199 0 4.483-2.241 8.442-5.66 10.831zM13.473 9.329c.685-.495 1.112-.479 1.112-.479a.785.785 0 1 1 0 1.57.78.78 0 0 1-.578-.261c-.374-.322-.534-.83-.534-.83z" fill="#FEBA02">
         </path>
        </svg>
       </div>
       <div class="bui-banner__content emk-banner__content">
        <h1 class="bui-banner__title">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <p class="bui-banner__text">
         구독 즉시 인하된 요금을 확인하실 수 있어요!
        </p>
        <div class="bui-form__group emk-banner__form-container">
         <form action="/newslettersubscribe.html" class="emk-banner__form searchform-subscribe-box-form emk-subscription-entry-point " data-component="emk/subscription-entry-point emk/subscription-entry-point-feedback-msg" data-emk-collapsible-entry-point="" data-emk-entry-point-label="below-searchbox" data-signup-url=";auth_tab=signup" method="post" name="newsletterform">
          <div class="emk-banner__form-inputs">
           <button class="bui-button bui-button--secondary emk-banner__form-button" type="submit">
            <span class="bui-button__text">
             뉴스레터 수신하기!
            </span>
           </button>
          </div>
          <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -invalid" role="alert">
           <span aria-hidden="true" class="bicon-close">
           </span>
           <span class="invisible_spoken">
            오류:
           </span>
           유효한 이메일 주소를 입력해 주십시오
          </p>
          <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -error" role="alert">
           <span aria-hidden="true" class="bicon-close">
           </span>
           <span class="invisible_spoken">
            오류:
           </span>
           죄송합니다. 오류가 발생하였습니다.
          </p>
          <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -success" role="status">
           <span aria-hidden="true" class="bicon-checkyes">
           </span>
           감사합니다! 구독 절차를 완료하실 수 있도록 인증 이메일을 보내드렸습니다
          </p>
         </form>
        </div>
        <button aria-label="닫기" class="bui-banner__close" data-bui-ref="banner-close" id="emk_banner_index_close" type="button">
         <svg class="bk-icon -iconset-close" height="24" role="presentation" viewbox="0 0 128 128" width="24">
          <path d="M69.7 64l33.1-33.2a4 4 0 0 0-5.6-5.6L64 58.3 30.8 25.2a4 4 0 1 0-5.6 5.6L58.3 64 25.2 97.2a4 4 0 1 0 5.6 5.6L64 69.7l33.2 33.1a4 4 0 0 0 5.6-5.6z">
          </path>
         </svg>
        </button>
       </div>
      </div>
     </div>
     <div class="lp-bui-section bui-spacer--largest" data-ats="20">
      <header>
       <h2 class="bui-segment-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
      </header>
      <div aria-label="
나라에 대한 여행객 평가
" class="bui-carousel bui-carousel--large bui-u-bleed@small" data-bui-component="Carousel" role="region">
       <ul class="bui-carousel__inner" data-bui-ref="carousel-container">
        <li class="bui-carousel__item" data-bui-ref="carousel-item">
         <div class="bui-card bui-u-full-height">
          <div class="bui-card__content" style="display: flex; flex-flow: column;">
           <header class="bui-card__header">
            <span class=" review-score-widget review-score-widget__exceptional review-score-widget__score-only review-score-widget__14 review-score-widget__no-subtext ">
             <span aria-label="10" class="review-score-badge">
              10
             </span>
            </span>
            <h3 class="bui-card__title_review_inline bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
           </header>
           <div class="bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             #다리 아프게 걷고 또 걸어야 할 테니, 파스를 준비할 것!
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" data-et-click="customGoal::3" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="bui-avatar-block bui-avatar-block">
            <div class="bui-avatar bui-avatar">
             <div class="bui-avatar ">
             </div>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              익명
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item">
         <div class="bui-card bui-u-full-height">
          <div class="bui-card__content" style="display: flex; flex-flow: column;">
           <header class="bui-card__header">
            <span class=" review-score-widget review-score-widget__exceptional review-score-widget__score-only review-score-widget__14 review-score-widget__no-subtext ">
             <span aria-label="10" class="review-score-badge">
              10
             </span>
            </span>
            <h3 class="bui-card__title_review_inline bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
           </header>
           <div class="bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             일본 관서 지방의 대표적인 여행지 중의 하나이지만, 
교토에 비해 크기와 스케일이 작죠.
하지만, 그렇기 때문에 고즈넉하고 쾌적할 수 있는 것 같아요
무엇보다...
공기가 정말 좋아요
공기가 좋다... 여러가지 의미가 있어요
휴대폰 카메라를 꺼내 사진을 찍어 보세요.
입과 코로 들이마시는 맑은 느낌이 눈으로 그대로 표현됩니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" data-et-click="customGoal::3" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="bui-avatar-block bui-avatar-block">
            <div class="bui-avatar bui-avatar">
             <div class="bui-avatar ">
             </div>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              익명
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item">
         <div class="bui-card bui-u-full-height">
          <div class="bui-card__content" style="display: flex; flex-flow: column;">
           <header class="bui-card__header">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__score-only review-score-widget__14 review-score-widget__no-subtext ">
             <span aria-label="8.0" class="review-score-badge">
              8.0
             </span>
            </span>
            <h3 class="bui-card__title_review_inline bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
           </header>
           <div class="bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             산책하기 좋고 자유여행에 어려움이 없는 나라
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" data-et-click="customGoal::3" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="bui-avatar-block bui-avatar-block">
            <div class="bui-avatar bui-avatar">
             <div class="bui-avatar ">
             </div>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              우
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item">
         <div class="bui-card bui-u-full-height">
          <div class="bui-card__content" style="display: flex; flex-flow: column;">
           <header class="bui-card__header">
            <span class=" review-score-widget review-score-widget__exceptional review-score-widget__score-only review-score-widget__14 review-score-widget__no-subtext ">
             <span aria-label="10" class="review-score-badge">
              10
             </span>
            </span>
            <h3 class="bui-card__title_review_inline bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
           </header>
           <div class="bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             나라를 방문하신다면 호류지를 꼭~ 반드시 방문해 보시기를 권합니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" data-et-click="customGoal::3" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="bui-avatar-block bui-avatar-block">
            <div class="bui-avatar bui-avatar">
             <div class="bui-avatar ">
             </div>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              익명
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item">
         <div class="bui-card bui-u-full-height">
          <div class="bui-card__content" style="display: flex; flex-flow: column;">
           <header class="bui-card__header">
            <span class=" review-score-widget review-score-widget__exceptional review-score-widget__score-only review-score-widget__14 review-score-widget__no-subtext ">
             <span aria-label="10" class="review-score-badge">
              10
             </span>
            </span>
            <h3 class="bui-card__title_review_inline bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
           </header>
           <div class="bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             사슴공원 인상 깊었고, 한적하고 쾌적하고 조용한 느낌으로 매우 좋았습니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" data-et-click="customGoal::3" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="bui-avatar-block bui-avatar-block">
            <div class="bui-avatar bui-avatar">
             <div class="bui-avatar ">
             </div>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              익명
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item">
         <div class="bui-card bui-u-full-height">
          <div class="bui-card__content" style="display: flex; flex-flow: column;">
           <header class="bui-card__header">
            <span class=" review-score-widget review-score-widget__exceptional review-score-widget__score-only review-score-widget__14 review-score-widget__no-subtext ">
             <span aria-label="10" class="review-score-badge">
              10
             </span>
            </span>
            <h3 class="bui-card__title_review_inline bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
           </header>
           <div class="bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             사슴밭 , 사슴들 너무 순하고 귀엽고 예쁘다 ㅜㅜ 자유롭게 풀어놔서 더 좋았다
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" data-et-click="customGoal::3" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="bui-avatar-block bui-avatar-block">
            <div class="bui-avatar bui-avatar">
             <div class="bui-avatar ">
             </div>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Yunjeung
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
       </ul>
       <div class="bui-carousel__nav">
        <button aria-label="Previous content" class="bui-carousel__button" data-bui-ref="carousel-prev" type="button">
         <svg class="bk-icon -iconset-navarrow_left bui-carousel__prev" height="32" role="presentation" viewbox="0 0 128 128" width="32">
          <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
          </path>
         </svg>
        </button>
        <button aria-label="Next content" class="bui-carousel__button" data-bui-ref="carousel-next" type="button">
         <svg class="bk-icon -iconset-navarrow_right bui-carousel__next" height="32" role="presentation" viewbox="0 0 128 128" width="32">
          <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          </path>
         </svg>
        </button>
       </div>
      </div>
     </div>
     <div class="lp-bui-section bui-spacer--largest" data-ats="21">
      <header class="bui-segment-header-exit">
       <h2 class="bui-segment-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
       <div class="bui-segment-header-exit-wrap">
        <a class="bui-button bui-button--secondary" data-et-click="customGoal:IZVGPCbGNMPXKdXUC:1" href="/searchresults.ko.html?city=-238469;nflt=ht_id%3D204&amp;" type="button">
         <span class="bui-button__text">
          모두 보기
         </span>
        </a>
       </div>
      </header>
      <div aria-label="나라 호텔에 관한 고객 이용후기가 궁금하지 않으세요?" class="bui-carousel bui-carousel--large bui-u-bleed@small" data-bui-component="Carousel" role="region">
       <ul class="bui-carousel__inner" data-bui-ref="carousel-container">
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <a class="bui-card__header_full_link_wrap" href="/hotel/jp/super-lohas-jr-nara-eki-nara.ko.html">
              <h3 class="bui-card__title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
              <h4 class="bui-card__subtitle">
               나라 호텔
              </h4>
             </a>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩57,157
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.0" class="review-score-badge">
              9.0
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="2,317개 이용 후기 기준" class="review-score-widget__subtext">
              2,317개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             천연 온천을 이용할 수 있습니다. 100m 가량 떨어져 있긴하지만 하루에 1,000엔으로 주차장을 이용할 수 있습니다. 숙박료에 포함된 뷔페 조식도 나쁘지 않습니다. 체크아웃이 필요 없습니다. 4층에 흡연실이 있습니다. JR 나라역과 붙어 있습니다. (역전광장에는 버스정류장이 있습니다.)
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              urbnplnr
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩15,314
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.0" class="review-score-badge">
              9.0
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="1,143개 이용 후기 기준" class="review-score-widget__subtext">
              1,143개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             이쁩니다!!!! 정원이 있어서 사진찍을곳도 많고 일본느낌을 많이 느낄 수 있습니다:) (약간 아이유 밤편지앨범느낌이에용) 나라역까지 걸어서 15분 걸리지만 자전거 대여 서비스를 이용하면 괜찮았습니다. 영어를 잘하셔서 소통하는데 문제가없습니다! 그리고 정말 친절하십니다 감동
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
             <span class="c-avatar__loginicon bicon-mybooking">
             </span>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              쵸파
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩69,883
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.9" class="review-score-badge">
              8.9
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="467개 이용 후기 기준" class="review-score-widget__subtext">
              467개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             나라시 동대사 옆에 있어서 걸어서 동대사 나라공원 등 관광지 주변을 걸어 다녔어요
1층에 작은 목욕탕이 있어서 샤워는 편안하게 잘 했어요
참고, 렌트카 했는데 1일 500엔 받아요
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              boknam
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <a class="bui-card__header_full_link_wrap" href="/hotel/jp/oyado-nono-nara.ko.html">
              <h3 class="bui-card__title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
              <h4 class="bui-card__subtitle">
               나라 호텔
              </h4>
             </a>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩81,961
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.2" class="review-score-badge">
              9.2
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="3,878개 이용 후기 기준" class="review-score-widget__subtext">
              3,878개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             JR나라역과 매우가깝고 이타미공항이나 간사이공항 모두 리무진버스 정류장이  가까워 이동하기에 매우 편했습니다
또한 저녁 9-11시 사이에 무료로 제공하는 라멘도 맛있었어요!
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              JONH HYUN CHOI
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩22,917
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.2" class="review-score-badge">
              9.2
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="563개 이용 후기 기준" class="review-score-widget__subtext">
              563개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             간사이공항 리무진 긴테츠나라역 및 사슴공원과 정말 가깝고(3~5분 거리) 이불이 너무 포근해서 깊은잠을 잘 수 있었어요
다음에 간다면 또 이용하고 싶습니다
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Young Sun Kim
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩17,471
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.2" class="review-score-badge">
              9.2
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="2,631개 이용 후기 기준" class="review-score-widget__subtext">
              2,631개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             나라역에서 3분거리에요 !!
비가 많이 오는 날이었는데 정말 좋았고, 파우더룸이랑 샤워실이 객실과 문을 두고있어서 피해가 안 가게 좋았습니다
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              원진
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             [linkx]
             
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩45,294
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.1" class="review-score-badge">
              8.1
             </span>
             <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
              매우 좋음
             </span>
             <span aria-label="1,902개 이용 후기 기준" class="review-score-widget__subtext">
              1,902개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             가격대비 만족스러움. JR나라역에서 가까워서 편리했음.
다음에 나라에 다시 머문다면 이곳에 재방문 할 것임.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              chorong2go
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             [ahref]
             
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩57,157
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.0" class="review-score-badge">
              9.0
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="3,184개 이용 후기 기준" class="review-score-widget__subtext">
              3,184개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             나라역에서 가깝고 한국인 직원이 많은점...
조식이 크고 다양하지는 않지만 정갈한 음식들..
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              kim ji young
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             [linkx]
             
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩27,953
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.4" class="review-score-badge">
              8.4
             </span>
             <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
              매우 좋음
             </span>
             <span aria-label="1,012개 이용 후기 기준" class="review-score-widget__subtext">
              1,012개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             위치가 나라공원 바로 옆이라 아주 좋음. 킨테츠나라역이랑도 도보로 5분거리
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Hyeyoung
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             [linkx]
             
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩83,040
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__very_good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.4" class="review-score-badge">
              8.4
             </span>
             <span aria-label="평가 - 매우 좋음" class="review-score-widget__text">
              매우 좋음
             </span>
             <span aria-label="1,624개 이용 후기 기준" class="review-score-widget__subtext">
              1,624개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             친절한 접객, 깨끗한 숙소, JR나라역 접근성 최고
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Noel Yoon
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩45,294
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="7.8" class="review-score-badge">
              7.8
             </span>
             <span aria-label="평가 - 좋음" class="review-score-widget__text">
              좋음
             </span>
             <span aria-label="128개 이용 후기 기준" class="review-score-widget__subtext">
              128개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             The location next to Shin-Omiya station (Kintetsu line, not JR) is convenient. But Nara station (JR) is also not too far to walk the distance.The staff was friendly and helpful and there is a lot of material for planning your sightseeing in Nara at the hotel room.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Alexander
             </span>
             <span class="bui-avatar-block__subtitle">
              독일
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩326,119
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.1" class="review-score-badge">
              9.1
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="231개 이용 후기 기준" class="review-score-widget__subtext">
              231개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             모든것이 완벽했다.비용이 1%도 아깝지 않은 최고의 시간Everything is trully perfect.This ryokan is the best ever!!!I really appreciated kindness of musashino members
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Minjoo Han
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩29,980
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.9" class="review-score-badge">
              8.9
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="930개 이용 후기 기준" class="review-score-widget__subtext">
              930개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             주변 관광지와의 접근성은 물론 버스 정류장도 굉장히 가까이 있어 역에서 편하게 갈 수 있었습니다.
체크인 할 때에 종업원 분이 주변 관광지를 추천해주셔서 즐겁게 관광할 수 있었고 숙박 시설 역시 깔끔했습니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              Jinwook
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩25,882
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.9" class="review-score-badge">
              8.9
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="686개 이용 후기 기준" class="review-score-widget__subtext">
              686개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             스텝 분들 친절합니다, 제가 일본어 못해서 도움 필요할 때 친절하게 도와주셨습니다. 정원 예쁩니다. 편안합니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              QIAN
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩10,774
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__good review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="7.8" class="review-score-badge">
              7.8
             </span>
             <span aria-label="평가 - 좋음" class="review-score-widget__text">
              좋음
             </span>
             <span aria-label="1,040개 이용 후기 기준" class="review-score-widget__subtext">
              1,040개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             숙소가 깨끗하고 아늑하니 좋았습니다 침대도 푹신하고 그냥 다 좋았네요!! 주인분도 너무너무 친절하세요♡
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
             <span class="c-avatar__loginicon bicon-mybooking">
             </span>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              면면.
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩111,812
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__superb review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="9.0" class="review-score-badge">
              9.0
             </span>
             <span aria-label="평가 - 매우 우수함" class="review-score-widget__text">
              최고
             </span>
             <span aria-label="115개 이용 후기 기준" class="review-score-widget__subtext">
              115개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             료칸이라는 가격 대비 저렴했고 생각보다 넓어서 놀랐습니다. 노천탕이랑 대욕탕의 물이 너무 좋았어요~
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li><li>[ahref]</li>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩21,569
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.8" class="review-score-badge">
              8.8
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="385개 이용 후기 기준" class="review-score-widget__subtext">
              385개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             직원분들이 친절하고 방도 깨끗합니다. 게스트하우스입구 카페에서 간단하게 생맥주 한잔 하기도 좋네요!
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              YOUNG JUN
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             [linkx]
             
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩204,989
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.6" class="review-score-badge">
              8.6
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="810개 이용 후기 기준" class="review-score-widget__subtext">
              810개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             주변 사슴공원. 정원. 호텔 역사. 직원 봉사. 근대풍 객실. 시설. 위치. 모두 좋았음
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
             <span class="c-avatar__loginicon bicon-mybooking">
             </span>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              부희 이
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <a class="bui-card__header_full_link_wrap" href="/hotel/jp/piazza-nara.ko.html">
              <h3 class="bui-card__title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
              <h4 class="bui-card__subtitle">
               나라 호텔
              </h4>
             </a>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩73,334
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__fabulous review-score-widget__text-only review-score-widget__inline ">
             <span aria-label="8.9" class="review-score-badge">
              8.9
             </span>
             <span aria-label="평가 - 우수함" class="review-score-widget__text">
              우수함
             </span>
             <span aria-label="683개 이용 후기 기준" class="review-score-widget__subtext">
              683개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             현대적이고 모던한 분위기 청결도 야경이 보이는 방등 모든면에서 다 좋았습니다.
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
             <span class="c-avatar__loginicon bicon-mybooking">
             </span>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              이대익
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="bui-carousel__item" data-bui-ref="carousel-item" style="display: flex;">
         <div class="bui-card bui-u-bleed@small" style="display: flex; flex-flow: column;">
          <div class="bui-card__content hotel-card__review" style="display: flex; flex-grow: 0;">
           <div>
            <header class="bui-card__header">
             <h3 class="bui-card__title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <h4 class="bui-card__subtitle">
              나라
             </h4>
            </header>
           </div>
          </div>
          <div class="bui-card__content" style="padding-top: 0;">
           <div class="hotel-card__price bui-spacer--small" style="font-size: 14px; line-height: 20px; font-weight: 500;">
            1박 평균 ₩232,942
           </div>
           <p class="bui-card__text bui-spacer--medium">
            <span class=" review-score-widget review-score-widget__good review-score-widget__text-only review-score-widget__inline ">
             <[area1][keywordx]>
             </[area1][keywordx]>
             <span aria-label="평가 - 좋음" class="review-score-widget__text">
              좋음
             </span>
             <span aria-label="10개 이용 후기 기준" class="review-score-widget__subtext">
              10개 이용 후기
             </span>
            </span>
           </p>
           <div class="hotel-card__text bui-spacer--medium" style="flex-grow: 1;">
            <p class="bui-card__text hotel-card__text--wrapped">
             진짜 다 좋음 근데 온천에서 우유가 없고 탁구대가 없어
            </p>
            <div class="hotel-card__read_more_container js-hotel-card__read_more_container">
             <span class="hotel-card__read_more_button js-hotel-card__read_more_button" role="button">
              <span class="hotel-card__read_more bui-link bui-link--secondary">
               더 보기
              </span>
              <span class="hotel-card__read_less bui-link bui-link--secondary">
               숨기기
              </span>
             </span>
            </div>
           </div>
           <div class="c-guest bui-avatar-block">
            <div class="bui-avatar ">
             <span class="c-avatar__loginicon bicon-mybooking">
             </span>
            </div>
            <div class="bui-avatar-block__text">
             <span class="bui-avatar-block__title">
              키ㄹㅏ
             </span>
             <span class="bui-avatar-block__subtitle">
              대한민국
             </span>
            </div>
           </div>
          </div>
         </div>
        </li>
       </ul>
       <div class="bui-carousel__nav">
        <button aria-label="Previous content" class="bui-carousel__button" data-bui-ref="carousel-prev" type="button">
         <svg class="bk-icon -iconset-navarrow_left bui-carousel__prev" height="32" role="presentation" viewbox="0 0 128 128" width="32">
          <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
          </path>
         </svg>
        </button>
        <button aria-label="Next content" class="bui-carousel__button" data-bui-ref="carousel-next" type="button">
         <svg class="bk-icon -iconset-navarrow_right bui-carousel__next" height="32" role="presentation" viewbox="0 0 128 128" width="32">
          <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
          </path>
         </svg>
        </button>
       </div>
      </div>
     </div>
     <div data-et-view="IZVGHHPVUbBCdJabeQcJPFeNC:1">
     </div>
     <div class="lp-bui-section lp-bui-section-popular-themes bui-spacer--largest">
      <div class="bui-spacer--largest">
       <header>
        <h2 class="bui-segment-header">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
       </header>
       <div aria-label="Property types" class="bui-carousel bui-carousel--small bui-u-bleed@small" data-bui-component="Carousel" role="region">
        <ul class="bui-carousel__inner" data-bui-ref="carousel-container">
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/hostels/city/jp/nara.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             나라 20개 호스텔
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/accessible-traveling/city/jp/nara.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <h4 class="bui-card__subtitle">
             나라 배리어프리 호텔 10개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/luxury/city/jp/nara.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             나라 6개 럭셔리 호텔
            </h4>
           </div>
          </a>
         </li>
        </ul>
        <div class="bui-carousel__nav">
         <button aria-label="Previous content" class="bui-carousel__button" data-bui-ref="carousel-prev" type="button">
          <svg class="bk-icon -iconset-navarrow_left bui-carousel__prev" height="32" role="presentation" viewbox="0 0 128 128" width="32">
           <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
           </path>
          </svg>
         </button>
         <button aria-label="Next content" class="bui-carousel__button" data-bui-ref="carousel-next" type="button">
          <svg class="bk-icon -iconset-navarrow_right bui-carousel__next" height="32" role="presentation" viewbox="0 0 128 128" width="32">
           <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
           </path>
          </svg>
         </button>
        </div>
       </div>
      </div>
     </div>
     <div class="lp-bui-section bui-spacer--largest" data-et-view="customGoal:IZVHIbFMcabCCAeUDAOdbIVXVae:2">
      <div class="bui-spacer--largest">
       <header>
        <h2 class="bui-segment-header">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h2>
       </header>
       <div aria-label="나라 및 주변 상품" class="bui-carousel bui-carousel--small bui-u-bleed@small" data-bui-component="Carousel" role="section">
        <ul class="bui-carousel__inner" data-bui-ref="carousel-container">
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/kyoto.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 2702개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/otsu.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 57개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/seika.ko.html">
           <div class="bui-card__image-container">
            <span class="bui-card__image__placeholder_small">
             <svg class="bk-icon -iconset-city bui-card__image__placeholder_icon" fill="white" height="64" viewbox="0 0 128 128" width="64">
              <path d="M24 88h8v16h-8zm0-16h8V56h-8zm32 32h8V88h-8zm0-32h8V56h-8zm0-32h8V24h-8zm64 16v60a4 4 0 0 1-4 4H12a4 4 0 0 1-4-4V44a4 4 0 0 1 4-4h28V12a4 4 0 0 1 4-4h32a4 4 0 0 1 4 4v58.3l5.2-5.1a4 4 0 0 1 5.6 0l5.2 5.1V56a4 4 0 0 1 .3-1.5l8-20a4 4 0 0 1 7.4 0l8 20a4 4 0 0 1 .3 1.5zM16 112h24V48H16zm32 0h24V16H48v96zm32 0h16V81.7l-8-8-8 8zm32-55.2l-4-10-4 10V112h8z">
              </path>
             </svg>
            </span>
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 2개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/kasagicho.ko.html">
           <div class="bui-card__image-container">
            <span class="bui-card__image__placeholder_small">
             <svg class="bk-icon -iconset-city bui-card__image__placeholder_icon" fill="white" height="64" viewbox="0 0 128 128" width="64">
              <path d="M24 88h8v16h-8zm0-16h8V56h-8zm32 32h8V88h-8zm0-32h8V56h-8zm0-32h8V24h-8zm64 16v60a4 4 0 0 1-4 4H12a4 4 0 0 1-4-4V44a4 4 0 0 1 4-4h28V12a4 4 0 0 1 4-4h32a4 4 0 0 1 4 4v58.3l5.2-5.1a4 4 0 0 1 5.6 0l5.2 5.1V56a4 4 0 0 1 .3-1.5l8-20a4 4 0 0 1 7.4 0l8 20a4 4 0 0 1 .3 1.5zM16 112h24V48H16zm32 0h24V16H48v96zm32 0h16V81.7l-8-8-8 8zm32-55.2l-4-10-4 10V112h8z">
              </path>
             </svg>
            </span>
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 2개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/shijonawate.ko.html">
           <div class="bui-card__image-container">
            <span class="bui-card__image__placeholder_small">
             <svg class="bk-icon -iconset-city bui-card__image__placeholder_icon" fill="white" height="64" viewbox="0 0 128 128" width="64">
              <path d="M24 88h8v16h-8zm0-16h8V56h-8zm32 32h8V88h-8zm0-32h8V56h-8zm0-32h8V24h-8zm64 16v60a4 4 0 0 1-4 4H12a4 4 0 0 1-4-4V44a4 4 0 0 1 4-4h28V12a4 4 0 0 1 4-4h32a4 4 0 0 1 4 4v58.3l5.2-5.1a4 4 0 0 1 5.6 0l5.2 5.1V56a4 4 0 0 1 .3-1.5l8-20a4 4 0 0 1 7.4 0l8 20a4 4 0 0 1 .3 1.5zM16 112h24V48H16zm32 0h24V16H48v96zm32 0h16V81.7l-8-8-8 8zm32-55.2l-4-10-4 10V112h8z">
              </path>
             </svg>
            </span>
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 2개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item">
          [linkx]
          
         </li>
        </ul>
        <div class="bui-carousel__nav">
         <button aria-label="Previous content" class="bui-carousel__button" data-bui-ref="carousel-prev" type="button">
          <svg class="bk-icon -iconset-navarrow_left bui-carousel__prev" height="32" role="presentation" viewbox="0 0 128 128" width="32">
           <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
           </path>
          </svg>
         </button>
         <button aria-label="Next content" class="bui-carousel__button" data-bui-ref="carousel-next" type="button">
          <svg class="bk-icon -iconset-navarrow_right bui-carousel__next" height="32" role="presentation" viewbox="0 0 128 128" width="32">
           <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
           </path>
          </svg>
         </button>
        </div>
       </div>
      </div>
     </div>
     <div data-et-view="IZVEdQBDVAcC:2">
     </div>
     <div class="lp-bui-section bui-spacer--largest">
      <div class="bui-spacer--largest">
       <header>
        <h2 class="bui-segment-header">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
       </header>
       <div aria-label="나라 방문을 원하는 고객이 검색한 다른 여행지:" class="bui-carousel bui-carousel--small bui-u-bleed@small" data-bui-component="Carousel" role="section">
        <ul class="bui-carousel__inner" data-bui-ref="carousel-container">
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [ahref]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/himeji.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 51개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/izumi-sano.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 47개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [linkx]
          
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/wakayama-jp-1.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 37개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          <a class="bui-card bui-card--media bui-card--transparent" href="/city/jp/hikone.ko.html">
           <div class="bui-card__image-container">
           </div>
           <div class="bui-card__content">
            <h3 class="bui-card__title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <h4 class="bui-card__subtitle">
             호텔 25개
            </h4>
           </div>
          </a>
         </li>
         <li class="bui-carousel__item" data-bui-ref="carousel-item" data-et-click="customGoal:IZVEdQBDVAcC:1">
          [ahref]
          
         </li>
        </ul>
        <div class="bui-carousel__nav">
         <button aria-label="Previous content" class="bui-carousel__button" data-bui-ref="carousel-prev" type="button">
          <svg class="bk-icon -iconset-navarrow_left bui-carousel__prev" height="32" role="presentation" viewbox="0 0 128 128" width="32">
           <path d="M73.7 96a4 4 0 0 1-2.9-1.2L40 64l30.8-30.8a4 4 0 0 1 5.7 5.6L51.3 64l25.2 25.2a4 4 0 0 1-2.8 6.8z">
           </path>
          </svg>
         </button>
         <button aria-label="Next content" class="bui-carousel__button" data-bui-ref="carousel-next" type="button">
          <svg class="bk-icon -iconset-navarrow_right bui-carousel__next" height="32" role="presentation" viewbox="0 0 128 128" width="32">
           <path d="M54.3 96a4 4 0 0 1-2.8-6.8L76.7 64 51.5 38.8a4 4 0 0 1 5.7-5.6L88 64 57.2 94.8a4 4 0 0 1-2.9 1.2z">
           </path>
          </svg>
         </button>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="slinks ">
  </div>
  <div class="footerconstraint cnd-onview-anchor footer_no_lang_track a11y_fix_footer_contrast_footerconstraint " id="footer_menu_track" role="contentinfo">
   <div class="footer-wrapper" id="booking-footer">
    <div class="footer-top-menu" id="footer_top_menu">
     <div class="footer-top-partners clearfix">
      [ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]<li>[area1][mkey1]</li><li>[linkx]</li>
     </div>
     <div class="footerconstraint-inner clearfix">
      <div id="footertopnav" role="navigation">
       <ul class="footer-top-links-list">
        <li class="footer-top-link">
         [linkx]
         
        </li>
        <li class="footer-top-link">
         <a href="/city/jp/nara.ko.html" rel="nofollow">
          스마트폰 버전
         </a>
        </li>
        <li class="footer-top-link">
         [linkx]
         
        </li>
        <li class="footer-top-link">
         [linkx]
         
        </li>
        <li class="footer-top-link" data-ga-track="click|CSIR|CS|footer_top_customer_service_help">
         <form action="/content/cs.ko.html" id="customer_service_form" method="get">
         </form>
        </li>
        <li class="footer-top-link">
         [linkx]
         
        </li>
        <li class="footer-top-link">
         [linkx]
         
        </li>
        <div>
        </div>
       </ul>
      </div>
     </div>
    </div>
    <div class="footerconstraint-inner">
     <div class="footer-navigation-links-wrapper clearfix" id="footer" role="navigation">
      <div class="footer-navigation-links" id="footer_links">
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="seoindexlinks" href="/airport
.ko.html
" rel="nofollow">
           공항
          </a>
         </li>
         <li class="footer-navigation-link">
          <a data-ga="seoindexlinks" href="/hotel
.ko.html
" rel="nofollow">
           호텔
          </a>
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [area1][keywordx][linkx][linkx][ahref][area1][mkey1][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][linkx][linkx][ahref][ahref][linkx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][pkeyx]<li>[pkeyx]</li><li>[linkx]</li><li>[area1][mkey1]</li>
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="resorts" href="/resorts/index.ko.html">
           리조트
          </a>
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga="bed_and_breakfast" href="/bed-and-breakfast/index.ko.html">
           베드앤브렉퍼스트
          </a>
         </li>
         <li class="footer-navigation-link">
          <a data-ga="guest_house" href="/guest-house/index.ko.html">
           게스트하우스
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          <a href="/destination/city/jp/nara.ko.html">
           나라 내 호텔
          </a>
         </li>
         <li class="footer-navigation-link">
          <a class="js-reviews-footer-link" data-ga="seoindexlinks" href="/reviews
.ko.html
">
           이용 후기
[ahref]<li>[pkeyx]</li><li>[ahref]</li><li>[area1][keywordx]</li>
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list">
         <li class="footer-navigation-link">
          [linkx]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga-track="click|pageview:/internallink/partner/footer/adviserslink/city/ko" href="/travel_agents/index.ko.html" title="Booking.com for Travel Advisers">
           Booking.com 여행사
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-navigation-links-column">
        <ul class="footer-navigation-links-list" data-et-view="NVNZWUcCcCcCJbYRObBHVfBJOeBLZET:1 NVNZWUcCcCcCJbYRObBHVfBJOeBLZET:7">
         <li class="footer-navigation-link">
          <a href="/content/about.ko.html">
           Booking.com 소개
          </a>
         </li>
         <li class="footer-navigation-link">
          <a class="provide_website_feedback" href="#">
           웹사이트 피드백
          </a>
         </li>
         <li class="footer-navigation-link">
          <div>
          </div>
          <div>
          </div>
          <a data-ga-track="click|CSIR|CS|footer_link_customer_service_help" href="/content/cs.ko.html;from_footer=1">
           고객 지원
          </a>
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          <a data-ga-track="click|pageview:/outgoinglink/footer/careerlink/ko" href="/?utm_source=corporate&amp;utm_medium=footer">
           Careers
          </a>
         </li>
         <li class="footer-navigation-link">
          <a class="tracked" data-google-track="Click/Action: about_us/press" href="/?aid=304142&amp;lang=ko">
           보도 자료
          </a>
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [ahref]
          
         </li>
         <li class="footer-navigation-link">
          [linkx]
           [area1][mkey1][ahref][area1][mkey1][linkx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][mkey1][ahref][area1][mkey1][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
          
         </li>
         <li class="footer-navigation-link" data-ga-track="click|CSIR|CS|footer_link_contact_us">
          <a href="/content/contact-us.ko.html">
           문의처
          </a>
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="footer-offices footerconstraint-inner">
     <div class="footer-offices-copy">
      <div data-component="csir-ga-tracking" data-cs-ga-track="CSIR|CS|footer_offices_worldwide">
       네덜란드 암스테르담에 본사를 둔 Booking.com B.V.는 전세계
       <a class="link_about" href="/content/offices.ko.html" rel="nofollow">
        70개국
       </a>
       [linkx]
        [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][area1][mkey1][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][mkey1][ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
       
       을 개설하여 밀착 서비스를 지원하고 있습니다.
      </div>
     </div>
    </div>
    <div aria-label="지금 무료 Booking.com 앱을 받으세요" class="local_info_bot footerconstraint-inner" role="region">
     <div class="local_info_bot_inner">
      <div class="extranet_link_container">
       [linkx]
       
      </div>
      <div class="footercopyright ">
       <div class="whitebar">
        <div class="copyright_text">
         저작권 © 1996–2019
Booking.com™. 모든 권리 보유.
        </div>
       </div>
      </div>
     </div>
     <div style="clear:both;">
     </div>
    </div>
    <div class="footer-logos footerconstraint-inner">
     <div class="footer__priceline">
      <p class="footer__priceline__title">
       Booking.com은 전 세계를 선도하는 온라인 여행 서비스 기업인 Booking Holdings Inc.의 그룹사입니다.
      </p>
      <div class="footer__priceline__list">
       <ul>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0353
  </b>
 </body>
</html>
<div id="revc_write_a_review_login_intro" style="display:none;" tabindex="-1">
 <span class="invisible_spoken">
  대화 상자 내용이 시작됩니다
 </span>
 <div class="intro_header">
  <h1>
   <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
  </h1>
  <p>
   <strong>
    실제 투숙객이 작성한
   </strong>
   7천만 개 이상의 숙소 후기를 제공합니다.
  </p>
 </div>
 <div class="rlp-intro">
  <div class="rlp-intro__container clearfix">
   <h2 class="rlp-intro__title rlp-intro__a11y-exp-title">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h2>
   <ul class="rlp-intro-how a11y_contrast_blue_gray">
    <li class="rlp-intro-how__item fl">
     <div class="rlp-intro-how__container rlp-intro-how__container--tickfull">
      <div class="rlp-intro-how__sub-container">
       <p class="rlp-intro-how__num rlp-intro-how__num--tickfull">
        1
       </p>
       <p aria-hidden="true" class="rlp-intro-how__icon bicon-tickfull">
       </p>
      </div>
     </div>
     <h3 class="rlp-intro-how__title rlp-intro-how__a11y-exp-title">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <span class="rlp-intro-how__title rlp-intro-how__caption">
      손님이 숙소를 예약하고
     </span>
     <p class="rlp-intro-how__desc">
      이용 후기를 작성할 수 있는 유일한 방법은 먼저 예약하는 것입니다. Booking.com 이용 후기는 오직 실제 투숙객만 쓸 수 있습니다.
     </p>
    </li>
    <li aria-hidden="true" class="rlp-intro-how__arrow fl">
     <p class="rlp-intro-how__arrow-icon bicon-rightchevron">
     </p>
    </li>
    <li class="rlp-intro-how__item fl">
     <div class="rlp-intro-how__container rlp-intro-how__container--citytrip">
      <div class="rlp-intro-how__sub-container">
       <p class="rlp-intro-how__num rlp-intro-how__num--citytrip">
        2
       </p>
       <p aria-hidden="true" class="rlp-intro-how__icon bicon-citytrip">
       </p>
      </div>
     </div>
     <h3 class="rlp-intro-how__title rlp-intro-how__a11y-exp-title">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <span class="rlp-intro-how__title rlp-intro-how__caption">
      실제로 머문 후
     </span>
     <p class="rlp-intro-how__desc">
      숙소에 도착한 손님은 객실은 조용한가, 음식이 맛있는가, 직원이 친절한가 등을 평가합니다.
     </p>
    </li>
    <li aria-hidden="true" class="rlp-intro-how__arrow fl">
     <p class="rlp-intro-how__arrow-icon bicon-rightchevron">
     </p>
    </li>
    <li class="rlp-intro-how__item fl">
     <div class="rlp-intro-how__container rlp-intro-how__container--feedback">
      <div class="rlp-intro-how__sub-container">
       <p class="rlp-intro-how__num rlp-intro-how__num--feedback">
        3
       </p>
       <p aria-hidden="true" class="rlp-intro-how__icon bicon-feedback">
       </p>
      </div>
     </div>
     <h3 class="rlp-intro-how__title rlp-intro-how__a11y-exp-title">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <span class="rlp-intro-how__title rlp-intro-how__caption">
      돌아와서 후기를 남깁니다
     </span>
     <p class="rlp-intro-how__desc">
      여행에서 돌아온 투숙객이 숙소에 대해 들려줍니다. 모든 후기는 비속어 유무와 진실성 여부 확인 후 Booking.com 사이트에 등록됩니다.
     </p>
    </li>
   </ul>
  </div>
 </div>
 <p>
  Booking.com에서 예약하고 후기를 남기고 싶다면 먼저 로그인하세요.
 </p>
 <div class="intro_footer">
  [ahref]
  
 </div>
 <span class="invisible_spoken">
  대화 상자 내용이 끝났습니다
 </span>
</div>
<div class="newcalendar singleCalendar" id="calendar_popup" style="display:none; ">
 <div class="calendar_popup_title">
  <p id="calendar_check_in_title">
   체크인 날짜
  </p>
  <p id="calendar_check_out_title">
   체크아웃 날짜
  </p>
 </div>
 <div class="browseCalendar">
  [ahref]
  
  <select title="체크인 날짜/체크아웃 날짜">
   <option class="b_months" value="2019-7">
   </option>
   <option class="b_months" value="2019-8">
   </option>
   <option class="b_months" value="2019-9">
   </option>
   <option class="b_months" value="2019-10">
   </option>
   <option class="b_months" value="2019-11">
   </option>
   <option class="b_months" value="2019-12">
   </option>
   <option class="b_months" value="2020-1">
   </option>
   <option class="b_months" value="2020-2">
   </option>
   <option class="b_months" value="2020-3">
   </option>
   <option class="b_months" value="2020-4">
   </option>
   <option class="b_months" value="2020-5">
   </option>
   <option class="b_months" value="2020-6">
   </option>
   <option class="b_months" value="2020-7">
   </option>
   <option class="b_months" value="2020-8">
   </option>
   <option class="b_months" value="2020-9">
   </option>
   <option class="b_months" value="2020-10">
   </option>
  </select>
  [linkx]
  
 </div>
 <table>
  <tbody>
   <tr>
    <th>
     (월)
    </th>
    <th>
     (화)
    </th>
    <th>
     (수)
    </th>
    <th>
     (목)
    </th>
    <th>
     (금)
    </th>
    <th>
     (토)
    </th>
    <th>
     (일)
    </th>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
   <tr>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td>
    </td>
    <td class="wk_ar">
    </td>
    <td class="wk wk_ar">
    </td>
    <td class="wk">
    </td>
   </tr>
  </tbody>
 </table>
 <span class="calendar_close">
  닫기
 </span>
</div>
<div class="white" id="notification_lightbox" style="display: none;">
 <div class="sf_container">
  <div class="subsc_form">
   <form action="/newslettersubscribe.html" class="emk-subscription-entry-point " data-component="emk/subscription-entry-point emk/subscription-entry-point-feedback-msg" data-emk-entry-point-label="bounce-intent-modal" data-emk-entry-point-view-event="emk-bounce-intent-modal:open" method="post">
    <div class="newsletter_form_fields">
     <h4 class="subsc_title">
      나라 최대 50% 할인
     </h4>
     <p>
      이메일로 회원 전용 특가 상품을 받아보세요.
     </p>
    </div>
    <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -invalid" role="alert">
     <span aria-hidden="true" class="bicon-close">
     </span>
     <span class="invisible_spoken">
      오류:
     </span>
     유효한 이메일 주소를 입력해 주십시오
    </p>
    <p aria-live="assertive" class="emk-feedback-msg use_sprites_no_back -error" role="alert">
     <span aria-hidden="true" class="bicon-close">
     </span>
     <span class="invisible_spoken">
      오류:
     </span>
     죄송합니다. 오류가 발생하였습니다.
    </p>
    <div class="replace-feedback-msg -success">
     <h4>
      축하드려요! 구독이 완료되었습니다.
     </h4>
     <br>
      최고의 호텔, 놓치기 싫은 할인 상품, 흥미로운 여행지 등 다양한 정보가 가득 담긴 뉴스레터를 곧 전해 드립니다.
     </br>
    </div>
   </form>
  </div>
 </div>
</div>
<div class="g-hidden">
 <div class="js-user-access-menu-lightbox user-access-menu-lightbox--signin user-access-menu-lightbox--no-password-strength">
  <svg class="bk-icon -logos-booking-logo" height="48" style="display:none;" viewbox="0 0 256 48" width="256">
   <path d="M17.592 25.92c-.001-2.637-1.668-4.268-4.244-4.268h-3.61c-1.158.163-1.683.866-1.683 2.225v5.906l5.293.007c2.618 0 4.243-1.161 4.244-3.87zm-9.537-9.529h4.764c2.677 0 3.63-1.702 3.63-3.48 0-2.335-1.392-3.73-3.714-3.73h-2.71c-1.354.087-1.97.785-1.97 2.247v4.963zm15.76 9.96c0 5.605-4.279 9.519-10.903 9.519H2v-28c.02-1.785 1.872-3.585 3.64-3.652h7.137c5.96 0 9.81 3.004 9.81 7.984 0 3.26-1.628 5.144-2.599 5.981l-.836.717.957.541c2.323 1.31 3.706 3.892 3.706 6.91zm126.32-2.676c0-5.095-2.75-5.689-4.81-5.689-4.16 0-4.48 4.189-4.48 5.473 0 2.917 1.26 6.031 4.82 6.031 2.04 0 4.47-1.01 4.47-5.815zm5.91-10.937l-.02 20.994c0 8.007-5.98 10.852-11.52 10.852-2.69 0-5.66-.726-7.95-1.945l-.45-.239.73-1.87.51-1.287c.56-1.388 1.37-1.734 2.75-1.315 1.06.384 2.64.811 4.38.811 3.57 0 5.54-1.689 5.54-4.745v-.638l-.51.376c-1.29.988-2.93 1.473-5 1.473-6.06 0-10.29-4.76-10.29-11.575 0-6.819 4.09-11.402 10.17-11.402 3.06 0 4.94 1.081 5.99 1.993l.3.261.18-.35c.47-.902 1.42-1.394 2.66-1.394h2.53zM69.707 24.184c0-3.711-2.296-6.307-5.57-6.307-3.26 0-5.529 2.596-5.529 6.307 0 3.714 2.27 6.312 5.53 6.312 3.326 0 5.57-2.538 5.57-6.312zm6.381 0c0 6.87-5.036 11.856-11.95 11.856-6.904 0-11.91-4.986-11.91-11.856 0-6.866 5.006-11.853 11.91-11.853 6.914 0 11.95 4.987 11.95 11.853zm31.357 11.493V16.281c0-2.34-1.11-3.475-3.42-3.475l-2.56-.01.02 17.704h-.02l.02 5.37h5.96v-.193zm17.06-23.399c-3.33 0-5.45 1.487-6.64 2.74l-.4.405-.14-.55c-.35-1.344-1.53-2.085-3.3-2.085h-2.86l.02 22.895h6.04V25.131c0-1.032.14-1.926.41-2.744.72-2.473 2.36-4.009 4.89-4.009 2.03 0 3.2 1.075 3.2 3.854v9.971c0 2.37 1.47 3.48 3.83 3.48h2.23V21.261c0-5.786-1.96-8.983-7.28-8.983zM93.436 24.777a5.596 5.596 0 0 0-.902-1.275l-.208-.221.22-.212c.316-.335.64-.731.951-1.191l6.087-9.083h-7.389l-4.573 7.104c-.259.381-.782.573-1.564.573H84.48V7.045C84.48 4.36 82.642 3 80.84 3h-2.426l.006 32.691h6.06v-9.508h1.15c.745 0 1.253.086 1.488.492l3.611 6.843c1.007 1.857 2.014 2.173 3.906 2.173h5.016l-3.736-6.203-2.479-4.711zm-49.788-.593c0-3.711-2.29-6.307-5.569-6.307-3.26 0-5.526 2.596-5.526 6.307 0 3.714 2.266 6.312 5.526 6.312 3.326 0 5.57-2.538 5.57-6.312zm6.38 0c0 6.87-5.026 11.856-11.949 11.856-6.897 0-11.902-4.986-11.902-11.856 0-6.866 5.005-11.853 11.902-11.853 6.923 0 11.948 4.987 11.948 11.853zM100.764 6.81c0-2.106 1.7-3.81 3.78-3.81 2.09 0 3.79 1.704 3.79 3.81 0 2.101-1.7 3.807-3.79 3.807-2.08 0-3.78-1.706-3.78-3.807z" fill="#003580">
   </path>
   <path d="M189.08 28.067c-.02.021-2.7 2.848-6.21 2.848-3.21 0-6.45-1.974-6.45-6.377 0-3.808 2.51-6.467 6.11-6.467 1.17 0 2.49.421 2.7 1.127l.03.12c.48 1.601 1.93 1.683 2.21 1.683l3.41.004v-2.984c0-3.936-4.99-5.364-8.35-5.364-7.18 0-12.39 5.017-12.39 11.927 0 6.905 5.15 11.918 12.26 11.918 6.16 0 9.51-4.068 9.54-4.111l.18-.219-2.69-4.487-.35.382zm57.35-15.41c-2.7 0-5.18 1.27-6.85 3.393l-.47.601-.37-.672c-1.21-2.203-3.28-3.322-6.17-3.322-3.02 0-5.04 1.693-5.99 2.701l-.61.666-.24-.88c-.34-1.267-1.47-1.966-3.17-1.966h-2.5l-.02 22.806h5.97V25.917c0-.881.11-1.754.33-2.669.59-2.432 2.22-5.046 4.96-4.786 1.69.164 2.51 1.474 2.51 4.004v13.518h5.63V25.917c0-1.104.11-1.927.35-2.755.51-2.32 2.58-4.703 5.23-4.703 1.91 0 2.91 1.086 2.91 4.007v10.183c0 2.305 1.35 3.335 3.64 3.335h2.42l.01-14.56c0-5.817-2.55-8.767-7.57-8.767zm-40.77.386c-6.9 0-12.31 4.988-12.31 11.855s5.41 11.856 12.31 11.856c6.92 0 11.95-4.989 11.95-11.856s-5.03-11.855-11.95-11.855zm-45.35 19.403c0-2.106 1.69-3.81 3.78-3.81s3.79 1.704 3.79 3.81c0 2.102-1.7 3.808-3.79 3.808s-3.78-1.706-3.78-3.808zm45.35-1.237c-3.26 0-5.53-2.598-5.53-6.311 0-3.712 2.27-6.308 5.53-6.308 3.27 0 5.57 2.596 5.57 6.308 0 3.773-2.24 6.311-5.57 6.311z" fill="#0896FF">
   </path>
  </svg>
  <div class="iam_account_access">
   <div class="iam_card iam_login_form">
    <div class="iam_login_text iam_login_text--header">
     계속 진행하려면 로그인해주세요
    </div>
    [ahref]
    
    <div class="iam_login_or">
     <div class="iam_login_or_divider">
     </div>
     <span class="iam_login_or_text">
      또는
     </span>
    </div>
    <a class="iam_login_btn iam_login_btn--social" data-component="iam/social-button" data-mask="true" data-popup-href="https://account.booking.com/auth/oauth2?state=UtoBJaY6DZQ5M6PjpfvxcGjRf3JbpwVLuDc_MXQQX8ePGXejIvQEtEKvUjQKiSIiLsrJCwnZgL9uo9RjRZmStj6ubSqlbjhxXD_0ZUZ2QO8m9argVWXUP7UP7Bjo6NkXkDNOcFWCGC1uuY4UoqYF5qq1OV7EcQgljMQ6zFj5qmMNEB5v40IiH8fsS9C0955cYMWWHHhJQxONL9pNS_iKDDwt8i3hY77cXNUVZ63H4f7nmbHL_U4UPk_vfDAz0yuHwyJuQzh2UqEBC4i1kmZz0lqvNaE0M7aN3E-9qAc&amp;popup=1&amp;lang=ko&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;dt=1562172486&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;response_type=code&amp;aid=304142&amp;prompt=facebook" href="/auth/oauth2?redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;lang=ko&amp;state=UsABJaY6DZQ5M6NTG2_y6obBNC7vmcE9dD9PzYTkyaD3dhAR8ynV34TOvqM6sQqS0brfl_Tt7FWtmIp-eNsIL6bh89JMldmiIBCsAWc2IT0YH0nSEfJx0s1EK-jC1Ru-LvhkvIw-6VAW0UwhSvT9doEmwIxHw2HegmbsY-kpGlte0CUJZ0nthu3cnlh79FoxhLAdnK_UIFYKBSO_ws3aeBe3qUHTK5k61iq3ZULX3h4iiyUeaxsK7my0bXKKPJ4vSUHh&amp;response_type=code&amp;aid=304142&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;dt=1562172486&amp;prompt=facebook">
     <svg class="bk-icon -social-providers-facebook iam_login_img" height="16" viewbox="0 0 24 24" width="16">
      <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z" fill="#4469B0">
      </path>
     </svg>
     Facebook 계정으로 로그인
    </a>
    [ahref]
    
    <a class="iam_login_btn iam_login_btn--social" data-component="iam/social-button" data-mask="true" data-popup-href="https://account.booking.com/auth/oauth2?state=UtoBJaY6DZQ5M6PjpfvxcGjRf3JbpwVLuDc_MXQQX8ePGXejIvQEtEKvUjQKiSIiLsrJCwnZgL9uo9RjRZmStj6ubSqlbjhxXD_0ZUZ2QO8m9argVWXUP7UP7Bjo6NkXkDNOcFWCGC1uuY4UoqYF5qq1OV7EcQgljMQ6zFj5qmMNEB5v40IiH8fsS9C0955cYMWWHHhJQxONL9pNS_iKDDwt8i3hY77cXNUVZ63H4f7nmbHL_U4UPk_vfDAz0yuHwyJuQzh2UqEBC4i1kmZz0lqvNaE0M7aN3E-9qAc&amp;popup=1&amp;lang=ko&amp;redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;dt=1562172486&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;response_type=code&amp;aid=304142&amp;prompt=naver" href="/auth/oauth2?redirect_uri=https%3A%2F%2Fsecure.booking.com%2Flogin.html%3Fop%3Doauth_return&amp;lang=ko&amp;state=UsABJaY6DZQ5M6NTG2_y6obBNC7vmcE9dD9PzYTkyaD3dhAR8ynV34TOvqM6sQqS0brfl_Tt7FWtmIp-eNsIL6bh89JMldmiIBCsAWc2IT0YH0nSEfJx0s1EK-jC1Ru-LvhkvIw-6VAW0UwhSvT9doEmwIxHw2HegmbsY-kpGlte0CUJZ0nthu3cnlh79FoxhLAdnK_UIFYKBSO_ws3aeBe3qUHTK5k61iq3ZULX3h4iiyUeaxsK7my0bXKKPJ4vSUHh&amp;response_type=code&amp;aid=304142&amp;client_id=vO1Kblk7xX9tUn2cpZLS&amp;dt=1562172486&amp;prompt=naver">
     <svg class="bk-icon -social-providers-naver iam_login_img" height="16" viewbox="0 0 500 500" width="16">
      <path d="M1.429 0L0 441.429l173.571.714.715-178.572-11.429-55.714L327.143 441.43l174.286 1.428-.715-441.428L326.43.714 330 182.857l11.429 65L174.286.714 1.429 0z" fill="#4fa42b">
      </path>
     </svg>
     네이버 계정으로 로그인
    </a>
    <div class="iam_login_text iam_login_text--footer">
     아직 계정이 없으신가요?
     [ahref]
     
    </div>
   </div>
  </div>
 </div>
</div>
<div id="logo-not-document-write" style="display: none;">
</div>
<noscript>
</noscript>
<div style="display: none;">
 <svg class="bk-icon -fonticon-aclose" height="32" viewbox="0 0 36 32" width="36">
  <path d="M34 3.2L30.8 0 18 12.8 5.2 0 2 3.2 14.8 16 2 28.8 5.2 32 18 19.2 30.8 32l3.2-3.2L21.2 16 34 3.2z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-downchevron" height="32" viewbox="0 0 51 32" width="51">
  <path d="M45.1.2L25.7 19.7 6.3.2 0 6.5l25.7 25.7L51.4 6.5z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-upchevron" height="32" viewbox="0 0 51 32" width="51">
  <path d="M6.3 32.2l19.4-19.5 19.4 19.5 6.3-6.3L25.7.2 0 25.9z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-checkempty" height="32" viewbox="0 0 32 32" width="32">
  <path d="M16 30c7.732 0 14-6.268 14-14S23.732 2 16 2 2 8.268 2 16s6.268 14 14 14zm0 2C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z">
  </path>
 </svg>
 <svg class="bk-icon -fonticon-checkno2" height="32" viewbox="0 0 32 32" width="32">
  <path d="M16 30c7.732 0 14-6.268 14-14S23.732 2 16 2 2 8.268 2 16s6.268 14 14 14zm0 2C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z">
  </path>
  <path d="M24.587 11.039L13.825 21.583c-.054.09-.12.182-.208.271l-.504.505c-.278.278-.607.403-.733.276l-5.125-5.366c-.126-.126-.002-.454.276-.732l.504-.505c.279-.279.607-.403.733-.277l3.842 4.022L23.073 9.525a.715.715 0 0 1 1.009 0l.505.505a.715.715 0 0 1 0 1.009z">
  </path>
 </svg>
</div>
<span id="req_info" style="display:none;">
 796180|5,897420,903060,889880,871020,883920,796180|2,661987|1,880990,886930,904160,895450,767600,898230,661987,897780,883260,758330,835220,892030,796180
</span>
|<---