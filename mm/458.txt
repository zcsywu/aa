--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-땅콩 rootpage-땅콩 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [linkx]
   
   [ahref]
   
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키낱말사전, 말과 글의 누리
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [ahref]
    
    [ahref]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <h2>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="sister-wikipedia sister-project noprint floatright" style="border: solid #aaa 1px; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;">
       <div style="float: left;">
        <div class="floatnone">
         <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Wikipedia-logo.png">
         </a>
        </div>
       </div>
       <div style="margin-left: 60px;">
        <a class="extiw" href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC" title="w:위키백과">
         위키백과
        </a>
        에 이 내용과 관련한 문서가 있습니다.:
        <div style="margin-left: 10px;">
         <b>
          [linkx]
          
         </b>
        </div>
       </div>
      </div>
      <dl>
       <dd>
        <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
         [ahref]
         
        </span>
        <span style="color: #000; font-size: 100%;">
         <span class="IPA">
          <a href="/wiki/%EB%8F%84%EC%9B%80%EB%A7%90:IPA_%EB%B0%9C%EC%9D%8C_%EB%93%A3%EA%B8%B0" title="도움말:IPA 발음 듣기">
           <span class="IPA">
            /t͈a̠ŋkʰo̞ŋ/
           </span>
          </a>
         </span>
        </span>
       </dd>
      </dl>
      <dd>
       <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
        발음
       </span>
       [
       <span style="font-size:110%">
        땅
       </span>
       <span style="font-size:110%">
        콩
       </span>
       ]
      </dd>
      <table style="margin: 0 1em .5em 1.6em;">
       <tbody>
        <tr>
         [content7[linkx]content8[linkx]content9][content4[linkx]content5]
        </tr>
       </tbody>
      </table>
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li>
        어원:
        [linkx]
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>
        
        +
        [linkx]
        
       </li>
       <li>
        <b>
         1.
        </b>
        [linkx]
        
        과의 종.
        [linkx]
        
        가 원산지이다.
       </li>
      </ul>
      <dl>
       <dd>
        <ul>
         <li>
          땅콩 버터를 만들다.[content20][content1][linkx][content2][content3]
         </li>
        </ul>
       </dd>
      </dl>
      <div class="NavFrame" style="clear: both; margin: .5em 0 1em 2em;">
       <div class="NavHead" style="border-bottom: 1.2px solid #c0c0c0; text-align: left; line-height: 18pt; background-color: transparent; font-size: 100%;">
        <b>
         번역
        </b>
       </div>
       <div class="NavContent">
        <table border="0" style="padding: 3px; background-color: #f5f5f5;" width="100%">
         <tbody>
          <tr>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              갈리시아어(gl):
              [linkx]
              
              (남성)
             </li>
             <li>
              그리스어(el):
              [linkx]
              
              (fistíki) (중성),
              [ahref]
              
              (여성)
             </li>
             <li>
              나바호어(nv):
              [ahref]
              
             </li>
             <li>
              나와틀어(nah):
              <a class="new" href="/w/index.php?title=cac%C3%A1huatl&amp;action=edit&amp;redlink=1" title="cacáhuatl (없는 문서)">
               cacáhuatl
              </a>
              ,
              [linkx]
              
             </li>
             <li>
              네덜란드어(nl):
              [linkx]
              
              (남성),
              [linkx]
               <li>[link]</li>[link][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
              
              (여성),
              [linkx]
              
              (여성),
              [ahref]
              
              (여성),
              [ahref]
               <li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]<li>[link]</li>
              
              (여성),
              [ahref]
              
              (여성),
              [ahref]
              
             </li>
             <li>
              노르웨이어(no):
              [ahref]
              
              (여성),
              [ahref]
              
              (여성)
             </li>
             <li>
              덴마크어(da):
              [linkx]
              
              ,
              <a href="/wiki/peanut" title="peanut">
               peanut
              </a>
             </li>
             <li>
              독일어(de):
              [ahref]
              
              (여성);
              <a class="new" href="/w/index.php?title=Arachis&amp;action=edit&amp;redlink=1" title="Arachis (없는 문서)">
               Arachis
              </a>
              (여성)
             </li>
             <li>
              라트비아어(lv):
              <a class="new" href="/w/index.php?title=zemesrieksts&amp;action=edit&amp;redlink=1" title="zemesrieksts (없는 문서)">
               zemesrieksts
              </a>
              (남성)
             </li>
             <li>
              러시아어(ru):
              [ahref]
              
              (aráxis) (남성),
              [linkx]
              
              (zemljanój oréx) (남성),
              [ahref]
              
              (kitájskij oréx) (남성)
             </li>
             <li>
              로망슈어(rm):
              [ahref]
              
              (여성)
             </li>
             <li>
              루마니아어(ro):
              [linkx]
              
             </li>
             <li>
              루야어(luy):
              <a class="new" href="/w/index.php?title=chimaito&amp;action=edit&amp;redlink=1" title="chimaito (없는 문서)">
               chimaito
              </a>
             </li>
             <li>
              룩셈부르크어(lb):
              [ahref]
              
             </li>
             <li>
              리투아니아어(lt):
              <a class="new" href="/w/index.php?title=valgomasis_arachis&amp;action=edit&amp;redlink=1" title="valgomasis arachis (없는 문서)">
               valgomasis arachis
              </a>
             </li>
             <li>
              마케도니아어(mk):
              [linkx]
              
              (kikirítka) (여성),
              [linkx]
              
              (kikiríka) (여성)
             </li>
             <li>
              몽골어(mn):
              <a class="new" href="/w/index.php?title=%D1%85%D1%83%D0%B0%D1%81%D0%B0%D0%BD&amp;action=edit&amp;redlink=1" title="хуасан (없는 문서)">
               хуасан
              </a>
              (huasan)
             </li>
             <li>
              바스크어(eu):
              [linkx]
              
             </li>
             <li>
              베트남어(vi):
              [linkx]
              
             </li>
             <li>
              벨라루스어(be):
              [ahref]
              
              (남성)
             </li>
             <li>
              보스니아어(bs):
              [linkx]
              
             </li>
             <li>
              볼라퓌크(vo):
              [linkx]
              
             </li>
             <li>
              불가리아어(bg):
              [ahref]
              
              (fǎstǎk) (남성)
             </li>
             <li>
              상소르브어(hsb):
              <a class="new" href="/w/index.php?title=zemski_worjech&amp;action=edit&amp;redlink=1" title="zemski worjech (없는 문서)">
               zemski worjech
              </a>
             </li>
             <li>
              소토어(st):
              [ahref]
              
             </li>
             <li>
              스와힐리어(sw):
              [ahref]
              
             </li>
             <li>
              스웨덴어(sv):
              <a class="new" href="/w/index.php?title=jordn%C3%B6t&amp;action=edit&amp;redlink=1" title="jordnöt (없는 문서)">
               jordnöt
              </a>
             </li>
             <li>
              슬로바키아어(sk):
              [linkx]
              
             </li>
             <li>
              슬로베니아어(sl):
              [ahref]
              
              (남성),
              <a class="new" href="/w/index.php?title=kikiriki&amp;action=edit&amp;redlink=1" title="kikiriki (없는 문서)">
               kikirikí
              </a>
              (남성)
             </li>
             <li>
              아라곤어(an):
              [linkx]
              
             </li>
             <li>
              아랍어(ar):
              [linkx]
              
              (fūl sudāni) (남성)
             </li>
             <li>
              아르메니아어(hy):
              [ahref]
              
              (getnanuš)
             </li>
             <li>
              아이마라어(ay):
              [linkx]
              
             </li>
             <li>
              아이슬란드어(is):
              [linkx]
              
              (여성)
             </li>
             <li>
              아일랜드어(ga):
              [ahref]
              
              [ahref]
              
             </li>
             <li>
              아제르바이잔어(az):
              [ahref]
              
             </li>
             <li>
              아프리칸스어(af):
              <a class="new" href="/w/index.php?title=grondboontjie&amp;action=edit&amp;redlink=1" title="grondboontjie (없는 문서)">
               grondboontjie
              </a>
             </li>
             <li>
              알바니아어(sq):
              <a class="new" href="/w/index.php?title=kikirik&amp;action=edit&amp;redlink=1" title="kikirik (없는 문서)">
               kikirik
              </a>
              (남성)
             </li>
             <li>
              암하라어(am):
              [linkx]
              
             </li>
             <li>
              야쿠트어(sah):
              <a href="/wiki/%D0%B0%D1%80%D0%B0%D1%85%D0%B8%D1%81" title="арахис">
               арахис
              </a>
             </li>
             <li>
              에스토니아어(et):
              [ahref]
              
             </li>
             <li>
              스페인어(es):
              [linkx]
              
              (남성) (중남미),
              [ahref]
              
              (멕시코),
              <a href="/wiki/cacahuete" title="cacahuete">
               cacahuete
              </a>
              (남성) (에스파냐)
             </li>
             <li>
              에스페란토(eo):
              <a class="new" href="/w/index.php?title=arakido&amp;action=edit&amp;redlink=1" title="arakido (없는 문서)">
               arakido
              </a>
             </li>
            </ul>
           </td>
           <td style="width:1%;" valign="top">
           </td>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              영어(en):
              [ahref]
              
             </li>
             <li>
              오세티야어(os):
              [ahref]
              
             </li>
             <li>
              우크라이나어(uk):
              [ahref]
              
              (araxis) (남성)
             </li>
             <li>
              웨일스어(cy):
              [linkx]
              
             </li>
             <li>
              이도(io):
              [ahref]
              
             </li>
             <li>
              이탈리아어(it):
              [linkx]
              
              (여성)
             </li>
             <li>
              인도네시아어(id):
              <a class="new" href="/w/index.php?title=kacang_tanah&amp;action=edit&amp;redlink=1" title="kacang tanah (없는 문서)">
               kacang tanah
              </a>
             </li>
             <li>
              일본어(ja):
              <span class="lang-ja" lang="ja">
               [linkx]
               
              </span>
              (pīnatsu)
             </li>
             <li>
              조지아어(ka):
              [linkx]
              
              (arak‘isi)
             </li>
             <li>
              중국어(zh):
              [linkx]
              
              (huāshēng)
             </li>
             <li>
              체코어(cs):
              [linkx]
              
              (남성),
              [ahref]
              
              (남성),
              [ahref]
              
              (여성)
             </li>
             <li>
              카자흐어(kk):
              <a href="/wiki/%D0%B6%D0%B5%D1%80%D0%B6%D0%B0%D2%A3%D2%93%D0%B0%D2%9B" title="жержаңғақ">
               жержаңғақ
              </a>
              ;
              <a href="/wiki/%D0%B0%D1%80%D0%B0%D1%85%D0%B8%D1%81" title="арахис">
               арахис
              </a>
             </li>
             <li>
              카탈루냐어(ca):
              [linkx]
              
              (남성)
             </li>
             <li>
              케추아어(qu):
              [ahref]
              
             </li>
             <li>
              크로아티아어(hr):
              [linkx]
              
             </li>
             <li>
              타갈로그어(tl):
              [ahref]
              
             </li>
             <li>
              타이어(th):
              <a class="new" href="/w/index.php?title=%E0%B8%96%E0%B8%B1%E0%B9%88%E0%B8%A7%E0%B8%A5%E0%B8%B4%E0%B8%AA%E0%B8%87&amp;action=edit&amp;redlink=1" title="ถั่วลิสง (없는 문서)">
               ถั่วลิสง
              </a>
              (tùalísŏng)
             </li>
             <li>
              터키어(tr):
              <a class="new" href="/w/index.php?title=yer_f%C4%B1st%C4%B1%C4%9F%C4%B1&amp;action=edit&amp;redlink=1" title="yer fıstığı (없는 문서)">
               yer fıstığı
              </a>
             </li>
             <li>
              통가어(to):
              [ahref]
              
             </li>
             <li>
              티베트어(bo):
              [ahref]
              
             </li>
             <li>
              페로어(fo):
              [linkx]
              
              (여성)
             </li>
             <li>
              페르시아어(fa):
              [linkx]
              
              (bâdâm kuhi),
              [ahref]
              
              (bâdâm zamini)
             </li>
             <li>
              포르투갈어(pt):
              [linkx]
              
              (남성)
             </li>
             <li>
              폰페이어(pon):
              [ahref]
              
             </li>
             <li>
              폴란드어(pl):
              [ahref]
               [content11][content12][content13][content14][linkx]
              
              ,
              [ahref]
              
              (여성)
             </li>
             <li>
              프랑스어(fr):
              <a href="/wiki/arachide" title="arachide">
               arachide
              </a>
              (여성),
              <a href="/wiki/cacahu%C3%A8te" title="cacahuète">
               cacahuète
              </a>
              (남성), (퀘벡, 비격식체);
              [linkx]
              
              (여성)
             </li>
             <li>
              핀란드어(fi):
              [linkx]
              
             </li>
             <li>
              헝가리어(hu):
              [ahref]
              
              ,
              <a class="new" href="/w/index.php?title=amerikai_mogyor%C3%B3&amp;action=edit&amp;redlink=1" title="amerikai mogyoró (없는 문서)">
               amerikai mogyoró
              </a>
             </li>
             <li>
              히브리어(he):
              [linkx]
              
              (boten) (남성),
              [ahref]
              
              (egoz adama)
             </li>
             <li>
              힌디어(hi):
              [ahref]
              
              (mū̃ṅgaphalī) (여성)
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     <a dir="ltr" href="/w/index.php?title=땅콩&amp;oldid=3980211">
      https://ko.wiktionary.org/w/index.php?title=땅콩&amp;oldid=3980211
     </a>
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>[content10[linkx]content11]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [ahref]
       
      </li>
      <li id="pt-anoncontribs">
       [ahref]
       
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         [linkx]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        [ahref]
        
       </li>
       <li id="n-bulletinboard">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EC%9E%90%EC%9C%A0%EA%B2%8C%EC%8B%9C%ED%8C%90" title="자유게시판">
         자유게시판
        </a>
       </li>
       <li id="n-helpdesk">
        [linkx]
        
       </li>
       <li id="n-recentchanges">
        [ahref]
        
       </li>
       <li id="n-randompage">
        [linkx]
        
       </li>
       <li id="n-editroom">
        [linkx]
        
       </li>
       <li id="n-createpage">
        [linkx]
        
       </li>
       <li id="n-help">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%8F%84%EC%9B%80%EB%A7%90" title="도움말">
         도움말
        </a>
       </li>
       <li id="n-sitesupport">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [linkx]
        
       </li>
       <li id="coll-download-as-rl">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:ElectronPdf&amp;page=%EB%95%85%EC%BD%A9&amp;action=show-download-screen">
         PDF로 다운로드
        </a>
       </li>
       <li id="t-print">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [ahref]
        
       </li>
       <li id="t-recentchangeslinked">
        [ahref]
        
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        <a accesskey="q" href="/wiki/%ED%8A%B9%EC%88%98:%ED%8A%B9%EC%88%98%EB%AC%B8%EC%84%9C" title="모든 특수 문서의 목록 [q]">
         특수 문서 목록
        </a>
       </li>
       <li id="t-permalink">
        <li>[link]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
       </li>
       <li id="t-info">
        [linkx]
        
       </li>
       <li id="t-cite">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-chr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-en">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-hu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ja">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-lo">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-mg">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-zh">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2019년 4월 23일 (화) 17:46에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     내용은
     [linkx]
     
     에 따라 사용할 수 있으며
추가적인 조건이 적용될 수 있습니다.
자세한 내용은
     [linkx]
     
     을 참조하십시오.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [linkx]
     
    </li>
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     [linkx]
     
    </li>
    <li id="footer-places-developers">
     [ahref]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     [ahref]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0481
  </b>
 </body>
</html>
|<---