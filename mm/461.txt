--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/1/10/Vulpes_vulpes_schrencki_08.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-여우 rootpage-여우 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키낱말사전, 말과 글의 누리
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [ahref]
    
    <a class="mw-jump-link" href="h">
     검색하러 가기
    </a>
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <div class="toc" id="toc">
       <div class="toctitle" dir="ltr" lang="ko">
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <span class="toctogglespan">
         <label class="toctogglelabel" for="toctogglecheckbox">
         </label>
        </span>
       </div>
       <ul>
        <li class="toclevel-1 tocsection-1">
         [ahref]
          <li>[pkeyx]</li>[linkx]<li>[ahref]</li><li>[pkeyx]</li>[linkx]
         
         <ul>
          <li class="toclevel-2 tocsection-2">
           [linkx]
           
           <ul>
            <li class="toclevel-3 tocsection-3">
             [ahref]
             
             <ul>
              <li class="toclevel-4 tocsection-4">
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="toclevel-3 tocsection-5">
             [ahref]
             
            </li>
           </ul>
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <dl>
       <dd>
        <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
         [linkx]
         
        </span>
        <span style="color: #000; font-size: 100%;">
         <span class="IPA">
          [ahref]
          
         </span>
        </span>
       </dd>
      </dl>
      <dd>
       <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
        발음
       </span>
       [
       <span style="font-size:110%">
        여
       </span>
       <span style="font-size:110%">
        우
       </span>
       ]
      </dd>
      <table style="margin: 0 1em .5em 1.6em;">
       <tbody>
        <tr>
         <td>
          <table cellpadding="1" style="border: 1px solid #DFDFDF; line-height: 9pt; padding: .1em .3em .1em .3em">
           <tbody>
            <tr>
             <td id="subheadline" style="padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [ahref]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               Revised Romanization
              </span>
             </td>
             <td class="IPA" id="subheadline" style="padding: .1em .5em; font-size: 100%;">
              yeou
             </td>
            </tr>
            <tr>
             <td id="subheadline" style="border-bottom: 1px solid #FFF; padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [linkx]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               McCune-Reischauer
              </span>
             </td>
             <td class="IPA" id="subheadline" style="border-bottom: 1px solid #FFF; padding: .1em .5em; font-size: 100%;">
              yŏu
             </td>
            </tr>
            <tr>
             <td id="subheadline" style="padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [linkx]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               Yale Romanization
              </span>
             </td>
             <td class="IPA" id="subheadline" style="padding: .1em .5em; font-size: 100%;">
              yewu[keywordx][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][keywordx][mkey1][linkx][linkx][keywordx][pkeyx][ahref][linkx][mkey1][keywordx][mkey1][linkx][keywordx][ahref][pkeyx][pkeyx]
             </td>
            </tr>
            <tr class="mw-empty-elt">
            </tr>
           </tbody>
          </table>
         </td>
        </tr>
       </tbody>
      </table>
      <h3>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <h4>
       <span id=".EB.AA.85.EC.82.AC_1">
       </span>
       <span class="mw-headline" id="명사_1">
        명사 1
       </span>
       <span class="mw-editsection">
        <span class="mw-editsection-bracket">
         [
        </span>
        <a href="/w/index.php?title=%EC%97%AC%EC%9A%B0&amp;action=edit&amp;section=3" title="부분 편집: 명사 1">
         편집
        </a>
        <span class="mw-editsection-bracket">
         ]
        </span>
       </span>
      </h4>
      <div class="thumb tright">
       <div class="thumbinner" style="width:222px;">
        [ahref]
        
        <div class="thumbcaption">
         <div class="magnify">
          <a class="internal" href="/wiki/%ED%8C%8C%EC%9D%BC:Vulpes_vulpes_schrencki_08.jpg" title="실제 크기로">
          </a>
         </div>
         여우
        </div>
       </div>
      </div>
      <ul>
       <li>
        <b>
         1.
        </b>
        [ahref]
        
        과에 속하는 포유 동물.
        [linkx]
        
        ,
        <a href="/wiki/%EC%95%84%EC%8B%9C%EC%95%84" title="아시아">
         아시아
        </a>
        ,
        [linkx]
        
        ,
        [ahref]
        
        에 서식한다. 학명은 Vulpes vulpes.
       </li>
      </ul>
      <dl>
       <dd>
        <ul>
         <li>
          한국의 여우는 멸종되었다.
         </li>
        </ul>
       </dd>
      </dl>
      <ul>
       <li>
        유의어:
        [ahref]
        
        (사투리)
       </li>
      </ul>
      <h5>
       <span id=".EA.B4.80.EB.A0.A8_.EC.96.B4.ED.9C.98">
       </span>
       <span class="mw-headline" id="관련_어휘">
        관련 어휘
       </span>
       <span class="mw-editsection">
        <span class="mw-editsection-bracket">
         [
        </span>
        [linkx]
        
        <span class="mw-editsection-bracket">
         ]
        </span>
       </span>
      </h5>
      <ul>
       <li>
        파생어:
        [ahref]
        
        ,
        [ahref]
        
       </li>
       <li>
        합성어:
        [linkx]
        
        ,
        <a class="new" href="/w/index.php?title=%EC%97%AC%EC%9A%B0%EB%B3%95&amp;action=edit&amp;redlink=1" title="여우볕 (없는 문서)">
         여우볕
        </a>
       </li>
      </ul>
      <div class="NavFrame" style="clear: both; margin: .5em 0 1em 2em;">
       <div class="NavHead" style="border-bottom: 1.2px solid #c0c0c0; text-align: left; line-height: 18pt; background-color: transparent; font-size: 100%;">
        <b>
         번역
        </b>
       </div>
       <div class="NavContent">
        <table border="0" style="padding: 3px; background-color: #f5f5f5;" width="100%">
         <tbody>
          <tr>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              가가우스어(gag):
              [linkx]
              
             </li>
             <li>
              갈리시아어(gl):
              [ahref]
              
              (남성),
              [linkx]
              
              ;
              [ahref]
              
              (남성)
             </li>
             <li>
              고대 고지 독일어(goh):
              [linkx]
              
              ,
              <a class="new" href="/w/index.php?title=f%C5%8D%CC%AEha&amp;action=edit&amp;redlink=1" title="fō̮ha (없는 문서)">
               fō̮ha
              </a>
             </li>
             <li>
              고대 노르드어(non):
              [linkx]
              
             </li>
             <li>
              고대 영어(ang):
              <a href="/wiki/fox" title="fox">
               fox
              </a>
              (여성)
             </li>
             <li>
              고트어(got):
              [linkx]
              
              (faúhō)
             </li>
             <li>
              구자라트어(gu):
              [ahref]
              
              (šiyāḷ)
             </li>
             <li>
              과라니어(gn):
              [ahref]
              
             </li>
             <li>
              그루지야어(ka):
              [linkx]
              
              (mela),
              <a class="new" href="/w/index.php?title=%E1%83%9B%E1%83%94%E1%83%9A%E1%83%98%E1%83%90&amp;action=edit&amp;redlink=1" title="მელია (없는 문서)">
               მელია
              </a>
              (melia)
             </li>
             <li>
              그리스어(el): (고대);
              [linkx]
              
              (alōpēx) (여성),
              [linkx]
              
              (alōpos) (남성), (현대);
              [ahref]
              
              (alepú) (여성),
              [linkx]
              
              (alupú) (여성, 사어)
             </li>
             <li>
              그린란드어(kl):
              [ahref]
              
             </li>
             <li>
              나나이어(gld):
              [ahref]
              
              ;
              [ahref]
              
             </li>
             <li>
              나바호어(nv):
              [linkx]
              
             </li>
             <li>
              나와틀어(nah):
              <a href="/wiki/oztohua" title="oztohua">
               oztohua
              </a>
              ;
              [ahref]
              
             </li>
             <li>
              나폴리어(nap):
              [linkx]
              
             </li>
             <li>
              남부알타이어(alt):
              [ahref]
              
              (tülkü)
             </li>
             <li>
              네네츠어(yrk):
              [linkx]
              
             </li>
             <li>
              네덜란드어(nl):
              [linkx]
              
              (남성),
              [ahref]
              
             </li>
             <li>
              노가이어(nog):
              [linkx]
              
              (tülki)
             </li>
             <li>
              노르웨이어(no):
              <a href="/wiki/rev" title="rev">
               rev
              </a>
              (남성)
             </li>
             <li>
              노비알(nov):
              [ahref]
              
             </li>
             <li>
              다르긴어(dar):
              [ahref]
              
             </li>
             <li>
              다리어(prs):
              <a href="/wiki/%D8%B1%D8%A8%D8%A7%D9%87" title="رباه">
               رباه
              </a>
              (robāh)
             </li>
             <li>
              덴마크어(da):
              [linkx]
              
             </li>
             <li>
              독일어(de):
              [linkx]
              
              (남성)
             </li>
             <li>
              디베히어(dv):
              [linkx]
              
              (hiyaḷu)
             </li>
             <li>
              라오어(lo):
              [linkx]
              
              (cikcöök),
              [ahref]
              
              ((h)māčɔ̄k)
             </li>
             <li>
              라디노어(lad):
              [linkx]
              
              (라틴)/
              <a href="/wiki/%D7%A8%D7%99%D7%A0%D7%90%D7%A8" title="רינאר">
               רינאר
              </a>
              (히브리 문자);
              [linkx]
              
              (라틴)/
              [ahref]
              
              (히브리 문자)
             </li>
             <li>
              라딘어(lld):
              [linkx]
              
              (남성)
             </li>
             <li>
              라코타어(lkt):
              [linkx]
              
              ,
              [linkx]
              
             </li>
             <li>
              라크어(lbe):
              <a class="new" href="/w/index.php?title=%D1%86%D1%83%D0%BB%D1%87%D3%80%D0%B0&amp;action=edit&amp;redlink=1" title="цулчӀа (없는 문서)">
               цулчӀа[ahref][linkx][mkey1][keywordx][linkx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][linkx][ahref][ahref][ahref][keywordx][linkx][keywordx][ahref][mkey1][pkeyx][pkeyx][ahref]
              </a>
             </li>
             <li>
              라트비아어(lv):
              [linkx]
              
              (여성)
             </li>
             <li>
              라틴어(la):
              [ahref]
              
              (여성),
              [linkx]
              
              (여성)
             </li>
             <li>
              레나페어(umn):
              [linkx]
              
             </li>
             <li>
              레즈긴어(lez):
              [linkx]
              
             </li>
             <li>
              러시아어(ru):
              <a href="/wiki/%D0%BB%D0%B8%D1%81%D0%B0" title="лиса">
               лиса
              </a>
              (lisá) (여성),
              [ahref]
              
              (lisítsa) (여성)
             </li>
             <li>
              로마니어(rom):
              [ahref]
              
              (여성)
             </li>
             <li>
              로망슈어(rm):
              [ahref]
              
              (여성)
             </li>
             <li>
              롬바르드어(lmo):
              [linkx]
              
             </li>
             <li>
              루마니아어(ro):
              [ahref]
              
              (여성)
             </li>
             <li>
              룩셈부르크어(lb):
              [ahref]
              
             </li>
             <li>
              룬디어(run):
              [ahref]
              
             </li>
             <li>
              리투아니아어(lt):
              [linkx]
              
              (여성),
              [ahref]
              
              (남성)
             </li>
             <li>
              림뷔르흐어(li):
              [linkx]
              
             </li>
             <li>
              마라티어(mr):
              [ahref]
              
              (kolhā)
             </li>
             <li>
              마리어(chm):
              [ahref]
              
             </li>
             <li>
              마사이어(mas):
              [linkx]
              
             </li>
             <li>
              마케도니아어(mk):
              [ahref]
              
              (lisica) (여성)
             </li>
             <li>
              마푸체어(arn):
              [linkx]
              
              ,
              [ahref]
              
             </li>
             <li>
              말라가시어(mg):
              [linkx]
              
             </li>
             <li>
              말라얄람어(ml):
              [ahref]
              
              (kuṟukkan)
             </li>
             <li>
              맨어(gv):
              [linkx]
              
             </li>
             <li>
              모크샤어(mdf):
              [ahref]
              
              (kelazj)
             </li>
             <li>
              모호크어(moh):
              [linkx]
              
             </li>
             <li>
              몰도바어(mo):
              [ahref]
              
             </li>
             <li>
              몰타어(mt):
              [ahref]
              
              (여성)
             </li>
             <li>
              몽골어(mn):
              [ahref]
               [keywordx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx][keywordx][ahref][ahref][pkeyx][linkx][mkey1][ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx]
              
             </li>
             <li>
              무스코기어(mus):
              [linkx]
              
             </li>
             <li>
              바슈키르어(ba):
              <a href="/wiki/%D1%82%D3%A9%D0%BB%D0%BA%D3%A9" title="төлкө">
               төлкө
              </a>
              (tölkö)
             </li>
             <li>
              바스크어(eu):
              [ahref]
              
             </li>
             <li>
              베네토어(vec):
              [ahref]
              
             </li>
             <li>
              베트남어(vi):
              [ahref]
              
              ;
              [linkx]
               [keywordx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[linkx]</li><li>[pkeyx]</li><li>[mkey1]</li>
              
             </li>
             <li>
              벨라루스어(be):
              [ahref]
              
              (키릴)/
              [ahref]
              
              (라틴) (여성)
             </li>
             <li>
              벱스어(vep):
              [ahref]
              
             </li>
             <li>
              벵골어(bn):
              [linkx]
              
              (šiyāl)
             </li>
             <li>
              보로어(fiu-vro):
              [linkx]
              
              ,
              [ahref]
              
              , (아이의)
              [ahref]
              
             </li>
             <li>
              보스니아어(bs):
              [linkx]
              
              (여성),
              [ahref]
              
              (남성)
             </li>
             <li>
              볼라퓌크(vo):
              [linkx]
              
             </li>
             <li>
              부랴트어(bua):
              [linkx]
              
             </li>
             <li>
              북부사미어(se):
              [linkx]
              
             </li>
             <li>
              불가리아어(bg):
              [linkx]
              
              (lisitsa) (여성)
             </li>
             <li>
              브르타뉴어(br):
              [ahref]
              
              (남성), louarned (복수형)
             </li>
             <li>
              사르데냐어(sc):
              <a class="new" href="/w/index.php?title=mrexani&amp;action=edit&amp;redlink=1" title="mrexani (없는 문서)">
               mrexani[mkey1]<li>[ahref]</li>[keywordx][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
              </a>
              ,
              [ahref]
              
              ,
              [linkx]
              
              ,
              [linkx]
              
             </li>
             <li>
              사모아어(sm):
              [linkx]
              
             </li>
             <li>
              산스크리트어(sa):
              [linkx]
              
              (śrugālaḥ)
             </li>
             <li>
              살라르어(slr):
              [linkx]
              
             </li>
             <li>
              상소르브어(hsb):
              [ahref]
              
              (여성)
             </li>
             <li>
              세르비아어(sr):
              [ahref]
              
              (여성)/
              [linkx]
              
              (남성) (키릴),
              [linkx]
              
              (여성)/
              [ahref]
              
              (남성) (라틴)
             </li>
             <li>
              세리어(sei):
              [linkx]
              
             </li>
             <li>
              셰르파어(xsr):
              [ahref]
              
              (čipčyaṅ)
             </li>
             <li>
              서프리지아어(fy):
              [linkx]
              
              ;
              [ahref]
              
              (남성)
             </li>
             <li>
              소말리어(so):
              [ahref]
              
             </li>
             <li>
              쇼나어(sn):
              [linkx]
              
             </li>
             <li>
              쇼르어(cjs):
              [ahref]
              
              (tülgü)
             </li>
             <li>
              스와힐리어(sw):
              [linkx]
              
             </li>
             <li>
              스웨덴어(sv):
              [linkx]
              
             </li>
             <li>
              스코트어(sco):
              [ahref]
              
             </li>
             <li>
              스코틀랜드 게일어(gd):
              [ahref]
              
              ;
              [linkx]
              
              (남성)
             </li>
             <li>
              스페인어(es):
              [linkx]
              
              (남성),
              [ahref]
              
              (여성);
              [linkx]
              
             </li>
             <li>
              슬로바키아어(sk):
              [ahref]
              
              (여성)
             </li>
             <li>
              슬로베니아어(sl):
              <a href="/wiki/lisica" title="lisica">
               lisica
              </a>
              (여성),
              [linkx]
              
              (남성)
             </li>
             <li>
              시칠리아어(scn):
              [linkx]
              
              (여성);
              [ahref]
              
             </li>
             <li>
              신드어(sd):
              [linkx]
              
              (lumaṛu)
             </li>
             <li>
              신할라어(si):
              [ahref]
              
              (nariyā)
             </li>
             <li>
              실레지아어(szl):
              <a href="/wiki/li%C5%A1ka" title="liška">
               liška
              </a>
             </li>
             <li>
              [mkey1][ahref][keywordx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][mkey1][keywordx][keywordx][mkey1][linkx][keywordx][pkeyx]
             </li>
             <li>
              아라곤어(an):
              [ahref]
              
              (남성);
              [linkx]
              
              (여성)
             </li>
             <li>
              [linkx][mkey1][keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][linkx][keywordx][keywordx][mkey1][mkey1][pkeyx]
             </li>
             <li>
              아람어(arc):
              [linkx]
              
              (taʿlā)
             </li>
             <li>
              아랍어(ar):
              [linkx]
              
              (θáʕlab) (남성)
             </li>
             <li>
              아로마니아어(rup):
              <a href="/wiki/vulpe" title="vulpe">
               vulpe
              </a>
             </li>
             <li>
              아르메니아어(hy):
              <a href="/wiki/%D5%A1%D5%B2%D5%BE%D5%A5%D5%BD" title="աղվես">
               աղվես
              </a>
              (aġves(현대), ałuēs(고대))
             </li>
             <li>
              아바르어(av):
              [ahref]
              
             </li>
             <li>
              아바자어(abq):
              [ahref]
              
             </li>
             <li>
              아삼어(asm):
              [ahref]
              
              (ĥ̇iyāl)
             </li>
             <li>
              아스투리아스어(ast):
              [ahref]
              
              ;
              [linkx]
              
             </li>
             <li>
              아이누어(ain):
              [linkx]
              
              /
              [ahref]
              
              (가타카나),
              <a href="/wiki/chironnup" title="chironnup">
               chironnup
              </a>
              (라틴)
             </li>
             <li>
              아이마라어(ay):
              <a href="/wiki/lari" title="lari">
               lari
              </a>
             </li>
             <li>
              아이슬란드어(is):
              [ahref]
              
              (남성),
              [linkx]
              
              (여성)
             </li>
             <li>
              아이티크레올어(ht):
              [linkx]
              
             </li>
             <li>
              아일랜드어(ga):
              [linkx]
              
              (남성),
              [ahref]
              
              (남성)
             </li>
             <li>
              아제르바이잔어(az):
              [ahref]
              
             </li>
             <li>
              아프리칸스어(af):
              [ahref]
              
              <a class="new" href="/w/index.php?title=jakkals&amp;action=edit&amp;redlink=1" title="jakkals (없는 문서)">
               jakkals
              </a>
             </li>
             <li>
              알루토르어(alr):
              <a href="/wiki/%D1%82%D0%B0%D1%82%D1%83%D0%BB" title="татул">
               татул
              </a>
             </li>
             <li>
              알바니아어(sq):
              [linkx]
              
              (여성),
              [linkx]
              
             </li>
             <li>
              알타이어(alt):
              [linkx]
              
             </li>
            </ul>
           </td>
           <td style="width:1%;" valign="top">
           </td>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              암하라어(am):
              [ahref]
              
              (ḳäbäro)
             </li>
             <li>
              압하스어(ab):
              [ahref]
              
             </li>
             <li>
              앨라배마어(akz):
              <a href="/wiki/chola" title="chola">
               chola
              </a>
             </li>
             <li>
              야쿠트어(sah):
              [linkx]
              
              (sahıl)
             </li>
             <li>
              에르자어(myv):
              [linkx]
              
              (rivezj)
             </li>
             <li>
              에벤어(eve):
              <a href="/wiki/%D1%85%D1%83%D0%BB%D0%B8%D1%87%D0%B0%D0%BD" title="хуличан">
               хуличан
              </a>
              ;
              [linkx]
              
             </li>
             <li>
              에벤키어(evn):
              [linkx]
              
             </li>
             <li>
              에스토니아어(et):
              [ahref]
              
             </li>
             <li>
              에스페란토(eo):
              [ahref]
              
             </li>
             <li>
              에웨어(ee):
              [linkx]
              
              (중성)
             </li>
             <li>
              영어(en):
              [ahref]
              
             </li>
             <li>
              오드함어(ood):
              [ahref]
              
             </li>
             <li>
              오세티야어(os): (디고르 방언);
              [ahref]
              
              (robas), (이론 방언);
              [ahref]
              
              (ruvas)
             </li>
             <li>
              오지브웨어(oj):
              [ahref]
              
              (
              [ahref]
              
              )
             </li>
             <li>
              오크어(oc):
              [ahref]
              
              (여성),
              [ahref]
              
              (남성),
              [ahref]
              
              (남성)
             </li>
             <li>
              요루바어(yo):
              [linkx]
              
              ;
              [linkx]
              
              ;
              [linkx]
              
             </li>
             <li>
              우드무르트어(udm):
              [linkx]
              
             </li>
             <li>
              우르두어(ur):
              [linkx]
              
              (lomṛī)
             </li>
             <li>
              우즈베크어(uz):
              <a href="/wiki/tulki" title="tulki">
               tulki
              </a>
             </li>
             <li>
              우크라이나어(uk):
              [ahref]
              
              (lys) (남성),
              [ahref]
              
              (lysytsja) (여성)
             </li>
             <li>
              [keywordx][pkeyx]<li>[pkeyx]</li><li>[linkx]</li>[mkey1]
             </li>
             <li>
              왈론어(wa):
              [ahref]
              
             </li>
             <li>
              웨일스어(cy): (남부);
              <a class="new" href="/w/index.php?title=cadno&amp;action=edit&amp;redlink=1" title="cadno (없는 문서)">
               cadno
              </a>
              (남성), (북부);
              [linkx]
              
              (남성)
             </li>
             <li>
              월로프어(wo):
              [linkx]
              
             </li>
             <li>
              위구르어(ug):
              [ahref]
              
              (키릴)/
              <a href="/wiki/t%C3%BClke" title="tülke">
               tülke
              </a>
              (라틴)/
              [linkx]
              
              (아랍 문자)
             </li>
             <li>
              응가나산어(nio):
              [ahref]
              
             </li>
             <li>
              이나리사미어(smn):
              [ahref]
              
             </li>
             <li>
              이누이트어(iu):
              <a class="new" href="/w/index.php?title=%E1%91%8E%E1%95%86%E1%92%90%E1%93%90%E1%93%82%E1%90%8A%E1%96%85&amp;action=edit&amp;redlink=1" title="ᑎᕆᒐᓐᓂᐊᖅ (없는 문서)">
               ᑎᕆᒐᓐᓂᐊᖅ
              </a>
              (tiriganniaq)
             </li>
             <li>
              이누피아크어(ik):
              [linkx]
              
              ;
              [ahref]
              
             </li>
             <li>
              이도(io):
              [ahref]
              
             </li>
             <li>
              이디시어(yi):
              [ahref]
              
              (fuks) (남성)
             </li>
             <li>
              이탈리아어(it):
              [linkx]
              
              (여성)
             </li>
             <li>
              인구시어(inh):
              [ahref]
              
             </li>
             <li>
              [keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref]<li>[ahref]</li>[ahref]
             </li>
             <li>
              인터링구아(ia):
              [linkx]
              
             </li>
             <li>
              일본어(ja):
              <span class="lang-ja" lang="ja">
               [linkx]
               
               (
               <a class="new" href="/w/index.php?title=%E3%81%8D%E3%81%A4%E3%81%AD&amp;action=edit&amp;redlink=1" title="きつね (없는 문서)">
                きつね
               </a>
               /
               [linkx]
               
               )
              </span>
              (kitsune)
             </li>
             <li>
              자자키어(zza):
              [ahref]
              
             </li>
             <li>
              저지색슨어(nds):
              [ahref]
              
             </li>
             <li>
              줄루어(zu):
              [linkx]
              
              ;
              [ahref]
              
             </li>
             <li>
              [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1]<li>[pkeyx]</li>
             </li>
             <li>
              중세 고지 독일어(gmh):
              [linkx]
              
              (물론
              [ahref]
              
              )
             </li>
             <li>
              중세 네덜란드어(dum):
              [ahref]
              
              (남성)
             </li>
             <li>
              중세 영어(enm):
              [linkx]
              
             </li>
             <li>
              중세 저지독일어(gml):
              [ahref]
              
              (물론
              <a class="new" href="/w/index.php?title=vohe&amp;action=edit&amp;redlink=1" title="vohe (없는 문서)">
               vohe
              </a>
              ;
              [linkx]
              
              )
             </li>
             <li>
              차미쿠로어(ccc):
              <a class="new" href="/w/index.php?title=tus%CC%88huli&amp;action=edit&amp;redlink=1" title="tus̈huli (없는 문서)">
               tus̈huli
              </a>
             </li>
             <li>
              체로키어(chr):
              [linkx]
              
              (tsula)
             </li>
             <li>
              체첸어(ce):
              [ahref]
              
             </li>
             <li>
              체코어(cs):
              [linkx]
              
              (여성)
             </li>
             <li>
              촉토어(cho):
              [linkx]
              
             </li>
             <li>
              추바슈어(cv):
              [ahref]
              
              (
              [ahref]
              
              )(tilĕ)
             </li>
             <li>
              축치어(ckt):
              [ahref]
              
             </li>
             <li>
              츠와나어(tn):
              [linkx]
              
             </li>
             <li>
              카라차이발카르어(krc):
              [ahref]
              
              (tülkü)
             </li>
             <li>
              카라칼파크어(kaa):
              [ahref]
              
             </li>
             <li>
              카렐리야어(krl):
              [linkx]
              
             </li>
             <li>
              카바르딘어(kbd):
              <a href="/wiki/%D0%B1%D0%B0%D0%B6%D1%8D" title="бажэ">
               бажэ
              </a>
             </li>
             <li>
              카슈브어(csb):
              [ahref]
              
             </li>
             <li>
              카자흐어(kk):
              [linkx]
              
              (tülki)
             </li>
             <li>
              카탈루냐어(ca):
              [ahref]
              
              (남성),
              [linkx]
              
              (여성),
              <a class="new" href="/w/index.php?title=rabosa&amp;action=edit&amp;redlink=1" title="rabosa (없는 문서)">
               rabosa
              </a>
              (여성)
             </li>
             <li>
              칸나다어(kn);
              [ahref]
              
              (nari)
             </li>
             <li>
              칼미크어(xal):
              <a href="/wiki/%D0%B0%D1%80%D0%B0%D1%82" title="арат">
               арат
              </a>
              ;
              <a href="/wiki/%D2%AF%D0%BD%D0%B3%D0%BD" title="үнгн">
               үнгн
              </a>
             </li>
             <li>
              캐리어어(crx):
              [linkx]
              
             </li>
             <li>
              케추아어(qu):
              [ahref]
              
             </li>
             <li>
              코르시카어(co):
              [ahref]
              
             </li>
             <li>
              코미페르먀크어(koi):
              [ahref]
              
             </li>
             <li>
              콘월어(kw):
              [linkx]
              
              (남성)
             </li>
             <li>
              콘카니어(kok):
              [linkx]
              
              (kollo)
             </li>
             <li>
              쿠르드어(ku):
              [linkx]
              
              ,
              [ahref]
              
              ; (소라니어);
              [ahref]
              
              (rêwî)
             </li>
             <li>
              쿠미크어(kum):
              [linkx]
              
              (tülkü)
             </li>
             <li>
              크로아티아어(hr):
              [linkx]
              
              (여성)
             </li>
             <li>
              크리어(cr):
              [linkx]
              
              (mahkesiis)
             </li>
             <li>
              크림타타르어(crh):
              <a href="/wiki/tilki" title="tilki">
               tilki
              </a>
             </li>
             <li>
              클라매스모독어(kla):
              [linkx]
              
             </li>
             <li>
              키르기스어(ky):
              [ahref]
              
              (tülkü)
             </li>
             <li>
              킬딘사미어(sjd):
              [ahref]
              
             </li>
             <li>
              타갈로그어(tl):
              [linkx]
              
              ,
              [linkx]
              
             </li>
             <li>
              타밀어(ta):
              [ahref]
              
              (nari)
             </li>
             <li>
              타바사란어(tab):
              [ahref]
              
             </li>
             <li>
              타오스어(twf):
              [linkx]
              
             </li>
             <li>
              타이어(th):
              [ahref]
              
              (jîngjòk)
             </li>
             <li>
              타지크어(tg):
              [ahref]
              
             </li>
             <li>
              타타르어(tt):
              [linkx]
              
             </li>
             <li>
              타트어(ttt):
              [linkx]
              
              (키릴)/
              [ahref]
              
              (히브리 문자ִ)
             </li>
             <li>
              텔루구어(te):
              [linkx]
              
              (nakka),
              [ahref]
              
              (guṃṭanakka);
              <a class="new" href="/w/index.php?title=%E0%B0%95%E0%B1%8A%E0%B0%82%E0%B0%95%E0%B0%A8%E0%B0%95%E0%B1%8D%E0%B0%95&amp;action=edit&amp;redlink=1" title="కొంకనక్క (없는 문서)">
               కొంకనక్క
              </a>
              (koṃkanakka)
             </li>
             <li>
              터키어(tr):
              [linkx]
              
             </li>
             <li>
              투르크멘어(tk):
              [linkx]
              
             </li>
             <li>
              투바어(tyv):
              [ahref]
              
              (dilgi)
             </li>
             <li>
              틀링깃어(tli):
              <a href="/wiki/n%C9%91%C4%A1%CA%8Cs%E2%80%99%C3%A9" title="nɑġʌs’é">
               nɑġʌs’é
              </a>
             </li>
             <li>
              파슈토어(ps):
              [ahref]
              
              (gīdṛâ)
             </li>
             <li>
              파파고어(ood):
              <a href="/wiki/gaso" title="gaso">
               gaso
              </a>
             </li>
             <li>
              파피아멘토어(pap):
              [ahref]
              
             </li>
             <li>
              페로어(fo):
              [ahref]
              
              (남성)
             </li>
             <li>
              페르시아어(fa):
              [ahref]
              
              (rubah)
             </li>
             <li>
              펀자브어(pa):
              [ahref]
              
              (lū̃baṛ)
             </li>
             <li>
              포니어(paw):
              <a class="new" href="/w/index.php?title=kiw%CA%8C%CC%81ku&amp;action=edit&amp;redlink=1" title="kiwʌ́ku (없는 문서)">
               kiwʌ́ku
              </a>
             </li>
             <li>
              포르투갈어(pt):
              [linkx]
              
              (여성),
              [linkx]
              
             </li>
             <li>
              폴란드어(pl):
              [linkx]
              
              (남성)
             </li>
             <li>
              프랑스어(fr):
              [linkx]
              
              (여성);
              [linkx]
              
              (남성),
              [ahref]
              
              (남성, 고어)
             </li>
             <li>
              프리울리아어(fur):
              [ahref]
              
              (남성),
              [ahref]
              
              (남성)
             </li>
             <li>
              핀란드어(fi):
              [ahref]
              
              ,
              [ahref]
              
             </li>
             <li>
              하소르브어(dsb):
              [ahref]
              
              (여성)
             </li>
             <li>
              하우사어(ha):
              [ahref]
              
             </li>
             <li>
              하와이어(haw):
              [linkx]
              
             </li>
             <li>
              하카스어(kjh):
              [linkx]
              
              (tülgü)
             </li>
             <li>
              헝가리어(hu):
              [ahref]
              
             </li>
             <li>
              호피어(hop):
              [linkx]
              
             </li>
             <li>
              히브리어(he):
              <a class="new" href="/w/index.php?title=%D7%A9%D7%95%D7%A2%D7%9C&amp;action=edit&amp;redlink=1" title="שועל (없는 문서)">
               שׁוּעָל
              </a>
              (šu‘al) (남성)
             </li>
             <li>
              [mkey1]<li>[ahref]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx]<li>[pkeyx]</li>
             </li>
             <li>
              힐리가이논어(hil):
              [linkx]
              
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
      </div>
      <ul>
       <li>
        <b>
         2.
        </b>
        (비유) 매우 간사하고 속임수가 많은 사람를 빗대어 하는 말.
       </li>
      </ul>
      <dl>
       <dd>
        <ul>
         <li>
          여우처럼 영특하고 요사스럽다.
         </li>
        </ul>
       </dd>
      </dl>
      <ul>
       <li>
        관용구: 여우 짓
       </li>
       <li>
        관용구: 여우 방정
       </li>
      </ul>
      <div class="NavFrame" style="clear: both; margin: .5em 0 1em 2em;">
       <div class="NavHead" style="border-bottom: 1.2px solid #c0c0c0; text-align: left; line-height: 18pt; background-color: transparent; font-size: 100%;">
        <b>
         번역
        </b>
       </div>
       <div class="NavContent">
        <table border="0" style="padding: 3px; background-color: #f5f5f5;" width="100%">
         <tbody>
          <tr>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              그리스어(el):
             </li>
             <li>
              네덜란드어(nl):
             </li>
             <li>
              노르웨이어(no):
             </li>
             <li>
              덴마크어(da):
             </li>
             <li>
              독일어(de):
             </li>
             <li>
              라틴어(la):
             </li>
             <li>
              러시아어(ru):
             </li>
             <li>
              루마니아어(ro):
             </li>
             <li>
              몽골어(mn):
             </li>
             <li>
              불가리아어(bg):
             </li>
             <li>
              브르타뉴어(br):
             </li>
             <li>
              스웨덴어(sv):
             </li>
             <li>
              스페인어(es):
             </li>
             <li>
              슬로바키아어(sk):
             </li>
             <li>
              슬로베니아어(sl):
             </li>
             <li>
              아랍어(ar):
             </li>
            </ul>
           </td>
           <td style="width:1%;" valign="top">
           </td>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              에스페란토(eo):
             </li>
             <li>
              영어(en):
              [linkx]
              
              woman
             </li>
             <li>
              이도(io):
             </li>
             <li>
              이탈리아어(it):
             </li>
             <li>
              인도네시아어(id):
             </li>
             <li>
              인터링구아(ia):
             </li>
             <li>
              일본어(ja):
             </li>
             <li>
              중국어(zh):
             </li>
             <li>
              체코어(cs):
             </li>
             <li>
              카탈루냐어(ca):
             </li>
             <li>
              터키어(tr):
             </li>
             <li>
              포르투갈어(pt):
             </li>
             <li>
              폴란드어(pl):
             </li>
             <li>
              프랑스어(fr):
             </li>
             <li>
              핀란드어(fi):
             </li>
             <li>
              헝가리어(hu):
             </li>
             <li>
              히브리어(he):
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
      </div>
      <h4>
       <span id=".EB.AA.85.EC.82.AC_2">
       </span>
       <span class="mw-headline" id="명사_2">
        명사 2
       </span>
       <span class="mw-editsection">
        <span class="mw-editsection-bracket">
         [
        </span>
        [linkx]
        
        <span class="mw-editsection-bracket">
         ]
        </span>
       </span>
      </h4>
      <ul>
       <li>
        어원: 한자
        [ahref]
        
       </li>
       <li>
        <b>
         1.
        </b>
        '
        [ahref]
        
        [linkx]
        
        '의 준말.
       </li>
       <li>
        유의어:
        [ahref]
        
       </li>
       <li>
        반의어:
        [linkx]
        
       </li>
      </ul>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [linkx]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        [pkeyx]<li>[pkeyx]</li><li>[pkeyx]</li>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       <a accesskey="n" href="/wiki/%ED%8A%B9%EC%88%98:%EB%82%B4%EC%82%AC%EC%9A%A9%EC%9E%90%ED%86%A0%EB%A1%A0" title="현재 사용하는 IP 주소에 대한 토론 문서 [n]">
        토론
       </a>
      </li>
      <li id="pt-anoncontribs">
       [linkx]
       
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         [linkx]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [linkx]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        <a accesskey="z" href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%8C%80%EB%AC%B8" title="대문으로 가기 [z]">
         대문
        </a>
       </li>
       <li id="n-bulletinboard">
        [ahref]
        
       </li>
       <li id="n-helpdesk">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EC%A7%88%EB%AC%B8%EB%B0%A9">
         질문방
        </a>
       </li>
       <li id="n-recentchanges">
        [linkx]
        
       </li>
       <li id="n-randompage">
        [linkx]
        
       </li>
       <li id="n-editroom">
        [ahref]
        
       </li>
       <li id="n-createpage">
        [linkx]
        
       </li>
       <li id="n-help">
        [linkx]
        
       </li>
       <li id="n-sitesupport">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [ahref]
        
       </li>
       <li id="coll-download-as-rl">
        [ahref]
        
       </li>
       <li id="t-print">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        [linkx]
        
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        [ahref]
        
       </li>
       <li id="t-permalink">
        [linkx]
        
       </li>
       <li id="t-info">
        [linkx]
        
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-az">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="az" lang="az" title="여우 – 아제르바이잔어">
         Azərbaycanca
        </a>
       </li>
       <li class="interlanguage-link interwiki-chr">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-cs">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-el">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-en">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="en" lang="en" title="여우 – 영어">
         English
        </a>
       </li>
       <li class="interlanguage-link interwiki-eu">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-fr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-gl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ja">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="ja" lang="ja" title="여우 – 일본어">
         日本語<li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[mkey1]<li>[keywordx]</li>
        </a>
       </li>
       <li class="interlanguage-link interwiki-ku">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ky">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lo">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-lt">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="lt" lang="lt" title="여우 – 리투아니아어">
         Lietuvių
        </a>
       </li>
       <li class="interlanguage-link interwiki-mg">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-nl">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-pl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ro">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        <a class="interlanguage-link-target" href="/wiki/%EC%97%AC%EC%9A%B0" hreflang="ru" lang="ru" title="여우 – 러시아어">
         Русский
        </a>
       </li>
       <li class="interlanguage-link interwiki-sk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sv">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-sw">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-th">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-tr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ug">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-vi">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-zh">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 9월 6일 (목) 07:41에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     <li>[mkey1]</li><li>[pkeyx]</li>[ahref]
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [linkx]
     
    </li>
    <li id="footer-places-about">
     [ahref]
     
    </li>
    <li id="footer-places-disclaimer">
     <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD" title="위키낱말사전:유의사항">
      유의사항
     </a>
    </li>
    <li id="footer-places-developers">
     [ahref]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     <a class="noprint stopMobileRedirectToggle" href="/w/index.php?title=%EC%97%AC%EC%9A%B0&amp;mobileaction=toggle_view_mobile">
      모바일 보기
     </a>
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     [ahref]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0499
  </b>
 </body>
</html>
|<---