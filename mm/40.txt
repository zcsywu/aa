--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.31.2" name="generator"/>
  <meta content="https://gamepedia.cursecdn.com/minecraft_ko_gamepedia/b/b9/Milk2.png" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="website" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="Gamepedia" itemprop="author"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-우유_양동이 rootpage-우유_양동이 skin-hydra action-view site-minecraft-gamepedia show-ads">
  <div id="netbar">
   <div class="netbar-flex">
    <div class="netbar-box left logo">
     [linkx]
     
    </div>
    <div class="netbar-box left">
     [linkx]
     
    </div>
    <div class="netbar-box left officialwiki">
     [ahref]
     
    </div>
    <div class="netbar-spacer">
    </div>
    <div class="netbar-box right">
     [ahref]
     
    </div>
    <div class="netbar-box right">
     <a class="aqua-link" href="/index.php?title=%ED%8A%B9%EC%88%98:%EA%B3%84%EC%A0%95%EB%A7%8C%EB%93%A4%EA%B8%B0&amp;returnto=%EC%9A%B0%EC%9C%A0+%EC%96%91%EB%8F%99%EC%9D%B4" id="register-link">
      Register
     </a>
    </div>
   </div>
  </div>
  <div class="with-siderail" id="global-wrapper">
   <div class="noprint" id="mw-page-base">
   </div>
   <div class="noprint" id="mw-head-base">
   </div>
   <div id="pageWrapper">
    <div class="mw-body" id="content" itemprop="articleBody" role="main">
     [linkx]
     
     <div class="mw-body-content" id="siteNotice">
      <div dir="ltr" id="localNotice" lang="ko">
       <div class="mw-parser-output">
        <div class="bigsign" style="text-align:center; line-height:100%; display: inline-block">
         <p>
          새로 오신 분들은
          [ahref]
          
          를 꼭 읽어주세요.
         </p>
         <p>
          문서의
          [linkx]
          
          ·
          [linkx]
          
          과
          [ahref]
          
          을 도와주시면 마인크래프트 위키에 큰 힘이 됩니다.
         </p>
        </div>
       </div>
      </div>
     </div>
     <div class="mw-indicators mw-body-content">
     </div>
     <div id="atflb">
      <div id="cdm-zone-01">
      </div>
     </div>
     <h1 class="firstHeading" id="firstHeading" itemprop="name" lang="ko">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h1>
     <div class="mw-body-content" id="bodyContent">
      <div class="noprint" id="siteSub">
       Minecraft Wiki
      </div>
      <div id="contentSub">
      </div>
      <div class="mw-jump" id="jump-to-nav">
       이동:
       [ahref]
       
       ,
       [ahref]
       
      </div>
      <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
       <div class="mw-parser-output">
        <div class="notaninfobox">
         <div class="mcwiki-header infobox-title">
          우유 양동이
         </div>
         <div class="infobox-imagearea">
          <div>
           [ahref]
           
          </div>
          <div class="infobox-invimages">
           <div>
            <span class="invslot">
             <span class="invslot-item">
              <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-352px -3136px" title="우유 양동이">
               <br/>
              </span>
             </span>
            </span>
           </div>
          </div>
         </div>
         <table cellpadding="4" cellspacing="1" class="infobox-rows">
          <tbody>
           <tr>
            <th>
             종류
            </th>
            <td>
             <p>
              식료품/음료
             </p>
            </td>
           </tr>
           <tr>
            <th>
             [ahref][linkx][keywordx][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx][linkx]
            </th>
            <td>
             <p>
              없음; 모든
              [ahref]
              
              들을 제거한다.
             </p>
            </td>
           </tr>
           <tr>
            <th>
             조리
            </th>
            <td>
             <p>
              불가능
             </p>
            </td>
           </tr>
           <tr>
            <th>
             <a href="/%EC%9E%AC%EC%83%9D_%EA%B0%80%EB%8A%A5%ED%95%9C_%EC%9E%90%EC%9B%90" title="재생 가능한 자원">
              재생
             </a>
            </th>
            <td>
             <p>
              가능
             </p>
            </td>
           </tr>
           <tr>
            <th>
             쌓기
            </th>
            <td>
             <p>
              불가능
             </p>
            </td>
           </tr>
           <tr>
            <th>
             [linkx]
             
            </th>
            <td>
             <p>
              <abbr style="font-size:smaller" title="십진수">
               DEC:
              </abbr>
              335
              <sup>
               1
              </sup>
              <abbr style="font-size:smaller" title="십육진수">
               HEX:
              </abbr>
              14F
              <sup>
               1
              </sup>
              <abbr style="font-size:smaller" title="이진수">
               BIN:
              </abbr>
              101001111
              <sup>
               1
              </sup>
             </p>
            </td>
           </tr>
           <tr>
            <th>
             [ahref]
             
            </th>
            <td>
             <p>
              [ahref]
              
              참고
             </p>
            </td>
           </tr>
          </tbody>
         </table>
        </div>
        <p>
         <b>
          우유 양동이
         </b>
         (Milk bucket)는
         <sup class="reference" id="cite_ref-1">
          [linkx]
          
         </sup>
         [linkx]
         
         나
         [linkx]
         
         에게 얻을 수 있는
         <a href="/%EC%95%84%EC%9D%B4%ED%85%9C" title="아이템">
          아이템
         </a>
         이다.
        </p>
        <div class="toc" id="toc">
         <div class="toctitle" dir="ltr" lang="ko">
          <h2>
           [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h2>
         </div>
         <ul>
          <li class="toclevel-1 tocsection-1">
           [linkx]
           
           <ul>
            <li class="toclevel-2 tocsection-2">
             [linkx]
             
            </li>
            <li class="toclevel-2 tocsection-3">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li class="toclevel-1 tocsection-4">
           [linkx]
           
           <ul>
            <li class="toclevel-2 tocsection-5">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li class="toclevel-1 tocsection-6">
           [ahref]
           
          </li>
          <li class="toclevel-1 tocsection-7">
           [ahref]
           
          </li>
          <li class="toclevel-1 tocsection-8">
           [linkx]
           
          </li>
          <li class="toclevel-1 tocsection-9">
           [linkx]
           
          </li>
          <li class="toclevel-1 tocsection-10">
           [linkx]
           
          </li>
          <li class="toclevel-1 tocsection-11">
           [ahref]
           
          </li>
         </ul>
        </div>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <h3>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <p>
         서바이벌 모드나 모험 모드에서는
         <a href="/%EC%96%91%EB%8F%99%EC%9D%B4" title="양동이">
          빈 양동이
         </a>
         를 든 상태에서
         [linkx]
         
         나
         [linkx]
         
         를 우클릭하면 우유를 얻을 수 있다.
        </p>
        <h3>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <p>
         떠돌이 상인이 우유 양동이를 들고 있을 때 죽으면, 일정 확률로 우유 양동이를 드롭할 수 있다.‌
         <sup class="nowrap">
          [
          <i>
           <span title="이 내용은 차기 버전의 마인크래프트에서만 적용된다.">
            차기 버전용:
           </span>
           [linkx]
           
          </i>
          ]
         </sup>
        </p>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         우유를 손에 들고 마우스 오른쪽 버튼을 누르면 애니메이션이 나오면서 마실 수 있다. 다 마시는 즉시
         [ahref]
         
         에게 걸려있는
         <a href="/%EC%83%81%ED%83%9C_%ED%9A%A8%EA%B3%BC" title="상태 효과">
          상태 효과
         </a>
         들이 모두 제거된다.
        </p>
        <p>
         일인칭 시점 외의 시점에서는 우유를 마시는 애니메이션이 나오지 않는다.‌
         <sup class="nowrap">
          [linkx]<li>[ahref]</li>[linkx]<li>[mkey1]</li>[ahref]
         </sup>
        </p>
        <h3>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <table class="wikitable" data-description="제작방법">
         <tbody>
          <tr>
           <th>
            이름
           </th>
           <th>
            재료
           </th>
           <th>
            [ahref]
            
            방법
           </th>
           <th class="unsortable">
            설명
           </th>
          </tr>
          <tr>
           <th>
            [ahref]
            
           </th>
           <td>
            [linkx]
            
            +
            <br/>
            [linkx]
            
            +
            <br/>
            [ahref]
            
            +
            <br/>
            [linkx]
            
           </td>
           <td style="padding:1px">
            <div>
             <span class="mcui mcui-Crafting_Table">
              <span class="mcui-input">
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-352px -3136px" title="우유 양동이">
                   <br/>
                  </span>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-352px -3136px" title="우유 양동이">
                   <br/>
                  </span>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-352px -3136px" title="우유 양동이">
                   <br/>
                  </span>
                 </span>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
               </span>
               <span class="mcui-row">
                <span class="invslot">
                 <span class="invslot-item">
                  <a href="/%EB%B0%80" title="밀">
                   <span class="sprite inv-sprite" style="background-image:url(/media/4/44/InvSprite.png?version=51e185f2c422dd241cb261fceaae3977);background-position:-608px -3200px" title="밀">
                    <br/>
                   </span>
                  </a>
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
                <span class="invslot">
                 <span class="invslot-item">
                  [ahref]
                  
                 </span>
                </span>
               </span>
              </span>
              <span class="mcui-arrow">
               <br/>
              </span>
              <span class="mcui-output">
               <span class="invslot invslot-large">
                <span class="invslot-item">
                 [ahref]
                 
                </span>
               </span>
              </span>
             </span>
            </div>
           </td>
           <td>
            케이크를 만들고 나면 우유 양동이는 빈 양동이로 바뀌어 그대로 제작 그리드에 남게 된다.
           </td>
          </tr>
         </tbody>
        </table>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <div style="text-align:center">
         <div class="thumb embedvideo autoResize" style="width: 433px;">
          <div class="embedvideo autoResize" style="">
           <div class="embedvideowrap" style="width: 425px;">
            <iframe allowfullscreen="true" frameborder="0" height="239" src="//www.youtube.com/embed/eyxea_d0b3s?" width="425">
            </iframe>
           </div>
          </div>
         </div>
        </div>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <table class="wikitable" data-description="History">
         <tbody>
          <tr>
           <th colspan="6">
            [linkx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            우유가 처음 공개되었다.이때는 용도가 없었으며, 보관함 편집을 통해서만 얻을 수 있었다.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            <a class="new" href="/index.php?title=Java_Alpha_1.0.11&amp;action=edit&amp;redlink=1" title="Java Alpha 1.0.11 (없는 문서)">
             1.0.11
            </a>
           </th>
           <td>
            소에게서 우유를 얻을 수 있게 되었지만, 마실 수는 없었다.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [linkx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [linkx]
            
           </th>
           <td>
            우유가
            [ahref]
             [keywordx][keywordx][mkey1][ahref][mkey1][ahref][keywordx][pkeyx][linkx][mkey1][mkey1][linkx][linkx][ahref][keywordx][ahref][keywordx][pkeyx]
            
            의 제작법에 포함되었다. 하지만 아직은 마실 수 없었다.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            <li>[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx][mkey1]
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [linkx]
            
           </th>
           <td>
            오징어 우유짜기가 삭제되었다.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [linkx]
            
           </th>
           <td>
            이제 우유를 마실 수 있게 되었다.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            <a class="new" href="/index.php?title=%EC%9E%90%EB%B0%94_%EC%97%90%EB%94%94%EC%85%98_%EB%B2%84%EC%A0%84_%EC%97%AD%EC%82%AC&amp;action=edit&amp;redlink=1" title="자바 에디션 버전 역사 (없는 문서)">
             자바 에디션
            </a>
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="2">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            버섯소에게도 우유를 얻을 수 있게 되었다.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            [linkx]
            
            의 2011년 9월 30일자 트윗에 의하면 우유가 모든 상태 효과를 제거할 수 있게 된다.
            <sup class="reference" id="cite_ref-2">
             [ahref]
             
            </sup>
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="2">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [linkx]
            
           </th>
           <td>
            Prior to
            [ahref]
            
            , this item's numeral ID was 335.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Renamed to "Milk Bucket".
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [ahref]
             [ahref][mkey1][linkx][keywordx][keywordx][keywordx][mkey1][ahref][linkx][keywordx][mkey1][pkeyx][keywordx][linkx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [linkx]
            
           </th>
           <td>
            [ahref]
            
            Changed the texture of milk buckets.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [ahref]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [linkx]
            
           </th>
           <td>
            우유가 추가되었다. 아직은 마실 수 없었다.
           </td>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [ahref]
            
           </th>
           <td>
            이제 우유를 마시면
            [linkx]
            
            가 제거된다.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [linkx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="3" rowspan="1">
            <a class="new" href="/index.php?title=%EB%B2%A0%EB%93%9C%EB%9D%BD_%EC%97%90%EB%94%94%EC%85%98_1.10.0&amp;action=edit&amp;redlink=1" title="베드락 에디션 1.10.0 (없는 문서)">
             1.10.0
            </a>
           </th>
           <th class="nowrap" colspan="2" rowspan="1">
            [linkx]
            
           </th>
           <td>
            [linkx]
            
            Changed the texture of milk buckets.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [linkx]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" rowspan="1">
            [linkx]
            
           </th>
           <th class="nowrap" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" rowspan="1">
            [ahref]
            
           </th>
           <th class="nowrap" rowspan="1">
           </th>
           <td>
            우유가 추가되었다.
           </td>
          </tr>
          <tr>
           <th colspan="6">
            [ahref]
            
           </th>
          </tr>
          <tr>
           <th class="nowrap" colspan="5" rowspan="1">
            [ahref]
            
           </th>
           <td>
            Added Milk Buckets.
           </td>
          </tr>
         </tbody>
        </table>
        <h2>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         “우유 양동이”에 관련된 문제점은
         [linkx]
         
         에서 관리된다. 그곳에서 문제점을 보고하면 된다.
        </p>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/%EC%BC%80%EC%9D%B4%ED%81%AC" title="케이크">
           케이크
          </a>
         </li>
        </ul>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <div class="mw-references-wrap">
         <ol class="references">
          <li id="cite_note-1">
           <span class="mw-cite-backlink">
            [ahref]
            
           </span>
           <span class="reference-text">
            자바/콘솔 에디션에서는
            <b>
             Milk Bucket
            </b>
            , 베드락/뉴 닌텐도 3DS에서는
            <b>
             Milk
            </b>
            라고 한다.
           </span>
          </li>
         </ol>
        </div>
        <h2>
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <div class="mw-references-wrap">
         <ol class="references">
          <li id="cite_note-2">
           [linkx]
           
           <span class="reference-text">
            [ahref]
            
           </span>
          </li>
         </ol>
        </div>
        <div class="load-page loadbox-navbox" data-page="Template:Items/content" style="background-color: white; border: 1px solid #CCC; margin-bottom: 0.5em; padding: 0 0.5em;">
         <p>
          <span id=".5B.5B.EC.95.84.EC.9D.B4.ED.85.9C.5D.5D">
           <b>
            [linkx]
            
           </b>
          </span>
         </p>
         <div class="load-page-content noscript">
          <div class="dablink" style="padding-top: 0.5em; padding-left: 2em; padding-bottom: 0.5em; margin-bottom: 0.5em">
           참조:
           [ahref]
           
           <span class="mw-editsection-like" title="편집: Template:Items/content">
            [
            [linkx]
            
            ]
           </span>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="printfooter">
       [pkeyx][pkeyx][mkey1][keywordx][pkeyx][linkx][ahref][pkeyx][pkeyx][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx][linkx]
      </div>
      <div class="catlinks" data-mw="interface" id="catlinks">
       <div class="mw-normal-catlinks" id="mw-normal-catlinks">
        [linkx]
        
        :
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
           <li>[ahref]</li>[mkey1]<li>[keywordx]</li>[linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/%EB%B6%84%EB%A5%98:%EA%B9%A8%EC%A7%84_%ED%8C%8C%EC%9D%BC_%EB%A7%81%ED%81%AC%EA%B0%80_%ED%8F%AC%ED%95%A8%EB%90%9C_%EB%AC%B8%EC%84%9C" title="분류:깨진 파일 링크가 포함된 문서">
           깨진 파일 링크가 포함된 문서
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="visualClear">
      </div>
     </div>
     <div id="siderail_minecraft_ko_gamepedia">
      <div id="atfmrec_minecraft_ko_gamepedia">
       <div id="cdm-zone-02">
       </div>
      </div>
      <div id="middlemrec_minecraft_ko_gamepedia">
       <a href="/PRO?utm_source=wiki&amp;utm_medium=promorail">
       </a>
      </div>
      <div id="btfmrec_minecraft_ko_gamepedia">
       <div id="cdm-zone-06">
       </div>
      </div>
     </div>
     <div class="visualClear">
     </div>
     <div id="btfheroContainer">
      <div id="btfhero_container">
       <div id="twitchnet-liveontwitch" style="margin: 0 auto; width: 90%; max-width: 776px; height: 270px;">
       </div>
      </div>
     </div>
     <div id="btflb">
      <div id="cdm-zone-04">
      </div>
     </div>
    </div>
    <div id="mw-navigation">
     <h2>
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h2>
     <div id="mw-head">
      <div id="left-navigation">
       <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
        <h3 id="p-namespaces-label">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <ul>
         <li class="selected" id="ca-nstab-main">
          <span>
           [ahref]
           
          </span>
         </li>
         <li class="new" id="ca-talk">
          <span>
           [ahref]
           
          </span>
         </li>
        </ul>
       </div>
       <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
        <h3 id="p-variants-label">
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="menu">
         <ul>
         </ul>
        </div>
       </div>
       <div aria-labelledby="p-sharing-label" class="vectorMenu" id="p-sharing" role="navigation">
        <h3 id="p-cactions-label">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <div class="menu">
         <div id="socialIconImages">
          [ahref]
          
          [ahref]
          
          [linkx]
          
          [ahref]
          
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
      <div id="right-navigation">
       <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
        <h3 id="p-views-label">
         <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h3>
        <ul>
         <li class="collapsible selected" id="ca-view">
          <span>
           [linkx]
            <li>[keywordx]</li>[ahref][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[mkey1]</li><li>[linkx]</li>
           
          </span>
         </li>
         <li class="collapsible" id="ca-ve-edit">
          <span>
           [linkx]
           
          </span>
         </li>
         <li class="collapsible" id="ca-edit">
          [pkeyx][linkx][linkx][mkey1][pkeyx][ahref][keywordx][keywordx][mkey1][linkx][ahref][keywordx]
         </li>
         <li class="collapsible" id="ca-history">
          <span>
           [linkx]
           
          </span>
         </li>
        </ul>
       </div>
       <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
        <h3 id="p-cactions-label">
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="menu">
         <ul>
         </ul>
        </div>
       </div>
       <div id="p-search" role="search">
        <h3>
         [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <form action="/index.php" id="searchform">
         <div id="simpleSearch">
         </div>
        </form>
       </div>
      </div>
     </div>
     <div id="mw-panel">
      <div id="p-logo" role="banner">
       <a class="mw-wiki-logo" href="/Minecraft_Wiki" title="대문으로 가기 - Minecraft Wiki">
       </a>
      </div>
      <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
       <h3 id="p-navigation-label">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="body">
        <ul>
         <li id="n-mainpage-description">
          [ahref]
          
         </li>
         <li id="n-recentchanges">
          [ahref]
          
         </li>
         <li id="n-randompage">
          [ahref]
          
         </li>
         <li id="n-portal">
          [ahref]
           [keywordx]<li>[linkx]</li>[pkeyx]
          
         </li>
         <li id="n-.EA.B4.80.EB.A6.AC.EC.9E.90-.EC.9A.94.EC.B2.AD">
          <a href="/Minecraft_Wiki%ED%86%A0%EB%A1%A0:%EA%B4%80%EB%A6%AC%EC%9E%90_%EC%9A%94%EC%B2%AD">
           관리자 요청
          </a>
         </li>
         <li id="n-.EC.9C.84.ED.82.A4-.EA.B7.9C.EC.A0.95">
          [linkx]
          
         </li>
         <li id="n-help">
          [linkx]
           <li>[keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][ahref]<li>[linkx]</li>
          
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-.EC.9C.A0.EC.9A.A9.ED.95.9C_.EB.AC.B8.EC.84.9C-label" class="portal" id="p-.EC.9C.A0.EC.9A.A9.ED.95.9C_.EB.AC.B8.EC.84.9C" role="navigation">
       <h3 id="p-.EC.9C.A0.EC.9A.A9.ED.95.9C_.EB.AC.B8.EC.84.9C-label">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="body">
        <ul>
         <li id="n-.EB.B8.94.EB.A1.9D">
          [ahref]
          
         </li>
         <li id="n-.EC.95.84.EC.9D.B4.ED.85.9C">
          [ahref]<li>[mkey1]</li><li>[keywordx]</li>
         </li>
         <li id="n-.EC.A0.9C.EC.9E.91.EB.B2.95">
          [ahref]
          
         </li>
         <li id="n-.EC.A0.9C.EB.A0.A8">
          [linkx]
          
         </li>
         <li id="n-.EB.A7.88.EB.B2.95.EB.B6.80.EC.97.AC">
          [ahref]
          
         </li>
         <li id="n-.EB.AC.BC.EC.95.BD-.EC.96.91.EC.A1.B0">
          [ahref]
          
         </li>
         <li id="n-.EB.AA.B9">
          <a href="/%EB%AA%B9">
           몹
          </a>
         </li>
         <li id="n-.EA.B1.B0.EB.9E.98">
          [ahref]
           [keywordx][ahref][keywordx]
          
         </li>
         <li id="n-.EB.A0.88.EB.93.9C.EC.8A.A4.ED.86.A4-.ED.9A.8C.EB.A1.9C">
          [linkx]
          
         </li>
         <li id="n-.EB.A6.AC.EC.86.8C.EC.8A.A4-.ED.8C.A9">
          [linkx]
          
         </li>
         <li id="n-.EB.AA.A8.EB.93.9C">
          <a href="/%EB%AA%A8%EB%93%9C">
           모드
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-Gamepedia-label" class="portal" id="p-Gamepedia" role="navigation">
       <h3 id="p-Gamepedia-label">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="body">
        <ul>
         <li id="n-.EC.A7.80.EC.9B.90">
          [ahref]
          
         </li>
         <li id="n-.EB.B6.80.EC.A0.81.EC.A0.88-.EA.B4.91.EA.B3.A0-.EC.8B.A0.EA.B3.A0">
          [ahref]
          
         </li>
         <li id="n-.EB.8F.84.EC.9B.80.EB.A7.90-.EC.9C.84.ED.82.A4">
          [linkx]
          
         </li>
         <li id="n-.EC.97.B0.EB.9D.BD">
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
       <h3 id="p-tb-label">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="body">
        <ul>
         <li id="t-whatlinkshere">
          [ahref]
          
         </li>
         <li id="t-recentchangeslinked">
          [linkx]
          
         </li>
         <li id="t-specialpages">
          [ahref]
          
         </li>
         <li id="t-print">
          [linkx]
          
         </li>
         <li id="t-permalink">
          [linkx]
          
         </li>
         <li id="t-info">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
       <h3 id="p-lang-label">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="body">
        <ul>
         <li class="interlanguage-link interwiki-cs">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-de">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-en">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-es">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-fr">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-hu">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-it">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-ja">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-nl">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-pl">
          [linkx]
          
         </li>
         <li class="interlanguage-link interwiki-pt">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-ru">
          [ahref]
          
         </li>
         <li class="interlanguage-link interwiki-zh">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div aria-labelledby="p-socialProfiles-label" class="portal" id="p-socialProfiles" role="navigation">
       <h3 id="p-socialProfiles-label">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="body">
        <div class="socialSidebar">
         <div class="socialLink twitter">
          [linkx]
          
         </div>
         <div class="socialLink facebook">
          [ahref]
          
         </div>
         <div class="socialLink twitch">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div id="footer" role="contentinfo">
     <ul id="footer-info">
      <li id="footer-info-lastmod">
       이 문서는 2019년 4월 4일 (목) 16:16에 마지막으로 편집되었습니다.
      </li>
      <li id="footer-info-copyright">
       별도로 명시하지 않은 경우, 내용은
       [ahref]
       
       에 따라 사용할 수 있습니다.
       <br/>
       Minecraft content and materials are trademarks and copyrights of Mojang and its licensors.  All rights reserved.
       <br/>
       This site is a part of Wikia, Inc. and is not affiliated with Mojang.
      </li>
     </ul>
     <ul id="footer-places">
      <li id="footer-places-about">
       [linkx]
       
      </li>
      <li id="footer-places-disclaimer">
       [linkx]
       
      </li>
      <li id="footer-places-mobileview">
       [linkx]
       
      </li>
     </ul>
     <ul class="noprint" id="footer-icons">
      <li id="footer-copyrightico">
       [ahref]
       
      </li>
      <li id="footer-poweredbyico">
       [linkx]
       
       [linkx]
       
      </li>
     </ul>
     <div style="clear: both;">
     </div>
    </div>
   </div>
   <div id="footer-push">
   </div>
  </div>
  <div id="footer-and-prefooter">
   <div id="gamepedia-footer">
    <div class="footer-wrapper-gp">
     <div class="footer-box footer-logo">
      [linkx]
      
     </div>
     <div class="footer-box footer-social">
      <ul class="social">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-links mobile-split">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <footer class="show-ads" id="curse-footer" role="complimentary">
    <div class="footer-wrapper">
     <div class="footer-box footer-ad">
      <div class="ad-placement ad-main-med-rect-footer">
       <div id="cdm-zone-03">
       </div>
      </div>
     </div>
     <div class="footer-box footer-logo">
      [linkx]
      
     </div>
     <div class="footer-box footer-properties">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="properties mobile-split">
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="m">
         Gamepedia
        </a>
       </li>
       <li>
        [keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx]
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-social">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="social">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-overview">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="mobile-split">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]<li>[keywordx]</li><li>[linkx]</li>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-community">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="mobile-split">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="footer-box footer-advertise">
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul class="mobile-split">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="footer-post">
     Minecraft Wiki is a Fandom Gaming Community.
     <hr/>
     <span class="footer-post-mobile">
      [linkx]
      
     </span>
    </div>
   </footer>
  </div>
  <noscript>
  </noscript>
  <noscript>
   <div>
   </div>
  </noscript>
  <div id="cdm-zone-end">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0043
  </b>
 </body>
</html>
|<---