--->|<!DOCTYPE html>
<html>
 <head>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="ecc176bcc172f2731a9d73d5daa6d4c8" http-equiv="x-pjax-version"/>
  <meta content="the seed" name="generator"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="application-name"/>
  <meta content="yes" name="mobile-web-app-capable"/>
  <meta content="나무위키" name="msapplication-tooltip"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="msapplication-starturl"/>
  <meta content="#008275" name="theme-color"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0, width=device-width" name="viewport"/>
  <meta content="noarchive" name="googlebot"/>
 </head>
 <body class="senkawa">
  <div class="navbar-wrapper">
   <nav class="navbar navbar-dark bg-inverse navbar-static-top">
    [linkx]
    
    <ul class="nav navbar-nav">
     <li class="nav-item">
      [linkx]
      
     </li>
     <li class="nav-item">
      [linkx]
      
     </li>
     <li class="nav-item dropdown">
      [ahref]
      
      <div class="dropdown-menu right">
       <a class="dropdown-item" data-npjax="true" href="/">
        <span class="icon ion-clipboard">
        </span>
        <span class="icon-title">
         게시판
        </span>
       </a>
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       [linkx]
       
       [ahref]
       
       <a class="dropdown-item" href="/OldPages">
        <span class="icon ion-pause">
        </span>
        <span class="icon-title">
         편집된 지 오래된 문서
        </span>
       </a>
       [linkx]
       
       <a class="dropdown-item" href="/LongestPages">
        <span class="icon ion-star">
        </span>
        <span class="icon-title">
         내용이 긴 문서
        </span>
       </a>
       <a class="dropdown-item" href="/BlockHistory">
        <span class="icon ion-eye-disabled">
        </span>
        <span class="icon-title">
         차단 내역
        </span>
       </a>
       [linkx]
       
       [linkx]
       
       [linkx]
       
      </div>
     </li>
     <li class="nav-item dropdown">
      <a aria-expanded="false" aria-haspopup="true" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" title="나무라이브">
       <span class="icon ion-android-list">
       </span>
       <span class="icon-title">
        라이브
       </span>
       <span class="caret">
       </span>
      </a>
      <div class="dropdown-menu right">
       [ahref]
       
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [linkx]
       
       <a class="dropdown-item" href="/b/lgbt">
        성소수자 채널
       </a>
       [linkx]
       
       [ahref]
       
       [ahref]
       
      </div>
     </li>
    </ul>
    <ul class="nav navbar-nav pull-right">
     <li class="nav-item dropdown user-menu-parent">
      [linkx]
      
      <div class="dropdown-menu user-dropdown right">
       <div class="dropdown-item user-info">
        <div class="user-info">
         <div>
          58.176.126.32
         </div>
         <div>
          Please login!
         </div>
        </div>
       </div>
       <div class="dropdown-divider">
       </div>
       <a class="dropdown-item" href="/settings" id="settingsLink" style="display: none;">
        스킨 설정
       </a>
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
      </div>
     </li>
    </ul>
    <form class="form-inline navbar-form search-box-parent">
     <div class="input-group search-box">
      <span class="input-group-btn left-search-btns">
       [linkx]
       
      </span>
      <span class="input-group-btn right-search-btns">
       <button class="btn btn-secondary" id="searchBtn" type="button">
        <span class="icon ion-search">
        </span>
       </button>
       <button class="btn btn-secondary" id="goBtn" type="button">
        <span class="icon ion-arrow-right-c">
        </span>
       </button>
      </span>
     </div>
    </form>
   </nav>
  </div>
  <div class="content-wrapper">
   <aside class="sidebar has-site-notice">
    <div class="card recent-card">
     <h5 class="card-title">
      최근 변경
     </h5>
     <div class="link-table" id="recentChangeTable">
      [ahref]
      
     </div>
     [linkx]
     
    </div>
    <div class="test-ad-card">
     <iframe frameborder="0" height="270" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/c/270x270.html?v=2" width="270">
     </iframe>
    </div>
    <div class="card live-list-card" data-count="20" data-slug="headline">
     <h5 class="card-title">
      헤드라인 최신글
     </h5>
     <div class="link-table">
      [ahref]
      
     </div>
     <a class="more-link" href="/b/headline">
      [더 보기]
     </a>
    </div>
    <div class="ad-card">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-slot="2029530375" style="display:inline-block;width:160px;height:600px">
     </ins>
    </div>
   </aside>
   <article class="container-fluid wiki-article">
    <div class="wiki-article-menu">
     <div class="btn-group" role="group">
      [linkx]
      
      <a class="btn btn-secondary" href="/xref/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC" role="button">
       역링크
      </a>
      <a class="btn btn-secondary" href="/discuss/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC" role="button">
       토론
      </a>
      [linkx]
      
      <a class="btn btn-secondary" href="/history/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC" role="button">
       역사
      </a>
      <a class="btn btn-secondary" href="/acl/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC" role="button">
       ACL
      </a>
     </div>
    </div>
    <h1 class="title">
     <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
    </h1>
    <p class="wiki-edit-date">
     최근 수정 시각:
     <time data-format="Y-m-d H:i:s" datetime="2019-06-02T09:04:59.000Z">
      2019-06-02 09:04:59
     </time>
    </p>
    <div class="adsense">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="horizontal" data-ad-slot="3379361405" data-full-width-responsive="false" style="display:block">
     </ins>
    </div>
    <div class="wiki-category">
     <h2>
      <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h2>
     <ul>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="wiki-content clearfix">
     <div class="wiki-inner-content">
      <div class="wiki-paragraph">
       [ahref]
       
       상위 문서:
       [linkx]
       
      </div>
      <div class="wiki-table-wrap table-center">
       <table class="wiki-table" style="border: 2px solid #409050;">
        <tbody>
         <tr>
          <td colspan="10" style="background-color:#309530; text-align:center;">
           <div class="wiki-paragraph">
            <strong>
             [ahref]
             
             <a class="wiki-link-internal" href="/w/%EB%B6%84%EB%A5%98:%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84" title="분류:테라리아">
              <span style="text-shadow:0 0 10px #815131;color:#e2b469;font-size:15pt;">
               하위 문서
              </span>
             </a>
            </strong>
           </div>
          </td>
         </tr>
         <tr>
          <td colspan="10" style="background-color:#309530; text-align:center;">
           <div class="wiki-paragraph">
            <strong>
             <span class="wiki-color" style="color:#fff">
              기본 정보
             </span>
            </strong>
           </div>
          </td>
         </tr>
         <tr>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C" title="테라리아/시스템">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC" title="테라리아/NPC">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [linkx]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8" title="테라리아/이벤트">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [linkx]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%A8%EB%B0%94%EC%9D%BC" title="테라리아/모바일">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
         </tr>
         <tr>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C" title="테라리아/시스템">
              <strong>
               시스템
              </strong>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EC%A0%84%20%EA%B3%BC%EC%A0%9C" title="테라리아/도전 과제">
              <strong>
               업적
              </strong>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84" title="테라리아/버전">
              <strong>
               버전
              </strong>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
         </tr>
         <tr>
          <td colspan="10" style="background-color:#309530; text-align:center;">
           <div class="wiki-paragraph">
            <strong>
             <span class="wiki-color" style="color:#fff">
              아이템 관련
             </span>
            </strong>
           </div>
          </td>
         </tr>
         <tr>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%A5%EC%8B%A0%EA%B5%AC" title="테라리아/장신구">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-self-link" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC" title="테라리아/도구">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AC%B4%EA%B8%B0" title="테라리아/무기">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A0%84%EA%B8%B0" title="테라리아/전기">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [linkx]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C" title="테라리아/재료">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px;">
             [linkx]
             
            </div>
           </div>
          </td>
         </tr>
         <tr>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [linkx]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [linkx]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [linkx]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%86%8C%EB%AA%A8%ED%92%88" title="테라리아/소모품">
              <strong>
               소모품
              </strong>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC" title="테라리아/가구">
              <strong>
               가구
              </strong>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             [ahref]
             
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C" title="테라리아/재료">
              <strong>
               재료
              </strong>
             </a>
            </div>
           </div>
          </td>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <div style="margin:0px -4px; font-size:11px;">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A1%B0%ED%95%A9" title="테라리아/조합">
              <strong>
               조합
              </strong>
             </a>
            </div>
           </div>
          </td>
         </tr>
         <tr>
          <td colspan="10" style="background-color:#309530;">
           <div class="wiki-paragraph">
            <strong>
             <span class="wiki-size size-down-1">
              <span class="wiki-color" style="color:#fff">
               ※
               <span class="wiki-color" style="color:red">
                ⓗ
               </span>
               는 하드모드 전용 콘텐츠를 나타냅니다.
              </span>
              <strong>
               <br/>
              </strong>
              <span class="wiki-color" style="color:#fff">
               ※
               <span class="wiki-color" style="color:#ccc">
                #(숫자)
               </span>
               는 아이템 코드입니다.
              </span>
             </span>
            </strong>
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <div class="wiki-paragraph">
       <br/>
       <div class="wiki-macro-toc" id="toc">
        <div class="toc-indent">
         <span class="toc-item">
          [linkx]
          
          . 기본 정보
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           <a href="1">
            1.1
           </a>
           . 도구 효율(Tool Power)
          </span>
          <span class="toc-item">
           [linkx]
           
           . 도구 속도(Tool Speed)
          </span>
          <span class="toc-item">
           <a href="3">
            1.3
           </a>
           . 도구 범위(Tool Range)
          </span>
         </div>
         <span class="toc-item">
          <a href="2">
           2
          </a>
          . 곡괭이류
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           [linkx]
           
           . 곡괭이
          </span>
          <span class="toc-item">
           <a href="2">
            2.2
           </a>
           . 드릴
          </span>
         </div>
         <span class="toc-item">
          [linkx]
          
          . 도끼류
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           [ahref]
           
           . 도끼
          </span>
          <span class="toc-item">
           [linkx]
           
           . 전기톱
          </span>
         </div>
         <span class="toc-item">
          <a href="4">
           4
          </a>
          . 망치
         </span>
         <span class="toc-item">
          <a href="5">
           5
          </a>
          . 이중 도구
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           [ahref]
           
           . 곡괭이+도끼
          </span>
          <span class="toc-item">
           [ahref]
           
           . 도끼+망치
          </span>
         </div>
         <span class="toc-item">
          <a href="6">
           6
          </a>
          . 탐사 및 이동용 도구
         </span>
         <span class="toc-item">
          [linkx]
          
          . 보조 장비
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           <a href="1">
            7.1
           </a>
           . 펫
          </span>
          <div class="toc-indent">
           <span class="toc-item">
            [ahref]
            
            . 모바일
           </span>
          </div>
          <span class="toc-item">
           [linkx]
           
           . 광원 펫
          </span>
          <span class="toc-item">
           [linkx]
           
           . 광산 수레
          </span>
          <span class="toc-item">
           [ahref]
           
           . 탈것
          </span>
          <span class="toc-item">
           [linkx]
           
           . 갈고리
          </span>
         </div>
         <span class="toc-item">
          [linkx]
          
          . 낚싯대
         </span>
         <span class="toc-item">
          <a href="9">
           9
          </a>
          . 페인트 도구
         </span>
         <span class="toc-item">
          <a href="0">
           10
          </a>
          . 지형 관련
         </span>
         <span class="toc-item">
          <a href="1">
           11
          </a>
          . 기타
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           <a href="1">
            11.1
           </a>
           . 블록 완드
          </span>
          <span class="toc-item">
           [ahref]
           
           . 무용
          </span>
         </div>
        </div>
       </div>
      </div>
      <h2 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도구는 종류마다 기능성을 갖춘 아이템이다. 크게
        <a class="wiki-link-internal" href="이" title="">
         곡괭이
        </a>
        ,
        <a class="wiki-link-internal" href="끼" title="">
         도끼
        </a>
        ,
        [ahref]
        
        로 나뉘며 곡괭이는
        [ahref]
        
        을, 도끼는
        [linkx]
        
        를, 망치는
        [linkx]
        
        을 부수고 블록의 높낮이를 바꿀 때 사용한다. 그 외 많은 도구들은 각 문단별로 사용 용도를 확인할 수 있다.
        <br/>
        <br/>
        도구 자체에도 공격력이 있으며 모든 도구의 타입은
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AC%B4%EA%B8%B0#근접 무기" title="테라리아/무기">
         근접 무기
        </a>
        에 속한다. 또한 예외 없이 자동 공격이 가능하다. 하지만 도구가 가지는 그 특성상 동급의 무기와 비교 시 그 공격력은 낮지만 따로 쓸 만한 무기가 없을 경우에는 무기를 대체할 수 있다.
        <br/>
        <br/>
        도구의 중요한 순서는 곡괭이 > 도끼 > 망치이다. 테라리아에서는 도구가 없다면 공격은 물론 그 어떠한 개체 파괴에 대한 상호작용이 불가능하므로 언제든지 곡괭이와 도끼 각 하나 이상(혹은 그것을 합친 도구 하나 이상)을 소지할 것을 권장한다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        곡괭이, 망치, 도끼는 각각 고유한 도구 효율을 가지고 있다. 이 효율은 해당 오브젝트를 타격할 때마다 그 오브젝트에게 도구가 가지는 효율만큼을 전달시키며 일정 수치 이상의 히트를 받으면 즉시 부숴진다.
        <br/>
        <br/>
        예를 들어
        [linkx]
        
        같은 토양 계열은 50%의 곡괭이 타격을 요구하며, 대부분 블록은 100%의 곡괭이 타격을 요구한다. 만약 흙 블록과
        [linkx]
        
        을 35%의 효율을 지닌 구리 곡괭이로 채광할 경우 흙 블록은 두 번의 타격에 회수되며 돌 블록은 세 번의 타격에 회수된다. 반대로 100%의 곡괭이 효율을 지닌 몰튼 곡괭이는 흙 블록과 돌 블록을 단 한 번의 타격에 회수할 수 있다.
        <br/>
        <br/>
        그러나 모든 곡괭이가 모든 블록을 회수할 수 있는 것은 아니며 일부 블록은 우선 보다 높은 곡괭이 효율을 요구한다. 예로
        [linkx]
        
        과
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#지옥석" title="테라리아/재료">
         지옥석
        </a>
        은 적어도 60% 이상,
        [ahref]
        
        은 200% 이상,
        [linkx]
        
        은 210% 이상의 효율을 지닌 곡괭이로만 회수할 수 있다. 이에 따라 많은 블록을 회수하기 위하여 각 곡괭이가 가지는 곡괭이 효율을 확인하는 것이 좋다.
        <br/>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="background-color:#fff;border: 2px solid #EBECF0;">
         <tbody>
          <tr style="background-color:#EBECF0;">
           <td rowspan="2" style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              블록
             </strong>
            </div>
           </td>
           <td rowspan="2" style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              히트
              <br/>
              포인트
             </strong>
            </div>
           </td>
           <td colspan="10" style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              필요한 타격 횟수
              <br/>
              (최소한도 곡괭이)
             </strong>
            </div>
           </td>
          </tr>
          <tr style="background-color:#EBECF0;">
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/CopperPickaxe.png" rel="nofollow" title="파일:Terraria/CopperPickaxe.png">
               <span class="wiki-image-align-normal">
                <span class="wiki-image-wrapper">
                 <noscript>
                 </noscript>
                </span>
               </span>
              </a>
              <br/>
              <strong>
               (35)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/TungstenPickaxe.png" rel="nofollow" title="파일:Terraria/TungstenPickaxe.png">
               <span class="wiki-image-align-normal">
                <span class="wiki-image-wrapper">
                 <noscript>
                 </noscript>
                </span>
               </span>
              </a>
              <br/>
              <strong>
               (50)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              [linkx]
              
              <br/>
              <strong>
               (55)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              [linkx]
              
              <br/>
              <strong>
               (65)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              [ahref]
              
              <br/>
              <strong>
               (70)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              [linkx]
              
              <br/>
              <strong>
               (100)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              [ahref]
              
              <br/>
              <strong>
               (110)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              [linkx]
              
              <br/>
              <strong>
               (150)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/ChlorophytePickaxe.png" rel="nofollow" title="파일:Terraria/ChlorophytePickaxe.png">
               <span class="wiki-image-align-normal" style="width:32px;">
                <span class="wiki-image-wrapper" style="width: 100%;">
                 <noscript>
                 </noscript>
                </span>
               </span>
              </a>
              <br/>
              <strong>
               (200)
              </strong>
             </div>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <div style="margin:0px -4px;">
              <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Picksaw.png" rel="nofollow" title="파일:Terraria/Picksaw.png">
               <span class="wiki-image-align-normal" style="width:32px;">
                <span class="wiki-image-wrapper" style="width: 100%;">
                 <noscript>
                 </noscript>
                </span>
               </span>
              </a>
              <br/>
              <strong>
               (210)
              </strong>
             </div>
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             흙 블록
             <br/>
             [linkx]
             
             찰흙 블록
             <br/>
             [ahref]
             
             진흙 블록
             <br/>
             [linkx]
             
             재 블록
             <br/>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SiltBlock.png" rel="nofollow" title="파일:Terraria/SiltBlock.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             실트 블록
             <br/>
             [ahref]
             
             모래 블록
             <br/>
             [linkx]
             
             굳은 모래 블록
             <br/>
             [ahref]
             
             눈 블록
             <br/>
             [ahref]
             
             진창눈 블록
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             50%
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/StoneBlock.png" rel="nofollow" title="파일:Terraria/StoneBlock.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             돌 블록
             <br/>
             [ahref]
             
             칠흑모래 블록
             <br/>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/GoldOre.png" rel="nofollow" title="파일:Terraria/GoldOre.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             금 광석
             <br/>
             [linkx]
             
             회색 벽돌
             <br/>
             그 외 모든 블록
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             100%
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             운석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             100%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             데모나이트 광석
             <br/>
             [linkx]
             
             크림테인 광석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             100%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Obsidian.png" rel="nofollow" title="파일:Terraria/Obsidian.png">
              <span class="wiki-image-align-normal">
               <li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
              </span>
             </a>
             흑요석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             100%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/EbonstoneBlock.png" rel="nofollow" title="파일:Terraria/EbonstoneBlock.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             칠흑석 블록
             <br/>
             [ahref]
             
             심홍석 블록
             <br/>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/PearlstoneBlock.png" rel="nofollow" title="파일:Terraria/PearlstoneBlock.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             진주석 블록
             <br/>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Hellstone.png" rel="nofollow" title="파일:Terraria/Hellstone.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             지옥석
             <br/>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BlueBrick.png" rel="nofollow" title="파일:Terraria/BlueBrick.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             [linkx]
             
             [ahref]
             
             던전 벽돌
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             200%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/CobaltOre.png" rel="nofollow" title="파일:Terraria/CobaltOre.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             코발트 광석
             <br/>
             [linkx]
             
             팔라듐 광석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             200%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             1
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/MythrilOre.png" rel="nofollow" title="파일:Terraria/MythrilOre.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             미스릴 광석
             <br/>
             [linkx]
             
             오리칼쿰 광석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             300%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/AdamantiteOre.png" rel="nofollow" title="파일:Terraria/AdamantiteOre.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             아다만타이트 광석
             <br/>
             [linkx]
             
             티타늄 광석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             400%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             가시
             <br/>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/WoodenSpike.png" rel="nofollow" title="파일:Terraria/WoodenSpike.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             나무 가시
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             400%
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             12
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             8
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             8
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             리자드 벽돌
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             400%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
          </tr>
          <tr>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             녹조류 광석
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             500%
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="background-color:#CCC; text-align:right;">
            <div class="wiki-paragraph">
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <br/>
        도끼는 벌목 대상이 나무와 선인장에 한정되므로 일목요연하게 설명이 가능하다. 모든 나무는 공통적으로 위치에 관계 없이 500%,
        [linkx]
        
        은 170%의 히트 포인트를 요구한다. 예로 35%의 도끼 효율을 지닌
        [linkx]
        
        는 나무를 넘기는데 총 15번의 타격(525%)을, 선인장은 5번의 타격(175%)을 요구한다. 반대로 175%의 도끼 효율을 지닌
        [ahref]
        
        는 나무를 넘기는데 총 4번의 타격을, 선인장은 한 번의 타격을 요구한다. 참고로 디 액스만이 유일하게 선인장을 한 번만에 넘길 수 있다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도구 속도는 한 회 타격하고 다음 회 타격할 때까지의 시간이 얼마나 되는지를 결정짓는다. 곡괭이, 도끼, 망치는 무기에 적용되는 공격 속도(Attack Speed)와 별도로 각자 고유한 도구 속도(Tool Speed)를 가지고 있다.
        <br/>
        <br/>
        예를 들어서, 구리 곡괭이로 좀비를 공격하면 1번 휘두를 때마다 정확히 1번 좀비를 타격하고, 2회 휘두르면 2회 타격한다. 하지만, 블록을 채굴할 땐 2번 휘두를 때마다 3회 타격하며, 적에게 공격했을 때보다 속도가 약간 빠른 것을 볼 수 있다. 전자와 관련된 개념이 공격 속도이고, 후자와 관련된 개념이 도구 속도이다.
        <br/>
        <br/>
        공격 속도와 도구 속도의 개념을 분리하는 것은 중요하다. 왜냐하면 근접 속도 증가 옵션을 가진 방어구나 장신구를 착용해도 도구 속도에는 영향을 미치지 않기 때문이다. 도구 속도에 영향을 미치는 것은 다음으로 한정된다.
        <br/>
       </div>
       <ol class="wiki-list wiki-list-decimal" start="1">
        <li>
         <div class="wiki-paragraph">
          도구 자체에 붙은, 속도 변화 옵션이 있는 수식어 (공격 속도와 도구 속도 둘 다 변화시킴)
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          특정 장비, 장신구, 버프
          <br/>
          (주의: 다음은 곡괭이와 드릴에만 영향을 미치고, 최대한도가 70%로 한정됨)
          <br/>
          채광 포션 (25%) / 채광용 복장 세트 (30%) / 천상의 조개 (15%) / 천상의 돌 (15%) / 해의 돌 (15%) / 달의 돌 (15%)
         </div>
        </li>
       </ol>
       <div class="wiki-paragraph">
        <br/>
        도구의 툴팁에서 나타나는 것은 공격 속도뿐이다. 게임 내에서 직접적으로 도구 속도를 확인할 수 있는 방법은 없지만, 기본 도구 속도가 기본 공격 속도보다 빠르거나 같으며, 모든 무기에 적용된다.
        <br/>
        <br/>
        이중 도구의 경우, 곡괭이+도끼는 채굴할 때와 벌목할 때의 속도가 같지만, 도끼+망치는 망치질할 때의 속도가 벌목할 때보다 약 2배 정도 증가한다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도구 범위는 현재 플레이어가 서 있는 곳으로부터 얼마나 넓은 범위까지 블록과 상호작용(채광, 벌목, 망치질)이 가능한가를 결정짓는다.
        <br/>
        <br/>
        대부분의 도구는 10 x 9 타일의 범위를 가지고 있다. 하지만 다음 도구처럼 예외가 있으며, 툴팁에서 따로 변경된 범위가 표시된다. 예를 들어, 구리 곡괭이의 경우 -1 range의 효과를 가지고 있으며 상하 1타일, 좌우 1타일이 줄어든 8 x 7 타일의 범위를 가진다.
        <br/>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="background-color:#fff;border: 2px solid #EBECF0;">
         <tbody>
          <tr style="background-color:#EBECF0;">
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              도구
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              범위 보너스
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             구리 곡괭이
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             -1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             구리 도끼
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             -1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             구리 망치
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             -1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             쉬루마이트 땅파기 손톱
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             -1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             녹조류 곡괭이
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             녹조류 드릴
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             녹조류 대형도끼
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             녹조류 전기톱
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             녹조류 전투망치
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             녹조류 착암기
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             픽소우
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             디 액스
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +1
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             유령의 곡괭이
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +3
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             유령의 햄액스
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +3
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             유령의 페인트붓
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +3
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             유령의 페인트 롤러
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +3
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             유령의 페인트 긁개
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +3
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            루미나이트 곡괭이[link]<li>[link]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +4
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             루미나이트 드릴 (획득 불가)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +4
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             루미나이트 도끼 (획득 불가)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +4
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             루미나이트 망치 (획득 불가)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +4
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             루미나이트 햄액스 (획득 불가)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +4
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             레이저 드릴
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             +10
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
       </div>
      </div>
      <h2 class="wiki-heading">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도구 중 한 분류로
        [linkx]
        
        , 잔디나
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#도토리" title="테라리아/블록">
         심어진 묘목
        </a>
        을 부술 수 있는 도구이다. 테라리아 맵의 대부분이 블록이기 때문에 가장 많이 사용하게 되는 도구이다.
        <br/>
        (선인장이 밟고있는 모래를 부숴서 선인장을 채굴할 수도 있다!)
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        게임 전반적으로 가장 많이 사용하게 되는 도구이다. 무기로서는 공격력도 초반 도구 중 그나마 높고, 속도도 좋아 무기가 없을 경우 자주 활용되지만, 넉백이 작아 적을 밀어버릴 용도로는 쓰기 힘들다.
        <br/>
        <br/>
        캐릭터를 새로 만들 경우
        [linkx]
        
        가 지급된다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         구리 곡괭이
        </strong>
        (Copper Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        가장 낮은 등급의 곡괭이이다. 새로운 캐릭터를 만들 경우 새롭게 지급되는 도구.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#구리" title="테라리아/재료">
         구리 주괴
        </a>
        12개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        4개로 직접 제작할 수 있으며
        [linkx]
        
        에게 은화 5닢으로 구입할 수도 있다. 채광 범위가 사방으로 각 1칸 낮아서 좌우 4블록, 상하 2블록으로만 채광이 가능하다.
        <br/>
        <br/>
        초반에는 낮에는 그저 땅 파고 돌 캐는 곡괭이이지만
        [linkx]
        
        이 되면 훌륭한 호신용 무기가 된다.
        [ahref]
        
        은 역할 자체가 무기이지만 범위가 작아서 유용하지 않으며 도끼는 느리지만 곡괭이는 휘두르는 속도와 넉백도 좋아서 떼로 몰려오는 좀비들을 상대하기에도 의외로 좋은 무기이다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         주석 곡괭이
        </strong>
        (Tin Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             5
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서 구리의 대체 광물인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#주석" title="테라리아/재료">
         주석 주괴
        </a>
        12개와
        [ahref]
        
        4개로 제작한다. 구리 곡괭이가 가지는 범위 감소가 없어 양쪽 5블록, 상하 3블록의 채광 범위를 가진다. 세계에
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#주석" title="테라리아/재료">
         주석
        </a>
        이 생성되었고 현재 가진 구리 곡괭이의 범위 하향이 도저히 못 버티겠거나 주석이 넘쳐 흐르는 것이라면 만들기에 적당하다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         철 곡괭이
        </strong>
        (Iron Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             5
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        구리/주석 곡괭이보다 높으며 은/텅스텐 곡괭이보다 낮은, 두 번째 등급의 곡괭이이다.
        [linkx]
        
        에서
        [ahref]
        
        12개,
        [linkx]
        
        3개로 제작한다. 철은 테라리아 내에서 굉장히 많이 사용되는 재료 중 하나이기에 구리에서 곧바로 은/텅스텐 수준으로 갈아타는 경우가 많다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/LeadPickaxe.png" rel="nofollow" title="파일:Terraria/LeadPickaxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         납 곡괭이
        </strong>
        (Lead Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서 철의 대체 광물인
        [linkx]
        
        12개와
        [linkx]
        
        3개로 제작한다. 철과 마찬가지로 일반 광물 곡괭이 중 나무를 1개 덜 사용한다.
        <br/>
        <br/>
        [ahref]
        
        <a id="은 곡괭이">
        </a>
        <strong>
         은 곡괭이
        </strong>
        (Silver Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        철, 납 곡괭이보다 높으며 금, 백금 곡괭이보다 낮은, 세 번째 등급의 곡괭이이다.
        [linkx]
        
        에서
        [linkx]
        
        12개,
        [linkx]
        
        4개로 제작한다. 성능 면에서 납 곡괭이와 동일하다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         텅스텐 곡괭이
        </strong>
        (Tungsten Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서 은의 대체 광물인
        [linkx]
        
        12개와
        [ahref]
        
        4개로 제작한다. 은 곡괭이보다 채광 속도가 느리나 곡괭이 효율이 50%이기에 50% 이상의 효율을 요구하는
        [linkx]
        
        을 채굴할 수 있는 가장 낮은 등급의 곡괭이이다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         금 곡괭이
        </strong>
        (Gold Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        은, 텅스텐 곡괭이보다 높은, 네 번째 등급의 곡괭이이다.
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#금" title="테라리아/재료">
         금 주괴
        </a>
        12개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        4개로 제작한다.
        [ahref]
        
        과
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#데모나이트" title="테라리아/재료">
         데모나이트
        </a>
        /
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#크림테인" title="테라리아/재료">
         크림테인 광석
        </a>
        을 채굴할 수 있는 곡괭이다. 하지만 보스를 잡아 상위 등급의
        <a class="wiki-link-internal" href="이" title="">
         악몽의
        </a>
        /
        [linkx]
        
        를 제작할 수도 있으니 굳이 만들 필요는 없다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         백금 곡괭이
        </strong>
        (Platinum Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서 금의 대체 광물인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#백금" title="테라리아/재료">
         백금 주괴
        </a>
        12개와
        [linkx]
        
        4개로 제작한다. 일반 광물 곡괭이 중 가장 높은 성능을 지니고 있다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         선인장 곡괭이
        </strong>
        (Cactus Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             5
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서 자라는
        [linkx]
        
        15개를
        [linkx]
        
        에서 조합하여 얻을 수 있다. 범위 감소가 없고 사막에 흔히 널린 것이 선인장이므로 빠르게 선인장을 모아서 만들면 구리 곡괭이의 낮은 범위 감소를 면할 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         뼈다귀 곡괭이
        </strong>
        (Bone Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             8
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서 낮은 확률로 스폰되는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0#언데드 광부" title="테라리아/몬스터">
         언데드 광부
        </a>
        에게서 2% 확률로 얻을 수 있다. 능력 면에서는 텅스텐 곡괭이와 같아
        [linkx]
        
        을 채굴할 수 있으며 백금 곡괭이와 동일한 채굴 속도를 지닌다.
        <br/>
        <br/>
        [ahref]
        
        <a id="사탕 지팡이 곡괭이">
        </a>
        <strong>
         사탕 지팡이 곡괭이
        </strong>
        (Candy Cane Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        동안에 몬스터가 떨어뜨리는
        [linkx]
        
        에서 0.63% 확률로 얻을 수 있는 곡괭이이다.
        [linkx]
        
        와 성능이 동일하다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/NightmarePickaxe.png" rel="nofollow" title="파일:Terraria/NightmarePickaxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="악몽의 곡괭이">
        </a>
        <strong>
         악몽의 곡괭이
        </strong>
        (Nightmare Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             9
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#오염지대" title="테라리아/지형">
         오염지대
        </a>
        가 있는 세계에서 만들 수 있는 중급 곡괭이.
        [ahref]
        
        에서
        [ahref]
        
        12개,
        [linkx]
        
        가 드롭하는
        [linkx]
        
        6개로 제작한다. 여기서부터
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#칠흑석" title="테라리아/블록">
         칠흑석
        </a>
        과
        [ahref]
        
        ,
        [ahref]
        
        , 그리고
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#던전 벽돌" title="테라리아/블록">
         던전 벽돌
        </a>
        을 채굴할 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         사신의 곡괭이
        </strong>
        (Deathbringer Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             12
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        가 있는 세계에서 만들 수 있는 중급 곡괭이.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#크림테인" title="테라리아/재료">
         크림테인 주괴
        </a>
        12개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#크툴루의 뇌" title="테라리아/보스">
         크툴루의 뇌
        </a>
        가 드롭하는
        [ahref]
        
        6개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         몰튼 곡괭이
        </strong>
        (Molten Pickaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             14
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 이전에서 구할 수 있는 가장 높은 등급의 곡괭이이다.
        [ahref]
        
        에서
        [ahref]
        
        20개로 만든다. 휘두를 경우 붉은 빛을 내뿜으며 가장 높은 곡괭이인만큼 하드모드 이전의 모든 토양과 석재 블록은 모두 제거할 수 있다. 무기로 사용할 경우, 10% 확률로
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#불이야!" title="테라리아/시스템">
         불이야!
        </a>
        디버프를 입힌다.
        <br/>
        100%의 곡괭이 효율을 지녔기에
        [ahref]
        
        도 한 번에 회수할 수 있지만 타격 속도는 느려
        [linkx]
        
        에서 채굴할 땐 많이 답답하다. 단지 하드모드 이후의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#코발트" title="테라리아/재료">
         코발트
        </a>
        및
        [ahref]
        
        을 채광하기 위한 곡괭이이다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         약탈자 상어
        </strong>
        (Reaver Shark)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             16
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#바다" title="테라리아/지형">
         바다
        </a>
        에서 낚시하면 낚시 효율 100% 기준으로 2% 확률로 얻을 수 있는 물고기 도구. 초반에도 미끼만 있으면 낚시로 얻을 수 있는 곡괭이임에도 몰튼 곡괭이와 동일한 수준의 곡괭이이다.
        [ahref]
        
        에서는 약탈자 상어를 얻는 것이 더욱 편할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        <a id="코발트 곡괭이">
        </a>
        <strong>
         코발트 곡괭이
        </strong>
        (Cobalt Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             10
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 곡괭이 중 첫 번째 곡괭이이다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [ahref]
        
        15개로 제작한다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#미스릴" title="테라리아/재료">
         미스릴
        </a>
        과
        [linkx]
        
        을 채굴할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        <a id="팔라듐 곡괭이">
        </a>
        <strong>
         팔라듐 곡괭이
        </strong>
        (Palladium Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             12
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [linkx]
        
        의 대체 광물인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#팔라듐" title="테라리아/재료">
         팔라듐 주괴
        </a>
        18개로 제작한다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#미스릴" title="테라리아/재료">
         미스릴
        </a>
        과
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#오리칼쿰" title="테라리아/재료">
         오리칼쿰 광석
        </a>
        을 채굴할 수 있으며, 모바일 한정으로 상위 광물인
        [ahref]
        
        와
        [linkx]
        
        을 채굴할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         미스릴 곡괭이
        </strong>
        (Mythril Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             15
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 곡괭이 중 두 번째 곡괭이이다.
        [linkx]
        
        에서
        [ahref]
        
        15개로 제작한다.
        [linkx]
        
        와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#티타늄" title="테라리아/재료">
         티타늄
        </a>
        을 채굴할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         오리칼쿰 곡괭이
        </strong>
        (Orichalcum Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             17
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        의 대체 광물인
        [linkx]
        
        18개로 제작한다.
        [ahref]
        
        와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#티타늄" title="테라리아/재료">
         티타늄
        </a>
        을 채굴할 수 있다.
        <br/>
        <br/>
        [ahref]
        
        <a id="아다만타이트 곡괭이">
        </a>
        <strong>
         아다만타이트 곡괭이
        </strong>
        (Adamantite Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             20
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 곡괭이 중 세 번째 곡괭이이다.
        [ahref]
        
        에서
        [ahref]
        
        18개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/TitaniumPickaxe.png" rel="nofollow" title="파일:Terraria/TitaniumPickaxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="티타늄 곡괭이">
        </a>
        <strong>
         티타늄 곡괭이
        </strong>
        (Titanium Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             27
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        의 대체 광물인
        [ahref]
        
        20개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         녹조류 곡괭이
        </strong>
        (Chlorophyte Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             40
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#미스릴/오리칼쿰 모루" title="테라리아/가구">
         미스릴/오리칼쿰 모루
        </a>
        에서
        [ahref]
        
        18개로 제작한다. 범위가 한 칸 늘어나 양쪽 6블록, 상하 4블록의 채광 범위를 가진다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SpectrePickaxe.png" rel="nofollow" title="파일:Terraria/SpectrePickaxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         유령의 곡괭이
        </strong>
        (Spectre Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             32
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        [ahref]
        
        18개로 만들 수 있는 곡괭이이다. 범위가 무려 세 칸이나 늘어나 양쪽 8블록, 상하 6블록의 채광 범위를 가진다.
        <br/>
        <br/>
        [ahref]
        
        <a id="루미나이트 곡괭이">
        </a>
        [ahref]
        
        <strong>
         태양 플레어 곡괭이
        </strong>
        (Solar Flare Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #2786
        </span>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         성운의 곡괭이
        </strong>
        (Nebula Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #2776
        </span>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         소용돌이의 곡괭이
        </strong>
        (Vortex Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #2781
        </span>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         소성단의 곡괭이
        </strong>
        (Stardust Pickaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #3466
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             80
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        10개와
        [ahref]
        
        12개로 제작하는 가장 높은 등급의 곡괭이. 범위 4칸 증가 옵션이 있다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#하드모드" title="테라리아/시스템">
         하드모드
        </a>
        에서만 얻을 수 있는 곡괭이의 기계형. 곡괭이처럼 휘두르는 방식이 아닌 발사체를 생성하여서 마우스가 향하는 방향으로 돌아가는 방식이다. 이런 특징 덕에 드릴,
        [linkx]
        
        ,
        [ahref]
        
        ,
        <a class="wiki-link-internal not-exist" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%93%9C%EB%9E%99%EC%8A%A4#드랙스" rel="nofollow" title="테라리아/드랙스">
         드랙스
        </a>
        같은 돌아가는 식의 도구는 뒤돌아서 블록 채취가 불가능하며 동시에 블록을 채광하면서 뒤에서 다가오는 적을 공격하는 행위가 불가능하다. 휘두르는 게 아닌 전방을 향해 드릴을 가져다대므로 공격 범위도 좁고 넉백도 약하고, 공격력도 같거나 약해서 그리 권장되지 않는다. 발사체를 사용하는 특징 때문에
        [linkx]
        
        . 하지만 블록을 향해 꾹 누르는 대신
        [linkx]
        
        한다면 발사체 무기의 특성으로 인하여 빠르게 블록을 회수할 수 있다.
        <br/>
        <br/>
        데이터 상에 태양 플레어/성운/소용돌이/소성단의 드릴이 있지만 게임 내에서 정상적으로 얻을 방법이 전혀 없다. 또한 강제로 습득하여도 삭제된다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         코발트 드릴
        </strong>
        (Cobalt Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             10
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        드릴 중 첫 번째 드릴이다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [linkx]
        
        15개로 제작한다.
        [ahref]
        
        과
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#오리칼쿰" title="테라리아/재료">
         오리칼쿰 광석
        </a>
        을 채굴할 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         팔라듐 드릴
        </strong>
        (Palladium Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             12
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#코발트" title="테라리아/재료">
         코발트
        </a>
        의 대체 광물인
        [linkx]
        
        18개로 제작한다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#미스릴" title="테라리아/재료">
         미스릴
        </a>
        과
        [linkx]
        
        을 채굴할 수 있다. 모바일의 경우, 이보다 상위 광물인 티타늄과 아다만타이트를 채굴할 수 있다.
        <br/>
        <br/>
        [ahref]
        
        <a id="미스릴 드릴">
        </a>
        <strong>
         미스릴 드릴
        </strong>
        (Mythril Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             15
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        드릴 중 두 번째 드릴이다.
        [ahref]
        
        에서
        [linkx]
        
        15개로 제작한다. 아다만타이트와 티타늄을 채굴할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        <a id="오리칼쿰 드릴">
        </a>
        <strong>
         오리칼쿰 드릴
        </strong>
        (Orichalcum Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             17
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        의 대체 광물인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#오리칼쿰" title="테라리아/재료">
         오리칼쿰 주괴
        </a>
        18개로 제작한다. 아다만타이트와 티타늄을 채굴할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         아다만타이트 드릴
        </strong>
        (Adamantite Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             20
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        드릴 중 세 번째 드릴이다.
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#아다만타이트" title="테라리아/재료">
         아다만타이트 주괴
        </a>
        18개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/TitaniumDrill.png" rel="nofollow" title="파일:Terraria/TitaniumDrill.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         티타늄 드릴
        </strong>
        (Titanium Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             27
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        의 대체 광물인
        [ahref]
        
        20개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         녹조류 드릴
        </strong>
        (Chlorophyte Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             35
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             극도로 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [ahref]
        
        18개로 제작한다. 곡괭이와 마찬가지로 양쪽 6블록, 상하 4블록의 채광 범위를 가진다.
        <br/>
        <br/>
        넉백 수치가 없기 때문에 최고 수식어가 Demonic인 다른 드릴과 달리, 넉백이 존재하므로 최고 수식어는 Godly이다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도구 중 한 분류로
        [ahref]
        
        와
        [linkx]
        
        을 벨 수 있는 도구이다. 게임 초중반에 나무를 얻기 위해 사용되며 일부 도끼와 전기톱은 그 특성상 전투용으로도 쓸 수 있다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        게임 초중반에 사용되는 도구이다. 테라리아 내에서 가장 중요한 도구는 곡괭이이지만,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        를 얻기 위해서는 도끼가 필수적이다.
        <br/>
        캐릭터를 새로 만들 경우 구리 도끼가 지급된다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         구리 도끼
        </strong>
        (Copper Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             3
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        가장 낮은 등급의 도끼이다. 새로운 캐릭터를 만들 경우 새롭게 지급되는 도구.
        [ahref]
        
        에서
        [linkx]
        
        9개,
        [ahref]
        
        3개로 직접 제작하거나
        [linkx]
        
        에게 구입할 수도 있다. 채광 범위가 1칸 좁다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         주석 도끼
        </strong>
        (Tin Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서 구리의 대체 광물인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#주석" title="테라리아/재료">
         주석 주괴
        </a>
        9개와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        3개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         철 도끼
        </strong>
        (Iron Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             5
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        구리/주석 도끼보다 높으며, 은/텅스텐 도끼보다 낮은 등급의 도끼.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#철" title="테라리아/재료">
         철 주괴
        </a>
        9개,
        [ahref]
        
        3개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         납 도끼
        </strong>
        (Lead Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서 철의 대체 광물인
        [linkx]
        
        9개와
        [ahref]
        
        3개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         은 도끼
        </strong>
        (Silver Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        철/납 도끼보다 높으며, 금/백금 도끼보다 낮은 등급의 도끼.
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#은" title="테라리아/재료">
         은 주괴
        </a>
        9개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        3개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        <a id="텅스텐 도끼">
        </a>
        <strong>
         텅스텐 도끼
        </strong>
        (Tungsten Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서 은의 대체 광물인
        [linkx]
        
        9개와
        [ahref]
        
        3개로 제작한다. 금 도끼와 성능이 동일하므로 텅스텐과 금이 같이 존재하는 세계에선 금 도끼를 안 만들어도 된다. 모바일에서는 어째 텡스텐 도끼라고 나온다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         금 도끼
        </strong>
        (Gold Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        은/텅스텐 도끼보다 높은 등급의 도끼.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#금" title="테라리아/재료">
         금 주괴
        </a>
        9개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        3개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        <a id="백금 도끼">
        </a>
        <strong>
         백금 도끼
        </strong>
        (Platinum Axe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             8
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서 금의 대체 광물인
        [ahref]
        
        9개와
        [ahref]
        
        3개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         밤의 전투도끼
        </strong>
        (War Axe of the Night)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             20
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        금/백금 도끼보다 높은, 다섯 번째 등급의 도끼이다.
        [ahref]
        
        에서
        [linkx]
        
        10개로 제작한다. 공격력과 넉백이 좋아서 데모나이트 무기인 빛의 파멸 대신 쓰이기도 한다. 일반 무기와 유사하게 공격 중 방향 전환이 불가하다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         욕망의 핏덩어리
        </strong>
        (Blood Lust Cluster)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             22
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서 데모나이트의 대체 광물인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#크림테인" title="테라리아/재료">
         크림테인 주괴
        </a>
        10개로 제작한다. 역시
        [linkx]
        
        와 마찬가지로 공격력과 넉백이 좋고, 누르고 있으면 계속 공격이 나오므로 좋은 수식어가 부여되었다면 무기를 대신할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         코발트 전투도끼
        </strong>
        (Cobalt Waraxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             33
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 도끼 중 첫 번째 도끼이다.
        [ahref]
        
        에서
        [ahref]
        
        10개로 제작한다.
        [linkx]
        
        이후 스프라이트가 미세하게 밝아졌다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         팔라듐 전투도끼
        </strong>
        (Palladium Waraxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             36
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        코발트의 대체 광물인 팔라듐으로 만들 수 있는 도끼이다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [linkx]
        
        10개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/MythrilWaraxe.png" rel="nofollow" title="파일:Terraria/MythrilWaraxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         미스릴 전투도끼
        </strong>
        (Mythril Waraxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             39
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 도끼 중 두 번째 도끼이다.
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#미스릴" title="테라리아/재료">
         미스릴 주괴
        </a>
        10개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         오리칼쿰 전투도끼
        </strong>
        (Orichalcum Waraxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             41
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        미스릴의 대체 광물인 오리칼쿰으로 만들 수 있는 도끼이다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#미스릴/오리칼쿰 모루" title="테라리아/가구">
         미스릴/오리칼쿰 모루
        </a>
        에서
        [linkx]
        
        10개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/AdamantiteWaraxe.png" rel="nofollow" title="파일:Terraria/AdamantiteWaraxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         아다만타이트 전투도끼
        </strong>
        (Adamantite Waraxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             43
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 도끼 중 세 번째 도끼이다.
        [linkx]
        
        에서
        [linkx]
        
        12개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        <a id="티타늄 전투도끼">
        </a>
        <strong>
         티타늄 전투도끼
        </strong>
        (Titanium Waraxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             44
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        아다만타이트의 대체 광물인 티타늄으로 만들 수 있는 도끼이다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#미스릴/오리칼쿰 모루" title="테라리아/가구">
         미스릴/오리칼쿰 모루
        </a>
        에서
        [linkx]
        
        13개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         녹조류 대형도끼
        </strong>
        (Chlorophyte Greataxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             70
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 도끼 중 네 번째 도끼이다.
        [ahref]
        
        에서
        [ahref]
        
        18개로 제작한다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도끼의 기계형이며, 대부분의 경우
        [ahref]
        
        에서 얻는다. 도끼처럼 휘두르는 방식이 아닌 발사체를 생성하여서 마우스가 향하는 방향으로 돌아가는 방식이다. 대개 도끼보다 공격력이 약한 대신 속도가 빠르다.
        <br/>
        <br/>
        데이터 상에 태양 플레어/성운/소용돌이/소성단의 전기톱이 있지만 게임 내에서 얻을 방법이 전혀 없다.
        <br/>
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         [ahref]
         
        </strong>
        (Sawtooth Shark)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             13
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서 낚시하여 얻을 수 있는 물고기 도구. 전기톱에 속하는 도구 중 유일하게 하드모드 이전에 얻을 수 있다. 참고로 능력 면에선
        [ahref]
        
        와 동일하다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/CobaltChainsaw.png" rel="nofollow" title="파일:Terraria/CobaltChainsaw.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         코발트 전기톱
        </strong>
        (Cobalt Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             23
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        전기톱 중 첫 번째 전기톱이다.
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#코발트" title="테라리아/재료">
         코발트 주괴
        </a>
        10개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         팔라듐 전기톱
        </strong>
        (Palladium Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             26
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        코발트의 대체 광물인 팔라듐으로 만들 수 있는 전기톱이다.
        [ahref]
        
        에서
        [ahref]
        
        10개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/MythrilChainsaw.png" rel="nofollow" title="파일:Terraria/MythrilChainsaw.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="미스릴 전기톱">
        </a>
        <strong>
         미스릴 전기톱
        </strong>
        (Mythril Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             29
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        전기톱 중 두 번째 전기톱이다.
        [ahref]
        
        에서
        [linkx]
        
        10개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         오리칼쿰 전기톱
        </strong>
        (Orichalcum Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             31
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             약함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        미스릴의 대체 광물인 오리칼쿰으로 만들 수 있는 전기톱이다.
        [linkx]
        
        에서
        [linkx]
        
        10개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/AdamantiteChainsaw.png" rel="nofollow" title="파일:Terraria/AdamantiteChainsaw.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         아다만타이트 전기톱
        </strong>
        (Adamantite Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             33
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        전기톱 중 세 번째 전기톱이다.
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#아다만타이트" title="테라리아/재료">
         아다만타이트 주괴
        </a>
        12개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         티타늄 전기톱
        </strong>
        (Titanium Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             34
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        아다만타이트의 대체 광물인 티타늄으로 만들 수 있는 전기톱이다.
        [linkx]
        
        에서
        [ahref]
        
        12개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         녹조류 전기톱
        </strong>
        (Chlorophyte Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             50
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        18개로 제작한다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         도살자의 전기톱
        </strong>
        (Butcher's Chainsaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             120
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             아주 강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        이벤트의
        [ahref]
        
        가 2.5% 확률로 떨어뜨리는 근접 무기. 도구치고는 공격력이 무시무시할 정도로 높으며 공격 성공 시 불똥이 튀면서 주변에 있는 적에게 추가적인 피해를 입히고
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#불이야!" title="테라리아/시스템">
         불이야!
        </a>
        를 일으킨다. 넉백이 강해서 넉백 저항이 없는 일반 몹들로부터는 피격을 잘 허용하지 않는다. 불똥은
        [linkx]
        
        의 발사체와 동일하므로 마법 공격에 대한 효과를 받는다. 모티브는 당연히
        <a class="wiki-link-internal" href="/w/%ED%85%8D%EC%82%AC%EC%8A%A4%20%EC%A0%84%EA%B8%B0%ED%86%B1%20%ED%95%99%EC%82%B4" title="텍사스 전기톱 학살">
         텍사스 전기톱 학살
        </a>
        .
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        도구 중 한 분류로 벽면을 부수고 블록을 반 블록이나 경사면으로 만들 때 사용한다.
        <br/>
        <br/>
        생존이 목적인 초반에는 크게 필요가 없는 도구이다.
        [ahref]
        
        나
        [ahref]
        
        의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        로 만들어서 하드모드 이전까지 가도 충분하다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#하드모드" title="테라리아/시스템">
         하드모드
        </a>
        에선
        [ahref]
        
        을
        [linkx]
        
        로 부수어 하드모드 광물을 생성하는 데 쓰인다.
        <br/>
        <br/>
        데이터 상에 태양 플레어/성운/소용돌이/소성단의 망치가 있지만 게임 내에서 얻을 방법이 전혀 없다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         나무 망치
        </strong>
        (Wooden Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             2
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        [linkx]
        
        8개를 조합하여 만들 수 있는 망치이다. 아름다움을 추구하는 건축가가 아니라면 초반에는 망치가 별 쓸모가 없으므로
        [ahref]
        
        를 얻을 때까진 그냥 이것만 쭉 써도 된다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         아한대나무 망치
        </strong>
        (Boreal Wood Hammer)
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         마호가니 망치
        </strong>
        (Rich Mahogany Hammer)
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         야자나무 망치
        </strong>
        (Palm Wood Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#아한대나무" title="테라리아/블록">
         아한대나무
        </a>
        /
        [ahref]
        
        /
        [ahref]
        
        8개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         칠흑나무 망치
        </strong>
        (Ebonwood Hammer)
        <br/>
        [ahref]
        
        <a id="그늘나무 망치">
        </a>
        <strong>
         그늘나무 망치
        </strong>
        (Shadewood Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [ahref]
        
        /
        [linkx]
        
        8개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [linkx]
        
        <a id="진주나무 망치">
        </a>
        <strong>
         진주나무 망치
        </strong>
        (Pearlwood Hammer)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             9
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#작업대" title="테라리아/가구">
         작업대
        </a>
        에서
        [linkx]
        
        8개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         구리 망치
        </strong>
        (Copper Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             4
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [linkx]
        
        10개와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [linkx]
        
        <a id="주석 망치">
        </a>
        <strong>
         주석 망치
        </strong>
        (Tin Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백[link][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             6
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#주석" title="테라리아/재료">
         주석 주괴
        </a>
        10개와
        [linkx]
        
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         철 망치
        </strong>
        (Iron Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             7
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        [ahref]
        
        10개와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         납 망치
        </strong>
        (Lead Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             8
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#납" title="테라리아/재료">
         납 주괴
        </a>
        10개와
        [linkx]
        
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         은 망치
        </strong>
        (Silver Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             속도[link]<li>[link]</li>[link]
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             9
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [linkx]
        
        10개와
        [linkx]
        
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         텅스텐 망치
        </strong>
        (Tungsten Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             9
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#텅스텐" title="테라리아/재료">
         텅스텐 주괴
        </a>
        10개와
        [linkx]
        
        3개를 조합하여 만들 수 있는 망치이다.
        [ahref]
        
        와 성능이 동일하므로 텅스텐과 금이 같이 존재하는 세계에선 금 망치를 안 만들어도 된다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         금 망치
        </strong>
        (Gold Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             9
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#금" title="테라리아/재료">
         금 주괴
        </a>
        10개와
        [ahref]
        
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/PlatinumHammer.png" rel="nofollow" title="파일:Terraria/PlatinumHammer.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         백금 망치
        </strong>
        (Platinum Hammer)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             10
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [ahref]
        
        10개와
        [linkx]
        
        3개를 조합하여 만들 수 있는 망치이다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/TheBreaker.png" rel="nofollow" title="파일:Terraria/TheBreaker.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="분해자">
        </a>
        <strong>
         분해자
        </strong>
        (The Breaker)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             24
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [linkx]
        
        10개와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#그림자 비늘" title="테라리아/재료">
         그림자 비늘
        </a>
        5개로 제작. 그림자 비늘이 포함되므로
        [ahref]
        
        를 잡아야 한다.
        <br/>
        <br/>
        [ahref]
        
        <a id="생살 분쇄기">
        </a>
        <strong>
         생살 분쇄기
        </strong>
        (Flesh Grinder)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             23
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#크림테인" title="테라리아/재료">
         크림테인 주괴
        </a>
        10개와
        [ahref]
        
        5개로 제작. 조직 샘플이 포함되므로
        [linkx]
        
        를 잡아야 한다.
        <br/>
        <br/>
        [linkx]
        
        <a id="볼락">
        </a>
        <strong>
         [ahref]
         
        </strong>
        (Rockfish)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             24
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        0ft 이하의
        [ahref]
        
        ,
        [ahref]
        
        에서 낚시하여 얻을 수 있는 물고기 도구.
        <br/>
        <br/>
        [ahref]
        
        <a id="완승의 망치">
        </a>
        <strong>
         완승의 망치
        </strong>
        (
        [linkx]
        
        hammer
        [linkx]
        
        )
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             26
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        보스
        [linkx]
        
        에게서 획득할 수 있다. 효율이 꽤 좋고,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#하드모드" title="테라리아/시스템">
         하드모드
        </a>
        에서
        <strong>
         <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#악마의/진홍색 제단" title="테라리아/가구">
          악마의/진홍색 제단
         </a>
         을 부수기 위해 사용되는 중요한 도구
        </strong>
        이다. 그리고 이보다 더욱 높은 망치 효율을 지닌 모든 망치는 제단을 파괴할 수 있다.
        [linkx]
        
        가 100% 확률로 드롭하니, 실수로 팔아버렸거나 날려먹었으면 다시 잡아서 얻으면 된다.
        <br/>
        <br/>
        색상이 신성한 장비 세트와 유사하고 똑같고 휘두를 때 노란 빛이 나는 것을 보아 계획 당시 제작 가능한
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%A5%EB%B9%84#신성한 장비" title="테라리아/장비">
         신성한 장비
        </a>
        세트에 포함시켰을 것으로 여겨진다.
        <br/>
        <br/>
        [linkx]
        
        <a id="해머쉬">
        </a>
        <strong>
         해머쉬
        </strong>
        (Hammush)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             26
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        하드모드 기계 보스(
        [ahref]
        
        ,
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#스켈레트론 프라임" title="테라리아/보스">
         스켈레트론 프라임
        </a>
        )를 하나라도 잡은 다음
        [linkx]
        
        에게 금화 40닢을 주고 입수 가능. 버섯 창과 비슷하게 휘두르면 버섯 잔상을 남겨 벽을 관통하는 피해를 준다.
        [linkx]
        
        와 성능도 동일하고 이걸 주 무기로 쓸 것도 아니니 굳이 살 필요는 없다. 망치를 뜻하는
        <strong>
         Ham
        </strong>
        mer와 버섯을 뜻하는
        <strong>
         Mush
        </strong>
        room의 합성어이다.
        <br/>
        <br/>
        해머쉬는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.2" title="테라리아/버전">
         1.2
        </a>
        패치 이후 추가되었지만 이전에도 해머쉬에 대한 언급은 존재하였다. 해머쉬(Hammush)는 Maxx의 이야기를 토대로 구성된 테라리아 팬 웹 만화인
        [linkx]
        
        에 언급되었으며 테라리아의 해머쉬와 만화에 나오는 해머쉬는 그 형태가 매우 유사하다.
        <br/>
        <br/>
        [ahref]
        
        <a id="녹조류 전투망치">
        </a>
        <strong>
         녹조류
         [ahref]
         
        </strong>
        (Chlorophyte Warhammer)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             80
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             느림
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             정신 나감
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#녹조류" title="테라리아/재료">
         녹조류 주괴
        </a>
        18개로 제작하는 망치. 공격력과 넉백이 매우 강해서 같은 녹조류 주괴로 만드는
        [linkx]
        
        나
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AC%B4%EA%B8%B0#녹조류 기병도" title="테라리아/무기">
         기병도
        </a>
        대신 쓰이기도 한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/ChlorophyteJackhammer.png" rel="nofollow" title="파일:Terraria/ChlorophyteJackhammer.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         녹조류
         <a class="wiki-link-internal" href="/w/%EC%B0%A9%EC%95%94%EA%B8%B0" title="착암기">
          착암기
         </a>
        </strong>
        (Chlorophyte Jackhammer)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             45
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [ahref]
        
        18개로 제작하는 착암기. 기계 망치는 이게 유일하다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        두 가지의 능력이 합쳐진 도구이다. 곡괭이+도끼의 경우와, 망치+도끼의 경우가 있다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        곡괭이와 도끼 능력이 합쳐진 도구.
        [linkx]
        
        로 만드는 도구와
        [ahref]
        
        이 드롭하는
        [ahref]
        
        등이 있다.
        <br/>
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         곡괭이 도끼
        </strong>
        (Pickaxe Axe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             35
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        [ahref]
        
        18개와 하드모드 기계 보스(
        [ahref]
        
        ,
        [linkx]
        
        ,
        [linkx]
        
        )들이 각각 드롭하는 영혼 1개로 제작. 하드모드에 처음 진입한 유저가
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#녹조류" title="테라리아/재료">
         녹조류 광석
        </a>
        을 채굴할 수 있게 해주는 중요한 도구이다. 이름은 단지 곡괭이와 도끼를 그대로 붙인 것으로,
        <a class="wiki-link-internal" href="스" title="">
         드랙스
        </a>
        나
        [linkx]
        
        처럼 합성어가 아니다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         드랙스
        </strong>
        (Drax)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             35
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통[content18][content19][linkx]
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="끼" title="">
         곡괭이 도끼
        </a>
        와 마찬가지로
        [linkx]
        
        에서
        [linkx]
        
        18개와 하드모드 기계 보스(
        [linkx]
        
        ,
        [ahref]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#스켈레트론 프라임" title="테라리아/보스">
         스켈레트론 프라임
        </a>
        )들이 각각 드롭하는 영혼 1개로 제작. 드릴처럼 마우스가 향하는 방향으로 돌아가는 방식이다. 곡괭이 도끼와 마찬가지로
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#녹조류" title="테라리아/재료">
         녹조류 광석
        </a>
        을 채굴할 수 있는 중요한 도구이다. 드릴의 특성상 채광 속도가 느리므로 빠른 채광을 원한다면 곡괭이 도끼를 만드는 것이 좋다.
        <br/>
        <br/>
        버전
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.2" title="테라리아/버전">
         1.2
        </a>
        패치 이전 당시에는 곡괭이, 도끼, 망치 세 개의 모든 기능을 다 갖고 있어서 햄드랙스(Hamdrax,
        <strong>
         Ham
        </strong>
        mer +
        <strong>
         Dr
        </strong>
        ill +
        <strong>
         Axe
        </strong>
        )라는 이름이였고 당시 최고의 도구였기에 드랙스에 대한 이야기가 많다. 우선 그 조합법이
        [linkx]
        
        이후 테라리아에서조차 보기가 드문 '굉장히 많은 아이템'을 요구하는 조합법을 포함하고 있었으며 그것은
        [linkx]
        
        +
        [linkx]
        
        +
        [linkx]
        
        +
        <a class="wiki-link-internal" href="톱" title="">
         미스릴 전기톱
        </a>
        +
        <a class="wiki-link-internal" href="릴" title="">
         아다만타이트 드릴
        </a>
        +
        <a class="wiki-link-internal" href="톱" title="">
         아다만타이트 전기톱
        </a>
        +
        [ahref]
        
        1개 +
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#시야의 영혼" title="테라리아/재료">
         시야의 영혼
        </a>
        1개 +
        [ahref]
        
        1개이다. 즉 당시에는 드랙스를 만들기 위해
        <strong>
         [linkx]
         
         75개,
         [linkx]
         
         100개,
         [linkx]
         
         150개
        </strong>
        를 캐내야 했었다.
        <br/>
        <br/>
        1.2 패치 이후 망치의 새로운 기능인 블록 다듬기가 추가되었는데 더 이상 블록을 다듬는 망치와 블록을 부수는 곡괭이의 기능이 함께 어우러질 수가 없게 되어 드랙스(Drax,
        <strong>
         Dr
        </strong>
        ill +
        <strong>
         Axe
        </strong>
        )로 변경되었고 당연히 망치 기능도 사라졌다. 그리고 새로 추가된 대체 광물인
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#오리칼쿰" title="테라리아/재료">
         오리칼쿰
        </a>
        ,
        [ahref]
        
        으로 만든 도구까지 조합법에 넣기가 어려운 모양인지
        [ahref]
        
        기계 보스 처치 시
        [ahref]
        
        가 나오도록 하였고, 그
        [linkx]
        
        18개로 만들 수 있게 조합법이 이전에 비해 엄청 단순하게 바뀌었다. 하지만 드랙스는 게임 진행에 필요한 녹조류를 캘 수 있는 첫 도구이기에 얻는 방법을 어렵게 하기 위함인지
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.2.3" title="테라리아/버전">
         1.2.3
        </a>
        패치로 삭제된 영혼이 다시 추가되어 1.3과 같은 조합법이 되었다.
        <br/>
        <br/>
        안드로이드 모바일 테라리아에선
        [linkx]
        
        의 그림자 상자에서 발견 가능하다. 모바일 한정으로 하드모드 이전에 구할 수 있는 도구.
        [ahref]
        
        개봉 시에도 나온다.
        <br/>
        <br/>
        [linkx]
        
        <a id="쉬루마이트 땅파기 손톱">
        </a>
        <strong>
         쉬루마이트 땅파기 손톱
        </strong>
        (Shroomite Digging Claw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #2176
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             52
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        쉬루마이트로 제작할 수 있는 유일한 도구.
        [ahref]
        
        에서
        [linkx]
        
        18개로 제작한다. 모든 곡괭이 중 가장 빠른 채광 속도를 가지고 있으나, 범위가 -1칸으로
        [ahref]
        
        와 동일한 채광 범위를 가지고 있다.
        <br/>
        <br/>
        범위가 1칸 좁은 것이 단점이지만 이 도구의 큰 이점은 바로 어마어마하게 빠른 채광 속도이다. 곡괭이 효율에 관계 없이 채광 속도가 모든 곡괭이 중 가장 빠르기에 수식어를 가벼운(Light)으로 붙이고
        [ahref]
        
        광부 세트와 광부의 포션으로 채광 버프를 받으면
        <a class="wiki-self-link" href="" title="">
         드릴 수용 장치
        </a>
        보다도 빠른 채광 속도를 가질 수가 있게 된다. 스마트 커서를 사용 시 빠른 땅파기에 매우 적합하다. 터널 뚫을 일이 많을 때 하나라도 만들어두자.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         픽소우
        </strong>
        (Picksaw)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #1294
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             34
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             매우 빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        정글의
        [ahref]
        
        의
        [ahref]
        
        에게서 획득할 수 있는 이중 도구.
        [linkx]
        
        을 채굴할 수 있으며, 채광 범위가 1칸 향상되었다. 이름의 유래는
        <strong>
         Pick
        </strong>
        axe(곡괭이) +
        <strong>
         Saw
        </strong>
        (톱)의 합성어.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3" title="테라리아/버전">
         1.3
        </a>
        패치 이전
        [linkx]
        
        와 함께 가장 최상위의 도구였고 속도도
        [ahref]
        
        만큼은 아니지만 그에 버금갈 정도로 빠른게 특징. PC 1.3 이후에는
        [ahref]
        
        의 재료로 만드는
        [ahref]
        
        들보다 범위가 좁고 성능이 약간 낮지만, 그 쪽은 우선
        <strong>
         <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#달의 군주" title="테라리아/이벤트">
          달의 군주
         </a>
         를 최소 1번 이상
        </strong>
        처치해야 얻을 수 있는 반면 픽소우는 골렘을 주구장창 잡기만 하면 얻을 수 있고
        [linkx]
        
        에서 얻을 수 있는
        [ahref]
        
        은 범위가 넓지만 드릴의 특성이 있어서 채광 속도가 느리다. 이 때문에 한 번 픽소우를 얻어둔다면 거의 평생을 쓴다.
        <br/>
        <br/>
        [ahref]
        
        <a id="레이저 드릴">
        </a>
        <strong>
         레이저 드릴
        </strong>
        (Laser Drill)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #2798
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             35
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             없음
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        <br/>
        PC
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3" title="테라리아/버전">
         1.3
        </a>
        에 나온 이중 도구이며 화성 이벤트의 보스인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#화성인 우주선" title="테라리아/이벤트">
         화성인 우주선
        </a>
        에게서 얻을 수 있다.
        [ahref]
        
        보다 곡괭이 파워와 도끼 파워가 높고
        [linkx]
        
        [linkx]
        
        을 포함한 모든 블록을 캘 수 있고 채광 범위가 최대 10블록이라는 장점이 있으나, 기계 도구에 속하기 때문에 그 특성상 채굴 속도는 굉장히 느리다. 장거리 채광이라는 특징이 있으므로 굳이 가지 않고도 블록이나 가구를 파괴 및 회수하는 것이 가능해 건축의 용도로 자주 활용된다. 공격 판정이 있는 부분은 레이저 기둥이 아닌, 블록을 캐낼 수 있는 앞 부분이다. 근접 무기의 형태이므로 블록으로 막혀있다면 공격을 가할 수 없다.
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        망치와 도끼 능력이 합쳐진 도구. 햄액스 종류와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#플랜테라" title="테라리아/보스">
         플랜테라
        </a>
        가 드롭하는 디 액스가 있다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         운석 햄액스
        </strong>
        (Meteor Hamaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             20
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        도끼와 망치의 기능이 들어가 있는 날망치 도구.
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#운석" title="테라리아/재료">
         운석 주괴
        </a>
        20개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         몰튼 햄액스
        </strong>
        (Molten Hamaxe)
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             20
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#지옥석" title="테라리아/재료">
         지옥석 주괴
        </a>
        15개로 제작한다. 적을 공격할 경우, 10% 확률로
        [linkx]
        
        디버프를 입힌다. 참고로 도끼의 파워가 무려 150%이며 이는 4번만에
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        를 넘어뜨릴 수가 있다. 대신 도구 속도는 하드모드 도끼에 비해 느리므로 실질적으로 나무를 넘어뜨리는 속도는 현저히 느리다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         유령의 햄액스
        </strong>
        (Spectre Hamaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             60
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             보통
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#유령의 주괴" title="테라리아/재료">
         유령의 주괴
        </a>
        18개로 제작한다. 역시나 다른 유령 도구와 마찬가지로 범위 3칸 증가 옵션이 있다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        [ahref]
        
        <strong>
         태양 플레어 햄액스
        </strong>
        (Solar Flare Hamaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         성운의 햄액스
        </strong>
        (Nebula Hamaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         소용돌이의 햄액스
        </strong>
        (Vortex Hamaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        <a id="소성단의 햄액스">
        </a>
        <strong>
         소성단의 햄액스
        </strong>
        (Stardust Hamaxe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
       </div>
       <div class="wiki-table-wrap">
        [content7[linkx]content8[linkx]content9[linkx]content10]
       </div>
       <div class="wiki-paragraph">
        [linkx]
         [content1[linkx]content2]
        
        에서
        [ahref]
        
        12개와
        [linkx]
        
        14개로 제작하는 높은 등급의 도끼이자 망치. 범위 4칸 증가 옵션이 있다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/TheAxe.png" rel="nofollow" title="파일:Terraria/TheAxe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         디 액스
        </strong>
        (The Axe)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #1305
        </span>
       </div>
       <div class="wiki-table-wrap">
        <table class="wiki-table" style="">
         <tbody>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              공격력
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              속도
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              넉백
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             72
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             빠름
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             강함
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에게서 2% 확률로 획득할 수 있는 이중 도구. 미국의 메탈 밴드
        [linkx]
        
        [linkx]
        
        의 기타리스트였던
        [linkx]
        
        이 즐겨 사용하던 깁슨 사의
        [ahref]
        
        기타를 모티브로 하였으며 사용할 때마다 특유의 기타음이 난다. 일단 범위 옵션이 +1밖에 안 되는 대신 속도와 성능이
        [ahref]
        
        보다 좋아서 1.3 이후 한물 간
        [ahref]
        
        와 달리 여전히 최상위 등급의 도구 자리를 유지하고 있다. 기타 소리 때문에 시끄러운 게 단점이라면 단점. 테라리아 제작진도 얻기 힘든 걸 아는지 1.3 업데이트 이후 드롭률이 0.5%→1%→2%으로 변경되었다. 그러나 1.3 패치가 진행되지 않은 모바일 버전에선 아직도 1%이다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Glowstick.png" rel="nofollow" title="파일:Terraria/Glowstick.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         형광봉
        </strong>
        (Glowstick)
        <br/>
        주로 물속의 항아리나
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#대동굴" title="테라리아/지형">
         대동굴
        </a>
        의 황금 상자에서 획득하며,
        [linkx]
        
        이나
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#해골 상인" title="테라리아/NPC">
         해골 상인
        </a>
        이 판매하기도 한다. 또한
        [linkx]
        
        를 죽여도 얻을 수 있다.
        <br/>
        광원 아이템으로,
        [linkx]
        
        과 달리 물속에서도 쓸 수 있고 좌클릭을 하면 투척이 된다. 일정 시간이 지난 후에는 형광봉을 다시 회수할 수 있으며, 맵을 나갔다가 들어오면 사라진다.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [ahref]
          
          [linkx]
          
          <strong>
           접착식 형광봉
          </strong>
          (Sticky Glowstick)
          <br/>
          손에서
          [ahref]
          
          5개와
          [ahref]
          
          1개로 제작. 형광봉 표면에 끈적이는 젤을 발라
          [ahref]
          
          에도 쩍 달라붙는다. 이때, 붙어있는 블록이 파괴될 경우 그대로 떨어진다.
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [content9[linkx]content10[linkx]content11]
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         동굴 탐험가의 형광봉
        </strong>
        (Spelunker Glowstick)
        <br/>
        [linkx]
        
        에서 나오는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#해골 상인" title="테라리아/NPC">
         해골 상인
        </a>
        에게 살 수 있는 광원 아이템으로, 들고 있거나 던질 경우 주변의
        [ahref]
        
        ,
        [ahref]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#상자" title="테라리아/가구">
         상자
        </a>
        등 보물형 개체가 빛을 낸다. 들고 있는 것만으로도 거의 화면 내의 주변 가치가 있는 개체를 확인할 수가 있으며 이 범위가
        [ahref]
        
        보다도 넓으므로
        [linkx]
        
        의 전문가 모드 아이템인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#수상해 보이는 촉수" title="테라리아/보스">
         수상해 보이는 촉수
        </a>
        를 얻기 전까지 유용하게 사용하게 될 아이템이다. 물론 형광봉이라서 던질 수 있으므로 살 수 있다면 다량을 확보해 놓는 것이 좋다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         마법 거울
        </strong>
        (Magic Mirror)
        <br/>
        [ahref]
        
        <a id="얼음 거울">
        </a>
        <strong>
         얼음 거울
        </strong>
        (Ice Mirror)
        <br/>
        일종의 포탈. 마법 거울은
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#지하" title="테라리아/지형">
         지하
        </a>
        및
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#대동굴" title="테라리아/지형">
         대동굴
        </a>
        의 황금 상자에서, 얼음 거울은
        [ahref]
        
        의 얼음 상자에서 얻을 수 있다. 사용하면 지정된 스폰 장소(
        [linkx]
        
        )로 이동한다. 동굴의 황금 상자에서 나오는 아이템들이 설원 지하의 얼음 상자에서 나오는 아이템보다 구리지만 이 아이템 하나 때문에 강제로 동굴을 탐색하게 된다. 참고로 얼음 거울은
        [linkx]
        
        버전 업데이트로 추가되었다.
        [ahref]
        
        와 합쳐서 후술할
        [linkx]
        
        를 제작할 수 있다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/CellPhone.png" rel="nofollow" title="파일:Terraria/CellPhone.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="휴대전화">
        </a>
        <strong>
         [ahref]
         
        </strong>
        (Cell Phone)
        <br/>
        [linkx]
        
        와
        [ahref]
        
        또는
        <a class="wiki-link-internal" href="울" title="">
         얼음 거울
        </a>
        을 조합해서 만들 수 있다. 시간, 높이, 좌표, 날씨, 낚시 효율,
        [ahref]
        
        , 속도, DPS, 보물 탐지, 적의 수, 희귀 생물체 감지, 죽인 몹 수 총 열 두가지의 모든 정보를 볼 수 있으며 지정된 최초 스폰 장소나 지정된
        [ahref]
        
        로 텔레포트를 할 수 있다. 재료 아이템들을 보면 알겠지만 상당히 얻기가 힘든 아이템이다. 게임을 빠르게 진행하다 보면 여행상의 물건이나 낚시 퀘스트 장신구 한두 개가 부족한 경우가 생기니, 평소에 잘 얻어두는 것이 중요하다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#낚시꾼" title="테라리아/NPC">
         낚시꾼
        </a>
        의 좋은 아이템 보상은 5회 단위로 지급되며 다른 세계에서 퀘스트를 해도 퀘스트 정보는 캐릭터 정보에 저장되므로 하루 기다리는 게 귀찮다면 새로 맵을 파서 하는 것을 이용해 보다 빠르게 얻을 수 있다. 만들고 난 후에는 휴대폰 하나로 실시간으로 12개의 정보가 뜬다는 점과 거울 기능인 집으로 돌아가는 점 덕분에 매우 편하다.
        <br/>
        <br/>
        [ahref]
        
        <a id="불화의 막대">
        </a>
        [ahref]
        
        <strong>
         불화의 지팡이
        </strong>
        (Rod of Discord)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        의
        [ahref]
        
        이 0.2% 확률로 드롭하는 아이템. 사용 시 마우스 커서가 있는 곳으로 화면 내 어디든지 막힌 곳만 아니라면 순간이동을 한다. 소환사의 경우, 이거 하나만 있으면 어지간해서 보스전 때 맞아죽는 일은 없어진다. 마나를 소모하지 않는 대신 '
        [linkx]
        
        '라는 디버프가 6초 동안 걸리며 이 디버프가 걸려 있을 동안에 또 사용하면 방어력을 무시하고 전체 체력의 1/7(모바일 및 콘솔은 1/6)이 대가로 희생된다. 마구잡이로 쓰다가는 죽을 수가 있으며 위기 상황일 때 사용하는 것을 추천한다. 그래도 쿨타임 6초짜리
        [ahref]
        
        이 생기는 셈이라 나오기만 한다면 무척이나 유용하다.
        <br/>
        불화의 지팡이를 사용하여 죽으면 머리와 다리가 바뀌었다는 메시지가 띄워진다. 이외에 "★★님의 형체가 구현되지 못했습니다." 같은 메시지도 있다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/PortalGun.png" rel="nofollow" title="파일:Terraria/PortalGun.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         [ahref]
         
        </strong>
        (Portal Gun)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #3384
        </span>
        <br/>
        [linkx]
        
        를 처치 시 100% 확률로 얻을 수 있는 아이템. 게임
        [linkx]
        
        의
        [ahref]
        
        이 들고 실험실을 통과하는 데에 사용되었던 그 포탈건이다.
        <br/>
        왼쪽 마우스를 눌러서 오렌지 포탈을, 오른쪽 마우스를 눌러서 블루 포탈을 생성한다
        [ahref]
        
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#멀티플레이" title="테라리아/시스템">
         멀티
        </a>
        의 경우 색상이 랜덤하게 결정된다. 기본적으로 캐릭터의 키가 3블록이므로 이와 같이 3블록의 평평한
        [linkx]
        
        이 있어야 하며 이것은
        [linkx]
        
        를 통해 경사면이나 반 블록으로 다듬어진 블록 면에도 포탈을 형성할 수 있다. 탈것을 타고있는 상태에서는 포탈을 넘나들 수 없으며
        [linkx]
        
        또한 포탈을 이용할 수 없으나,
        [linkx]
        
        들은 포탈을 넘나들 수 있다.
       </div>
       <div class="wiki-indent">
        <div class="wiki-paragraph">
        </div>
       </div>
       <div class="wiki-paragraph">
        포탈건을 든 상태면 테라리아 특유의 붕 뜨는 물리가 아닌 보다 현실적이며 운동력이 보존되는 물리 시스템이 작용된다. 또한 포탈을 넘나드는 그 순간에 착지할 때까지는 포탈건을 들고 있지 않더라도 해당 물리 시스템이 작용된다. 다만 여기서 탈것을 탑승할 경우에는 즉시 원래 테라리아의 물리 시스템이 작용된다. 정확한 특징은 다음과 같다.
       </div>
       <ul class="wiki-list">
        <li>
         <div class="wiki-paragraph">
          최대 낙하 속도가 3.5배(51mph에서 179mph)만큼 늘어난다.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          체공 중 여러 수단을 통한 수평 이동 운동량과 관성이 유지된다.
         </div>
        </li>
       </ul>
       <div class="wiki-paragraph">
        <br/>
        낙하 속도가 어마어마하게 높아지므로 지상에서
        [linkx]
        
        까지의 헬레베이터를 만들어두었다면 지옥까지 단 수 초만에 도달할 수 있으며 체공 상태에서는 속력이 유지되므로 그것을 이용해 높은 속력을 유지하면서 천천히 떨어지지 않게 날갯짓하면서 어마어마하게 먼 거리를 순식간에 횡단할 수 있다. 이러한 특징을 이용하여 방해받지 않는 한 이동속도가 절대로 불변하는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#얼어붙은 슬라임 블록" title="테라리아/블록">
         얼어붙은 슬라임 블록
        </a>
        을 배치하고 최대 낙하 속도까지 끌어올리면 179mph라는 어마어마하게 빠른 속도로 추가적인 수단 없이 횡단이 가능하다
        <a class="wiki-fn-content" href="7" title="또한 여러 가지 요인을 이용하여 속력을 3,000mph 이상으로 끌어올리는 것이 가능하다.">
         <span class="target" id="rfn-7">
         </span>
         [7]
        </a>
        . 그러나 만들어진 포탈로부터 1600피트(800블록) 정도 멀어지면 그 포탈은 사라져버리므로 소형 맵에서도 각 끝
        [ahref]
        
        와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#바다" title="테라리아/지형">
         바다
        </a>
        를 서로 이을 수는 없다.
       </div>
       <div class="wiki-indent">
        <div class="wiki-paragraph">
        </div>
       </div>
       <div class="wiki-paragraph">
        일단 포탈건은 유용하게 활용될 수 있는 소재인지라 직접 포탈건을 적극 활용할 수 있는
        [ahref]
        
        을 만들기도 한다. 대개 낙하 피해를 방지하기 위한 목적의 롱 폴 부츠를 대체하는
        [ahref]
        
        을 지급해주는 것이 기본.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3.1" title="테라리아/버전">
         1.3.1
        </a>
        이후로 전기 관련 아이템이 가득 늘어났기에 더욱 복잡한 설계가 가능해졌다.
       </div>
      </div>
      <h2 class="wiki-heading">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        장비 슬롯 위의 쇠사슬 아이콘을 눌러 전환한 뒤 해당 슬롯에 장착할 수 있는 도구들이다. 전문가 모드에서 보스에게 얻을 수 있는 아이템들은
        [ahref]
        
        문서에 기재되어 있다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        펫은
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#상자" title="테라리아/가구">
         상자
        </a>
        나
        [ahref]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#하드모드" title="테라리아/시스템">
         하드모드
        </a>
        의
        [ahref]
        
        에게서 얻을 수 있는 아이템으로, 마우스로 클릭 시 펫을 소환하고, 펫 전용 슬롯에 장착하면 장착 해제하기 전까지 영구히 소환된다. 스스로 발광하는
        [ahref]
        
        과
        <a class="wiki-link-internal" href="목" title="">
         저주받은 묘목
        </a>
        이외에는 실질적인 기능성은 없다. 만약 플레이어가 죽으면 같이 소멸되지만, 다시 소환할 수 있다.
        <br/>
       </div>
       <div class="wiki-table-wrap" style="width:100%">
        <table class="wiki-table" style="width: 100%;border: 2px solid #EEE;">
         <tbody>
          <tr style="background-color:#EEE;">
           <td style="width:20%; text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              이름
             </strong>
            </div>
           </td>
           <td style="width:10%; text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              펫
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              설명
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              당근
             </strong>
             (Carrot)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             컬렉터즈 에디션(콘솔판)을 구매하면 PC 버전에서 새로운 캐릭터 시작 시 자동으로 지급된다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/AmberMosquito.png" rel="nofollow" title="파일:Terraria/AmberMosquito.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              모기 호박
             </strong>
             (Amber Mosquito)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#실트 블록" title="테라리아/블록">
              실트
             </a>
             /
             [ahref]
             
             /
             [ahref]
             
             을
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#추출기" title="테라리아/가구">
              추출기
             </a>
             에 사용하여 0.02% 확률로 얻을 수 있다. 공룡이 나오는 것은
             <a class="wiki-link-internal" href="/w/%EC%A5%AC%EB%9D%BC%EA%B8%B0%20%EA%B3%B5%EC%9B%90" title="쥬라기 공원">
              쥬라기 공원
             </a>
             의 패러디.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              생선
             </strong>
             (Fish)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Baby_Penguin.png" rel="nofollow" title="파일:attachment/테라리아/도구/Baby_Penguin.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#설원 지하" title="테라리아/지형">
              설원 지하
             </a>
             의 얼음 상자에서 4% 확률로 발견된다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              해초
             </strong>
             (Seaweed)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             의 넝쿨 상자에서 2% 확률로 발견된다. 낚시해서 얻는
             <a class="wiki-link-internal" href="기" title="">
              쓰레기 해초
             </a>
             랑은 희귀도와 아이콘이 다르니
             [linkx]
             
             좋아하지 말자.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              포식자의 뼈
             </strong>
             (Eater's Bone)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             의
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4" title="테라리아/보스">
              보스
             </a>
             인
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#세상을 먹는 자" title="테라리아/보스">
              세상을 먹는 자
             </a>
             를 잡으면 5% 확률로 얻을 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BoneRattle.png" rel="nofollow" title="파일:Terraria/BoneRattle.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              뼈 딸랑이
             </strong>
             (Bone Rattle)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:s6d0YyS.png" rel="nofollow" title="파일:s6d0YyS.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             <a id="뼈 딸랑이">
             </a>
             [ahref]
             
             의
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4" title="테라리아/보스">
              보스
             </a>
             인
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#크툴루의 뇌" title="테라리아/보스">
              크툴루의 뇌
             </a>
             를 잡으면 5% 확률로 얻을 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Nectar.png" rel="nofollow" title="파일:Terraria/Nectar.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              꽃꿀
             </strong>
             (Nectar)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Baby_Hornet.png" rel="nofollow" title="파일:attachment/테라리아/도구/Baby_Hornet.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             에서 발견되는 벌집의
             [linkx]
             
             인
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#여왕벌" title="테라리아/보스">
              여왕벌
             </a>
             을 잡으면 5% 확률로 얻을 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              산들바람 물고기
             </strong>
             (Zephyr Fish)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             낚시하면 낚시 효율 100% 기준으로 1/400 확률로 낚을 수 있는 물고기이다. 다른 펫들과 달리 특이하게도 이 녀석은 텔레포트를 하지 않는다.
             [ahref]
             
             을 사용하거나 텔레포터로 순간이동을 하면 긴 시간이 걸리더라도 날아서 온다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              타르타르 소스
             </strong>
             (Tartar Sauce)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Mini_Minotaur.png" rel="nofollow" title="파일:attachment/테라리아/도구/Mini_Minotaur.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             낚시로 가끔 건져올려지는
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%86%8C%EB%AA%A8%ED%92%88#철 크레이트" title="테라리아/소모품">
              철 크레이트
             </a>
             에서 4.8% 확률로 얻을 수 있다. 아이템이 타르타르 소스에, 펫이 미니 미노타우르스인 점으로 보아 유튜버 Tobuscus의
             <a class="wiki-link-external" href="/uVTfszppJl8" rel="noopener" target="_blank" title="https://youtu.be/uVTfszppJl8">
              MINI MINOTAUR SONG (feat. Tobuscus &amp; Tim Tim)
             </a>
             에 유래한 것이다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/DragonEgg.png" rel="nofollow" title="파일:Terraria/DragonEgg.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              드래곤 알
             </strong>
             (Dragon Egg)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             의
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#어둠의 마법사" title="테라리아/이벤트">
              어둠의 마법사
             </a>
             에게서 얻을 수 있다. 호대그론(Hoardagron)을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              가토 알
             </strong>
             (Gato Egg)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="가토 알">
             </a>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/PropellerGato.gif" rel="nofollow" title="파일:Terraria/PropellerGato.gif">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             의
             [ahref]
             
             에게서 얻을 수 있다. 프로펠러 가토를 소환한다. 가토는
             [ahref]
             
             와
             [ahref]
             
             로 고양이라는 뜻이다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
              <li>[link]</li>[link]<li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
             
             <br/>
             <strong>
              마법의 호박 씨앗
             </strong>
             (Magical Pumpkin Seed)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="마법의 호박 씨앗">
             </a>
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             동안
             [ahref]
             
             을 채취하면 0.5% 확률로 얻을 수 있다. 스쿼실링을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              불행한 실
             </strong>
             (Unlucky Yarn)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="불행한 실">
             </a>
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             할로윈 업데이트로 추가된 아이템.
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#할로윈 기간" title="테라리아/시스템">
              할로윈 기간
             </a>
             동안에 몬스터가 떨어뜨리는
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%86%8C%EB%AA%A8%ED%92%88#할로윈 선물주머니" title="테라리아/소모품">
              할로윈 선물주머니
             </a>
             에서 0.67% 확률로 얻을 수 있다.
             [linkx]
             
             를 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              개 호루라기
             </strong>
             (Dog Whistle)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             크리스마스 업데이트로 추가된 아이템.
             [linkx]
             
             동안에 몬스터가 떨어뜨리는
             [linkx]
             
             에서 0.24% 확률로 얻을 수 있다. 강아지를 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BoneKey.png" rel="nofollow" title="파일:Terraria/BoneKey.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              뼈다귀 열쇠
             </strong>
             (Bone Key)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="뼈다귀 열쇠">
             </a>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Baby_Skeletron_Head.png" rel="nofollow" title="파일:attachment/테라리아/도구/Baby_Skeletron_Head.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#스켈레트론" title="테라리아/보스">
              스켈레트론
             </a>
             을 잡지 않고
             [ahref]
             
             으로 들어가면 나오는 몬스터인
             [ahref]
             
             에게서 획득할 수 있는 아이템. 아이템을 획득하는 자세한 방법은 던전 가디언의 설명을 볼 것. 새끼 스켈레트론 머리를 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              [linkx]
              
             </strong>
             (Companion Cube)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [ahref]
             
            </div>
           </td>
           <td style="text-align:left;">
            <div class="wiki-paragraph">
             PC
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3.1" title="테라리아/버전">
              1.3.1
             </a>
             버전에 추가된 게임 '
             <a class="wiki-link-internal" href="/w/%ED%8F%AC%ED%83%88" title="포탈">
              포탈
             </a>
             '의 2번째 패러디 아이템.
             [linkx]
             
             에게 백금화 5닢을 주고 살 수 있다. 동행 큐브를 소환한다.
             <br/>
             특이하게도 발사체에만 반응하는
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A0%84%EA%B8%B0#암록색 압력판" title="테라리아/전기">
              암록색 압력판
             </a>
             을 작동시켜 전기를 내보낼 수 있으며, 실제로
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3.1" title="테라리아/버전">
              1.3.1
             </a>
             버전 업데이트로 같이 공개된 '테일즈 오브 더 테라리안' 맵에서 해당 펫의 특성을 이용해서 푸는 퍼즐이 나오기도 했다.
             <br/>
             패러디 아이템답게 여러 가지 이스터에그도 곳곳에 숨겨져 있는데, 예를 들어 어두운 곳에 있으면 주인인 플레이어를 찔러 소량의 피해를 입힌다.
             [ahref]
              [content8[linkx]content9]
             
             또한
             [linkx]
             
             에 빠지면
             [linkx]
             
             혹은
             [ahref]
             
             가 죽을 때 나타나는 효과음을 내며 죽으며, 죽은 후에는 바로 다시 나타난다. 한 번 죽어 효과음이 나타난 후 한동안은 죽더라도 효과음을 내지 않으며, 긴 시간이 지난 뒤에 용암에 빠뜨려 죽이면 다시 그 효과음을 낸다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              이상한 발광 버섯
             </strong>
             (Strange Glowing Mushroom)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Baby_Truffle.png" rel="nofollow" title="파일:attachment/테라리아/도구/Baby_Truffle.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             에게 금화 45닢을 주고 살 수 있다. 새끼 트러플을 소환한다.
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#버섯 지형" title="테라리아/지형">
              버섯 지형
             </a>
             에서 볼 수 있는 약한 푸른빛을 낸다. 스스로 빛을 내므로 동굴을 탐험할 때 조금은 도움이 된다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              티키 토템
             </strong>
             (Tiki Totem)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             이후
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#정글" title="테라리아/지형">
              정글
             </a>
             의 집에 거주하는
             [linkx]
             
             에게 백금화 2닢을 주고 살 수 있다. 티키 정령을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              앵무새 크래커
             </strong>
             (Parrot Cracker)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             이후
             [linkx]
             
             의 집에 거주하는
             [ahref]
             
             에게 백금화 3.75닢을 주고 살 수 있다. NPC가 판매하는 아이템들을 통틀어서 가격이 두 번째로 비싸다. 앵무새 펫을 소환한다. 여담으로 이름은 폴리(Polly)라고 한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              묘목
             </strong>
             (Seedling)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#정글 지하" title="테라리아/지형">
              정글 지하
             </a>
             의
             [linkx]
             
             인
             [ahref]
             
             를 잡으면 5% 확률로 얻을 수 있다. 묘목 펫을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              도마뱀 알
             </strong>
             (Lizard Egg)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             의
             [linkx]
             
             와
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0#날아다니는 뱀" title="테라리아/몬스터">
              날아다니는 뱀
             </a>
             이 0.1% 확률로 드롭한다. 도마뱀 펫을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              장난감 썰매
             </strong>
             (Toy Sled)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             의
             [linkx]
             
             이 5% 확률로 드롭한다. 새끼 눈사람을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              눈 용수철
             </strong>
             (Eye Spring)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Eyeball_Spring_Pet.png" rel="nofollow" title="파일:attachment/테라리아/도구/Eyeball_Spring_Pet.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [linkx]
             
             이벤트의
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#아이저" title="테라리아/이벤트">
              아이저
             </a>
             가 6.67% /
             <span class="wiki-color" style="color:#D4712B">
              10%
             </span>
             확률로 드롭한다. 눈알 용수철을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              저주받은 묘목
             </strong>
             (Cursed Sapling)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             [ahref]
             
             할로윈 업데이트로 추가된 아이템.
             [linkx]
             
             이벤트의
             [ahref]
             
             를 잡으면 2-20% 확률로 나온다. 탄식하는 나무의 미니 버전인 저주받은 묘목을 소환한다. 플레이어와 일정 거리 이상 떨어지면 날기 시작하며, 플레이어 주변으로 원형으로 돌면서 빛을 밝힌다. 날고 있을 동안에는 지형을 무시하므로, 동굴 속에서 매우 유용한 펫이다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SpiderEgg.png" rel="nofollow" title="파일:Terraria/SpiderEgg.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              거미 알
             </strong>
             (Spider Egg)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.2.1" title="테라리아/버전">
              1.2.1
             </a>
             할로윈 업데이트로 추가된 아이템.
             [linkx]
             
             이벤트의
             [ahref]
             
             을 잡으면 1.79-14.29% 확률로 나온다. 거미 펫을 소환한다. 다른 펫들과 달리
             [linkx]
             
             에 붙을 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BabyGrinch'sMischiefWhistle.png" rel="nofollow" title="파일:Terraria/BabyGrinch'sMischiefWhistle.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              아기 그린치의 짓궂은 호루라기
             </strong>
             (Baby Grinch's Mischief Whistle)
             <span class="wiki-color" style="color:red">
              ⓗ
             </span>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.2.2" title="테라리아/버전">
              1.2.2
             </a>
             크리스마스 업데이트로 추가된 아이템.
             [ahref]
             
             이벤트의
             [ahref]
             
             을 잡으면 0.95-1.67% 확률로 나온다. 새끼 그린치를 소환한다.
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
       </div>
      </div>
      <h4 class="wiki-heading">
       [linkx]
       
       모바일
       <span class="wiki-edit-section">
        [linkx]
        
       </span>
      </h4>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        늑대인간을 제외하고 몬스터를 공격할 수 있다면 접촉시 1의 공격력을 낸다.
        <br/>
        <br/>
        이 펫들은
        [ahref]
        
        업데이트 이후에는 모두 황금 토끼로 바꿔질 것이라고 개발자인 Cenx가 밝혔다.
        <br/>
       </div>
       <div class="wiki-table-wrap" style="width:100%">
        <table class="wiki-table" style="width: 100%;border: 2px solid #EEE;">
         <tbody>
          <tr style="background-color:#EEE;">
           <td style="width:20%; text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              이름
             </strong>
            </div>
           </td>
           <td style="width:10%; text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              펫
             </strong>
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <strong>
              설명
             </strong>
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              빛나는 검은색 조각
             </strong>
             (Shiny Black Slab)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드 전용 아이템으로,
             [linkx]
             
             와
             [ahref]
             
             그리고
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#바다" title="테라리아/지형">
              바닷속
             </a>
             의 상자에서 얻을 수 있다. 휘두르면 적을 공격하는
             [ahref]
             
             를 소환한다. 크리스마스 업데이트로 아이템 코드가 옮겨지면서 기존에 있던 아이템은 사라지게 되었으나, 습득이 가능하다. 빛나는 검은색 조각은 스마트폰이다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              홀리데이 방울
             </strong>
             (Holiday Bauble)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="홀리데이 방울">
             </a>
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             [linkx]
             
             에
             [ahref]
             
             의
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
              나무
             </a>
             를
             [linkx]
             
             로 벌목하면 획득할 수 있다. 휘두르면 엘파를 소환한다. 몬스터를 공격할 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              뇌
             </strong>
             (Brain)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="뇌">
             </a>
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:UC4wKGM.png" rel="nofollow" title="파일:UC4wKGM.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             [ahref]
             
             와
             [ahref]
             
             그리고
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#지옥" title="테라리아/지형">
              지옥
             </a>
             의 상자에서 얻을 수 있다. 그리고 좀비를 죽이면 극한의 확률로 나온다. 휘두르면 좀비 펫을 소환한다. 몬스터를 공격할 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              페트리 접시
             </strong>
             (Petri Dish)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:B8lnzCu.png" rel="nofollow" title="파일:B8lnzCu.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로, 지상과
             [ahref]
             
             의 상자에서 얻을 수 있다. 또한 슬라임 종류의 몬스터에게 낮은 확률로 얻을 수 있다. 휘두르면 슬라임 펫을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Cabbage.png" rel="nofollow" title="파일:Terraria/Cabbage.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              양배추
             </strong>
             (Cabbage)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="양배추">
             </a>
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로, 지상과
             [linkx]
             
             의 상자 또는 정글의 드래곤 스내처로부터 일정 확률로 얻을 수 있다. 휘두르면 기니피그를 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              피의 유리병
             </strong>
             (Vial of Blood)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="피의 유리병">
             </a>
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             [linkx]
             
             와
             [ahref]
             
             의 황금 상자에서 얻을 수 있다. 휘두르면 박쥐 펫을 소환한다. 몬스터를 공격할 수 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Beeswax.png" rel="nofollow" title="파일:Terraria/Beeswax.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              벌집
             </strong>
             (Beeswax)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="벌집">
             </a>
             [linkx]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#지하" title="테라리아/지형">
              지하
             </a>
             와
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#대동굴" title="테라리아/지형">
              대동굴
             </a>
             의 황금 상자에서 얻거나
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0#드래곤 말벌" title="테라리아/몬스터">
              드래곤 말벌
             </a>
             이 드롭한다. 휘두르면 티피아를 소환한다. 몬스터를 공격할 수 있다. 원래 영문명은 Honeycomb였지만 1.2 패치 이후 추가된 장신구인
             [ahref]
             
             과의 혼동을 피하기 위해 Beeswax로 바뀌었다고 한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              늑대의 송곳니
             </strong>
             (Wolf Fang)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#지하" title="테라리아/지형">
              지하
             </a>
             와
             [ahref]
             
             의 황금 상자나 하드모드의
             [linkx]
             
             에게서 낮은 확률로 얻을 수 있다. 휘두르면 늑대 인간 펫을 소환한다. 몬스터를 공격할 수 있다. 소환수도 아닌 펫치고는 비교적 강력한 공격력을 가지고 있다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Old_Walking_Stick.png" rel="nofollow" title="파일:attachment/테라리아/도구/Old_Walking_Stick.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
             <br/>
             <strong>
              오래된 지팡이
             </strong>
             (Old Walking Stick)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:H3PCql8.png" rel="nofollow" title="파일:H3PCql8.png">
              <span class="wiki-image-align-normal">
               <span class="wiki-image-wrapper">
                <noscript>
                </noscript>
               </span>
              </span>
             </a>
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#의류상" title="테라리아/NPC">
              의류상
             </a>
             에게서 백금화 1닢으로 구매 가능하다. 휘두르면 노파를 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              수상해 보이는 사과
             </strong>
             (Suspicious Looking Apple)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="수상해 보이는 사과">
             </a>
             [ahref]
             
            </div>
           </td>
           <td>
            <div class="wiki-paragraph">
             안드로이드와 iOS 전용 아이템으로,
             [linkx]
             
             ,
             [linkx]
             
             등 벌레류 몬스터가 드롭한다. 휘두르면 웜을 소환하는데
             [linkx]
             
             패러디인 듯하다. 여담으로 이걸 휘둘러 웜을 소환한 상태로 죽게 되면
             [linkx]
             
             도 바뀐다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              황금 항아리
             </strong>
             (Pot o' gold)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             <a id="황금 항아리">
             </a>
             안드로이드와 iOS 전용 아이템으로, 성 파트리치오 축일 기간(3/5~31)에만 얻을 수 있는 아이템인
             <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#무지개 조각" title="테라리아/재료">
              무지개 조각
             </a>
             5개로 만든다. 휘두르면 펫 레프리콘을 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             <br/>
             <strong>
              깨진 하트
             </strong>
             (Broken Heart Crystal)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             안드로이드와 iOS 전용 아이템으로, 발렌타인 데이 기간에 보석을 채굴하다 보면 일정 확률로 얻을 수 있다. 휘두르면 펫
             [ahref]
             
             를 소환한다. 빛을 밝게 내기에 초반에 얻어두면 동굴 탐사시 매우 유용하다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              칠면조 깃털
             </strong>
             (Turkey Feather)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             안드로이드와 iOS 전용 아이템으로, 추수감사절 시즌에 상인에게서 백금화 1닢으로 구매가 가능하다. 휘두르면 펫 칠면조를 소환한다. 이 펫을 소환한 상태로 보스
             [ahref]
             
             를 소환한다.
            </div>
           </td>
          </tr>
          <tr>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
             <br/>
             <strong>
              황금 해초
             </strong>
             (Golden Seaweed)
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [ahref]
             
            </div>
           </td>
           <td style="text-align:center;">
            <div class="wiki-paragraph">
             [linkx]
             
             [linkx]
             
             기종 전용 아이템으로 다른 기종들은 일반적인 방법으로는 구할 수 없지만 멀티플레이 거래나 테라리아 런처를 이용하여 얻을 수 있다. 휘두르면 펫 황금 거북이를 소환한다.
            </div>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
       <div class="wiki-paragraph">
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        빛이 나서 주위를 밝혀줄 수 있는 펫들. 위의 펫과 다른 전용 슬롯에 착용된다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/ShadowOrb(Item).png" rel="nofollow" title="파일:Terraria/ShadowOrb(Item).png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         그림자 구체
        </strong>
        (Shadow Orb)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#오염지대" title="테라리아/지형">
         오염지대
        </a>
        의 그림자 구체를 부술 경우 20% 확률로 획득할 수 있다. 사용 시 그림자 구체가 캐릭터 뒤를 느리게 따라다닌다. 캐릭터와 너무 멀어지면 캐릭터의 위치로 텔레포트한다. 구체는 방향키로 살짝 이동시킬 수 있다.
        [ahref]
        
        버전 패치로 빛의 범위나 세기가 심각하게 너프되어서 쓰레기 아이템으로 전락.
        <br/>
        이전의
        [ahref]
        
        버전에서는 빛의 구체(Orb of Light)라는 이름을 가졌으나 패치되면서 그림자 구체(Shadow Orb)로 변경되었다.
        <br/>
        <br/>
        [ahref]
        
        <a id="진홍색 심장">
        </a>
        <strong>
         진홍색 심장
        </strong>
        (Crimson Heart)
        <br/>
        [ahref]
        
        의 진홍색 심장을 부술 경우 20% 확률로 획득할 수 있다.
        [linkx]
        
        의 대체품이니만큼 좋은 성능을 기대하기는 힘들다. 하지만 이쪽은 내는 빛이 붉은 색이라 그림자 구체보단 더 밝고, 심장답게 플레이어가 움직일 때마다 날아오지 않고 마구 튀겨 다니거나 피를 역분사하면서 빠른 속도로 쫒아오기 때문에 그림자 구체에 비해 이동속도도 빨라서 초반엔 그나마 쓸만하다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         마법 랜턴
        </strong>
        (Magic Lantern)
        <br/>
        [linkx]
        
        이 뜨는
        [ahref]
        
        일 때
        [ahref]
        
        에게 금화 10닢을 주고 살 수 있다. 사용 시 마법 랜턴이 나와 주위의 보물(광석, 상자, 항아리 등)을 반짝이게 한다. 정확히는 밝게 하는 것이 아니라 반짝이는 이펙트만 주는 것이므로 어두운 동굴에서는 광석의 위치는 알 수 있으나 어떤 광물인지는 알 수 없다. 광원 그 자체로서의 성능은 그림자 구체만 못하지만 동굴에서 광석을 채굴하는 데에는 유용하다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         요정의 종
        </strong>
        (Fairy Bell)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        에서 종 1개,
        [ahref]
        
        25개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#빛의 영혼" title="테라리아/재료">
         빛의 영혼
        </a>
        8개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#시야의 영혼" title="테라리아/재료">
         시야의 영혼
        </a>
        10개로 제작한다.
        [linkx]
        
        사용 시 요정이 소환되어 캐릭터를 따라다닌다. 그림자 구체와 특성이 동일하지만 더 빠르고 더 밝다. 소환할 때마다 빨간색, 파란색, 초록색 중 랜덤으로 색상이 바뀐다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         병 속의 위습
        </strong>
        (Wisp in a Bottle)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%8B%9C%EC%8A%A4%ED%85%9C#하드모드" title="테라리아/시스템">
         하드모드
        </a>
        [ahref]
        
        의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0#파란 무장 해골" title="테라리아/몬스터">
         파란 무장 해골
        </a>
        ,
        [ahref]
        
        ,
        [linkx]
        
        이 0.25% 확률로 드롭한다. 사용 시 빛을 내는 위습이 머리 위에 소환된다. 이 위습은 이동키로 조종이 가능하며, 위의 두 광원들과 달리 유니콘 탑승 시를 제외하면 플레이어의 속도를 못 따라갈 일이 없어서 여러모로 편리한 아이템이다. 광원 펫의 특성상 블록 관통도 가능해서 광석을 찾을 때는 매우 유용한 아이템이 된다. 특히 일반 펫인
        [ahref]
        
        과 같이 사용하는 것을 추천.
        <br/>
        속도가 어느 정도 빨라지면 달리는 방향으로 공처럼 빙글빙글 돌면서 앞서가는데 꽤 귀엽다.
        <br/>
        <br/>
        [ahref]
        
        <a id="크리퍼의 알">
        </a>
        <strong>
         크리퍼의 알
        </strong>
        (Creeper Egg)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        버전 1.3.4에서 업데이트된 광원 펫이다. 사용 시 지니처럼 생긴 요정이 소환된다. 이 펫은 플레이어의 옆에 절대적으로 붙어다니며 빛도 나쁘지 않게 방출한다. 획득법은
        [linkx]
        
        이벤트 중
        [linkx]
        
        를 처치 시 2단계에선 20% /
        <span class="wiki-color" style="color:#D4712B">
         25%
        </span>
        확률, 3단계에선 10% 확률로 얻을 수 있다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SuspiciousLookingTentacle.png" rel="nofollow" title="파일:Terraria/SuspiciousLookingTentacle.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         수상해 보이는 촉수
        </strong>
        (Suspicious Looking Tentacle)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #3577
        </span>
        <br/>
        [ahref]
        
        참조.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        전용 슬롯에 착용할 수 있는 수레는
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#기계 수레" title="테라리아/보스">
         기계 수레
        </a>
        (전문가 모드) 2종류가 존재하며, 슬롯에 아무것도 착용하지 않은 상태에선 성능이 가장 낮은 낡은 수레를 타고 다닌다. 선로는
        [linkx]
        
        참조.
        <br/>
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Minecart.png" rel="nofollow" title="파일:Terraria/Minecart.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="광산 수레">
        </a>
        <strong>
         광산 수레
        </strong>
        (Minecart)
        <br/>
        [linkx]
        
        에서
        [ahref]
        
        또는
        [ahref]
        
        15개와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#나무" title="테라리아/블록">
         나무
        </a>
        10개로 제작한다. 착용하면 선로 위에서의 속도가 증가한다.
        <br/>
        <br/>
        [linkx]
        
        <a id="기계 수레">
        </a>
        <strong>
         기계 수레
        </strong>
        (Mechanical Cart)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3353
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#기계 수레" title="테라리아/보스">
         보스 문서의 해당 내용
        </a>
        참조.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        사용할 시 탑승물이 소환되며, 전용 슬롯에 착용할 수 있다. 마우스로 직접 눌러서 쓰거나 단축키 R로 탑승할 수 있다.
        <br/>
        [linkx]
        
        버전 업데이트 이후엔 탑승 후에도 아이템 사용을 포함한 여러 가지 일을 동시에 수행할 수 있다. 그러나, 갈고리를 쓰면 즉시 내린다. 또한
        [ahref]
        
        을 먹은 상태에서는
        <a class="wiki-link-internal" href="글" title="">
         달콤한 고글
        </a>
        이나
        [linkx]
        
        등으로 비행이 불가능하다. 탑승하면 캐릭터의 키가 상승해 일반 캐릭터의 키인 3칸 높이의 블록 사이를 지나가지 못한다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         끈적한 안장
        </strong>
        (Slimy Saddle)
        <br/>
        [linkx]
        
        이 25% 확률로 드롭한다. 사용하면 슬라임에 탑승한다. 탑승한 동안에는 높은 점프 높이와 빠른 이동속도를 가진다. 그러나 점프 높이가 높이라 낙하 피해를 받을 수 있으니 주의. 슬라임의 특성답게 물 위에 뜨며, 탑승하는 동안에는
        <a class="wiki-link-internal" href="/w/%EC%8A%88%ED%8D%BC%20%EB%A7%88%EB%A6%AC%EC%98%A4" title="슈퍼 마리오">
         슈퍼 마리오
        </a>
        처럼 점프로 밑에 있는 몬스터들을 밟아 공격할 수 있다.
        [linkx]
        
        [ahref]
        
        이동속도는 20mph.
        [ahref]
        
        과
        [linkx]
        
        에서도 떠오르지만, 용암에서는 닿는 즉시 피해를 받는다. 이 탈것의 진가는 헬레베이터에서 발휘된다. 기존의 이동시간에서 무려 반을 줄여준다! 낙하속도가 똑같이 51mph로 표시되지만 직접 낙하 시간을 재보면 속도가 약 2배 정도 빠르다는 것을 알 수 있다. 하지만
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#달의 군주" title="테라리아/이벤트">
         달의 군주
        </a>
        를 잡고
        [linkx]
        
        을 얻고 나면 잘 사용되지 않는다.
        <br/>
        <br/>
        [linkx]
        
        <a id="달콤한 고글">
        </a>
        <strong>
         달콤한 고글
        </strong>
        (Honeyed Goggles)
        <br/>
        [ahref]
        
        이 5% 확률로 드롭한다. 전문가 모드에서는 별도로 여왕벌 보물 가방에서
        <span class="wiki-color" style="color:#D4712B">
         11%
        </span>
        의 확률로 나오기도 한다. 얻을 확률이 꽤 높으므로 한번 도전해 보자. 사용하면 벌 위에 탑승한다. 높이 날아다닐 수 있으나 땅 위에선 느려지며 너무 오래 날아다니면 벌이 지쳐 속도가 느려지면서 점차 땅으로 가라앉는다. 그래도 날개를 만들기 이전에 얻어 두면 상당히 요긴하게 쓰인다. 비행 속도는 31mph, 땅에선 10mph. 날아다닐 때는 고글을 쓰고 있고 땅에 있을 때는 고글을 벗고 있다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/FuzzyCarrot.png" rel="nofollow" title="파일:Terraria/FuzzyCarrot.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         솜털 당근
        </strong>
        (Fuzzy Carrot)
        <br/>
        [linkx]
        
        의 퀘스트를 5번 완수할 시 습득 가능하다. 사용하면 토끼에 탑승한다. 탑승한 동안에는 이동속도와 점프 높이가 증가한다. 속도가 빨라질수록 점프 높이는 비례해서 증가한다. 최대 가속 시 38mph.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         단단한 안장
        </strong>
        (Hardy Saddle)
        <br/>
        낚시해서 가끔 습득되는
        [linkx]
        
        에서 1/10 확률로 얻을 수 있다. 사용하면 거북이에 탑승한다. 탑승한 동안에는 땅 위에서는 느려지고 장신구 착용에 관계 없이 추락 피해를 입지만, 물속에서는 이동속도가 빨라진다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         고대의 뿔
        </strong>
        (Ancient Horn)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        [linkx]
        
        의 바실리스크가 2% 확률로 드롭한다. 사용하면 바실리스크에 탑승한다. 달릴수록 점점 빨라지며 불꽃이 나온다. 또한 몬스터와 부딪히면 피해를 입힌다. 이동속도는 41mph.
        <br/>
        [linkx]
        
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         비늘 송로버섯
        </strong>
        (Scaly Truffle)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#오염지대" title="테라리아/지형">
         오염지대
        </a>
        ,
        [linkx]
        
        ,
        [linkx]
        
        에 지배된
        [ahref]
        
        에서 낚시하면 낚시 효율 100% 기준으로 2%
        [ahref]
        
        확률로 얻을 수 있다. 사용하면 피그론에 탑승한다. 타고 있는 동안에는 이동속도와 점프 높이가 증가한다. 또한 하단키와 점프키를 동시에 눌러서 호버링이 가능하다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         새우 송로버섯
        </strong>
        (Shrimpy Truffle)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3367
        </span>
        <br/>
        [ahref]
        
        참조.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BlessedApple.png" rel="nofollow" title="파일:Terraria/BlessedApple.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="축복받은 사과">
        </a>
        <strong>
         축복받은 사과
        </strong>
        (Blessed Apple)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [ahref]
        
        의 모든 몬스터가 0.5% /
        <span class="wiki-color" style="color:#D4712B">
         0.66%
        </span>
        확률로 드롭한다. 사용하면 유니콘에 탑승한다. 우선 추가 점프가 가능해지는데, 추가 점프를 제공하는 병, 풍선 장신구와 별개로 추가하는 형태이다. 이 때문에
        [ahref]
        
        을 갖고 있는 상태라면 기본 점프 포함 최대 다섯 번의 점프를 할 수 있다. 그 다음으로는 전진하는 동안 이동속도가 증가하여 최대까지 올릴 시 공격 판정이 생겨 닿는 모든 적에게 피해를 입힌다. 유니콘에 탄 채로
        [ahref]
        
        를 쏘는 도전 과제도 있다.
        [ahref]
        
        이 떠오를 때
        [ahref]
        
        를 가지고 신성지대 지형에서 무쌍을 펼치면 비교적 쉽게 얻을 수 있다. 다만 몬스터들이 엄청나게 쏟아져 나오니
        [linkx]
        
        정도의 무장은 되어야 한다.
        <br/>
        대시 기능이 있는 장신구를 장착하면 대시 후 바로 유니콘에 타는 방법을 통해 유니콘의 속도를 처음부터 최대로 높일 수 있다. 최대 속도는 61mph. 레일 위를 제외한 일반 탈것 아이템 중 거의 최고의 속도이다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BrainScrambler(Item).png" rel="nofollow" title="파일:Terraria/BrainScrambler(Item).png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         브레인 스크램블러
        </strong>
        (Brain Scrambler)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#화성의 광기" title="테라리아/이벤트">
         화성의 광기
        </a>
        이벤트의
        [linkx]
        
        가 1% 확률로 드롭한다. 사용하면 스쿠트릭스(Scutlix)에 탑승한다. 이동속도와 점프 높이가 증가하고 눈에서 빔을 발사해 전방의 적들을 공격한다. 이동속도는 41mph. 더불어 추락 시 받는 피해가 1로 고정되는 효과가 있다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         순록의 방울
        </strong>
        (Reindeer Bells)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Rideable_Reindeer.png" rel="nofollow" title="파일:attachment/테라리아/도구/Rideable_Reindeer.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <br/>
        [linkx]
        
        크리스마스 업데이트로 추가된 아이템.
        [ahref]
        
        이벤트의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#얼음 여왕" title="테라리아/이벤트">
         얼음 여왕
        </a>
        을 잡으면 0.56-0.83% 확률로 나온다. 사용하면 루돌프에 탑승한다. 승마한 동안에는 매우 빠른 속도와 점프 높이를 가진다.
        <br/>
        테라리아 내에서 최초로 추가된 탈것이다.
        [ahref]
        
        에 처음 등장하였다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/CosmicCarKey.png" rel="nofollow" title="파일:Terraria/CosmicCarKey.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         우주선 열쇠
        </strong>
        (Cosmic Car Key)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        [linkx]
        
        이벤트의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#화성인 우주선" title="테라리아/이벤트">
         화성인 우주선
        </a>
        을 잡으면 11.11% 확률로 나온다. 사용하면 무제한 비행하는 UFO에 탑승한다. 수중에서는 UFO가 자동으로 사라져 사용할 수 없다. 전문가 모드의
        [ahref]
        
        이 드롭하는
        [linkx]
        
        과 비교하자면, 기본 속도는 이쪽이 더 빠른 대신 체력이 낮을 시에는 큐트 피시론보다 뒤쳐지게 된다. 비행 속도는 41mph.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/DrillContainmentUnit.png" rel="nofollow" title="파일:Terraria/DrillContainmentUnit.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="드릴 수용 장치">
        </a>
        <strong>
         드릴 수용 장치
        </strong>
        (Drill Containment Unit)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #2768
        </span>
        <br/>
        테라리아 내에서 가장 빠른 채광 수단 중 하나이자 유일한 기능성 탈것. 사실 탈것 아이템의 범위에서 벗어난다면 가벼운 수식어을 부여한
        <a class="wiki-link-internal" href="톱" title="">
         쉬루마이트 땅파기 손톱
        </a>
        에
        [ahref]
        
        세트,
        [ahref]
        
        까지 사용할 경우 드릴 수용 장치보다 더욱 빠르다. 도구의 범위에서 벗어난다면 로켓 2, 4를 사용하는 로켓류 무기가 빠르며 그 중 눈사람 대포가 가장 빠른 편.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#미스릴/오리칼쿰 모루" title="테라리아/가구">
         미스릴/오리칼쿰 모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#운석" title="테라리아/재료">
         운석 주괴
        </a>
        ,
        [ahref]
        
        ,
        [ahref]
        
        ,
        [ahref]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#유령의 주괴" title="테라리아/재료">
         유령의 주괴
        </a>
        ,
        [ahref]
        
        를 각각 40개씩 조합해서 만들 수 있다. 여기에 나오는 주괴들을 순수한 광석 및 재료만으로 따지자면
        [ahref]
        
        160개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#녹조류" title="테라리아/재료">
         녹조류 광석
        </a>
        720개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#발광 버섯" title="테라리아/블록">
         발광 버섯
        </a>
        600개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#심령체" title="테라리아/재료">
         심령체
        </a>
        20개,
        [ahref]
        
        과
        [ahref]
        
        각각 120개,
        [linkx]
        
        40개가 들어간다. 루미나이트의 경우는 전문가 모드에 관계없이 무조건 적어도 두 번 이상 잡아야 얻을 수 있는 양이다.
        <br/>
        <br/>
        [ahref]
        
        사용하면 무제한으로 날아다니며 채광 레이저를 발사하는 채광 기계에 탑승한다. 이 채광 레이저는
        [linkx]
        
        와
        [linkx]
        
        과
        [ahref]
        
        과 그림자 구체/진홍색 심장을 포함한 모든
        [ahref]
        
        , 즉 벽면을 제외한 부술 수 있는 모든 블록을 채광할 수 있으며 마우스 커서를 중심으로 4블록 정도의 범위에 레이저를 발사한다.
        <br/>
        <br/>
        용도는 주로 대형 구조물이나 지형을 제거하는 목적. 무기 사용과 블록 배치 등 여러 가지 일이 가능한 다른 탈것들과 달리 탑승 시 채굴 이외에는 어떤 일도 할 수 없으며, 마우스로 아이템을 들고 있어도 무조건 채광만을 한다. 수평 방향 비행 속도는 31mph, 수직 방향 비행 속도는 41mph, 대각선 방향 비행 속도는 51mph이다.
        [ahref]
        
        같이 몬스터들이 많이 나오는 곳에서 채광할 때 곡괭이에 비해 몬스터들을 공격하지 못한다는 단점이 있어,
        [ahref]
        
        을 사용하는 것을 추천한다. 한 가지 특이한 사항으로, 체공 시간이 무제한인
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AC%B4%EA%B8%B0#요요" title="테라리아/무기">
         요요
        </a>
        를 사용한 채 단축키로 탑승하면 요요가 그대로 남아있어 공격은 가능하지만, 요요를 놓기 전까지는 채광이 불가능한 현상이 있다.
        <br/>
        <br/>
        버전
        [ahref]
        
        패치 이전에는 하드모드 이전에도 제단을 파괴해버리는 버그가 있었는데, 해당 버그를 쓴다고 해서
        [ahref]
        
        은 나타나지 않았다. 1.3.0.6 버전 이후에는 하드모드 이전에 파괴하려고 하면 평상시와 같이 피해를 받는다.
        <br/>
        <br/>
        드릴 수용 장치는 원형 모양의 장치이며 레이저를 통해 블록을 순식간에 채광하는 것이다. 그러나 게임 내 데이터 파일을 확인해보면 게임 내의 드릴 수용 장치 탈것과 엄청나게 다르며 그것은
        <code>
         Mount_Drill.png
        </code>
        ,
        <code>
         Mount_DrillFront.png
        </code>
        파일로 알 수 있다.
        [linkx]
        
        특히 드릴 수용 장치의 버프 아이콘이 파일의 탈것 모양과 매우 유사함을 보아 원래 초기 컨셉은 진짜 드릴이었던 것으로 추측된다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        마우스가 향하는 방향으로 갈고리를 던져 플레이어의 이동을 도와주는 도구이다. 기본값 E키로 던질 수 있다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3" title="테라리아/버전">
         1.3
        </a>
        버전 이후에는 갈고리를 전용 슬롯에 착용하여 사용할 수 있다.
        [ahref]
        
        모바일 버전에서는 플레이어를 중심으로 원하는 방향을 누르면 갈고리가 나간다. 초중반 갈고리를 얻었을 때 꼭 알아두어야 할 필수 팁. 다만 다른 종류의 갈고리가 여러 개 있다면 가장 앞의 것이 나가므로 주의해야 한다.
        <br/>
        갈고리를 블록에 박고 있을 때는 적의 공격에 의한 넉백을 무시하므로 초기에
        [ahref]
        
        를 얻지 못한 경우 이 갈고리를 이용할 수 있다. 갈고리가 블록에 닿는 순간 비행 시간이 리셋되므로, 갈고리가 벽에 닿을 때 점프를 해 갈고리를 해제하면 거의 무한대로 비행을 할 수 있다.
        <br/>
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         등반 갈고리
        </strong>
        (Grappling Hook)
        <span class="wiki-color" style="color:Gray">
         #84
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#철" title="테라리아/재료">
         철괴
        </a>
        또는
        [linkx]
        
        로 제작하는
        [ahref]
        
        3개와,
        [ahref]
        
        ,
        [linkx]
        
        ,
        [linkx]
        
        ,
        [ahref]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0#피라냐" title="테라리아/몬스터">
         피라냐
        </a>
        가 드롭하는
        [ahref]
        
        1개로 제작한다. 초반에 빠른 동굴 탈출을 위한 도구. 사용 시 갈고리가 사용 방향으로 쭉 뻗어가며 중간에 블록과 맞닿으면 캐릭터를 그 위치로 이동시킨다. 초기에 얻는다면 동굴 탐험이 굉장히 수월해지며 또한 갈고리가 당기는 속도도 수준급이므로 빠른 속도의 여행을 즐길 수 있게 해준다.
        [linkx]
        
        버전 패치 이후 보석 갈고리가 생겼으나, 동굴에 들어가지 않는 한 처음부터
        [linkx]
        
        을 가지는 건 힘든 일이다. 하지만 보석 갈고리는 제작에 갈고리가 필요 없으므로 철/납을 구하는 동안 보석만 찾는다면 만들기 쉽다. 사거리는 19타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/AmethystHook.png" rel="nofollow" title="파일:Terraria/AmethystHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         자수정 갈고리
        </strong>
        (Amethyst Hook)
        <span class="wiki-color" style="color:Gray">
         #1236
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [ahref]
        
        15개로 만들 수 있는 갈고리이다. 사거리는 18타일로, 보석 갈고리 중 가장 짧으며 등반 갈고리만도 못하다.
        <br/>
        <br/>
        [ahref]
        
        <a id="토파즈 갈고리">
        </a>
        <strong>
         토파즈 갈고리
        </strong>
        (Topaz Hook)
        <span class="wiki-color" style="color:Gray">
         #1237
        </span>
        <br/>
        [ahref]
        
        에서
        [linkx]
        
        15개로 만들 수 있는 갈고리로, 보석 갈고리 중 사거리가 두 번째로 짧다. 20타일.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         사파이어 갈고리
        </strong>
        (Sapphire Hook)
        <span class="wiki-color" style="color:Gray">
         #1238
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [ahref]
        
        15개로 만들 수 있는 갈고리로, 보석 갈고리 중 사거리가 세 번째로 짧다. 22타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/EmeraldHook.png" rel="nofollow" title="파일:Terraria/EmeraldHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="에메랄드 갈고리">
        </a>
        <strong>
         에메랄드 갈고리
        </strong>
        (Emerald Hook)
        <span class="wiki-color" style="color:Gray">
         #1239
        </span>
        <br/>
        [ahref]
        
        에서
        [ahref]
        
        15개로 만들 수 있는 갈고리로, 보석 갈고리 중 사거리가 세 번째로 길다. 24타일.
        <br/>
        <br/>
        [linkx]
        
        <a id="루비 갈고리">
        </a>
        <strong>
         루비 갈고리
        </strong>
        (Ruby Hook)
        <span class="wiki-color" style="color:Gray">
         #1240
        </span>
        <br/>
        [ahref]
        
        에서
        [linkx]
        
        15개로 만들 수 있는 갈고리로, 보석 갈고리 중 사거리가 두 번째로 길다. 26타일.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         다이아몬드 갈고리
        </strong>
        (Diamond Hook)
        <span class="wiki-color" style="color:Gray">
         #1241
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        [linkx]
        
        15개로 만들 수 있는 갈고리로, 보석 갈고리 중 사거리가 가장 길다. 28타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SlimeHook.png" rel="nofollow" title="파일:Terraria/SlimeHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         슬라임 갈고리
        </strong>
        (Slime Hook)
        <span class="wiki-color" style="color:Gray">
         #2585
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#왕 슬라임" title="테라리아/보스">
         왕 슬라임
        </a>
        이 1/3 확률로 드롭한다.
        [linkx]
        
        와 비슷한 길이이며 총 3개의 줄을 발사할 수 있다. 20타일.
        <br/>
        <br/>
        [ahref]
        
        <a id="스켈레트론의 손">
        </a>
        <strong>
         스켈레트론의 손
        </strong>
        (Skeletron Hand)
        <span class="wiki-color" style="color:Gray">
         #1273
        </span>
        <br/>
        [linkx]
        
        이 12.2% 확률로 드롭한다. 총 2개의 갈고리를 쏠 수 있다. 22타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/FishHook.png" rel="nofollow" title="파일:Terraria/FishHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         물고기 갈고리
        </strong>
        (Fish Hook)
        <span class="wiki-color" style="color:Gray">
         #2360
        </span>
        <br/>
        [linkx]
        
        의 퀘스트를 클리어할 시 2% 확률로 습득 가능하다. 총 2개의 갈고리를 쏠 수 있다. 25타일. 확률이 확률이다보니 이걸 입수할 시기엔 이미
        <a class="wiki-link-internal" href="찍" title="">
         넝쿨 채찍
        </a>
        같은 아이템을 만들었을 테니 잘 사용되지 않는다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/WebSlinger.png" rel="nofollow" title="파일:Terraria/WebSlinger.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         웹 슬링어
        </strong>
        (Web Slinger)
        <span class="wiki-color" style="color:Gray">
         #185
        </span>
        <br/>
        [linkx]
        
        에서 찾을 수 있는
        [linkx]
        
        의
        [linkx]
        
        로 덮인 상자에서 100% 확률로 입수 가능. 최대 8개의 갈고리가 나가는 대신 모든 갈고리 중 가장 짧은 사정거리를 지녔다. 16타일. 이름인 Web Slinger(거미줄 사용자)는
        [ahref]
        
        을 나타내는 듯하다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         넝쿨 채찍
        </strong>
        (Ivy Whip)
        <span class="wiki-color" style="color:Gray">
         #185
        </span>
        <br/>
        <a class="wiki-link-internal" href="리" title="">
         등반 갈고리
        </a>
        의 업그레이드 버전.
        [linkx]
        
        에서
        [ahref]
        
        에서 발견되는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#정글 포자" title="테라리아/재료">
         정글 포자
        </a>
        12개와
        [ahref]
        
        3개로 제작한다. 사용법은 같으나 한 번에 3개까지 사용 가능해서 동시에 세 개의 블록에 붙어있을 수가 있다. 덕분에 위치 잡기가 더 쉽다. 25타일.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         박쥐 갈고리
        </strong>
        (Bat Hook)
        <span class="wiki-color" style="color:Gray">
         #1800
        </span>
        <br/>
        [ahref]
        
        동안에 몬스터가 떨어뜨리는
        [ahref]
        
        에서 0.66% 확률로 나온다. 사거리는
        [ahref]
        
        보다 넓은 대신 갈고리 개수가 하나이다. 32타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/CandyCaneHook.png" rel="nofollow" title="파일:Terraria/CandyCaneHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         사탕 지팡이 갈고리
        </strong>
        (Candy Cane Hook)
        <span class="wiki-color" style="color:Gray">
         #1915
        </span>
        <br/>
        [linkx]
        
        동안에 몬스터가 떨어뜨리는
        [ahref]
        
        에서 0.63% 확률로 나온다. 25타일.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         이중 갈고리
        </strong>
        (Dual Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #437
        </span>
        <br/>
        [ahref]
        
        이 14.29% 확률로 드롭한다. 한 번 갈고리를 쏴고 블록에 붙기 전에 하나를 더 쏠 수 있다. 하나를 미리 붙힌 다음에 쓴다면 전에 붙었던 블록에서는 떨어지게 되지만, 이중이라는 이름답게 쏜 갈고리가 벽에 닿을 때까지는 떨어지지 않는다. 갈고리 수가 적어(1.5) 넝쿨 채찍(3)에 비해 안 좋아보이지만, 실제론 갈고리를 여러 개 쏠 일보다 멀리 쏠 일이 많으므로 이중 갈고리가 더 좋다고 볼 수 있다. 28타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/StaticHook.png" rel="nofollow" title="파일:Terraria/StaticHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         고정 갈고리
        </strong>
        (Static Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3623
        </span>
        <br/>
        [ahref]
        
        에게 금화 50닢을 주고 살 수 있다. 블록에 갈고리가 발사되어 고정이 되어도 플레이어가 당겨지지 않으며, 방향키를 통해 선을 따라 이동하면서 거리를 조정할 수 있다. 거리는 가장 높은 40타일으로, 건축과 아레나 고정 용도에 적합한 대신 일반 전투에는 적합하지 않다.
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:StaticHook.gif" rel="nofollow" title="파일:StaticHook.gif">
         <span class="wiki-image-align-normal" style="width:300px;">
          <span class="wiki-image-wrapper" style="width: 100%;">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <br/>
        위의 움짤과 같이 한 곳에 먼저 고정을 한 후, 쏜 방향으로 40타일 거리를 왔다갔다 할 수 있다.
        <br/>
        이 외에 버그가 있는데,
        [linkx]
        
        를 여러 개 고정하고 고정된 상태에서 이 갈고리를 쏘면, 갈고리 2개를 박을 수 있다!
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/IlluminantHook.png" rel="nofollow" title="파일:Terraria/IlluminantHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         발광 갈고리
        </strong>
        (Illuminant Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3022
        </span>
        <br/>
        [ahref]
        
        의
        [linkx]
        
        이 드롭한다. 한 번에 3개까지의 갈고리를 사용할 수 있다. 30타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/WormHook.png" rel="nofollow" title="파일:Terraria/WormHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="벌레 갈고리">
        </a>
        <strong>
         벌레 갈고리
        </strong>
        (Worm Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3023
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#오염지대" title="테라리아/지형">
         오염지대
        </a>
        의
        [ahref]
        
        이 드롭한다. 한 번에 3개까지의 갈고리를 사용할 수 있다. 30타일.
        <br/>
        <br/>
        [linkx]
        
        <a id="힘줄 갈고리">
        </a>
        <strong>
         힘줄 갈고리
        </strong>
        (Tendon Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3020
        </span>
        <br/>
        [linkx]
        
        의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0#진홍색 미믹" title="테라리아/몬스터">
         진홍색 미믹
        </a>
        이 드롭한다. 한 번에 3개까지의 갈고리를 사용할 수 있다. 31타일.
        <br/>
        <br/>
        [ahref]
        
        <a id="가시 갈고리">
        </a>
        <strong>
         가시 갈고리
        </strong>
        (Thorn Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #1829
        </span>
        <br/>
        [ahref]
        
        가 10% 확률로 드롭한다. 한 번에 3개까지의 갈고리를 사용할 수 있다. 31타일.
        <br/>
        <br/>
        [linkx]
        
        <a id="으스스한 갈고리">
        </a>
        <strong>
         으스스한 갈고리
        </strong>
        (Spooky Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #1829
        </span>
        <br/>
        [ahref]
        
        할로윈 업데이트로 추가된 아이템.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#펌킨 문" title="테라리아/이벤트">
         펌킨 문
        </a>
        이벤트의
        [linkx]
        
        를 잡으면 2-20% 확률로 나온다. 총 3개의 갈고리를 날릴 수 있다. 35타일.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         크리스마스 갈고리
        </strong>
        (Christmas Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #1916
        </span>
        <br/>
        [linkx]
        
        크리스마스 업데이트로 추가된 아이템.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#프로스트 문" title="테라리아/이벤트">
         프로스트 문
        </a>
        이벤트의
        [linkx]
        
        을 잡으면 5.19-7.78% 확률로 나온다. 갈고리 개수와 사거리는 으스스한 갈고리와 동일하다. 35타일.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Anti-GravityHook.png" rel="nofollow" title="파일:Terraria/Anti-GravityHook.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         반중력 갈고리
        </strong>
        (Anti-Gravity Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #2800
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#화성의 광기" title="테라리아/이벤트">
         화성의 광기
        </a>
        이벤트의
        [ahref]
        
        을 잡으면 11.11% 확률로 나온다. 특이하게도 갈고리를 목표물에 쏜 뒤 그 위치에 붙는 것이 아니라 12타일 떨어진 공중에 고정된다. 이 상태에서는 중력의 영향을 받지 않으며 방향키를 이용해 갈고리를 축으로 해서 이동이 가능하다. 회전 시에는 각 방향키에 대응하는 위치로 회전하므로 1바퀴 회전하기 위해서 각 방향키를 순서대로 눌러야 한다. 최대 3개의 갈고리를 발사할 수 있으며 여러 개의 갈고리가 박혀있는 상태에서는 그것을 중심으로 이동이 가능하나, 항상 거리를 유지하려는 특성 때문에 두 개 이상 갈고리를 던진 상태에서는 완벽하게 회전하기가 힘들다. 갈고리에서 빛이 난다.
        <br/>
        항상 12타일을 유지하려는 성질을 이용하여 빠른 이동 수단으로 사용할 수도 있는데,
        [ahref]
        
        을 일직선으로 길게 건설한 후 플랫폼에 매달려 플랫폼과 몸이 겹치게 한 후, 가려는 방향의 반대 방향으로 마우스 커서를 두고 E를 마구 연타하는 것이 그 방법이다. 짧은 거리라면 이동속도 장신구를 다 맞춘
        [linkx]
        
        보다도 빠르게 갈 수 있다. 31타일.
        <br/>
        <br/>
        [ahref]
        
        <a id="루나 갈고리">
        </a>
        <strong>
         루나 갈고리
        </strong>
        (Lunar Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #3572
        </span>
        <br/>
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#태양의 파편" title="테라리아/재료">
         태양의 파편
        </a>
        ,
        [linkx]
        
        ,
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#소성단의 파편" title="테라리아/재료">
         소성단의 파편
        </a>
        각각 6개로 제작한다. 각각의 색으로 빛나는 4개의 갈고리를 날릴 수 있다. 먼저 날린 갈고리가 블록에 닿지 않아도 다른 갈고리를 던질 수 있다. 35타일.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        물속에 미끼를 던져서
        [linkx]
        
        ,
        [ahref]
        
        ,
        [linkx]
        
        등을 낚는 데 사용되는 도구.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.2.4" title="테라리아/버전">
         1.2.4
        </a>
        버전에서 추가되었다. 낚시를 하기 위해서는 우선
        [ahref]
        
        가 있어야 하며 동시에 많은 양의 물이 담겨진 곳을 찾아야 한다. 물의 양이 적다면 쓰레기가 낚일 확률이 높아지고 동시에 좋은 물고기를 얻을 확률은 낮아진다. 물이 너무 적다면 아예 낚시를 할 수 없는 환경이 된다. 따라서 좋은 물고기를 얻을 확률은 낚싯대와 미끼의 높은 효율도 중요하지만 물이 얼마나 존재하는가 또한 가장 중요한 요인이다.
        <br/>
        <br/>
        낚시를 하기 위해 미끼를 적어도 하나 이상 소지하여야 한다. 그리고 원하는 물웅덩이를 향해 찌를 던지면 된다. 어느 정도 기다리면 찌가 순간적으로 움직이는데, 이때 즉시 들어올리면 찌와 함께 걸린 물고기를 비롯한 아이템을 얻을 수 있다. 무언가를 낚는 데에 성공함에 관계 없이 반응에 의하여 찌를 올릴 때마다 미끼가 하나 소모될 확률이 있다.
        <br/>
        <br/>
        낚시 버그가 하나 있는데, 방법은 다음과 같다.
        [ahref]
        
       </div>
       <ol class="wiki-list wiki-list-decimal" start="1">
        <li>
         <div class="wiki-paragraph">
          일단 겹쳐지는 템을 많이 준비한다. 은화 1닢을 동화 100닢으로 만들어서 동화 1닢씩 버려도 되기에, 게임 극초반에 아직 채굴한 것이 없다면 은화 1닢만 벌자.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          환경설정에서 Autopause를 켠다.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          낚싯대를 든 다음에 인벤토리를 열고 우클릭으로 아까 그 아이템 중 하나만 골라 우클릭으로 버려준다. 낚시찌를 던지고 인벤토리를 열어도 되지만, 그냥 손에 들기만 해도 된다.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          인벤토리를 닫으면 버릴 때마다 찌가 마우스 커서 방향으로 2개씩 추가된다.
         </div>
        </li>
       </ol>
       <div class="wiki-paragraph">
        <br/>
        원리는 다음과 같다. Autopause를 켜고 아이템을 버리게 되면 들고 있는 아이템을 흔드는 모션과 함께 버리게 되는데, 돈 여물통처럼 흔드는 모션과 함께 사용하게 되는 아이템의 경우 커서 방향으로 아이템을 사용하는 것을 볼 수 있다.
        [linkx]
        
        낚싯대의 경우 이게 낚시찌를 던지는 모션이기에, 자연스레 아이템을 버리면 그 방향으로 낚싯대를 또 던지게 되는 것.
        <br/>
        <br/>
        이게 개별적인 낚시 시도로 처리되기 때문에 낚이는 것도 각 찌마다 다르게 낚인다. 낚싯대를 그물로 만들어주는 버그인 셈. 다만 미끼도 그에 비례해서 빨리 사라지지만 좋은 낚싯감을 많이 낚을 확률을 그만큼 높힐 수 있는 셈이니 절대 손해는 아니다. 보통은 낚싯대의 성능에 따라 미끼가 소모되지 않을 수도 있지만 이 버그를 쓸 경우엔 낚아올렸다 하면 바로 미끼가 사라진다. 한 번에 몇 개가 사라지는 경우도 있다. 보통 낚시찌 수에 비례하여 미끼가 사라지니, 미끼를 미리 많이 채취해두자. 사실 이 버그를 이용하면 상자도 많이 낚이기에 나중에는 상자에서 뜯어낸 미끼들을 사용하게 된다.
        <br/>
        <br/>
        퀘스트 아이템을 한꺼번에 많이 낚는 것도 가능하다. 퀘스트 아이템은 현재 인벤토리에 없으면 낚이는 것이므로, 한 번 낚았어도 상자나 저금통 등에 넣어두기만 하면 또 낚을 수 있다. 낚시 퀘스트는 해당 세계에 접속하는 모든 플레이어에게 동일하게 적용되므로, 여러 플레이어를 만들어 두고 보상을 계속 받는 플레이가 가능하다.
        <br/>
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         나무 낚싯대
        </strong>
        (Wood Fishing Pole)
        <span class="wiki-color" style="color:Gray">
         #2289
        </span>
        <br/>
        가장 낮은 등급의 낚싯대. 5%의 낚시 효율을 지녔다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#작업대" title="테라리아/가구">
         작업대
        </a>
        에서
        [linkx]
        
        8개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Reinforced_Fishing_Pole.png" rel="nofollow" title="파일:attachment/테라리아/도구/Reinforced_Fishing_Pole.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="보강된 낚싯대">
        </a>
        <strong>
         보강된 낚싯대
        </strong>
        (Reinforced Fishing Pole)
        <span class="wiki-color" style="color:Gray">
         #2291
        </span>
        <br/>
        두 번째 등급의 낚싯대. 15%의 낚시 효율을 지녔다.
        [ahref]
        
        에서
        [ahref]
        
        또는
        [ahref]
        
        8개로 제작한다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         영혼을 낚는 자
        </strong>
        (Fisher of Souls)
        <span class="wiki-color" style="color:Gray">
         #2293
        </span>
        <br/>
        보강된 낚싯대보다 높은 등급의 낚싯대. 20%의 낚시 효율을 지녔다.
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#데모나이트" title="테라리아/재료">
         데모나이트 주괴
        </a>
        8개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Fleshcatcher.png" rel="nofollow" title="파일:attachment/테라리아/도구/Fleshcatcher.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         고기잡이
        </strong>
        (Fleshcatcher)
        <span class="wiki-color" style="color:Gray">
         #2421
        </span>
        <br/>
        영혼을 낚는 자보다 높은 등급의 낚싯대. 22%의 낚시 효율을 지녔다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#크림테인" title="테라리아/재료">
         크림테인 주괴
        </a>
        8개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Fiberglass_Fishing_Pole.png" rel="nofollow" title="파일:attachment/테라리아/도구/Fiberglass_Fishing_Pole.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         유리섬유 낚싯대
        </strong>
        (Fiberglass Fishing Pole)
        <span class="wiki-color" style="color:Gray">
         #2292
        </span>
        <br/>
        살덩이포획꾼보다 높은 등급의 낚싯대. 27%의 낚시 효율을 지녔다.
        [linkx]
        
        의 넝쿨 상자에서 얻을 수 있다.
        [linkx]
        
        이 적용되지 않은 모바일에서는 정글 지하의 다채색 벽돌로 이루어진 제단의 상자에서 얻을 수 있다.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         기계공의 낚싯대
        </strong>
        (Mechanic's Rod)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #2295
        </span>
        <br/>
        유리섬유 낚싯대보다 높은 등급의 낚싯대. 30%의 낚시 효율을 지녔다.
        [ahref]
        
        에서
        [ahref]
        
        이 거주하고 있으면서
        [linkx]
        
        이 그믐일 때
        [linkx]
        
        에게 금화 20닢을 주고 살 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         [ahref]
         
         의 낚싯대
        </strong>
        (Sitting Duck's Fishing Pole)
        <span class="wiki-color" style="color:Gray">
         #2296
        </span>
        <br/>
        기계공의 낚싯대보다 높은 등급의 낚싯대. 40%의 낚시 효율을 지녔다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#행상인" title="테라리아/NPC">
         행상인
        </a>
        에게 금화 35닢을 주고 살 수 있다. 하드모드 이전에 얻을 수 있는 낚싯대이면서 핫라인 낚싯대 다음으로 가장 높다.
        <br/>
        <br/>
        [ahref]
        
        <a id="핫라인 낚싯대">
        </a>
        <strong>
         핫라인 낚싯대
        </strong>
        (Hotline Fishing Hook)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:Gray">
         #2422
        </span>
        <br/>
        [linkx]
        
        다음으로 가장 높은 등급의 낚싯대. 45%의 낚시 효율을 지녔다.
        [ahref]
        
        의 퀘스트를 25번 완수한 이후
        [linkx]
        
        이후 세계에서 임무 완수 시 1% 확률로 습득 가능하다. 낚싯대 자체의 특성으로
        [ahref]
        
        에서만 사는 물고기를 낚을 수 있도록 해준다. 확률이 낮아 황금 낚싯대보다 더욱 늦은 시기에 얻는다.
       </div>
       <div class="wiki-indent">
        <div class="wiki-paragraph">
        </div>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        에서 낚을 수 있는 물고기는 총 세 종류인데 이 중
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#화염지느러미 잉어" title="테라리아/재료">
         화염지느러미 잉어
        </a>
        ,
        [ahref]
        
        는
        [ahref]
        
        의 재료로만 쓰인다. 화염고리 포션 자체는 지옥의 그림자 상자에서도 얻을 수 있고
        [ahref]
        
        사냥 등 특수한 용도 외에는 실질적인 쓸모가 거의 없어 필요성이 떨어진다.
        [linkx]
        
        는 창 계열의 무기인데 공격력이 준수하고 치명타율 24%이라는 막강한 능력치를 가지지만 그걸 낚아올릴 수 있는 핫라인 낚싯대가 해당 무기를 쓰기 적당한 시기를 아득히 넘겨서 발견될 정도로 극악한 확률을 자랑하기에 능력치가 뒤지지 않으면서도 활용성은 더 넓은
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AC%B4%EA%B8%B0#사이코 칼" title="테라리아/무기">
         사이코 칼
        </a>
        이나
        [linkx]
        
        등을 사용하는 것이 좋다.
        <br/>
        <br/>
        [ahref]
        
        <a id="황금 낚싯대">
        </a>
        <strong>
         황금 낚싯대
        </strong>
        (Golden Fishing Rod)
        <span class="wiki-color" style="color:Gray">
         #2294
        </span>
        <br/>
        가장 높은 등급의 낚싯대. 50%의 낚시 효율을 지녔다.
        [ahref]
        
        의 퀘스트를 30번(
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3" title="테라리아/버전">
         1.3
        </a>
        이전은 50번) 완수하거나 75번 완수한 이후 0.4% 확률로 습득 가능하다. 30번 완수하면 무조건 지급되므로 보통 핫라인 낚싯대보다 황금 낚싯대를 가장 먼저 얻게 된다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        [ahref]
        
        과
        [ahref]
        
        ,
        [ahref]
        
        에 페인트를 칠하고 지우는 도구.
        [ahref]
        
        NPC에게 페인트 도구를 구매하여 사용할 수 있다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         페인트붓
        </strong>
        (Paintbrush)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#화가" title="테라리아/NPC">
         화가
        </a>
        에게 금화 1닢으로 구입. 페인트와 함께 사용하여 블록과 가구의 색을 변경한다.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [ahref]
          
          <a id="유령의 페인트붓">
          </a>
          <strong>
           유령의 페인트붓
          </strong>
          (Spectre Paintbrush)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          페인트붓의 업그레이드 버전으로, 범위가 3만큼 증가하였다.
          [linkx]
          
          에서
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#유령의 주괴" title="테라리아/재료">
           유령의 주괴
          </a>
          8개로 제작한다. 페인트와 함께 사용하여 블록의 색을 변경한다.
         </div>
        </div>
        <div class="wiki-paragraph">
        </div>
       </div>
       <div class="wiki-paragraph">
        [ahref]
        
        [ahref]
        
        <strong>
         페인트 롤러
        </strong>
        (Paint Roller)
        <br/>
        [ahref]
        
        에게 금화 1닢으로 구입. 페인트와 함께 사용하여 벽면의 색을 변경한다.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Spectre_Paint_Roller.png" rel="nofollow" title="파일:attachment/테라리아/도구/Spectre_Paint_Roller.png">
           <span class="wiki-image-align-normal">
            <span class="wiki-image-wrapper">
             <noscript>
             </noscript>
            </span>
           </span>
          </a>
          <a id="유령의 페인트 롤러">
          </a>
          <strong>
           유령의 페인트 롤러
          </strong>
          (Spectre Paint Roller)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          페인트 롤러의 업그레이드 버전으로, 범위가 3만큼 증가하였다.
          [ahref]
          
          에서
          [linkx]
          
          8개로 제작한다. 페인트와 함께 사용하여 벽면의 색을 변경한다.
         </div>
        </div>
        <div class="wiki-paragraph">
        </div>
       </div>
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Paint_Scraper.png" rel="nofollow" title="파일:attachment/테라리아/도구/Paint_Scraper.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         페인트 긁개
        </strong>
        (Paint Scraper)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#화가" title="테라리아/NPC">
         화가
        </a>
        에게 금화 1닢으로 구입. 페인트칠한 블록과 가구, 벽면을 지우는 데 사용한다.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Spectre_Paint_Scraper.png" rel="nofollow" title="파일:attachment/테라리아/도구/Spectre_Paint_Scraper.png">
           <span class="wiki-image-align-normal">
            <span class="wiki-image-wrapper">
             <noscript>
             </noscript>
            </span>
           </span>
          </a>
          [linkx]
          
          <strong>
           유령의 페인트 긁개
          </strong>
          (Spectre Paint Scraper)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          페인트 긁개의 업그레이드 버전으로, 범위가 3만큼 증가하였다.
          [ahref]
          
          에서
          [linkx]
          
          8개로 제작한다. 페인트칠한 블록과 벽면을 지우는 데 사용한다.
         </div>
        </div>
        <div class="wiki-paragraph">
        </div>
       </div>
       <div class="wiki-paragraph">
        [linkx]
        
        [linkx]
        
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Yellow_Paint.png" rel="nofollow" title="파일:attachment/테라리아/도구/Yellow_Paint.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         페인트
        </strong>
        (Paint)
        <br/>
        페인트칠하는 데에 필요한 아이템으로,
        [ahref]
        
        에게 개당 동화 25닢으로 구입할 수 있다. 또한 버전
        [linkx]
        
        에서 새로 추가된 그림자 페인트(Shadow Paint)는 동화 50닢에,
        [linkx]
        
        페인트는 동화 75닢에 구입 가능.
        [ahref]
        
        에서 같은 페인트색 2개를 합치면 진한 페인트가 된다. 단 검정색, 회색, 흰색, 갈색, 그림자, 네거티브 제외.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [linkx]
          
          [ahref]
          
          <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Deep_Yellow_Paint.png" rel="nofollow" title="파일:attachment/테라리아/도구/Deep_Yellow_Paint.png">
           <span class="wiki-image-align-normal">
            <span class="wiki-image-wrapper">
             <noscript>
             </noscript>
            </span>
           </span>
          </a>
          [ahref]
          
          <strong>
           진한 페인트
          </strong>
          (Deep Paint)
          <br/>
          [linkx]
          
          에서 같은 페인트색 2개를 합쳐 만들 수 있는 페인트이다. 일반적인 페인트 색깔보다 진하다.
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
      </div>
      <h2 class="wiki-heading">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/PurificationPowder.png" rel="nofollow" title="파일:Terraria/PurificationPowder.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         정화 가루
        </strong>
        (Purification Powder)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#드라이어드" title="테라리아/NPC">
         드라이어드
        </a>
        에게 개당 동화 75닢으로 구입할 수 있다.
        [linkx]
        
        나
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#진홍지대" title="테라리아/지형">
         진홍지대
        </a>
        에 사용하여 일반 지형으로 되돌린다. 초반에 그림자 구체나 진홍색 심장를 캐기 위해 칠흑석이나 심홍석을 정화하는 용도로 쓰인다.
        [linkx]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#세무사" title="테라리아/NPC">
         세무사
        </a>
        를 입주시키는 데에도 필요하다.
        <br/>
        참고로 신성지대는 정화가 안된다
        <br/>
        <br/>
        [linkx]
        
        <a id="불쾌한 가루">
        </a>
        <strong>
         불쾌한 가루
        </strong>
        (Vile Powder)
        <br/>
        [ahref]
        
        에서
        [linkx]
        
        으로 제작하거나,
        [linkx]
        
        가 있는 세계에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#블러드 문" title="테라리아/이벤트">
         블러드 문
        </a>
        일 때
        [linkx]
        
        에게 개당 은화 1닢으로 구입할 수 있다.
        [ahref]
        
        에선
        [linkx]
        
        에 사용하여 일반 지형으로 되돌린다. 또한
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#세상을 먹는 자" title="테라리아/보스">
         세상을 먹는 자
        </a>
        의 소환 아이템 재료로 30개가 들어간다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         지독한 가루
        </strong>
        (Vicious Powder)
        <br/>
        [ahref]
        
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#지독한 버섯" title="테라리아/재료">
         지독한 버섯
        </a>
        으로 제작하거나,
        [linkx]
        
        가 있는 세계에서
        [ahref]
        
        일 때
        [linkx]
        
        에게 개당 은화 1닢으로 구입할 수 있다.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B2%84%EC%A0%84#1.3" title="테라리아/버전">
         1.3
        </a>
        버전 업데이트로 추가되었으며 성능과 용도는
        [linkx]
        
        와 동일.
        [linkx]
        
        버전 이후에는
        [linkx]
        
        의 소환 아이템 재료로 30개가 들어간다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         오염수
        </strong>
        (Unholy Water)
        <br/>
        지형에 던져서 오염수가 깨져나간 부분을
        [ahref]
        
        로 지배한다. 하드모드 이전에서도 구할 수 있으며, 손에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%86%8C%EB%AA%A8%ED%92%88#물병" title="테라리아/소모품">
         물병
        </a>
        10개,
        [linkx]
        
        1개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#오염된 씨앗" title="테라리아/블록">
         오염된 씨앗
        </a>
        1개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BloodWater.png" rel="nofollow" title="파일:Terraria/BloodWater.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="핏물">
        </a>
        <strong>
         핏물
        </strong>
        (Blood Water)
        <br/>
        지형에 던져서 핏물이 깨져나간 부분을
        [linkx]
        
        로 지배한다. 하드모드 이전에서도 구할 수 있으며, 손에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%86%8C%EB%AA%A8%ED%92%88#물병" title="테라리아/소모품">
         물병
        </a>
        10개,
        [linkx]
        
        1개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#진홍색 씨앗" title="테라리아/블록">
         진홍색 씨앗
        </a>
        1개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/HolyWater.png" rel="nofollow" title="파일:Terraria/HolyWater.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="성수">
        </a>
        <strong>
         성수
        </strong>
        (Holy Water)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        지형에 던져서 성수가 깨져나간 부분을
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#신성지대" title="테라리아/지형">
         신성지대
        </a>
        로 지배한다. 손에서
        [linkx]
        
        10개,
        [ahref]
        
        2개,
        [linkx]
        
        1개로 제작한다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/StaffofRegrowth.png" rel="nofollow" title="파일:Terraria/StaffofRegrowth.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <strong>
         재성장의 스태프
        </strong>
        (Staff of Regrowth)
        <br/>
        [ahref]
        
        참조.
        <br/>
        <br/>
        [ahref]
        
        <a id="클린태미네이터">
        </a>
        <strong>
         클린태미네이터
        </strong>
        (Clentaminator)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <br/>
        지형 변환의 최고 도구. 이름부터 정화를 의미하는 "Clean"과 오염 물질을 의미하는 "Contaminator"의 합성어이다.
        [ahref]
        
        에게 백금화 2닢으로 구입할 수 있다. 용액을 탄약으로 사용해서 지형을 바꾼다. 용액으로는 초록색, 보라색, 빨간색, 파란색, 감청색 총 5개가 있다.
        <br/>
        탄환으로 쓰이는 용액이 매우 비싸므로 쓰기 전에 미리 탄약 상자에서 보급을 받아두는 것이 좋다. 탄약 회수 옵션이 없다면 4번 뿌릴 때마다 금화가 하나씩 사라지는 꼴이다. 방어구 세트 효과 중 25% 확률로 탄약 소모를 무시하는 옵션까지 받으면 그럭저럭 저렴하게 쓸 수 있다. 탄약이 비싼 감이 있긴 하지만 가루로 깔짝대는 것과는 차원이 다른 지형 변환력을 자랑하기 때문에 본격적으로 정화 작업을 할 경우 가루질하는 것보다 오히려 싸게 먹힌다. 지형을 관통하는 매우 긴 사거리의 발사체가 지나가면서 발사체 반경 4타일 정도를 모두 바꿔버리며 사거리는
        <strong>
         [ahref]
         
        </strong>
        이다. 한 번찍 발사하는 것으로 가루 수십 개 분량의 정화가 가능하니 그야말로 정화/지형 변환 작업의 필수품. 또한 발사체가 지형을 관통하므로 지형 정찰도 덤으로 된다. 하지만 광원효과는 없어서 지형이 어떤지는 모른다
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [linkx]
          
          <a id="초록색 용액">
          </a>
          <strong>
           초록색 용액
          </strong>
          (Green Solution)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          [ahref]
          
          ,
          [linkx]
          
          ,
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#신성지대" title="테라리아/지형">
           신성지대
          </a>
          에 사용하면 지배당하기 이전 지형으로 돌아간다. 그리고
          [linkx]
          
          을
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#정글" title="테라리아/지형">
           정글
          </a>
          로 바꾼다. 다른 용액을 팔지 않을 때
          [linkx]
          
          에게 은화 25닢으로 구입할 수 있다.
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [linkx]
          
          [ahref]
          
          <strong>
           보라색 용액
          </strong>
          (Purple Solution)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          지형을
          [ahref]
          
          로 바꾼다. 오염지대가 있는 세계에서
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#블러드 문" title="테라리아/이벤트">
           블러드 문
          </a>
          이나
          [linkx]
          
          일 때
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#스팀펑커" title="테라리아/NPC">
           스팀펑커
          </a>
          에게 은화 25닢으로 구입할 수 있다.
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [linkx]
          
          [linkx]
          
          <strong>
           빨간색 용액
          </strong>
          (Red Solution)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          지형을
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#진홍지대" title="테라리아/지형">
           진홍지대
          </a>
          로 바꾼다. 진홍지대가 있는 세계에서
          [linkx]
          
          이나
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#일식" title="테라리아/이벤트">
           일식
          </a>
          일 때
          [linkx]
          
          에게 은화 25닢으로 구입할 수 있다.
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/BlueSolution.png" rel="nofollow" title="파일:Terraria/BlueSolution.png">
           <span class="wiki-image-align-normal">
            <span class="wiki-image-wrapper">
             <noscript>
             </noscript>
            </span>
           </span>
          </a>
          <a id="파란색 용액">
          </a>
          <strong>
           파란색 용액
          </strong>
          (Blue Solution)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          지형을
          [ahref]
          
          로 바꾼다. 신성지대 내의 집에 거주하는
          [ahref]
          
          에게 은화 25닢으로 구입할 수 있다.
         </div>
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
       <div class="wiki-indent">
        <div class="wiki-indent">
         <div class="wiki-paragraph">
          [linkx]
          
          [linkx]
          
          <strong>
           짙은 파란색 용액
          </strong>
          (Dark Blue Solution)
          <span class="wiki-color" style="color:red">
           ⓗ
          </span>
          <br/>
          [ahref]
          
          을
          [ahref]
          
          으로 바꾼다.
          [ahref]
          
          에게 은화 25닢으로 구입할 수 있다. 정글에 막 뿌리다가
          <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#플랜테라" title="테라리아/보스">
           플랜테라
          </a>
          가 깨어나자마자 폭주 상태로 쫓아올 수 있으니 주의.
         </div>
        </div>
       </div>
      </div>
      <h2 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        [ahref]
        
        [linkx]
        
        <strong>
         잠자리채
        </strong>
        (Bug Net)
        <span class="wiki-color" style="color:gray">
         #1991
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#상인" title="테라리아/NPC">
         상인
        </a>
        에게 은화 25닢으로 구입할 수 있는 아이템으로
        [linkx]
        
        들을 직접 잡을 수 있다. 잡은 생물은 인벤토리에 아이템화되며,
        [linkx]
        
        에서
        [linkx]
        
        16개로 제작하는
        [linkx]
        
        과 조합한 뒤 아무 데나 설치해서 디스플레이로 전시할 수 있다.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-paragraph">
         [ahref]
         
         [ahref]
         
         <strong>
          황금 잠자리채
         </strong>
         (Golden Bug Net)
         <span class="wiki-color" style="color:gray">
          #3183
         </span>
         <br/>
         [ahref]
         
         의 퀘스트를 클리어할 시 1% 확률로 얻을 수 있는 아이템.
         [ahref]
         
         의 강화판으로, 휘두르는 속도가 빨라지고 크기가 커졌으며 풀을 벨 수 있다.
         <br/>
         [ahref]
         
        </div>
       </div>
       <div class="wiki-paragraph">
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         빈 양동이
        </strong>
        (Empty Bucket)
        <span class="wiki-color" style="color:gray">
         #205
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EA%B0%80%EA%B5%AC#모루" title="테라리아/가구">
         모루
        </a>
        에서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#철" title="테라리아/재료">
         철괴
        </a>
        또는
        [linkx]
        
        3개로 제작하는 아이템.
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#물" title="테라리아/블록">
         물
        </a>
        ,
        [linkx]
        
        ,
        [ahref]
        
        을 각각 담을 수 있다. 사용 방법은 양동이를 들고 근처에 있는 액체에 좌클릭을 하면 되고, 뿌릴 때도 양동이를 들고 좌클릭을 하면 된다. 장비 슬롯의 헬멧 칸에 장착할 수도 있다. 이때는 방어력 1.
        <br/>
        테라리아 초창기부터 내려온 유서 깊은 꼼수가 하나 있는데, 그것은 바로 물을 뿌리고 다시 재빠르게 담아서 증식하는 것이다. 이렇게 함으로서 물이나 용암, 꿀을 복제할 수 있어서 약간의 노가다를 하면 거의 무한정으로 생산이 가능하다.
        <br/>
       </div>
       <div class="wiki-indent">
        <div class="wiki-paragraph">
         [ahref]
         
         [ahref]
         
         <strong>
          무한의 물 양동이
         </strong>
         (Bottomless Water Bucket)
         <span class="wiki-color" style="color:red">
          ⓗ
         </span>
         <span class="wiki-color" style="color:gray">
          #3031
         </span>
         <br/>
         <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#낚시꾼" title="테라리아/NPC">
          낚시꾼
         </a>
         의 퀘스트를 10번 완수한 이후
         [linkx]
         
         에서 클리어할 시 1% 확률로 얻을 수 있는 아이템. 물 양동이의 무한 버전이며 무한정으로
         [linkx]
         
         을 뿌릴 수 있다. 이것만 있으면 번거롭게 그냥 양동이로 조금씩 증식시킬 일이 없어진다. 범위 2칸 증가 옵션이 달려있다.
        </div>
       </div>
       <div class="wiki-paragraph">
       </div>
       <div class="wiki-indent">
        <div class="wiki-paragraph">
         <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SuperAbsorbantSponge.png" rel="nofollow" title="파일:Terraria/SuperAbsorbantSponge.png">
          <span class="wiki-image-align-normal">
           <span class="wiki-image-wrapper">
            <noscript>
            </noscript>
           </span>
          </span>
         </a>
         [linkx]
         
         <strong>
          초강력 흡수성 스펀지
         </strong>
         (Super Absorbant Sponge)
         <span class="wiki-color" style="color:red">
          ⓗ
         </span>
         <span class="wiki-color" style="color:gray">
          #3032
         </span>
         <br/>
         [linkx]
         
         의 퀘스트를 10번 완수한 이후
         [ahref]
         
         에서 클리어할 시 1% 확률로 얻을 수 있는 아이템. 양동이와 정반대로 물을 무한정으로 흡수할 수 있는 아이템이다. 강이나 대량의 물을 치워야 할 때 쓰인다. 범위 2칸 증가 옵션이 달려있다.
        </div>
       </div>
       <div class="wiki-paragraph">
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         우산
        </strong>
        (Umbrella)
        <span class="wiki-color" style="color:gray">
         #946
        </span>
        <br/>
        지상의 나무 상자나 낚시로 얻을 수 있는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%86%8C%EB%AA%A8%ED%92%88#나무 크레이트" title="테라리아/소모품">
         나무 크레이트
        </a>
        에서 얻을 수 있는 아이템. 손에 들고 있으면 낙하 속도를 줄여주면서 낙하 피해를 없애 준다. 땅에 닿기 직전에 들면 낙하 피해를 무효화 할 수 있어서 초반에는 매우 도움이 되나,
        [ahref]
        
        을 가지고 있거나 하드모드에서 만들 수 있는
        [linkx]
        
        를 가지고 있으면 버려지는 아이템. 하드모드에서는 그냥 장난감에 불과하게 된다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:attachment/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%8F%84%EA%B5%AC/Breathing_Reed.png" rel="nofollow" title="파일:attachment/테라리아/도구/Breathing_Reed.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         호흡용 대롱
        </strong>
        (Breathing Reed)
        <span class="wiki-color" style="color:gray">
         #186
        </span>
        <br/>
        맵 끝의
        [ahref]
        
        나
        [linkx]
        
        등의 물속에서 발견되는 물 상자에서 얻을 수 있는 아이템. 손에 들고 있을 때 물속에서 숨을 쉴 수 있게 해준다. 대롱의 끝 부분이 공기 중으로 나와 있어야 하며, 대롱의 전체가 물속에 잠긴다면 숨을 쉬지는 못하지만 숨의 소모 시간을 50% 느리게 해준다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         비치볼
        </strong>
        (Beach Ball)
        <span class="wiki-color" style="color:gray">
         #859
        </span>
        <br/>
        맵 끝의
        [ahref]
        
        나
        [ahref]
        
        등의 물속에서 발견되는 물 상자에서 얻을 수 있는 아이템. 사용하면 커다란 비치볼을 소환한다.
        [linkx]
        
        이후로는
        [linkx]
        
        이 항시 판매한다. 별다른 특징이 없지만, 가지고 통통 튀기면서 놀 수 있다. 단순하게 말하면 그냥 장난감이라고 보면 된다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         물총
        </strong>
        (Water Gun)
        <span class="wiki-color" style="color:gray">
         #2272
        </span>
        <br/>
        [linkx]
        
        <a id="슬라임 총">
        </a>
        <strong>
         슬라임 총
        </strong>
        (Slime Gun)
        <span class="wiki-color" style="color:gray">
         #2160
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#행상인" title="테라리아/NPC">
         행상인
        </a>
        이 랜덤으로 판매하는 아이템으로, 금화 1.5닢을 주고 살 수 있다. 공격력이나 탄약 소모는 없고
        [ahref]
        
        나
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%AA%AC%EC%8A%A4%ED%84%B0" title="테라리아/몬스터">
         적
        </a>
        에게 뿌리면 물에 젖는다.
        <br/>
        슬라임 총은
        [ahref]
        
        버전에서 추가된 아이템으로,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#왕 슬라임" title="테라리아/보스">
         왕 슬라임
        </a>
        이 2/3 확률로 드롭한다. 효과는 자동 공격이 생긴 것 이외에 물총과 별다른 게 없다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         색종이 총
        </strong>
        (Confetti Gun)
        <span class="wiki-color" style="color:gray">
         #1000
        </span>
        <br/>
        [ahref]
        
        에게 은화 1닢으로 구입할 수 있는 아이템. 소모품으로
        [linkx]
        
        을 휘날린다. 테라리아의 1000번째 아이템.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         <a class="wiki-link-internal" href="/w/%EC%88%98%EB%A5%98%ED%83%84#s-3.2" title="수류탄">
          연막탄
         </a>
        </strong>
        (Smoke Bomb)
        <span class="wiki-color" style="color:gray">
         #1168
        </span>
        <br/>
        [linkx]
        
        에게 동화 20닢으로 구입할 수 있는 아이템. 소모품으로 투척한 장소에 오랜 시간 동안 연막을 피워서 시야를 가린다. 이때 피해량은 없으며, 주로
        [linkx]
        
        의 PvP에서 사용한다.
        <br/>
        <br/>
        [linkx]
        
        [linkx]
        
        <strong>
         방울 막대
        </strong>
        (Bubble Wand)
        <span class="wiki-color" style="color:gray">
         #1450
        </span>
        <br/>
        [linkx]
        
        에게 금화 5닢으로 구입할 수 있는 아이템. 비눗방울을 날린다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Binoculars.png" rel="nofollow" title="파일:Terraria/Binoculars.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [ahref]
        
        <strong>
         쌍안경
        </strong>
        (Binoculars)
        <span class="wiki-color" style="color:gray">
         #1299
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4#크툴루의 눈" title="테라리아/보스">
         크툴루의 눈
        </a>
        이 2.5% 확률로 드롭하는 아이템. 마우스로 화면을 움직여 약간 더 멀리 볼 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [linkx]
        
        <strong>
         돈 여물통
        </strong>
        (Money Trough)
        <span class="wiki-color" style="color:gray">
         #3213
        </span>
        <br/>
        [ahref]
        
        <br/>
        [ahref]
        
        의
        [ahref]
        
        와
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9D%B4%EB%B2%A4%ED%8A%B8#드리플러" title="테라리아/이벤트">
         드리플러
        </a>
        가 0.5% 확률로 드롭하는 아이템. 휘두르면 위처럼 생긴 날아다니는 돼지 저금통을 소환한다. 날아다니는 돼지 저금통은 소환된 위치에 고정되며,
        [linkx]
        
        아이템과 동일한 기능을 가진다. 일반 돼지 저금통과 달리
        [linkx]
        
        이 없어도 사용 가능하고
        [ahref]
        
        처럼 회수할 필요도 없어서 매우 편리하다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/UnicornonaStick.png" rel="nofollow" title="파일:Terraria/UnicornonaStick.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        [linkx]
        
        <strong>
         유니콘 꼬챙이
        </strong>
        (Unicorn on a Stick)
        <span class="wiki-color" style="color:red">
         ⓗ
        </span>
        <span class="wiki-color" style="color:gray">
         #856
        </span>
        <br/>
        <em>
         ‘Having a Wonderful Time!’ (멋진 시간 보내세요!)
        </em>
        <br/>
        [ahref]
        
        의 유니콘이 1% 확률로 드롭하는 아이템. 숫자 키로 선택하거나 마우스로 들 경우 이걸 들면서 장난감처럼 가지고 논다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        특정 블록을 설치하거나 움직이는 데 필요하다.
        <br/>
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         흙 막대
        </strong>
        (Dirt Rod)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/NPC#드라이어드" title="테라리아/NPC">
         드라이어드
        </a>
        에게 금화 5닢으로 구입할 수 있는 아이템으로, 이걸 들고
        [ahref]
        
        에다가 클릭을 하면 흙을 마우스로 옮길 수 있다. 한 마디로
        <a class="wiki-link-internal" href="/w/%EC%97%BC%EB%8F%99%EB%A0%A5" title="염동력">
         염동력
        </a>
        기능이 붙은
        <a class="wiki-link-internal" href="/w/%EC%82%BD" title="삽">
         삽
        </a>
        . 쓸모가 없어서 거의 사지 않는 경우가 대부분이지만, 급할 때 만드는 배리어 정도로는 쓸 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         생나무 완드
        </strong>
        (Living Wood Wand)
        <br/>
        거대 나무 밑에 있는 방 안에 있는 상자 안에서 얻을 수 있다.
        [linkx]
        
        를 써서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#생나무" title="테라리아/블록">
         생나무
        </a>
        를 설치할 수 있게 해준다. 단순히 말해서 장식용 아이템.
        <br/>
        <br/>
        [linkx]
        
        [ahref]
        
        <strong>
         잎사귀 완드
        </strong>
        (Leaf Wand)
        <br/>
        거대 나무 밑에 있는 방 안에 있는 상자 안에서 얻을 수 있다.
        [ahref]
        
        를 써서 나뭇잎을 설치할 수 있게 해준다. 나중에 거대 나무를 건축 용도로 직접 만들 생각이면
        [ahref]
        
        와 함께 필요한 아이템이기도 하다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:ChiZACM.png" rel="nofollow" title="파일:ChiZACM.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="생 마호가니 완드">
        </a>
        <strong>
         생 마호가니 완드
        </strong>
        (Living Mahogany Wand)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#정글 지하" title="테라리아/지형">
         정글 지하
        </a>
        의 거대 나무 안에 있는 상자 안에서 얻을 수 있다.
        [ahref]
        
        를 써서
        [ahref]
        
        를 설치할 수 있게 해준다.
        <br/>
        <br/>
        [ahref]
        
        <a id="마호가니 잎사귀 완드">
        </a>
        <strong>
         마호가니 잎사귀 완드
        </strong>
        (Rich Mahogany Leaf Wand)
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%A7%80%ED%98%95#정글 지하" title="테라리아/지형">
         정글 지하
        </a>
        의 거대 나무 안에 있는 상자 안에서 얻을 수 있다.
        [linkx]
        
        를 써서
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B8%94%EB%A1%9D#마호가니 나뭇잎" title="테라리아/블록">
         마호가니 나뭇잎
        </a>
        을 설치할 수 있게 해준다.
        <br/>
        <br/>
        [linkx]
        
        <a id="벌집 완드">
        </a>
        <strong>
         벌집 완드
        </strong>
        (Hive Wand)
        <br/>
        [linkx]
        
        에서 발견되는 벌집의
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EB%B3%B4%EC%8A%A4" title="테라리아/보스">
         보스
        </a>
        인
        [ahref]
        
        을 잡으면 1/3의 확률로 얻을 수 있다.
        [linkx]
        
        을 설치할 수 있게 해준다. 벌집을 설치했다가 제거하는 식으로 꿀을 어느 정도 생산할 수 있다.
        <br/>
        <br/>
        [ahref]
        
        [ahref]
        
        <strong>
         뼈다귀 완드
        </strong>
        (Bone Wand)
        <br/>
        [linkx]
        
        들에게서 0.4%의 확률로 얻을 수 있다.
        [linkx]
        
        를 써서
        [ahref]
        
        을 설치할 수 있으며, 설치한 뼈다귀 블록은 다시 뼈다귀로 되돌릴 수 없다.
        <br/>
       </div>
      </div>
      <h3 class="wiki-heading">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        [linkx]
        
        <a id="석탄">
        </a>
        <strong>
         석탄
        </strong>
        (Coal)
        <span class="wiki-color" style="color:gray">
         #1922
        </span>
        <br/>
        <em>
         ‘You've been naughty this year.’ (‘올해 계속 말을 안 들었네.’)
        </em>
        <br/>
        크리스마스 휴일 기간에 몬스터를 잡으면 나오는
        [linkx]
        
        에서 3.33% 확률로 나온다. 재료로도 사용되지 않고, NPC에게 팔아서 돈을 얻을 수도 없어서 무용한 아이템이다.
        <br/>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/OldShoe.png" rel="nofollow" title="파일:Terraria/OldShoe.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <a id="쓰레기">
        </a>
        <strong>
         낡은 신발 한 짝
        </strong>
        (Old Shoe)
        <span class="wiki-color" style="color:gray">
         #2337
        </span>
        <br/>
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/Seaweed(Junk).png" rel="nofollow" title="파일:Terraria/Seaweed(Junk).png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
        <strong>
         해초
        </strong>
        (Seaweed)
        <span class="wiki-color" style="color:gray">
         #2338
        </span>
        <br/>
        [linkx]
        
        <strong>
         깡통
        </strong>
        (Tin Can)
        <span class="wiki-color" style="color:gray">
         #2339
        </span>
        <br/>
        낚시를 할 때 건질 수 있는 쓰레기들. 낚시 효율이 너무 낮다면 걸릴 수 있다. 재료로도 사용되지 않고, NPC에게 팔아서 돈을 얻을 수도 없어서 무용한 아이템들이다.
        <br/>
        펫 아이템인
        [ahref]
        
        와 혼동하지 않도록 주의할 것.
        <br/>
        <br/>
       </div>
      </div>
      <div class="wiki-macro-footnote">
       <span class="footnote-list">
        <span class="target" id="fn-1">
        </span>
        [ahref]
        
        Pwn은
        <a class="wiki-link-internal" href="/w/%EB%A6%AC%ED%8A%B8" title="리트">
         인터넷 용어
        </a>
        로 '~에 완승을 거두다'라는 뜻.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-2">
        </span>
        [linkx]
        
        진짜로 팔라듐, 오리칼쿰, 티타늄 도구를 포함시키는 조합법까지 넣는다고 한다면 광물이 기존 광물과 대체 광물이 서로 섞여서 나올 경우도 있으므로 이를 가정한다면 드랙스 하나 만드는 데에 조합의 경우의 수가 8가지로 늘어난다. 물론 재료 한 가지에 동급의 드릴 둘을 대입하고 그것을 '아무 드릴'로 넣는다면 간단하게 구성될 수 있다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-3">
        </span>
        [ahref]
        
        판매 가격이 겨우 금화 2닢이라서 수식어를 부담없이 붙일 수 있다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-4">
        </span>
        <a href="4">
         [4]
        </a>
        픽소우는 곡괭이 210%, 도끼 125%. 레이저 드릴은 곡괭이 230%, 도끼 150%
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-5">
        </span>
        [linkx]
        
        [linkx]
        
        의 모티브가 바로 식인 식물과 이 밴드이며, 총괄 개발자 Andrew 'Relogic' Redigit의 여자친구가 좋아하는 밴드라고 한다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-6">
        </span>
        [ahref]
        
        [ahref]
        
        내에서는 왼쪽 버튼이 블루 포탈이며 오른쪽 버튼이 오렌지 포탈이다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-7">
        </span>
        [ahref]
        
        또한 여러 가지 요인을 이용하여 속력을
        <a class="wiki-link-external" href="/TogW_M9e00Q" rel="noopener" target="_blank" title="https://youtu.be/TogW_M9e00Q">
         3,000mph 이상으로 끌어올리는 것
        </a>
        이 가능하다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-8">
        </span>
        [ahref]
        
        만약 이 공격에 의해 죽었을 경우 '(플레이어 이름)이 찔려 죽었습니다.' 라고 뜬다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-9">
        </span>
        [ahref]
        
        모바일에서는
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#요정의 가루" title="테라리아/재료">
         요정의 가루
        </a>
        80개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#빛의 영혼" title="테라리아/재료">
         빛의 영혼
        </a>
        12개,
        <a class="wiki-link-internal" href="/w/%ED%85%8C%EB%9D%BC%EB%A6%AC%EC%95%84/%EC%9E%AC%EB%A3%8C#시야의 영혼" title="테라리아/재료">
         시야의 영혼
        </a>
        20개를 요구한다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-10">
        </span>
        [ahref]
        
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Terraria/SlimySaddle(Example).gif" rel="nofollow" title="파일:Terraria/SlimySaddle(Example).gif">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-11">
        </span>
        <a href="1">
         [11]
        </a>
        몬스터를 밟고 튀어오르는 순간에 미묘한 무적 판정이 있다. 이를 이용해서
        [ahref]
        
        을 아주 쉽게 물리치는 방법이 있었으나 막혔다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-12">
        </span>
        [ahref]
        
        모바일은 낚시효율 100%기준 1%이다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-13">
        </span>
        [linkx]
        
        [linkx]
        
        <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:Mount_DrillFront.png" rel="nofollow" title="파일:Mount_DrillFront.png">
         <span class="wiki-image-align-normal">
          <span class="wiki-image-wrapper">
           <noscript>
           </noscript>
          </span>
         </span>
        </a>
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-14">
        </span>
        [linkx]
        
        1.3 버전 이전에는 인벤토리 내에서 가장 위쪽 좌측에 있는 갈고리가 우선적으로 사용된다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-15">
        </span>
        <a href="5">
         [15]
        </a>
        곡괭이 같은 것은 적용되지 않는 듯하다. 소환 무기의 경우 아이템을 버린 방향으로
        [ahref]
        
        타켓팅하는 마법 무기처럼 쓸 수도 있다.
       </span>
      </div>
     </div>
     <iframe frameborder="0" height="100" id="ad-powerlink-pc" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink.html?v=18" width="100%">
     </iframe>
     <iframe frameborder="0" height="175" id="ad-powerlink-mobile" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink_mobile.html?v=18" width="100%">
     </iframe>
    </div>
    <footer>
     <p>
      <br/>
      이 저작물은
      [ahref]
      
      에 따라 이용할 수 있습니다. (단, 라이선스가 명시된 일부 문서 및 삽화 제외)
      <br/>
      기여하신 문서의 저작권은 각 기여자에게 있으며, 각 기여자는 기여하신 부분의 저작권을 갖습니다.
      <br/>
      <br/>
      나무위키는 백과사전이 아니며 검증되지 않았거나, 편향적이거나, 잘못된 서술이 있을 수 있습니다.
      <br/>
      나무위키는 위키위키입니다. 여러분이 직접 문서를 고칠 수 있으며, 다른 사람의 의견을 원할 경우 직접 토론을 발제할 수 있습니다.
     </p>
    </footer>
   </article>
  </div>
  <div class="footer-wrapper">
   <div class="live-list-card mobile-live-bottom-list" data-count="5" data-slug="headline">
    <h6>
     헤드라인 최신글
    </h6>
    <div class="link-table">
     <a>
      <span class="time">
       00:00
      </span>
      갱신중...
     </a>
    </div>
    [ahref]
    
   </div>
   <div class="ad-bottom">
    <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="auto" data-ad-slot="2145080446" data-full-width-responsive="true" style="display:block">
    </ins>
   </div>
   <footer class="footer">
    <p>
     namu.wiki
     <span class="sep">
     </span>
     [linkx]
     
     <span class="sep">
     </span>
     <a href="/Policy">
      Términos de uso
     </a>
     <span class="sep">
     </span>
     Operado por umanle S.R.L.
     <span class="sep">
     </span>
     Hecho con <3 en Asunción, República del Paraguay
    </p>
    <p>
     Su zona horaria es
     <span id="timezone">
     </span>
     <span class="sep">
     </span>
     Impulsado por
     <i>
      the seed engine
     </i>
    </p>
   </footer>
  </div>
  <ul class="nav-control">
   <li>
    [linkx]
    
   </li>
   <li>
    <a href="m" id="goBottomBtn">
     <span class="ion-arrow-down-b">
     </span>
    </a>
   </li>
  </ul>
  <div class="modal fade" id="shortcutHelpModal">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
       <span class="sr-only">
        Close
       </span>
      </button>
      <h5 class="modal-title">
       단축키 도움말
      </h5>
     </div>
     <div class="modal-body">
      <dl class="dl-horizontal">
       <dt class="col-sm-3">
        <b>
         F
        </b>
        ront Gate
       </dt>
       <dd class="col-sm-9">
        대문
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         C
        </b>
        hanges
       </dt>
       <dd class="col-sm-9">
        최근 변경
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         D
        </b>
        iscuss
       </dt>
       <dd class="col-sm-9">
        최근 토론
       </dd>
       <dt class="col-sm-3">
        R
        <b>
         A
        </b>
        ndom
       </dt>
       <dd class="col-sm-9">
        랜덤 문서
       </dd>
       <dt class="col-sm-3">
        <b>
         Shift
        </b>
        +
        <b>
         S
        </b>
        earch
       </dt>
       <dd class="col-sm-9">
        검색
       </dd>
       <dt class="col-sm-3">
        <b>
         E
        </b>
        dit
       </dt>
       <dd class="col-sm-9">
        문서 편집
       </dd>
       <dt class="col-sm-3">
        <b>
         ?
        </b>
       </dt>
       <dd class="col-sm-9">
        단축키 도움말
       </dd>
      </dl>
     </div>
    </div>
   </div>
  </div>
  <div class="modal fade" data-backdrop="false" id="searchModal">
   <div class="modal-dialog modal-sm">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
       <span class="sr-only">
        Close
       </span>
      </button>
      <h6 class="modal-title">
       검색
      </h6>
     </div>
     <div class="modal-body">
      <div class="input-group search-box">
       <span class="input-group-btn">
        <button class="btn btn-secondary" id="searchBtn" style="margin-left: 0;" type="button">
         <span class="icon ion-search">
         </span>
        </button>
        <button class="btn btn-secondary" id="goBtn" type="button">
         <span class="icon ion-arrow-right-c">
         </span>
        </button>
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="modal" id="footnoteModal">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <h5 class="modal-title">
       각주:
      </h5>
     </div>
     <div class="modal-body">
     </div>
     <div class="modal-footer">
      <button class="btn btn-block" data-dismiss="modal" type="button">
       닫기
      </button>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0518
  </b>
 </body>
</html>
|<---