--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width" name="viewport">
   <noscript>
   </noscript>
   <meta content="telephone=no" name="format-detection"/>
   <meta data-site_no="6001" id="app_info" title="검색결과"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
   <meta content="http://static.ssgcdn.com/ui/common/img/sns/em.png" property="og:image"/>
   <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
   <meta content="website" property="og:type"/>
   <meta content="summary" name="twitter:card">
    <title>
     [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </title>
    <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
    <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="title"/>
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
    <meta content="riDJ-IX46HanskLx25pj6-y8ANf2qTgZNfv_UJvkHq8" name="google-site-verification"/>
   </meta>
  </meta>
 </head>
 <body class="body_em body_etc">
  <a class="skip_navi" href="r">
   본문 바로가기
  </a>
  <div class="cmnotipop_wrap" style="display: none">
  </div>
  <div class="reveal-left-wrap reveal-right-wrap mcom_wrap em " id="m_wrap">
   <header class="reveal-left-header reveal-right-header react-area" id="header">
    <div id="m_header_banner" style="display:none">
    </div>
    <div class="mcom_gnbwrap" id="m_gnb">
     <div class="mcom_gnb2 mcom_gnb2_v2">
      <div class="cm_logo v2">
       <div class="cm_logo_home">
        <h1>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
        <button class="cm_logo_toggle sr_toggle" type="button">
         <span class="cm_logo_toggle_ico">
          <span class="sr_off">
           <span class="blind">
            몰이동 목록 펼치기
           </span>
          </span>
          <span class="sr_on">
           <span class="blind">
            몰이동 목록 접기
           </span>
          </span>
         </span>
        </button>
       </div>
       <div class="cm_logo_dim">
       </div>
       <div class="cm_logo_malllist">
        <ul>
         <li>
          <a class="cm_logo_mallbtn clickable" data-react-tarea="헤더|홈_몰이동|홈_몰이동|이마트몰" href="/">
           <span class="cm_logo_homelogo em">
            <span class="blind">
             이마트몰, 당신과 가장 가까운 이마트
            </span>
           </span>
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="mcom_gnb_lft">
       <button class="mcom_gnb_btn clickable" data-react-tarea="헤더|메뉴" id="_btn_menu">
        <span class="b_btn b_category">
         메뉴
        </span>
       </button>
      </div>
      <div class="mcom_gnb_rgt">
       [ahref]
       
      </div>
     </div>
     <div class="cgsearch">
      <div class="cgsearch_inpbox_wrap">
       <fieldset>
        <form id="m_sch_bottom_form" onsubmit="return false;">
         <div class="cgsearch_inpbox">
          <div class="cgsearch_inpbox_selbox">
           <button class="cgsearch_inpbox_mselbox" type="button">
            이마트몰
           </button>
           <ul class="cgsearch_inpbox_mlist">
            <li class="cgsearch_ssg ">
             <button title="6005" type="button">
              통합검색
             </button>
            </li>
            <li class="cgsearch_ssgmall ">
             <button title="6004" type="button">
              신세계몰
             </button>
            </li>
            <li class="cgsearch_ssgb ">
             <button title="6009" type="button">
              신세계백화점
             </button>
            </li>
            <li class="cgsearch_emartmall active">
             <button title="6001" type="button">
              이마트몰
             </button>
            </li>
            <li class="cgsearch_traders ">
             <button title="6002" type="button">
              트레이더스
             </button>
            </li>
            <li class="cgsearch_mnmorning ">
             <button title="7009" type="button">
              새벽배송
             </button>
            </li>
            <li class="cgsearch_boots ">
             <button title="6003" type="button">
              Boots
             </button>
            </li>
            <li class="cgsearch_ssgtv ">
             <button title="6200" type="button">
              신세계TV쇼핑
             </button>
            </li>
            <li class="cgsearch_sivil ">
             <button title="6300" type="button">
              SI빌리지
             </button>
            </li>
            <li class="cgsearch_outlet ">
             <button title="7008" type="button">
              프리미엄아울렛
             </button>
            </li>
            <li class="cgsearch_starfield ">
             <button title="6400" type="button">
              스타필드
             </button>
            </li>
            <li class="cgsearch_howdy ">
             <button title="6100" type="button">
              하우디
             </button>
            </li>
           </ul>
          </div>
          <div class="cgsearch_inpbox_sbox">
           <button class="cgsearch_inpbox_src" id="globalSearchButton" type="button">
            <span class="blind">
             검색
            </span>
           </button>
          </div>
         </div>
        </form>
       </fieldset>
      </div>
      <div class="cgsearch_cover" id="m_sch_top">
       <div class="cgsearch_inpbox_wrap">
        <div class="cgsearch_inpbox">
         <div class="cgsearch_inpbox_back">
          <button type="button">
           <span class="blind">
            이전으로
           </span>
          </button>
         </div>
         <div class="cgsearch_inpbox_selbox">
          <button class="cgsearch_inpbox_mselbox" type="button">
           이마트몰
          </button>
          <ul class="cgsearch_inpbox_mlist">
           <li class="cgsearch_ssg ">
            <button title="6005" type="button">
             통합검색
            </button>
           </li>
           <li class="cgsearch_ssgmall ">
            <button title="6004" type="button">
             신세계몰
            </button>
           </li>
           <li class="cgsearch_ssgb ">
            <button title="6009" type="button">
             신세계백화점
            </button>
           </li>
           <li class="cgsearch_emartmall active">
            <button title="6001" type="button">
             이마트몰
            </button>
           </li>
           <li class="cgsearch_traders ">
            <button title="6002" type="button">
             트레이더스
            </button>
           </li>
           <li class="cgsearch_mnmorning ">
            <button title="7009" type="button">
             새벽배송
            </button>
           </li>
           <li class="cgsearch_boots ">
            <button title="6003" type="button">
             Boots
            </button>
           </li>
           <li class="cgsearch_ssgtv ">
            <button title="6200" type="button">
             신세계TV쇼핑
            </button>
           </li>
           <li class="cgsearch_sivil ">
            <button title="6300" type="button">
             SI빌리지
            </button>
           </li>
           <li class="cgsearch_outlet ">
            <button title="7008" type="button">
             프리미엄아울렛
            </button>
           </li>
           <li class="cgsearch_starfield ">
            <button title="6400" type="button">
             스타필드
            </button>
           </li>
           <li class="cgsearch_howdy ">
            <button title="6100" type="button">
             하우디
            </button>
           </li>
          </ul>
         </div>
         <div class="cgsearch_inpbox_sbox">
         </div>
        </div>
       </div>
       <div class="cgsearch_cover_autocomp" id="m_srh2">
        <div class="cgsearch_cover_short" id="ac_short_list">
        </div>
        <div class="cgsearch_cover_recomm">
         <ul class="cgsearch_latest_keylst" id="ac_kwd_list">
         </ul>
        </div>
       </div>
       <div class="cgsearch_recomm_keyword" id="m_srh1">
        <div class="cgsearch_nav">
         <ul class="cgsearch_nav_lst" role="tablist">
          <li role="presentation">
           [ahref]
           
          </li>
          <li class="on" role="presentation">
           <a aria-selected="true" class="cgsearch_nav_link" href="#" role="tab">
            <span>
             최근
            </span>
           </a>
          </li>
          <li role="presentation">
           [linkx]
           
          </li>
         </ul>
        </div>
        <div class="cgsearch_tabp_container">
         <div class="cgsearch_tabp_pannel" role="tabpanel">
          <div class="cgsearch_often_search">
           <ul class="cgsearch_often_lst" id="frq_kwd_list">
           </ul>
           <button class="cgsearch_delete_all" data-value="frq" id="frq_kwd_alert_all_del" style="display:none;" type="button">
            검색어 전체삭제
           </button>
          </div>
          <div class="cgsearch_none_result" id="frq_kwd_alert_nolist" style="display:none;">
           <p>
            자주찾는 검색어가 없습니다.
           </p>
          </div>
          <div class="cgsearch_loginbox" id="frq_kwd_alert_nologin" style="display:none;">
           <p>
            로그인 후 확인하실 수 있습니다.
           </p>
           <button class="cgsearch_loginbox_login" id="login" onclick="mobileLogin('login')" type="button">
            로그인
           </button>
          </div>
         </div>
         <div class="cgsearch_tabp_pannel" role="tabpanel">
          <div class="cgsearch_none_result" id="mbr_kwd_alert_nolist" style="display:none;">
           <p>
            최근 검색어 내역이 없습니다.
           </p>
          </div>
          <div class="cgsearch_latest_keyword">
           <ul class="cgsearch_latest_keylst" id="mbr_kwd_list">
           </ul>
           <button class="cgsearch_delete_all" data-value="mbr" id="mbr_kwd_alert_all_del" style="display:none;" type="button">
            검색어 전체삭제
           </button>
          </div>
          <div class="cgsearch_recomm_tag" style="display:none;">
           <h3 class="cgsearch_recomm_title">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h3>
           <div class="cgsearch_recomm_container">
            <ul class="cgsearch_recomm_lst" id="nowHot_Tag_List">
            </ul>
           </div>
          </div>
         </div>
         <div class="cgsearch_tabp_pannel" role="tabpanel">
          <div class="cgsearch_btag_container" id="cornrTag1">
          </div>
          <div class="cgsearch_btag_container" id="cornrTag2">
          </div>
          <div class="cgsearch_rtime_btag">
           <h3 class="cgsearch_rtime_title">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
           <ol class="cgsearch_rtime_lst" id="rcmdTag">
           </ol>
           <div class="cgsearch_rtime_date" id="rcmdTagDate">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="mcom_tit_renew ">
     <h2 class="mcom_tit_txt">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <div class="mcom_tit_lft">
      [linkx]
      
     </div>
     <div class="mcom_tit_rgt">
      <div class="btn_cate btn_clip">
      </div>
     </div>
    </div>
   </header>
   <aside class="reveal-left-nav v2" id="leftlist">
    <div class="clnb" id="_clnb">
     <div class="iscroll">
      <header class="clnb_header" id="clnb_header_id">
       <div class="clnb_login" id="clnb_login_id">
        <div class="clnb_user">
         [linkx]
         
         [ahref]
         
        </div>
        <ul class="clnb_util">
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="clnb_delivery_info" id="clnb_delivery_info_id" style="display: none;">
       </div>
       <ul class="clnb_menu">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </header>
      <div class="clnb_newopen_info" id="clnb_newopen_info_id" style="display: none;">
      </div>
      <nav class="clnb_nav" id="_clnb_nav">
       <category-list :data="'//static.ssgcdn.com/common/ui/json/ctg/ctg_6001_mo.json'" :titled="true" @hide="hideItem" @show="showItem">
       </category-list>
      </nav>
      <div class="clnb_sec clnb_speical" id="lnb_special_shop">
      </div>
      <div class="clnb_sec clnb_help">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul>
        <li>
         <a href=";" onclick="appBroswer('http://m.ssg.com/customer/main.ssg?aplSiteNo=6001&amp;_mpop=new','stack'); return false;">
          <i class="clnb_ic clnb_ic_help">
          </i>
          <em>
           고객센터
          </em>
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="clnb_sec clnb_banner">
       <ul>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="clnb_sec clnb_download" id="lnb_recommend_app">
      </div>
      <div class="clnb_btm">
       <ul class="clnb_bta">
        <li id="lnb_loginBtn" style="display:none">
         [linkx]
         
        </li>
        <li id="lnb_logoutBtn" style="display:none">
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
   </aside>
   <aside class="reveal-right-nav v2" id="rightlist">
    <div class="cmhistory_wrap" id="_cmhistory_wrap">
     <div class="cmhistory_top">
      <div class="cmhistory_tit">
       <h1>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
       <button class="cmhistory_bt cmhistory_bt_edit" type="button">
        편집
        <i class="sp_cmhistory_ic cmhistory_ic_edit">
        </i>
       </button>
       <button class="cmhistory_bt cmhistory_bt_cancel" type="button">
        취소
        <i class="sp_cmhistory_ic cmhistory_ic_cancel">
        </i>
       </button>
      </div>
      <div class="cmhistory_ctrl">
       <ul class="cmhistory_sort">
        <li class="on" data-srch-div-cd="10">
         <button type="button">
          상품
         </button>
        </li>
        <li data-srch-div-cd="60">
         <button type="button">
          검색어
         </button>
        </li>
        <li data-srch-div-cd="20">
         <button type="button">
          카테고리
         </button>
        </li>
        <li data-srch-div-cd="50">
         <button type="button">
          이벤트
         </button>
        </li>
        <li data-srch-div-cd="30,32,35,36">
         <button type="button">
          기획전
         </button>
        </li>
        <li data-srch-div-cd="40">
         <button type="button">
          브랜드
         </button>
        </li>
        <li data-srch-div-cd="41">
         <button type="button">
          매장
         </button>
        </li>
       </ul>
       <ul class="cmhistory_delete">
        <li>
         <span class="cmhistory_bt">
          <button class="cmhistory_bt_seldel" onclick="historySsg.deleteHistoryMulti();" type="button">
           선택삭제
          </button>
         </span>
        </li>
        <li>
         <span class="cmhistory_bt">
          <button class="cmhistory_bt_alldel" onclick="historySsg.deleteHistoryAll();" type="button">
           전체삭제
          </button>
         </span>
        </li>
       </ul>
      </div>
     </div>
     <div class="cmhistory_ct">
      <div class="cmhistory_scroll" id="_cmhistory_scroll">
       <div class="iscroll">
        <ul class="cmhistory_lst">
        </ul>
       </div>
      </div>
      <div class="cmhistory_loading">
       <span class="cmhistory_ic_loading">
        <span class="blind">
         로딩중
        </span>
       </span>
      </div>
      <div class="cmhistory_nodata" style="display:none">
       <p>
        최근 본 쇼핑정보 없습니다.
       </p>
      </div>
     </div>
    </div>
   </aside>
   <div class="reveal-left-contents reveal-right-contents mcom_container" id="container">
    <div class="ly_change ">
     <div class="tit_change">
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      [linkx]
      
     </div>
     <div class="cont_change">
      <div class="mcom_scroll">
      </div>
     </div>
    </div>
    <div id="content">
     <div class="search_wrap" data-globalid="search">
      <div class="cm_sch_result">
       <div class="csr_relate_bx">
        <h2 class="csr_relate_txt">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <div class="csr_text_lst" data-areaid="srchwdrl">
         [linkx]
         
         [linkx]
         
         [ahref]
         
         [ahref]
         
         [ahref]
         
         [linkx]
         
        </div>
        [ahref]
        
       </div>
       <div class="mcom_ban" data-areaid="everbanr">
        <span class=" gate_unit" data-adidx="" data-adtgtid="" data-advertacctid="1004468254" data-advertbidid="1000268593" data-advertbilngtypecd="10" data-advertextensterydivcd="" data-advertkindcd="50" data-unittype="banr">
         [linkx]
         
        </span>
       </div>
      </div>
      <div class="m_scharea m_sortarea m_sortarea_lst v2">
       <div class="sch_search_options">
        <div class="sch_filter_view">
         <div class="m_ncatetblarea">
          <ul class="m_ncatetbl">
           <li class="view_td">
            <div class="posr">
             <a class="btn_t" href=")" id="_btn_view_type_toggle">
              <span class="sp_view ico_lst">
               리스트형
              </span>
             </a>
            </div>
           </li>
           <li class="rank_td">
            <div class="in">
             <a class="btn_t" href="#">
              추천순
              <span class="sp_view ico_arrow">
              </span>
             </a>
             <ul class="mn_layer">
              <li class="active">
               [ahref]
               
               <button class="btn_info" onclick="alert('상품의 판매량과 정확도 등을 점수화하여 정렬하며, 광고상품의 경우 별도 기준으로 상단에 정렬됩니다.');">
                <span class="blind">
                 추천순 설명 보기
                </span>
               </button>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </div>
           </li>
           <li class="sch_td">
            <div class="in">
             [ahref]
             
             <div class="m_ds_pos">
              <div class="m_schmid">
               <div class="detail_schwrap">
                <div class="detail_sch">
                 <span class="tit">
                  사이트
                 </span>
                 <div class="ds_cont">
                  <span class="m_sort_select">
                   <select id="lf_like1" title="사이트">
                    <option value="all">
                     전체
                    </option>
                    <option value="6001">
                     이마트
                    </option>
                    <option value="6002">
                     트레이더스
                    </option>
                    <option value="6200">
                     신세계TV쇼핑
                    </option>
                   </select>
                  </span>
                 </div>
                </div>
                <div class="detail_sch">
                 <span class="tit">
                  카테고리
                 </span>
                 <div class="ds_cont">
                  <span class="m_sort_select">
                   <select id="lf_like2" title="카테고리">
                    <option value="all">
                     전체
                    </option>
                    <option value="0006120000">
                     채소 (591)
                    </option>
                    <option value="0006590000">
                     문구/취미/도서/반려용품 (543)
                    </option>
                    <option value="6000023666">
                     과자/초콜릿/시리얼/빵 (110)
                    </option>
                    <option value="0006570000">
                     스포츠/레저/여행/자동차 (95)
                    </option>
                    <option value="6000025610">
                     유제품/냉장/냉동/간편식 (92)
                    </option>
                    <option value="0006140000">
                     정육/계란류 (84)
                    </option>
                    <option value="0006530000">
                     주방용품/일회용품 (65)
                    </option>
                    <option value="6000014059">
                     건강식품/친환경/유기농 (47)
                    </option>
                    <option value="0006580000">
                     컴퓨터/가전/디지털/렌탈 (38)
                    </option>
                    <option value="6000023665">
                     생수/음료/주류/커피/분유 (38)
                    </option>
                    <option value="6000061257">
                     베이커리/반찬/밀키트 (26)
                    </option>
                    <option value="6000023669">
                     라면/통조림/조미료/장류 (25)
                    </option>
                    <option value="0007000019">
                     문구/사무/완구/반려동물 (13)
                    </option>
                    <option value="6000069377">
                     견과/건해산물 (12)
                    </option>
                    <option value="6000071814">
                     채소 (10)
                    </option>
                    <option value="0007000011">
                     과일/채소/쌀/정육/수산 (8)
                    </option>
                    <option value="0006110000">
                     과일 (7)
                    </option>
                    <option value="6000071817">
                     친환경 (7)
                    </option>
                    <option value="6000071824">
                     반려용품 (7)
                    </option>
                    <option value="0007000013">
                     과자/빵/건강식품 (6)
                    </option>
                    <option value="6000071819">
                     국/반찬/간편식 (6)
                    </option>
                    <option value="6000071820">
                     생수/음료/가공/건강 (6)
                    </option>
                    <option value="0006540000">
                     가구/침구/홈인테리어 (5)
                    </option>
                    <option value="0006130000">
                     쌀/잡곡 (4)
                    </option>
                    <option value="6000071823">
                     베이비/키즈 (3)
                    </option>
                    <option value="6000071813">
                     과일/견과/쌀 (2)
                    </option>
                    <option value="6000013960">
                     잡화/슈즈/명품 (1)
                    </option>
                    <option value="0007000012">
                     라면/통조림/반찬/조미료 (1)
                    </option>
                    <option value="6000033377">
                     Health care (1)
                    </option>
                    <option value="6000071818">
                     베이커리/델리/유제품 (1)
                    </option>
                   </select>
                  </span>
                 </div>
                </div>
                <div class="detail_sch">
                 <span class="tit">
                  브랜드
                 </span>
                 <div class="ds_cont">
                  <span class="m_sort_select">
                   <select id="lf_like3" title="브랜드">
                    <option value="all">
                     전체
                    </option>
                    <option value="2011015363">
                     바보사랑 (124)
                    </option>
                    <option value="3000029491">
                     퀸앤퍼피 (76)
                    </option>
                    <option value="2000010909">
                     더독 (69)
                    </option>
                    <option value="2011007090">
                     감동 (43)
                    </option>
                    <option value="3000021170">
                     스토어봄 (39)
                    </option>
                    <option value="3000014622">
                     스마트콘 (37)
                    </option>
                    <option value="3000001126">
                     해뜨온 (33)
                    </option>
                    <option value="2000023623">
                     푸르젠 (31)[pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][linkx][linkx][area1][keywordx][linkx][linkx]
                    </option>
                    <option value="3000008141">
                     아임웰 (29)
                    </option>
                    <option value="3000009882">
                     농부마음 (25)
                    </option>
                    <option value="2000010375">
                     농협 (23)
                    </option>
                    <option value="2011004386">
                     농협청과33번 (23)
                    </option>
                    <option value="2011002728">
                     참다올 (22)
                    </option>
                    <option value="2000022544">
                     키친아트 (20)
                    </option>
                    <option value="3000005137">
                     그린팜 (18)
                    </option>
                    <option value="2000019768">
                     유어버스데이 (18)
                    </option>
                    <option value="3000019629">
                     맛템 (18)
                    </option>
                    <option value="3000026994">
                     친절한 도그씨 (18)
                    </option>
                    <option value="2011010205">
                     다농이네 (17)
                    </option>
                    <option value="3000001633">
                     펫토리아 (16)
                    </option>
                    <option value="2000012641">
                     리큅 (16)
                    </option>
                    <option value="3000005463">
                     우리가락 (15)
                    </option>
                    <option value="3000018205">
                     더조은푸드 (15)
                    </option>
                    <option value="2011010450">
                     PEACOCK (14)
                    </option>
                    <option value="1010E01549">
                     몰리스펫샵 (14)
                    </option>
                    <option value="3000014223">
                     인터펫코리아 (14)
                    </option>
                    <option value="2000047517">
                     텐바이텐 (13)
                    </option>
                    <option value="2000010389">
                     누리원 (13)
                    </option>
                    <option value="3000004239">
                     자연향 (11)
                    </option>
                    <option value="2000015272">
                     산과들에 (11)
                    </option>
                    <option value="3000017334">
                     친환경팔도 (11)
                    </option>
                    <option value="3000024073">
                     1300K (11)
                    </option>
                    <option value="2011005565">
                     이룸씨앤지 (11)
                    </option>
                    <option value="3000032795">
                     킹펫 (11)
                    </option>
                    <option value="3000026360">
                     자연맛남 (11)
                    </option>
                    <option value="3000008428">
                     펫마키 (11)
                    </option>
                    <option value="3000019206">
                     우리가스토리 (11)
                    </option>
                    <option value="2010013924">
                     모앤모 (10)
                    </option>
                    <option value="3000011402">
                     푸른들판 (10)
                    </option>
                    <option value="2000010380">
                     농협한아름드린 (10)
                    </option>
                    <option value="3000025493">
                     맛군 (10)
                    </option>
                    <option value="3000018339">
                     프레비 (10)
                    </option>
                    <option value="3000033205">
                     올라펫 (9)
                    </option>
                    <option value="2000011272">
                     동원 (9)
                    </option>
                    <option value="3000027481">
                     미남 (9)
                    </option>
                    <option value="2000009820">
                     기프티쇼 (9)
                    </option>
                    <option value="1010100108">
                     No Brand (8)
                    </option>
                    <option value="3000017859">
                     견물생심 (8)
                    </option>
                    <option value="3000026068">
                     다신샵 (8)
                    </option>
                    <option value="3000020972">
                     파머스댓 (8)
                    </option>
                    <option value="3000010902">
                     팸쿡 (8)
                    </option>
                    <option value="2011010617">
                     마캐는 젊은 농부들 (7)
                    </option>
                    <option value="3000032799">
                     테비토퍼 (7)
                    </option>
                    <option value="2000025031">
                     홈스몰 (7)
                    </option>
                    <option value="3000033062">
                     옐로우파머 (7)
                    </option>
                    <option value="2011005311">
                     눌천 (6)
                    </option>
                    <option value="3000028898">
                     네이처엠 (6)
                    </option>
                    <option value="3000010881">
                     한아름농수산 (6)
                    </option>
                    <option value="1010E15429">
                     맛있는풍경 (6)
                    </option>
                    <option value="3000029905">
                     맛떡 (6)
                    </option>
                    <option value="2011014901">
                     아이배냇 (6)
                    </option>
                    <option value="2011008882">
                     ViPET (6)
                    </option>
                    <option value="3000009805">
                     푸드마인 (6)
                    </option>
                    <option value="3000020262">
                     굽네몰 (5)
                    </option>
                    <option value="2000015155">
                     뽀뽀뜨 (5)
                    </option>
                    <option value="2011006699">
                     베베쿡 (5)
                    </option>
                    <option value="3000023841">
                     맛다름 (5)
                    </option>
                    <option value="2000022268">
                     퀸센스 (5)
                    </option>
                    <option value="3000018226">
                     핑크풋 (4)
                    </option>
                    <option value="2000012515">
                     리바트이즈마인 (4)
                    </option>
                    <option value="3000021208">
                     루솔 (4)
                    </option>
                    <option value="3000028158">
                     영양한스푼 (4)
                    </option>
                    <option value="3000033545">
                     차이나푸드타운 (4)
                    </option>
                    <option value="3000032966">
                     룸바이디자인 (4)
                    </option>
                    <option value="2011004421">
                     하늘농가 (4)
                    </option>
                    <option value="3000029714">
                     꿀담 (4)
                    </option>
                    <option value="2000021546">
                     초록마을 (4)
                    </option>
                    <option value="3000013113">
                     총각네 (4)
                    </option>
                    <option value="3000000483">
                     청정태안식품 (4)
                    </option>
                    <option value="3000033731">
                     베베당 (3)
                    </option>
                    <option value="2000019564">
                     웰러스 (3)
                    </option>
                    <option value="3000006949">
                     푸드트리 (3)
                    </option>
                    <option value="3000013211">
                     남촌 (3)
                    </option>
                    <option value="2011007571">
                     아이홈푸드 (3)
                    </option>
                    <option value="2000009821">
                     기프티콘 (3)
                    </option>
                    <option value="3000017019">
                     팜조아 (3)
                    </option>
                    <option value="3000024600">
                     가락24 (3)
                    </option>
                    <option value="2011004722">
                     익산원예농협 (3)
                    </option>
                    <option value="3000025505">
                     프레시지 (3)
                    </option>
                    <option value="3000024775">
                     로엘 (3)
                    </option>
                    <option value="2000021718">
                     카타나 (3)
                    </option>
                    <option value="3000003752">
                     펫박스 (3)
                    </option>
                    <option value="3000025285">
                     nutrio (3)
                    </option>
                    <option value="3000003675">
                     인테이크 (3)
                    </option>
                    <option value="3000022491">
                     철따라농산물 (3)
                    </option>
                    <option value="3000027490">
                     왕의창고 (3)
                    </option>
                    <option value="3000016688">
                     SSG (3)
                    </option>
                    <option value="3000020781">
                     토종마을 (3)
                    </option>
                    <option value="3000013226">
                     사그담 (3)
                    </option>
                    <option value="2011015696">
                     이그린지오 (3)
                    </option>
                    <option value="2000001321">
                     CJ제일제당 (3)
                    </option>
                    <option value="2000014584">
                     보보 (3)
                    </option>
                    <option value="3000001399">
                     자연에더 (3)
                    </option>
                    <option value="3000029239">
                     퓨네즈 (3)
                    </option>
                    <option value="3000003103">
                     원데이뉴트리션 (2)
                    </option>
                    <option value="3000030026">
                     마이또 (2)
                    </option>
                    <option value="2011010083">
                     신일금속 (2)
                    </option>
                    <option value="3000012780">
                     플랜잇 (2)
                    </option>
                    <option value="3000003071">
                     베베스트 (2)
                    </option>
                    <option value="3000031377">
                     CHAESO STORY (2)
                    </option>
                    <option value="3000007712">
                     자연두레 (2)
                    </option>
                    <option value="2011006713">
                     숲에서자란 (2)
                    </option>
                    <option value="2000013334">
                     명가일품 (2)
                    </option>
                    <option value="2011008739">
                     아임닭 (2)
                    </option>
                    <option value="3000011756">
                     서울식품공업 (2)
                    </option>
                    <option value="2000008968">
                     테일러메이드 (2)
                    </option>
                    <option value="3000023840">
                     떡보의 하루 (2)
                    </option>
                    <option value="3000012929">
                     st푸른농원 (2)
                    </option>
                    <option value="3000018333">
                     미들채 (2)
                    </option>
                    <option value="3000021049">
                     SoGood (2)
                    </option>
                    <option value="3000015544">
                     갓지은푸드 (2)
                    </option>
                    <option value="2000015252">
                     사조 (2)
                    </option>
                    <option value="2011011767">
                     너츠스토리 (2)
                    </option>
                    <option value="3000027884">
                     도니도니 (2)
                    </option>
                    <option value="2000050287">
                     풀무원건강생활 (2)
                    </option>
                    <option value="3000022395">
                     달수고구마 (2)
                    </option>
                    <option value="1010100004">
                     친환경 자연주의 (2)
                    </option>
                    <option value="3000024282">
                     예인산업 (2)
                    </option>
                    <option value="2000019639">
                     위즈웰  (2)
                    </option>
                    <option value="3000016919">
                     펫노리 (2)
                    </option>
                    <option value="3000010905">
                     화남농산 (2)
                    </option>
                    <option value="3000008944">
                     베다니 (2)
                    </option>
                    <option value="2000020517">
                     자연미가 (2)
                    </option>
                    <option value="3000011871">
                     로벤탈 (2)
                    </option>
                    <option value="2011004746">
                     실리만 (2)
                    </option>
                    <option value="3000008137">
                     빅풋실리콘 (2)
                    </option>
                    <option value="2000011906">
                     러브송 (1)
                    </option>
                    <option value="3000007960">
                     COXCO (1)
                    </option>
                    <option value="3000021980">
                     타코앤티 (1)
                    </option>
                    <option value="1010E01438">
                     담터 (1)
                    </option>
                    <option value="2000015656">
                     선우랜드 (1)
                    </option>
                    <option value="3000008850">
                     유하우스 (1)
                    </option>
                    <option value="2000021680">
                     카스코 (1)
                    </option>
                    <option value="2011013858">
                     러셀홉스 (1)
                    </option>
                    <option value="3000004943">
                     기프트팝 (1)
                    </option>
                    <option value="3000025290">
                     adp (1)
                    </option>
                    <option value="1010054801">
                     올가 (1)
                    </option>
                    <option value="2011015757">
                     본타몰 (1)
                    </option>
                    <option value="2000024997">
                     혼마 (1)
                    </option>
                    <option value="3000017742">
                     칼로바이 (1)
                    </option>
                    <option value="2000023679">
                     퓨리나 (1)
                    </option>
                    <option value="2000030676">
                     던롭(DUNLOP) (1)
                    </option>
                    <option value="3000019873">
                     기프팅 (1)
                    </option>
                    <option value="2000001165">
                     캘러웨이 (1)
                    </option>
                    <option value="3000013970">
                     하늘처럼 (1)
                    </option>
                    <option value="3000030232">
                     팜테크 (1)
                    </option>
                    <option value="3000006326">
                     웅자오빠 (1)
                    </option>
                    <option value="3000030137">
                     스누펫 (1)
                    </option>
                    <option value="2000010117">
                     남양키친플라워 (1)
                    </option>
                    <option value="3000031527">
                     강원6차산업 (1)
                    </option>
                    <option value="2000009486">
                     골든벨 (1)
                    </option>
                    <option value="3000022165">
                     지리산 마천농협 (1)
                    </option>
                    <option value="2000013071">
                     매일유업 (1)
                    </option>
                    <option value="3000031035">
                     펫다이어리 (1)
                    </option>
                    <option value="2000020238">
                     이팬트리 (1)
                    </option>
                    <option value="3000018445">
                     보섭이네푸드 (1)
                    </option>
                    <option value="3000033747">
                     프로퍼크립스 (1)
                    </option>
                    <option value="3000028063">
                     드봉케이크 (1)
                    </option>
                    <option value="2011006696">
                     화과방 (1)
                    </option>
                    <option value="1010E01490">
                     흙살림 (1)
                    </option>
                    <option value="3000027602">
                     경기농식품유통진흥원 (1)
                    </option>
                    <option value="1010000704">
                     E-MART (1)
                    </option>
                    <option value="1020700600">
                     TRADERS DEAL (1)
                    </option>
                    <option value="1010100001">
                     자연주의 (1)
                    </option>
                    <option value="3000024784">
                     바른티 (1)
                    </option>
                    <option value="3000025531">
                     햇살맞춤 (1)
                    </option>
                    <option value="2000020302">
                     인정푸드 (1)
                    </option>
                    <option value="3000021692">
                     푸드공작소 (1)
                    </option>
                    <option value="2000020520">
                     자연애 (1)
                    </option>
                    <option value="3000024380">
                     에스이랜드 (1)
                    </option>
                    <option value="3000026138">
                     오손도손 (1)
                    </option>
                    <option value="2000022211">
                     쿠쿠 (1)
                    </option>
                    <option value="3000017115">
                     프레시데이 (1)
                    </option>
                    <option value="2000016836">
                     신일 (1)
                    </option>
                    <option value="3000006171">
                     한미마루 (1)
                    </option>
                    <option value="3000010918">
                     포켓샐러드 (1)
                    </option>
                    <option value="3000019411">
                     글램디 (1)
                    </option>
                    <option value="3000017972">
                     엘더블유 (1)
                    </option>
                    <option value="1010E01499">
                     청오 (1)
                    </option>
                    <option value="1010E01435">
                     남양유업 (1)
                    </option>
                    <option value="3000000272">
                     오리온제과 (1)
                    </option>
                    <option value="3000020982">
                     벨리불리 (1)
                    </option>
                    <option value="2000014345">
                     베베푸드 (1)
                    </option>
                    <option value="2011014609">
                     마쓰이 (1)
                    </option>
                    <option value="3000023068">
                     츠바메 (1)
                    </option>
                    <option value="3000008914">
                     잇쉐키 (1)
                    </option>
                    <option value="3000011394">
                     에버코코 (1)
                    </option>
                    <option value="1020300035">
                     켈로그 (1)
                    </option>
                    <option value="3000032498">
                     쁘띠구르망 (1)
                    </option>
                   </select>
                  </span>
                 </div>
                </div>
                <div class="detail_sch">
                 <span class="tit">
                  혜택
                 </span>
                 <div class="ds_cont">
                  <span class="m_sort_select">
                   <select id="lf_like4" title="혜택">
                    <option value="all">
                     전체
                    </option>
                    <option value="free">
                     무료배송
                    </option>
                    <option value="prize">
                     사은품
                    </option>
                   </select>
                  </span>
                 </div>
                </div>
               </div>
               <ul class="bnbox">
                <li>
                 [linkx]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
               </ul>
              </div>
             </div>
            </div>
           </li>
          </ul>
         </div>
        </div>
        <div class="sch_filter_type">
         <ul class="sch_type_lst">
          <li>
           <span class="m_inp_chk">
            <label class="lb_txt ty_emart" for="em_ssg_chk">
             <em>
              e
             </em>
             쓱배송
            </label>
           </span>
          </li>
          <li>
           <span class="m_inp_chk">
            <label class="lb_txt ty_emart" for="mnmorning_chk">
             새벽배송
            </label>
           </span>
          </li>
          <li>
           <span class="m_inp_chk">
            <label class="lb_txt ty_emart" for="em_store_chk">
             <em>
              e
             </em>
             점포상품
            </label>
           </span>
          </li>
          <li>
           <span class="m_inp_chk">
            <label class="lb_txt ty_emart" for="em_store_chk2">
             <em>
              e
             </em>
             점포택배
            </label>
           </span>
          </li>
          <li>
           <span class="m_inp_chk">
            <label class="lb_txt ty_quick" for="quick_chk">
             퀵배송
            </label>
           </span>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="m_em_lst">
       <ul class="ty_lst2" data-areaid="item_list">
        <li>
         <div class="cm_item v3" data-adidx="1" data-adtgtid="0000010732160" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="0" data-info="0000010732160" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2034","siteNo":"6001","msgItemDetail":"","itemId":"0000010732160","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000010732160&amp;siteNo=6001&amp;salestrNo=2034&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
           </div>
           <span class="bdg_tx bdg_quick">
            퀵배송
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:92.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (3,057건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [ahref]
           
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3 gate_unit" data-adidx="2" data-adtgtid="1000025537859" data-advertacctid="1000001558" data-advertbidid="1000110240" data-advertbilngtypecd="20" data-advertextensterydivcd="10" data-advertkindcd="20" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
           <div class="ssg-tooltip-wrap tt_adinfo_n ">
            [ahref]
            
            <div class="ssg-tooltip-layer">
             검색어와 연관된
             <br/>
             상품으로 입찰가순으로
             <br/>
             전시됩니다.
             <button class="ssg-tooltip-close" type="button">
              <span class="blind">
               툴팁레이어 닫기
              </span>
             </button>
            </div>
           </div>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="1" data-info="1000025537859" data-position="cart" onclick="frontCommCart.put(this, '');ssg_ad.adClick(this, {position: 'cart'});">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000025537859","advertExtensTeryDivCd":"10","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000025537859&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist&amp;advertBidId=1000110240&amp;advertExtensTeryDivCd=10","dealItemYn":"N","uitemId":"00000","advertBidId":"1000110240","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:97.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (26건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="3" data-adtgtid="2097000204451" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="2" data-info="2097000204451" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"2097000204451","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=2097000204451&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
           [ahref]
           
           [ahref]
           
           [linkx]
           
           [linkx]
           
           [linkx]
           
           [linkx]
           
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="4" data-adtgtid="2097000319834" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="3" data-info="2097000319834" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"2097000319834","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=2097000319834&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (5건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="5" data-adtgtid="2097000761350" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           <a class="thmb_link clickable" data-index="4" data-info="2097000761350" data-position="view" href="/item/itemView.ssg?itemId=2097000761350&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="thmb_inner">
             <span class="ic_badge">
              <span class="cm_bdg">
              </span>
              <span class="ic_right">
               <span class="spi i_mnmorning">
                <em class="blind">
                 새벽배송
                </em>
               </span>
              </span>
             </span>
            </div>
           </a>
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="4" data-info="2097000761350" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"2097000761350","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=2097000761350&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (3건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="6" data-adtgtid="1000022921540" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="5" data-info="1000022921540" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2034","siteNo":"6001","msgItemDetail":"","itemId":"1000022921540","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000022921540&amp;siteNo=6001&amp;salestrNo=2034&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
           </div>
           <span class="bdg_tx bdg_quick">
            퀵배송
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:96.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (530건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [ahref]
           
          </div>
         </div>
        </li>
        <li data-areaid="taste">
         <div class="cm_item v3 cm_collct_item">
          <div class="thmb">
           <div class="thmb_inner">
            <div class="thmb_set">
             <span class="thmb_set_row">
              <span class="thmb_set_col">
              </span>
              <span class="thmb_set_col">
              </span>
             </span>
             <span class="thmb_set_row">
              <span class="thmb_set_col">
              </span>
              <span class="thmb_set_col">
              </span>
             </span>
            </div>
            <div class="thmb_btn">
             [linkx]
             
            </div>
           </div>
          </div>
          <div class="tx_thmb">
           <div class="tx_thmb_inner">
            <span class="collct_titbx">
             <em class="collct_tit">
              타인의취향
             </em>
            </span>
            <span class="collct_txbx">
             <span class="collct_tx">
              #많이봤-쓱 #자주샀-쓱
             </span>
            </span>
           </div>
          </div>
         </div>
         <div class="cm_collct_btn">
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="7" data-adtgtid="1000022921540" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="6" data-info="1000022921540" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"1000022921540","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=1000022921540&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           <a class="clickable" data-index="0" data-info="1000022921540" data-position="tag" data-tagnm="달달한맛" href="/search.ssg?src_area=listtag&amp;query=%23%eb%8b%ac%eb%8b%ac%ed%95%9c%eb%a7%9b">
            #달달한맛
           </a>
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="8" data-adtgtid="1000023313023" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="7" data-info="1000023313023" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2034","siteNo":"6001","msgItemDetail":"","itemId":"1000023313023","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000023313023&amp;siteNo=6001&amp;salestrNo=2034&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
           </div>
           <span class="bdg_tx bdg_quick">
            퀵배송
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:96.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (436건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="9" data-adtgtid="1000023313023" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            <a class="sp_ccp sel_clip clickable" data-position="clip" href="#">
             <span class="blind">
              클립
             </span>
            </a>
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="8" data-info="1000023313023" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"1000023313023","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=1000023313023&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="10" data-adtgtid="2097000812885" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="9" data-info="2097000812885" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"2097000812885","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=2097000812885&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_7009 v2">
           <span class="mall_tx">
            새벽배송
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span>
             유기농
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:68.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (5건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="11" data-adtgtid="0000010732157" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="10" data-info="0000010732157" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2034","siteNo":"6001","msgItemDetail":"","itemId":"0000010732157","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000010732157&amp;siteNo=6001&amp;salestrNo=2034&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
           </div>
           <span class="bdg_tx bdg_quick">
            퀵배송
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:96.4%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (4,733건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [linkx]
           
           [ahref]
           
           [linkx]
           
           [ahref]
           
           [ahref]
           
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="12" data-adtgtid="0000008965188" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="11" data-info="0000008965188" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000008965188","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000008965188&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:97.8%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1,481건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="13" data-adtgtid="1000022296690" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="12" data-info="1000022296690" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2034","siteNo":"6001","msgItemDetail":"","itemId":"1000022296690","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000022296690&amp;siteNo=6001&amp;salestrNo=2034&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
           </div>
           <span class="bdg_tx bdg_quick">
            퀵배송
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:94.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (136건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="14" data-adtgtid="1000022296690" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="13" data-info="1000022296690" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"2449","siteNo":"7009","msgItemDetail":"","itemId":"1000022296690","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"http://earlymorning.ssg.com/item/itemView.ssg?itemId=1000022296690&amp;siteNo=7009&amp;salestrNo=2449&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="15" data-adtgtid="1000017472993" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           <a class="thmb_link clickable" data-index="14" data-info="1000017472993" data-position="view" href="/item/itemView.ssg?itemId=1000017472993&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="thmb_inner">
             <span class="ic_badge">
              <span class="cm_bdg">
              </span>
              <span class="ic_right">
              </span>
             </span>
            </div>
           </a>
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="14" data-info="1000017472993" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000017472993","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000017472993&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:86.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (35건)
          </span>
         </div>
        </li>
        <li data-areaid="pnshop">
         <div class="cm_item v3 cm_collct_item">
          <div class="thmb">
           <div class="thmb_inner">
           </div>
          </div>
          <div class="tx_thmb">
           <div class="tx_thmb_inner">
            <span class="collct_tagbx">
             <span class="collct_tag">
              기획전
             </span>
            </span>
            <span class="collct_titbx">
             <em class="collct_tit">
              센스있는 구성,
             </em>
             <em class="collct_tit">
              다양한 혜택
             </em>
            </span>
            <span class="collct_txbx">
             <span class="collct_tx">
              기획전 쓱-둘러보기
             </span>
            </span>
           </div>
          </div>
         </div>
         <div class="cm_collct_btn">
          <a class="btn_collct_more clickable" data-position="more" href="/plan/planShop.ssg?_mpop=new&amp;dispCmptId=6000192032">
           더보기
          </a>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="16" data-adtgtid="1000031330278" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="15" data-info="1000031330278" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000031330278","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000031330278&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:92.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (15건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="17" data-adtgtid="1000034726365" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="16" data-info="1000034726365" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034726365","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034726365&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:70.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="18" data-adtgtid="0000002635517" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="17" data-info="0000002635517" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"0000002635517","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000002635517&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:86.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (189건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="19" data-adtgtid="1000025537859" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="18" data-info="1000025537859" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000025537859","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000025537859&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:97.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (26건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="20" data-adtgtid="1000034726555" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="19" data-info="1000034726555" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034726555","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034726555&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li data-areaid="recipe">
         <div class="cm_item v3 cm_collct_item">
          <div class="thmb">
           <div class="thmb_inner">
            <div class="thmb_set">
             <span class="thmb_set_row">
              <span class="thmb_set_col">
              </span>
              <span class="thmb_set_col">
              </span>
             </span>
             <span class="thmb_set_row">
              <span class="thmb_set_col">
              </span>
              <span class="thmb_set_col">
              </span>
             </span>
            </div>
            <div class="thmb_btn">
             [ahref]
             
            </div>
           </div>
          </div>
          <div class="tx_thmb">
           <div class="tx_thmb_inner">
            <span class="collct_tagbx">
             <span class="collct_tag">
              오늘은 e-요리
             </span>
            </span>
            <span class="collct_titbx">
             <em class="collct_tit">
              방금 그 재료,
             </em>
             <em class="collct_tit">
              이런 요리 어때요?
             </em>
            </span>
            <span class="collct_txbx">
             <span class="collct_tx">
              #레시피추천 #인기레시피
             </span>
            </span>
           </div>
          </div>
         </div>
         <div class="cm_collct_btn">
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="21" data-adtgtid="1000033461359" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="20" data-info="1000033461359" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033461359","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033461359&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:73.4%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (3건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="22" data-adtgtid="1000031126873" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
            [pkeyx][linkx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][ahref][pkeyx][ahref][area1][keywordx][linkx][area1][mkey1]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="21" data-info="1000031126873" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000031126873","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000031126873&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:94.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (137건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="23" data-adtgtid="0000002531140" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="22" data-info="0000002531140" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"0000002531140","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000002531140&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           [pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:88.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (116건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
           <a class="clickable" data-index="1" data-info="0000002531140" data-position="tag" data-tagnm="호박고구마" href="/search.ssg?src_area=listtag&amp;query=%23%ed%98%b8%eb%b0%95%ea%b3%a0%ea%b5%ac%eb%a7%88">
            #호박고구마
           </a>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="24" data-adtgtid="1000033461438" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="23" data-info="1000033461438" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033461438","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033461438&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="25" data-adtgtid="1000033983724" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="24" data-info="1000033983724" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033983724","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033983724&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:93.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (38건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="26" data-adtgtid="1000005618554" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="25" data-info="1000005618554" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][linkx][linkx][ahref][area1][mkey1][linkx][area1][keywordx][pkeyx][area1][mkey1][area1][mkey1][linkx][linkx][ahref][area1][keywordx][pkeyx][area1][keywordx]
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000005618554","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000005618554&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:97.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (134건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="27" data-adtgtid="1000027954377" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           <a class="thmb_link clickable" data-index="26" data-info="1000027954377" data-position="view" href="/item/itemView.ssg?itemId=1000027954377&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="thmb_inner">
             <span class="ic_badge">
              <span class="cm_bdg">
              </span>
              <span class="ic_right">
              </span>
             </span>
            </div>
           </a>
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="26" data-info="1000027954377" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000027954377","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000027954377&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:96.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (58건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="28" data-adtgtid="1000016346847" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="27" data-info="1000016346847" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000016346847","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000016346847&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:80.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (16건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3 cm_soldout_y" data-adidx="29" data-adtgtid="1000032498577" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap cart_soldout">
           <button class="spi btn_cart ty2 clickable" data-idx="28" data-info="1000032498577" data-position="cart" disabled="disabled" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="0" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000032498577","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000032498577&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="30" data-adtgtid="1000019381543" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           <a class="thmb_link clickable" data-index="29" data-info="1000019381543" data-position="view" href="/item/itemView.ssg?itemId=1000019381543&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="thmb_inner">
             <span class="ic_badge">
              <span class="cm_bdg">
              </span>
              <span class="ic_right">
              </span>
             </span>
            </div>
           </a>
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="29" data-info="1000019381543" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000019381543","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000019381543&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:90.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (4건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="31" data-adtgtid="0000001614608" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           <a class="tx_thmb_link clickable" data-index="30" data-info="0000001614608" data-position="view" href="/item/itemView.ssg?itemId=0000001614608&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="tx_thmb_inner">
             <div class="mall mall_6001">
              <span class="mall_tx">
               이마트몰
              </span>
              <span class="bdg_lst">
              </span>
             </div>
             <div class="tit">
              <span class="goods_brand">
               농협한아름드린
              </span>
              <span class="goods_tit">
               [농협] 호박고구마 2kg(특상혼합/개당100-250g)
              </span>
             </div>
             <div class="pricewrap">
              <div class="new_price">
               <span class="blind">
                판매가격
               </span>
               <em class="ssg_price">
                13,800
               </em>
               <span class="ssg_tx">
                원
               </span>
              </div>
              <div class="unit_price">
               (100g 당 : 460 원)
              </div>
             </div>
            </div>
           </a>
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="30" data-info="0000001614608" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000001614608","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000001614608&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (3건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="32" data-adtgtid="1000031224156" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
            [linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="31" data-info="1000031224156" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000031224156","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000031224156&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (4건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="33" data-adtgtid="1000032362015" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="32" data-info="1000032362015" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000032362015","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000032362015&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="34" data-adtgtid="1000018881353" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="33" data-info="1000018881353" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000018881353","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000018881353&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="35" data-adtgtid="0000008965192" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           <a class="tx_thmb_link clickable" data-index="34" data-info="0000008965192" data-position="view" href="/item/itemView.ssg?itemId=0000008965192&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="tx_thmb_inner">
             <div class="mall mall_6001">
              <span class="mall_tx">
               이마트몰
              </span>
              <span class="bdg_lst">
              </span>
             </div>
             <div class="tit">
              <span class="goods_brand">
               해뜨온
              </span>
              <span class="goods_tit">
               [무료배송]해뜨온 찰랑고구마(3Kg/특상)
              </span>
             </div>
             <div class="pricewrap">
              <div class="new_price">
               <span class="blind">
                판매가격
               </span>
               <em class="ssg_price">
                18,900
               </em>
               <span class="ssg_tx">
                원[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx]
               </span>
              </div>
              <div class="unit_price">
               (3ea 당 : 6,300 원)
              </div>
             </div>
            </div>
           </a>
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="34" data-info="0000008965192" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000008965192","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000008965192&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:97.4%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2,538건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="36" data-adtgtid="1000018423095" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="35" data-info="1000018423095" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000018423095","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000018423095&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:71.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (20건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="37" data-adtgtid="1000023689089" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="36" data-info="1000023689089" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000023689089","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000023689089&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:86.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (9건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="38" data-adtgtid="1000034628558" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="37" data-info="1000034628558" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034628558","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034628558&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="39" data-adtgtid="0000000837104" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           <a class="tx_thmb_link clickable" data-index="38" data-info="0000000837104" data-position="view" href="/item/itemView.ssg?itemId=0000000837104&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="tx_thmb_inner">
             <div class="mall mall_6001">
              <span class="mall_tx">
               이마트몰
              </span>
              <span class="bdg_lst">
              </span>
             </div>
             <div class="tit">
              <span class="goods_brand">
               푸르젠
              </span>
              <span class="goods_tit">
               밤고구마 3kg~10kg(한입/중상/특상) 옵션선택 !!
              </span>
             </div>
             <div class="pricewrap">
              <div class="new_price">
               <span class="blind">
                판매가격
               </span>
               <em class="ssg_price">
                8,900
               </em>
               <span class="ssg_tx">
                원
                <span class="cm_tx_opt">
                 ~
                </span>
               </span>
              </div>
              <div class="unit_price">
               (100g 당 : 297 원)
              </div>
             </div>
            </div>
           </a>
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="38" data-info="0000000837104" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"0000000837104","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000000837104&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:85.8%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (86건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="40" data-adtgtid="1000032756523" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="39" data-info="1000032756523" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000032756523","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000032756523&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="41" data-adtgtid="1000020981840" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="40" data-info="1000020981840" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000020981840","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000020981840&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="42" data-adtgtid="1000005618820" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="41" data-info="1000005618820" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000005618820","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000005618820&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:90.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (34건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="43" data-adtgtid="1000027951981" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="42" data-info="1000027951981" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000027951981","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000027951981&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:89.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (140건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="44" data-adtgtid="1000023350771" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="43" data-info="1000023350771" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000023350771","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000023350771&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:87.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (454건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="45" data-adtgtid="1000033983680" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="44" data-info="1000033983680" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033983680","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033983680&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="46" data-adtgtid="1000033087083" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="45" data-info="1000033087083" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033087083","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033087083&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="47" data-adtgtid="1000030906772" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="46" data-info="1000030906772" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000030906772","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000030906772&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00001","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:60.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="48" data-adtgtid="1000031086932" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="47" data-info="1000031086932" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000031086932","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000031086932&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:70.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="49" data-adtgtid="1000023059876" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            <a class="sp_ccp sel_clip clickable" data-position="clip" href="#">
             <span class="blind">
              클립
             </span>
            </a>
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="48" data-info="1000023059876" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000023059876","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000023059876&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:81.4%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (41건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="50" data-adtgtid="1000034628525" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="49" data-info="1000034628525" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034628525","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034628525&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="51" data-adtgtid="1000012996318" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="50" data-info="1000012996318" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000012996318","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000012996318&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:94.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (31건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="52" data-adtgtid="1000010549217" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="51" data-info="1000010549217" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000010549217","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000010549217&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <li>[pkeyx]</li><li>[ahref]</li><li>[pkeyx]</li>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="53" data-adtgtid="1000034340352" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="52" data-info="1000034340352" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034340352","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034340352&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="54" data-adtgtid="1000025639757" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="53" data-info="1000025639757" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000025639757","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000025639757&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="55" data-adtgtid="1000033888966" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="54" data-info="1000033888966" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033888966","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033888966&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:40.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (1건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="56" data-adtgtid="1000033630194" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="55" data-info="1000033630194" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033630194","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033630194&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="57" data-adtgtid="1000034628513" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="56" data-info="1000034628513" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034628513","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034628513&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[linkx]<li>[pkeyx]</li>[area1][keywordx][area1][mkey1][pkeyx]
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="58" data-adtgtid="1000018881386" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="57" data-info="1000018881386" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000018881386","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000018881386&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="59" data-adtgtid="1000004853412" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="58" data-info="1000004853412" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000004853412","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000004853412&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="60" data-adtgtid="1000034628499" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="59" data-info="1000034628499" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034628499","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034628499&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="61" data-adtgtid="1000023103242" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
            <li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[pkeyx]</li>
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="60" data-info="1000023103242" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000023103242","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000023103242&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="62" data-adtgtid="1000019394163" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="61" data-info="1000019394163" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000019394163","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000019394163&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="63" data-adtgtid="1000034863443" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="62" data-info="1000034863443" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034863443","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034863443&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="64" data-adtgtid="1000025529926" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="63" data-info="1000025529926" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000025529926","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000025529926&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:33.4%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (3건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="65" data-adtgtid="1000027304147" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="64" data-info="1000027304147" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000027304147","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000027304147&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:93.6%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (19건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [ahref]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="66" data-adtgtid="1000034300678" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="65" data-info="1000034300678" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034300678","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034300678&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="67" data-adtgtid="1000020981842" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="66" data-info="1000020981842" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000020981842","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000020981842&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:95.8%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (14건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="68" data-adtgtid="1000018423015" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="67" data-info="1000018423015" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000018423015","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000018423015&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:80.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (8건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="69" data-adtgtid="0000000039438" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="68" data-info="0000000039438" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000000039438","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000000039438&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="70" data-adtgtid="1000028236094" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           <a class="thmb_link clickable" data-index="69" data-info="1000028236094" data-position="view" href="/item/itemView.ssg?itemId=1000028236094&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist">
            <div class="thmb_inner">
             <span class="ic_badge">
              <span class="cm_bdg">
              </span>
              <span class="ic_right">
              </span>
             </span>
            </div>
           </a>
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="69" data-info="1000028236094" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000028236094","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000028236094&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="71" data-adtgtid="1000020132179" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            <a class="sp_ccp sel_clip clickable" data-position="clip" href="#">
             <span class="blind">
              클립
             </span>
            </a>
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="70" data-info="1000020132179" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000020132179","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000020132179&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="72" data-adtgtid="1000034628537" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="71" data-info="1000034628537" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000034628537","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000034628537&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="73" data-adtgtid="0000008965185" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="72" data-info="0000008965185" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000008965185","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000008965185&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:95.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (46건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="74" data-adtgtid="1000018881385" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            <a class="sp_ccp sel_clip clickable" data-position="clip" href="#">
             <span class="blind">
              클립
             </span>
            </a>
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="73" data-info="1000018881385" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000018881385","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000018881385&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:82.2%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (9건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="75" data-adtgtid="0000008965184" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="74" data-info="0000008965184" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000008965184","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000008965184&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:94.8%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (53건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="76" data-adtgtid="1000032755540" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="75" data-info="1000032755540" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000032755540","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000032755540&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="77" data-adtgtid="1000029330686" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="76" data-info="1000029330686" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000029330686","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000029330686&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:91.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (11건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="78" data-adtgtid="1000033888972" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [linkx]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="77" data-info="1000033888972" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000033888972","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000033888972&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (2건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="79" data-adtgtid="1000031797355" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [linkx]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [ahref]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="78" data-info="1000031797355" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"1000031797355","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=1000031797355&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:100.0%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (9건)
          </span>
         </div>
        </li>
        <li>
         <div class="cm_item v3" data-adidx="80" data-adtgtid="0000008325610" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
          <div class="thmb">
           [ahref]
           
           <span class="cm_clip cm_clip_item clip_off">
            [ahref]
            
           </span>
          </div>
          <div class="tx_thmb">
           [linkx]
           
          </div>
          <div class="cart_wrap">
           <button class="spi btn_cart clickable" data-idx="79" data-info="0000008325610" data-position="cart" onclick="frontCommCart.put(this, '');">
            <span class="blind">
             장바구니 담기
            </span>
           </button>
           <span class="disp_cart_data" data-cart-inflo-site-no="6001" data-cart-ordqty="1" data-cart-type="10" style="display:none">
            {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6001","msgItemDetail":"","itemId":"0000008325610","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6001","itemLnkd":"/item/itemView.ssg?itemId=0000008325610&amp;siteNo=6001&amp;salestrNo=6005&amp;tildSrchwd=고구마&amp;srchPgNo=1&amp;src_area=elist","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
           </span>
          </div>
         </div>
         <div class="goods_benefit">
          <div class="mall mall_6001 v2">
           <span class="mall_tx">
            이마트몰
           </span>
          </div>
          <div class="benefit_lst">
           <div class="benefit_bdg">
            <span class="bene_free">
             무료배송
            </span>
           </div>
          </div>
         </div>
         <div class="cm_star_area">
          <span class="cm_star_on">
           <span style="width:95.8%">
            구매고객 평점
           </span>
          </span>
          <span class="cm_star_num">
           (385건)
          </span>
         </div>
         <div class="item_tag v1">
          <div class="tag_lst">
           [linkx]
           
           [ahref]
           
           [ahref]
            [linkx][area1][keywordx][area1][keywordx][linkx][ahref][linkx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
           
          </div>
         </div>
        </li>
       </ul>
      </div>
      <div class="m_paginate_wrap">
       <div class="m_paginate">
        [ahref]
        
        <strong>
         1
        </strong>
        [ahref]
        
        [ahref]
        
        [ahref]
        
        [linkx]
        
        [ahref]
        
       </div>
      </div>
      <div class="src_more">
       <div class="m_resch" data-areaid="book">
        [linkx]
        
       </div>
      </div>
      <div class="srch_corss_rcm" data-areaid="crossitem">
       <div class="result_txt">
        <span>
         <strong>
          '고구마'
         </strong>
         에 대한
         <em>
          신세계상품
         </em>
         을 추천합니다
        </span>
       </div>
       <div class="m_ssg_lst">
        <ul class="ty_thmb">
         <li>
          <div class="cm_item v3" data-adidx="1" data-adtgtid="0000008965188" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            <a class="thmb_link clickable" data-index="79" data-info="0000008965188" data-position="view" href="/item/itemView.ssg?itemId=0000008965188&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm">
             <div class="thmb_inner">
              <span class="ic_badge">
               <span class="cm_bdg">
               </span>
               <span class="ic_right">
               </span>
              </span>
             </div>
            </a>
            <span class="cm_clip cm_clip_item clip_off">
             [ahref]
             
            </span>
           </div>
           <div class="tx_thmb">
            <a class="tx_thmb_link clickable" data-index="79" data-info="0000008965188" data-position="view" href="/item/itemView.ssg?itemId=0000008965188&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm">
             <div class="tx_thmb_inner">
              <div class="mall mall_6004">
               <span class="mall_tx">
                신세계몰
               </span>
               <span class="bdg_lst">
               </span>
              </div>
              <div class="tit">
               <span class="goods_brand">
                해뜨온
               </span>
               <span class="goods_tit">
                [무료배송]해뜨온 찰랑고구마(5Kg/긴특)
               </span>
              </div>
              <div class="pricewrap">
               <div class="new_price">
                <span class="blind">
                 판매가격
                </span>
                <em class="ssg_price">
                 19,900
                </em>
                <span class="ssg_tx">
                 원
                </span>
               </div>
               <div class="unit_price">
                (5kg 당 : 19,900 원)
               </div>
              </div>
             </div>
            </a>
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="0000008965188" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"","itemId":"0000008965188","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=0000008965188&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <div class="benefit_bdg">
             <span class="bene_free">
              무료배송
             </span>
            </div>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:97.0%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (13건)
           </span>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="2" data-adtgtid="1000017472993" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [ahref]
            
            <span class="cm_clip cm_clip_item clip_off">
             [ahref]
             
            </span>
           </div>
           <div class="tx_thmb">
            [linkx]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000017472993" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"","itemId":"1000017472993","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000017472993&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <div class="benefit_bdg">
             <span class="bene_free">
              무료배송
             </span>
            </div>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:96.2%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (68건)
           </span>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="3" data-adtgtid="1000031330278" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [ahref]
            
            <span class="cm_clip cm_clip_item clip_off">
             [linkx]
             
            </span>
           </div>
           <div class="tx_thmb">
            [linkx]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000031330278" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"","itemId":"1000031330278","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000031330278&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
            </span>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:97.0%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (20건)
           </span>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="4" data-adtgtid="1000030382224" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            <a class="thmb_link clickable" data-index="79" data-info="1000030382224" data-position="view" href="/item/itemView.ssg?itemId=1000030382224&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm">
             <div class="thmb_inner">
              <span class="ic_badge">
               <span class="cm_bdg">
               </span>
               <span class="ic_right">
               </span>
              </span>
             </div>
            </a>
            <span class="cm_clip cm_clip_item clip_off">
             [linkx]
             
            </span>
           </div>
           <div class="tx_thmb">
            [ahref]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000030382224" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"","itemId":"1000030382224","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000030382224&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
            </span>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:92.4%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (121건)
           </span>
          </div>
          <div class="item_tag v1">
           <div class="tag_lst">
            [ahref]
            
           </div>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="5" data-adtgtid="0000002635517" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [linkx]
            
            <span class="cm_clip cm_clip_item clip_off">
             [ahref]
             
            </span>
           </div>
           <div class="tx_thmb">
            [ahref]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="0000002635517" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"0000002635517","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=0000002635517&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <div class="benefit_bdg">
             <span class="bene_free">
              무료배송
             </span>
            </div>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:87.2%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (138건)
           </span>
          </div>
          <div class="item_tag v1">
           <div class="tag_lst">
            [linkx]
            
           </div>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="6" data-adtgtid="1000025537859" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [ahref]
            
            <span class="cm_clip cm_clip_item clip_off">
             [ahref]
             
            </span>
           </div>
           <div class="tx_thmb">
            [linkx]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000025537859" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000025537859","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000025537859&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <li>[area1][mkey1]</li><li>[pkeyx]</li>[pkeyx][ahref][area1][mkey1]
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:92.8%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (44건)[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
           </span>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="7" data-adtgtid="1000033461359" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [linkx]
            
            <span class="cm_clip cm_clip_item clip_off">
             <a class="sp_ccp sel_clip clickable" data-position="clip" href="#">
              <span class="blind">
               클립
              </span>
             </a>
            </span>
           </div>
           <div class="tx_thmb">
            [linkx]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000033461359" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"","itemId":"1000033461359","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000033461359&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li><li>[area1][keywordx]</li>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="8" data-adtgtid="1000031126873" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [linkx]
            
            <span class="cm_clip cm_clip_item clip_off">
             [linkx]
             
            </span>
           </div>
           <div class="tx_thmb">
            [linkx]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000031126873" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"1000031126873","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000031126873&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <div class="benefit_bdg">
             <span class="bene_free">
              무료배송
             </span>
            </div>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:92.8%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (156건)
           </span>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="9" data-adtgtid="0000002531140" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            <a class="thmb_link clickable" data-index="79" data-info="0000002531140" data-position="view" href="/item/itemView.ssg?itemId=0000002531140&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm">
             <div class="thmb_inner">
              <span class="ic_badge">
               <span class="cm_bdg">
               </span>
               <span class="ic_right">
               </span>
              </span>
             </div>
            </a>
            <span class="cm_clip cm_clip_item clip_off">
             [ahref]
             
            </span>
           </div>
           <div class="tx_thmb">
            <a class="tx_thmb_link clickable" data-index="79" data-info="0000002531140" data-position="view" href="/item/itemView.ssg?itemId=0000002531140&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm">
             <div class="tx_thmb_inner">
              <div class="mall mall_6004">
               <span class="mall_tx">
                신세계몰
               </span>
               <span class="bdg_lst">
               </span>
              </div>
              <div class="tit">
               <span class="goods_brand">
                푸르젠
               </span>
               <span class="goods_tit">
                달달하고 노오란 호박고구마 3kg/5kg(한입/중상/특상) 골라담기
               </span>
              </div>
              <div class="pricewrap">
               <div class="new_price">
                <span class="blind">
                 판매가격
                </span>
                <em class="ssg_price">
                 9,900
                </em>
                <span class="ssg_tx">
                 원
                 <span class="cm_tx_opt">
                  ~
                 </span>
                </span>
               </div>
               <div class="unit_price">
                (100g 당 : 330 원)
               </div>
              </div>
             </div>
            </a>
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="0000002531140" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"이 상품은 옵션이 있는 상품 입니다.\n상품상세에서 옵션을 선택해주세요.","itemId":"0000002531140","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=0000002531140&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"Y"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <div class="benefit_bdg">
             <span class="bene_free">
              무료배송
             </span>
            </div>
           </div>
          </div>
          <div class="cm_star_area">
           <span class="cm_star_on">
            <span style="width:86.2%">
             구매고객 평점
            </span>
           </span>
           <span class="cm_star_num">
            (13건)
           </span>
          </div>
          <div class="item_tag v1">
           <div class="tag_lst">
            [linkx]
            
            [ahref]
            
           </div>
          </div>
         </li>
         <li>
          <div class="cm_item v3" data-adidx="10" data-adtgtid="1000033461438" data-advertacctid="" data-advertbidid="" data-advertbilngtypecd="" data-advertextensterydivcd="" data-advertkindcd="" data-unittype="item">
           <div class="thmb">
            [linkx]
            
            <span class="cm_clip cm_clip_item clip_off">
             [linkx]
             
            </span>
           </div>
           <div class="tx_thmb">
            [ahref]
            
           </div>
           <div class="cart_wrap">
            <button class="spi btn_cart clickable" data-idx="79" data-info="1000033461438" data-position="cart" onclick="frontCommCart.put(this, '');">
             <span class="blind">
              장바구니 담기
             </span>
            </button>
            <span class="disp_cart_data" data-cart-inflo-site-no="6005" data-cart-ordqty="1" data-cart-type="10" style="display:none">
             {"drctPurchYn":"N","salestrNo":"6005","siteNo":"6004","msgItemDetail":"","itemId":"1000033461438","advertExtensTeryDivCd":"","cartPsblType":"","infloSiteNo":"6005","itemLnkd":"http://m.ssg.com/item/itemView.ssg?itemId=1000033461438&amp;siteNo=6004&amp;salestrNo=6005&amp;&amp;src_area=emsgt_itm","dealItemYn":"N","uitemId":"00000","advertBidId":"","goItemDetailYn":"N"}
            </span>
           </div>
          </div>
          <div class="goods_benefit">
           <div class="mall mall_6004 v2">
            <span class="mall_tx">
             신세계몰
            </span>
           </div>
           <div class="benefit_lst">
            <div class="benefit_bdg">
             <span class="bene_free">
              무료배송
             </span>
            </div>
           </div>
          </div>
         </li>
        </ul>
       </div>
       <div class="btn_area">
        [linkx]
         [pkeyx][linkx][pkeyx][pkeyx][ahref][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][ahref][linkx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref][ahref][pkeyx][ahref]
        
       </div>
      </div>
      <div class="csrch_website" data-areaid="websitesrch">
       <div class="csrch_sectit">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
       </div>
       <div class="website_txt_srch">
        <div class="website_lst">
         <div class="website_title">
          <span class="website_tit">
           [ahref]
           
          </span>
          <span class="website_link">
           [ahref]
           
          </span>
         </div>
         <div class="website_info">
          <p class="website_text">
           <span>
            호호(돈까스)
전화번호
02-3479-1655
| 매장위치 B1층
엄선된 국내산 돼지고기를 24시간 숙성시켜 생빵가루를 입혀 바삭한 맛을 더 한 돈가스 전문코너입니다.
옥인(칼국수)
전화번호
02-3479-1657
| 매장위치 B1층
수제로 반죽한 쫄깃한 면발과 해물로 우려낸 육수가 시원한 칼국수 전문코너입니다.
보카보카(철판볶음밥)
전화번호
02-3479-1656
| 매장위치 B1층
300도 고열에서 조리한 볶음밥에 30여 가지 재료가 들어간 데미그라소스의 깊은 맛이 일품인 철판볶음밥 전문코너입니다.
미정(비빔밥)
전화번호
02-3479-1652
| 매장위치 B1층
신선한 야채와 담백한 나물, 쇠고기 등이 어우러져 영양이 풍부한 비빔밥 전문코너입니다.
콘타이
전화번호
02-3479-6057
| 매장위치 B1층
태국 호텔 출신의 현지인 쉐프가 각종 향신료와 신선한 재료로 타이 정통의 맛을 그대로 재현해내 요리마니아들에게 사랑 받고 있는 타이 레스토랑입니다.
청담반점
전화번호
02-3479-1651
| 매장위치 B1층
'황태짬뽕'으로 수요미식회 짬뽕편에 출연해 주목을 받은 황태짬뽕 전문점입니다.
홍대개미
전화번호
02-3479-1659
| 매장위치 B1층
연어덮밥, 스테이크 덮밥 등 다양한 덮밥(일식) 전문점입니다.
칠보면옥(냉면)
전화번호
02-3479-1650
| 매장위치 B1층
100%
            <strong>
             고구마
            </strong>
            전분을 수제 반죽한 쫄깃쫄깃한 면발이 일품인 냉면 전문코너입니다.
홍익육개장
전화번호
02-3479-1573
| 매장위치 B1층
맛과 건강을 모두 생각한 우리나라 전통 보양식 육개장 전문점입니다.
에스-탑(회전초밥)
전화번호
02-3479-1662
| 매장위치 B1층
신선한 야채와 활어회가 잘 어우러진 회덮밥과 싱싱하고 다양한 초밥이 있는 회전초밥 전문코너입니다.
팥꽃나무집(빙수&amp;디저트)
전화번호
02-3479-1664
| 매장위치 B1층
국내산 팥을 직접 삶아 만든 다양한 빙수와 단팥죽을 맛볼 수 있는 빙수&amp;디저트 전문코너입니다.
자니로켓
전화번호
02-3479-1220
| 매장위치 B1층
두툼한 쇠고기 패티의 깊은 육즙을 맛 볼수 있는 미국 정통 오리지널 수제 햄버거 전문코너입니다.
육첩반상
전화번호
02-3479-1666
| 매장위치 B1층
가성비 좋고 정갈한 '1인 고기 밥상' 전문점입니다.
           </span>
          </p>
         </div>
        </div>
        <div class="website_lst">
         <div class="website_title">
          <span class="website_tit">
           [linkx]
           
          </span>
          <span class="website_link">
           [ahref]
           
          </span>
         </div>
         <div class="website_info">
          <p class="website_text">
           <span>
            맛의 즐거움이 극대화 되는 미식 유토피아
Food Collection, Eatopia!
중세 유럽의 온실 오랑주리에서 영감을 받은 아름다운 공간. 유리 월 너머 보이는 북한산 전경이 미식의 즐거움을 배가시켜 줍니다.
총 40여 개의 캐주얼 다이닝을 맛볼 수 있으며, 유명 셰프의 맛집부터 유서 깊은 지역 맛집,
세계 각국의 에스닉푸드와 스트리트 푸드 등 입맛대로 골라 먹는 재미가 있습니다.
교토가츠규
편대장
리김밥
케르반
광화문미진
삼백집
STORE
광화문미진
피맛골에서 60년 전통과 그 맛을 3대가 이어가는 메밀과 낙지 전문광화문 미진을 스타필드 고양점에서 만나보세요.
광화문미진
매장위치 : 3F
전화번호 : 031 - 5173 - 3056
교토가츠규
교토가츠규는 교토에서 시작하여 도쿄, 오사카, 나고야, 후쿠오카 등 일본 전역에서 사랑받고 있는 No.1 규카츠 전문점입니다. 일본 전통 요리 기법인 “갓포(割烹)”스타일을 컨셉으로, 재료 본연의 맛을 최대한 살리는...
교토가츠규
매장위치 : 3F
전화번호 : 031 - 5173 - 3058
리김밥
압구정 김밥 맛집으로 다양한 언론매체에서 검증된 프리미엄 김밥, 리김밥.정성껏 조리한 슬로우 푸드를 패스트 푸드처럼 빠르고 간편하게 즐기실 수 있도록 리김밥이 새로운 외식 문화를 만들...
리김밥
매장위치 : 3F
전화번호 : 031 - 5173 - 3049
북창동순두부
좋은재료의 기본을 지키는 1등 브랜드, 든든한 북창동순두부 반상
북창동순두부
매장위치 : 3F
전화번호 : 031 - 5173 - 3042
삼백집
하루에 삼백그릇' 간판없는 국밥집 '삼백집', 70여년 전통의 삼백집이 당신의 맛있는 생활속으로 들어갑니다.
삼백집
매장위치 : 3F
전화번호 : 031 - 5173 - 3046
스타벅스 티바나
나의 일상이 만들어지는 또 하나의 공간, 한 잔의 커피로 일상의 즐거움과 따뜻한 인간미를 느낄 수 있는 스타벅스 매장입니다.
스타벅스 티바나
매장위치 : 3F
전화번호 : 031 - 5173 - 3028
시골막국수
춘천시로부터 명가로 공식 지정된 막국수집입니다
시골막국수
매장위치 : 3F
전화번호 : 031 - 5173 - 3047
에머이
“에머이”는 베트남 현지에서 직접 공수한 허브와 식재료로 깊고 진한 육수를 끓이고, 매일아침 매장에서 직접 생면을 뽑아 국내 베트남 음식과 차별화를 두고 있습니다
에머이
매장위치 : 3F
전화번호 : 031 - 5173 - 3043
에베레스트
네팔 출신의 쉐프가 직접 현지의 맛을 전달하는 네팔 음식 전문점입니다
에베레스트
매장위치 : 3F
전화번호 : 031 - 5173 - 3037
오장동 흥남집
1953년 서울 오장동에 문을 연 흥남집은 고소한 사골 육수에 쫄깃한
            <strong>
             고구마
            </strong>
            전분 면발, 간재미 회무침을 얹은 전통적인 함흥냉면으로 3代가 넘게 사랑받고 있습니다.
오장동 흥남집
매장위치 : 3F
전화번호 : 031 - 5173 - 3040
오지상 함박스테이크
이태원 경리단 대표 맛집이었으며 국내 최고의 정통 일본식 함박스테이크 전문점입니다. 매일 업장에서 반죽하여 만든 신선한 함박스테이크와 장시간 염장,훈연한 수제 베이컨을 경험해보세요.
오지상 함박스테이크
매장위치 : 3F
전화번호 : 031 - 5173 - 3048
자니로켓
미국 정통 프리미엄 수제버거 레스토랑
자니로켓
매장위치 : 3F
전화번호 : 031 - 5173 - 3054
장사랑
한국음식 전문점 장사랑은 대한민국 방방곡곡 귀한 식재료만을 엄선하여 우리 전통의 맛을 바르게 요리합니다.
장사랑
매장위치 : 3F
전화번호 : 031 - 5173 - 3057
진가
특급호텔 주방장 출신의 중식대가 '진생용' 쉐프가 선보이는 정통 중식의 세계 '진가'에서 만나보세요.
진가
매장위치 : 3F
전화번호 : 031 - 5173 - 3059
청키면가
홍콩 센트럴 지역에 위치한 60년 전통의 완탕면 전문점 청키면가와 라이센스 계약을 맺어 전통 조리법대로 완탕면을 만들고 있는 맛집입니다
청키면가
매장위치 : 3F
전화번호 : 031 - 5173 - 3060
카츠바
카츠바는 자연에서 온 신선한 식재료와 카츠바의 독보적인 기술과 레시피를 도입해 만든 일본의 정통 돈카츠와 우동, 소바, 덮밥 그리고 그의 트렌디와 메뉴까지 폭넓은 요리를 선보이고 있습니다.
카츠바
매장위치 : 3F
전화번호 : 031 - 5173 - 3041
케르반
터키어로 KERVAN(케르반)은 사막을 건너다니는 무역 상인을 뜻하는데요. 그들의 용기와 낭만과 멋을 고스란히 살린 레스토랑, 저희 케르반에서 터키의 다양하고 풍성한 전통 음식을 맛보세요.
케르반
매장위치 : 3F
전화번호 : 031 - 5173 - 3050
탄탄면공방
탄탄면공방의 탄탄면은 한국인의 입맛에 익숙한 진한 돈 사골육수를 사용하여 만들어낸 국내 최초의 탄탄면으로 기존의 탄탄면을 재해석한 한국인의 입맛에 맞춤 조리한 탄탄면입니다.
탄탄면공방
매장위치 : 3F
전화번호 : 031 - 5173 - 3045
편대장 영화식당
1962년 경북 영천에서 문을 연 편대장 영화식당은 대를 잇는 전통의 한우 육회 · 육회비빔밥 전문점입니다. 전국 각지 식도락가들의 사랑을 받고 있는 경상도의 맛집을 고양 스타필드에서 만나보실 수 있습니다.
편대장 영화식당
매장위치 : 3F
전화번호 : 031 - 5173 - 3044
핏제리아오
핏제리아오는 이태리정통 나폴리피자로 72시간 저온숙성의 시크릿도우와 485도 이탈리아 불화덕으로 최고의 핏자를 만듭니다. 정성이 듬뿍 담긴 건강한 식재의 핏자의 감동을 맛보세요.
핏제리아오
매장위치 : 3F
전화번호 : 031 - 5173 - 3052
히라쿠
"삶에는 가장 맛있는 온도가있다" 불의 즐거움을 당신의 삶에 열어 드리겠습니다. 철판 위에서 즉석으로 요리되어 나오는 뜨거운 한판
히라쿠
매장위치 : 3F
전화번호 : 031 - 5173 - 3051
STORES
           </span>
          </p>
         </div>
        </div>
       </div>
      </div>
      <div class="csr_sch_rqst" id="searchEvaluate">
       [linkx]
       
      </div>
      <span class="dimmed">
      </span>
     </div>
    </div>
    <div class="react-area" id="mcom_footer">
     <div class="mcom_footer">
      <div class="mcom_service_wrap">
       <div class="mcom_service_area">
        <p class="mcom_service_info">
         <span class="mcom_info_mall">
          SSG.COM /
         </span>
         <span class="mcom_tel_tx">
          1577-3419
         </span>
         <br/>
         <span class="mcom_email_tx">
          ssg@ssg.com
         </span>
        </p>
        <div class="mcom_service_btnarea">
         [ahref]
         
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="mcom_btnbx_warp">
       <ul class="mcom_btnbx_list">
        <li id="footer_loginBtn" style="display: none;">
         [ahref]
         
        </li>
        <li id="footer_logoutBtn" style="display: none;">
         [linkx]
         
        </li>
        <li id="footer_joinMemberBtn" style="display: none;">
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="mcom_mall_wrap">
       <div class="mcom_mall_box">
        <span class="mcom_mall_name">
         (주)에스에스지닷컴
        </span>
        <address>
         대표자: 최우정
         <span class="bar">
          |
         </span>
         사업자등록번호: 870-88-01143
         <br/>
         통신판매업 신고번호: 제2019-서울중구-0564호
         [linkx]
         
         <br/>
         개인정보관리책임자: 강영태
         <span class="bar">
          |
         </span>
         주소: 서울특별시 중구 남대문시장10길 2
         <br/>
         호스팅서비스 사업자 : (주)에스에스지닷컴
        </address>
       </div>
       <div class="mcom_noti_wrap">
        <p class="mcom_noti_tip">
         *소비자피해보상보험 가입 사실 확인:
         [linkx]
         
        </p>
        <p class="mcom_noti_txt">
         고객님은 안전거래를 위해 현금 등으로 결제 시 저희 쇼핑몰에서 가입한 구매 안전 서비스 소비자 피해보상보험 서비스를 이용하실 수 있습니다.
         <br/>
         * 보상대상: 미배송, 반품/환불 거부, 쇼핑몰부도
        </p>
       </div>
       <div class="mcom_cont_info">
        <h3 class="blind">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <ul class="mcom_cont_lst">
         <li>
          [ahref]
          
         </li>
         <li>
          <span class="bar">
           |
          </span>
          [ahref]
          
         </li>
         <li>
          <span class="bar">
           |
          </span>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="mcom_fixed v2 _fixed_banner em react-area" id="floating-layer">
    <div class="m_f_toppd">
     <p class="m_f_history_gd" style="display:none;">
      <span>
       최근 본 쇼핑정보를 확인하세요.
      </span>
     </p>
     <div class="m_f_lt">
      [linkx]
      
     </div>
     <div class="m_f_rt">
      <span class="cmfloating_btnarea cmfloating_btnseller_dtl clickable" data-react-tarea="쓱톡 공통|웹바|셀러톡" id="span_item_seller" style="display:none">
       [ahref]
       
       <span class="cmfloating_tip">
        <span class="cmfloating_thmb_img">
        </span>
        <span class="cmfloating_tip_txt">
         <span class="cmfloating_tip_txtin">
          상품문의는 1:1셀러
          <br/>
          톡 하세요~
         </span>
        </span>
       </span>
      </span>
      <span class="cmfloating_btnarea cmfloating_btncsbot clickable" data-react-tarea="쓱톡 공통|웹바|고객센터톡" id="span_ssgCs" style="display:none">
       [linkx]
       
       <span class="cmfloating_msg">
        <span class="cmfloating_msg_txt">
         <span class="cmfloating_msg_txtin">
         </span>
        </span>
       </span>
      </span>
      <span class="cmfloating_btnarea cmfloating_btnseller clickable" data-react-tarea="쓱톡 공통|웹바|쓱톡" id="span_seller" style="display:none">
       [ahref]
       
       <span class="cmfloating_msg">
        <span class="cmfloating_thmb_img">
        </span>
        <span class="cmfloating_msg_txt">
         <span class="cmfloating_msg_txtin">
         </span>
        </span>
       </span>
      </span>
      <span class="cmfloating_btnarea cmfloating_btntoggle" id="talk_toggle_btn">
       <span class="cmfloating_dim">
       </span>
       [linkx]
       
       [linkx]
       
       <button aria-expanded="false" class="cmfloating_btnchat" type="button">
        <span class="blind">
         쓱톡
        </span>
       </button>
      </span>
      [linkx]
      
      [linkx]
      
     </div>
    </div>
   </div>
  </div>
  [ahref]
  
  <div class="ly_app react-area" id="lyApp" style="display: none;">
  </div>
  <div class="ly_app ty2" id="lyVvip" style="display: none;">
  </div>
  <div class="channel_ban _fixed_banner" id="com_channel_ban" style="display: none;">
  </div>
  <div class="channel_ban _fixed_banner" id="notice_b2e_pop" style="display: none;">
  </div>
  <div class="extend_ban _fixed_banner" id="com_extend_ban" style="display: none;">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0129
  </b>
 </body>
</html>
|<---