--->|<!DOCTYPE html>
<html class="no-js" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="186951328047493" property="fb:pages"/>
  <meta content="3286EE554B6F672A6F2E608C02343C0E" name="msvalidate.01"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="apple-mobile-web-app-title"/>
  <meta content="black" name="apple-mobile-web-app-status-bar-style"/>
  <meta content="app-id=632618796, app-argument=//4688222.ltr" name="apple-itunes-app"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="article" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="https://www.facebook.com/voakorea" property="article:publisher"/>
  <meta content="https://gdb.voanews.com/C5898DC1-1A97-4309-835F-CB005ECBB2A9_cx0_cy10_cw0_w1200_s.jpg" property="og:image"/>
  <meta content="1200" property="og:image:width"/>
  <meta content="675" property="og:image:height"/>
  <meta content="540339945982256" property="fb:app_id"/>
  <meta content="박영서" name="Author"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="@VOA_Korean" name="twitter:site"/>
  <meta content="https://gdb.voanews.com/C5898DC1-1A97-4309-835F-CB005ECBB2A9_cx0_cy10_cw0_w1200_r1_s.jpg" name="twitter:image"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="news_keywords"/>
  <meta content="#ffffff" name="msapplication-TileColor">
   [pkeyx]<li>[pkeyx]</li>[ahref]<li>[ahref]</li>
  </meta>
  <meta content="/Content/responsive/VOA/img/webApp/ico-144x144.png" name="msapplication-TileImage"/>
 </head>
 <body class="nav-no-loaded pg-article print-lay-article ">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-N8MP7P" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <noscript>
  </noscript>
  <section>
   <div class="sr-only">
    <h2>
     <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
    </h2>
    <ul>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a data-disable-smooth-scroll="1" href="h">
       검색으로 이등
      </a>
     </li>
    </ul>
   </div>
  </section>
  <div dir="ltr">
   <div id="page">
    <aside>
     <div class="c-lightbox overlay-modal">
      <div class="c-lightbox__intro">
       <h2 class="c-lightbox__intro-title">
        [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__intro-next" title="다음">
        <span class="ico ico--rounded ico-chevron-forward">
        </span>
        <span class="sr-only">
         다음
        </span>
       </button>
      </div>
      <div class="c-lightbox__nav">
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__btn--close" title="Close">
        <span class="ico ico--rounded ico-close">
        </span>
        <span class="sr-only">
         Close
        </span>
       </button>
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__btn--prev" title="이전">
        <span class="ico ico--rounded ico-chevron-backward">
        </span>
        <span class="sr-only">
         이전
        </span>
       </button>
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__btn--next" title="다음">
        <span class="ico ico--rounded ico-chevron-forward">
        </span>
        <span class="sr-only">
         다음
        </span>
       </button>
      </div>
      <div class="c-lightbox__content-wrap">
       <figure class="c-lightbox__content">
        <span class="c-spinner c-spinner--lightbox">
        </span>
        <div class="c-lightbox__img">
         <div class="thumb">
         </div>
        </div>
        <figcaption>
         <div class="c-lightbox__info c-lightbox__info--foot">
          <span class="c-lightbox__counter">
          </span>
          <span class="caption caption--inverted">
          </span>
         </div>
        </figcaption>
       </figure>
      </div>
     </div>
     <div class="print-dialogue">
      <div class="container">
       <h3 class="print-dialogue__title section-head">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h3>
       <div class="print-dialogue__opts">
        [linkx][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][keywordx][linkx][ahref][linkx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1][ahref][linkx][linkx][pkeyx][keywordx][keywordx][ahref][ahref][ahref][ahref][ahref][pkeyx][pkeyx]
       </div>
       <div class="print-dialogue__buttons">
        <button class="btn btn--secondary close-button" title="Cancel" type="button">
         <span class="btn__text ">
          Cancel
         </span>
        </button>
        <button class="btn btn-cust-print m-l-sm" title="기사 본문 인쇄" type="button">
         <span class="btn__text ">
          기사 본문 인쇄
         </span>
        </button>
       </div>
      </div>
     </div>
    </aside>
    <div class="hdr">
     <div class="hdr-nav-frag">
      <div class="container">
       <a class="fl" href="/" id="logo">
       </a>
       <ul class="compact-actions">
        <li class="action action-entity-sites">
         [linkx]
         
        </li>
        <li class="action action-srch">
         [ahref]
         
        </li>
        <li class="action action-menu">
         [ahref]
         
        </li>
       </ul>
       <div class="actions">
        <div class="actions__safe-wrap">
         <div class="action action-entity-sites">
          <a class="action__link" data-smoothscroll="disabled" href="/navigation/allsites">
           <span class="ico ico-languages">
           </span>
           <span class="action__txt action__txt--entity-sites">
            언어 선택
           </span>
           <span class="arrow-open">
           </span>
          </a>
         </div>
         <div class="action action--editions">
          <a class="action__link" href="/">
           <span class="action__txt " title="Learning English">
            Learning English
           </span>
          </a>
         </div>
         <div class="action action-socials socials">
          <ul class="follow">
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="btn btn--rounded btn-twitter" href="/voa_korean" target="_blank" title="VOA 트위터">
             <span class="ico ico-twitter ico--nobg">
             </span>
            </a>
           </li>
           <li>
            <a class="btn btn--rounded btn-youtube" href="/user/TheVOAKorean" target="_blank" title="VOA 유튜브">
             <span class="ico ico-youtube ico--nobg">
             </span>
            </a>
           </li>
           <li>
            <a class="btn btn--rounded btn-instagram" href="/voakorea/" target="_blank" title="VOA 인스타그램">
             <span class="ico ico-instagram ico--nobg">
             </span>
            </a>
           </li>
           <li>
            <a class="btn btn--rounded btn-soundcloud" href="/voakorea" target="_blank" title="VOA 사운드클라우드">
             <span class="ico ico-soundcloud ico--nobg">
             </span>
            </a>
           </li>
          </ul>
         </div>
        </div>
        <div class="action pnl-srch-top collapsed">
         <form action="/s" id="form-headerSearch" method="get" role="search">
          <li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx]</li>[keywordx]<li>[pkeyx]</li>[keywordx]<li>[mkey1]</li>
         </form>
        </div>
       </div>
      </div>
     </div>
     <div class="sticky-nav-wrap container">
      <div class="sticked-nav-actions">
       [linkx]
       
      </div>
     </div>
     <div class="nav-hdr-outer-container">
      <div class="container" id="nav-hdr-container">
       <div class="navigation collapsed" id="navigation">
        <div class="media">
         <ul class="items">
          <li class="collapsible item collapsed has-box" id="menu-item-listen">
           <a class="handler" href="/Navigation/LiveAudioNJS" tabindex="0" title="라디오 듣기">
            <span class="ico ico-audio-rounded">
            </span>
            <span class="text">
             라디오 듣기
            </span>
            <span class="live">
            </span>
            <span class="ico ico-chevron-up">
            </span>
            <span class="ico ico-chevron-down">
            </span>
            <span class="ico ico-plus">
            </span>
            <span class="ico ico-minus">
            </span>
           </a>
           <div class="inner">
           </div>
          </li>
         </ul>
        </div>
        <div class="menu">
         <ul class="items">
          <li class=" collapsible item">
           <span class="handler">
            한반도
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
             <li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/z/2767">
               정치·안보
              </a>
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/z/4934">
               미국 내 탈북자 이야기[linkx][mkey1]<li>[mkey1]</li>
              </a>
             </li>
            </ul>
           </div>
          </li>
          <li class=" collapsible item">
           <span class="handler">
            세계
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/z/2708">
               유럽
              </a>
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/z/2699">
               아프리카
              </a>
             </li>
             <li class="subitem">
              <a class="handler" href="/z/2826">
               미주·중남미
              </a>
             </li>
            </ul>
           </div>
          </li>
          <li class=" collapsible item">
           <span class="handler">
            라디오
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/radio/programs">
               프로그램
              </a>
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </div>
          </li>
          <li class=" collapsible item">
           <span class="handler">
            TV
            <span class="ico ico-chevron-up" title="close tab">
             [pkeyx][keywordx]<li>[mkey1]</li><li>[ahref]</li>
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <[keywordx]>
            </[keywordx]>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/p/6740.html">
               최신 영상
              </a>
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </div>
          </li>
          <li class=" collapsible item">
           <span class="handler">
            영어교실
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/z/5730">
               Expression Express
              </a>
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/z/5190">
               Everyday Grammar
              </a>
             </li>
            </ul>
           </div>
          </li>
          <li class=" last-menu-item item">
           [ahref]
           
          </li>
          <li class="service item collapsible collapsed show-more">
           <span class="handler" id="service-handler">
            <span class="more">
             더 보기
            </span>
            <span class="ico ico-menu">
            </span>
           </span>
           <div class="inner">
            <ul class="stored-items subitems">
            </ul>
            <ul class="options subitems">
             <li class="edition subitem ">
              [ahref]
              
             </li>
            </ul>
           </div>
          </li>
         </ul>
        </div>
        <div class="menu-box media-nav" id="menu-item-listen-box">
         <div class="container">
          <ul class="items">
           <li class="item" id="tube-52">
            <div class="inner">
             <ul>
              <li class="media-block-wrap hlight">
               [linkx]
               
               <h3 class="section-head">
                <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
               </h3>
               <div>
                <ul>
                 <li>
                  <div class="media-block horizontal has-img size-3">
                   <a class="img-wrap" href="/a/4964774.html" title="VOA 뉴스 투데이 3부">
                    <div class="thumb thumb16_9">
                    </div>
                    <span class="ico ico-audio ico--media-type">
                    </span>
                   </a>
                   <div class="content">
                    <a href="/a/4964774.html">
                     <h4 class="media-block__title">
                      <li>[pkeyx]</li><li>[ahref]</li>[keywordx]
                     </h4>
                    </a>
                   </div>
                  </div>
                 </li>
                </ul>
               </div>
              </li>
              <li class="media-block-wrap upcoming indent-time">
               <li>[mkey1]</li><li>[ahref]</li><li>[mkey1]</li><li>[mkey1]</li>
              </li>
             </ul>
            </div>
           </li>
           <li class="media-block-wrap custom-links">
            <h3 class="section-head">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h3>
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/p/5867.html">
               주파수 안내
              </a>
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/programindex.html">
               라디오 프로그램
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="sticked-nav-popup popup-srch" data-trigger="btn-open-srch">
      <div class="container">
       <div class="stick-srch-form">
        <form action="/s" id="form-stickyNavSearch" method="get" role="search">
         <div class="srch-elem">
          <ul class="form__list">
           <li class="form__group m-tb-0">
            <span class="input-wrap">
             <label class="form__label sr-only" for="txtStickyNavSearch">
              검색
             </label>
            </span>
            <button class="btn btn-srch analyticstag-event" onclick="FireAnalyticsTagEventOnSearch('search', $dom.get('txtStickyNavSearch')[0].value) " title="검색" type="submit">
             <span class="ico ico-search">
             </span>
             <span class="text">
              검색
             </span>
            </button>
           </li>
          </ul>
         </div>
        </form>
        <button class="btn btn-close">
         <span class="ico ico-close">
         </span>
        </button>
       </div>
      </div>
     </div>
     <div class="sticked-nav-popup popup-share" data-trigger="btn-open-sharing-more">
      <div class="container">
       <button class="btn btn-close">
        <span class="ico ico-close">
        </span>
       </button>
      </div>
     </div>
    </div>
    <div class="c-hlights c-hlights--breaking c-hlights--no-item js-hidden" data-hlight-display="mobile,desktop">
     <div class="c-hlights__wrap container p-0">
      <div class="c-hlights__nav">
       [ahref]<li>[mkey1]</li>[keywordx]
      </div>
      <span class="c-hlights__label">
       <span class="">
        속보[ahref][mkey1][mkey1][mkey1][mkey1][mkey1][pkeyx][ahref][linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][pkeyx][keywordx][ahref]
       </span>
       <span class="switcher-trigger">
        <label class="switcher-trigger__label switcher-trigger__label--more p-b-0" for="more-less-1" title="본문 보기">
         <span class="ico ico-chevron-down">
         </span>
        </label>
        <label class="switcher-trigger__label switcher-trigger__label--less p-b-0" for="more-less-1" title="본문 닫기">
         <span class="ico ico-chevron-up">
         </span>
        </label>
       </span>
      </span>
      <ul class="c-hlights__items switcher-target">
      </ul>
     </div>
    </div>
    <div class="c-hlights c-hlights--live hidden-sm hidden-md hidden-lg c-hlights--no-item js-hidden" data-hlight-display="mobile">
     <div class="c-hlights__wrap container p-0">
      <div class="c-hlights__nav">
       <a href="#" role="button" title="이전">
        <span class="ico ico-chevron-backward m-0">
        </span>
        <span class="sr-only">
         이전
        </span>
       </a>
       [linkx]
       
      </div>
      <span class="c-hlights__label">
       <span class="badge badge--live">
        Live
       </span>
       <span class="switcher-trigger">
        <label class="switcher-trigger__label switcher-trigger__label--more p-b-0" for="more-less-2" title="본문 보기">
         <span class="ico ico-chevron-down">
         </span>
        </label>
        <label class="switcher-trigger__label switcher-trigger__label--less p-b-0" for="more-less-2" title="본문 닫기">
         <span class="ico ico-chevron-up">
         </span>
        </label>
       </span>
      </span>
      <ul class="c-hlights__items switcher-target">
      </ul>
     </div>
    </div>
    <div id="content">
     <div class="container">
      <div class="hdr-container">
       <div class="row">
        <div class="col-category col-xs-12 col-md-2 pull-left">
        </div>
        <div class="col-title col-xs-12 col-md-10 pull-right">
         <h1 class="pg-title">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
        </div>
        <div class="col-publishing-details col-xs-12 col-sm-12 col-md-2 pull-left">
         <div class="publishing-details">
          <div class="published">
           <span class="date">
            <time datetime="2018-12-06T04:46:42+09:00">
             2018.12.6
            </time>
           </span>
          </div>
          <div class="links">
           <ul class="links__list links__list--column">
            <li class="links__item">
             <a class="links__item-link" href="/author/19643.html" title="박영서">
              박영서
             </a>
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="col-lg-12 separator">
         <div class="separator">
          <hr class="title-line"/>
         </div>
        </div>
        <div class="col-multimedia col-xs-12 col-md-10 pull-right">
         <div class="cover-media">
          <figure class="media-image js-media-expand">
           <div class="img-wrap">
            <div class="thumb thumb16_9">
            </div>
            <span class="ico ico-fullscreen ico--media-expand ico--rounded">
            </span>
           </div>
           <figcaption>
            <span class="caption" itemprop="caption">
             지난 3일 미국 연방 의사당 앞에 성조기가 조기로 게양돼 있다.
            </span>
           </figcaption>
          </figure>
         </div>
        </div>
        <div class="col-xs-12 col-md-2 pull-left article-share">
         <aside class="share flex-column js-share--apply-sticky js-share--expandable js-share--horizontal">
          <span class="label label--share">
           공유
          </span>
          <ul class="share__list">
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_facebook' })">
            [linkx]
            
            <span class="share__count share__count--facebook share__count--empty">
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_twitter' })">
            [linkx]
            
            <span class="share__count shares__twitter share__count--empty">
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp' })">
            <span class="visible-xs-inline-block visible-sm-inline-block">
             [ahref]
             
             <span class="share__count share__count--whatsapp share__count--empty">
             </span>
            </span>
           </li>
           <li class="share__item">
            <a class="btn btn--rounded btn-email " href="주" title="이메일 공유">
             <span class="ico ico--rounded ico-email ico--l">
             </span>
            </a>
            <span class="share__count share__count--email share__count--empty">
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp_desktop' })">
            <span class="visible-md-inline-block visible-lg-inline-block">
             <a class="btn btn--rounded btn-whatsapp" href="/send?text=https%3a%2f%2fwww.voakorea.com%2fa%2f4688222.html" target="_blank" title="왓츠앱으로 공유하기">
              <span class="ico ico--rounded ico-whatsapp ico--l">
              </span>
             </a>
             <span class="share__count share__count--whatsapp share__count--empty">
             </span>
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line' })">
            <span class="visible-xs-inline-block visible-sm-inline-block">
             [linkx]
             
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line_desktop' })">
            <span class="visible-md-inline-block visible-lg-inline-block">
             <a class="btn btn--rounded btn-line" href="/social-plugin/share?url=https%3a%2f%2fwww.voakorea.com%2fa%2f4688222.html" target="_blank" title="라인으로 공유하기">
              [keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][mkey1][ahref][mkey1][pkeyx][keywordx][ahref][mkey1]
             </a>
            </span>
           </li>
           <li class="share__item share__item--sharing-more">
            [linkx]
            
           </li>
          </ul>
         </aside>
         <div class="sticky-share-container" style="display:none">
          <div class="container">
           [ahref]
           
           <div class="pg-title">
            [타박타박 미국 여행] 미국의 뿌리, 초기 13개주
           </div>
           <div class="sticked-nav-actions">
            <aside class="share share--sticky js-share--expandable">
             <span class="label label--share">
              share
             </span>
             <ul class="share__list">
              <li class="share__item share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_facebook' })">
               [linkx]
               
              </li>
              <li class="share__item share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_twitter' })">
               <a class="btn btn--rounded btn-twitter" href="/share?url=https%3a%2f%2fwww.voakorea.com%2fa%2f4688222.html&amp;text=%eb%af%b8%ea%b5%ad%ec%9d%98+%eb%bf%8c%eb%a6%ac%2c+%ec%b4%88%ea%b8%b0+13%ea%b0%9c%ec%a3%bc" target="_blank" title="트위터로 공유하기">
                <span class="ico ico--rounded ico-twitter ico--s">
                </span>
               </a>
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp' })">
               <span class="visible-xs-inline-block visible-sm-inline-block">
                <a class="btn btn--rounded btn-whatsapp" href="l" target="_blank" title="왓츠앱으로 공유하기">
                 <span class="ico ico--rounded ico-whatsapp ico--s">
                 </span>
                </a>
               </span>
              </li>
              <li class="share__item share__item--additional share__item--horizontal">
               [ahref]
               
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp_desktop' })">
               <span class="visible-md-inline-block visible-lg-inline-block">
                <a class="btn btn--rounded btn-whatsapp" href="/send?text=https%3a%2f%2fwww.voakorea.com%2fa%2f4688222.html" target="_blank" title="왓츠앱으로 공유하기">
                 <span class="ico ico--rounded ico-whatsapp ico--s">
                 </span>
                </a>
               </span>
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line' })">
               <span class="visible-xs-inline-block visible-sm-inline-block">
                <a class="btn btn--rounded btn-line" href="/R/msg/text/?https%3a%2f%2fwww.voakorea.com%2fa%2f4688222.html" target="_blank" title="라인으로 공유하기">
                 <span class="ico ico--rounded ico-line ico--s">
                 </span>
                </a>
               </span>
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line_desktop' })">
               <span class="visible-md-inline-block visible-lg-inline-block">
                [linkx]
                
               </span>
              </li>
              <li class="share__item share__item--sharing-more">
               <a class="btn btn--rounded btn--show-more hidden" title="공유 옵션 더 보기">
                <span class="ico ico--rounded ico-ellipsis ico--s">
                </span>
               </a>
              </li>
             </ul>
            </aside>
           </div>
          </div>
         </div>
         <div class="links">
          <p class="link-print visible-md visible-lg">
           <button class="btn btn--link btn-print" onclick="if (typeof FireAnalyticsTagEvent === 'function') {FireAnalyticsTagEvent({ on_page_event: 'print_story' });}return false" title="(CTRL+P)">
            <span class="ico ico-print">
            </span>
            <span class="btn__text">
             기사 본문 인쇄
            </span>
           </button>
          </p>
         </div>
        </div>
       </div>
      </div>
      <div class="body-container">
       <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-10 col-lg-10 pull-right">
         <div class="row">
          <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8 pull-left bottom-offset content-offset">
           <div class="content-floated-wrap fb-quotable" id="article-content">
            <div class="wsw">
             <p>
              <strong>
               미국의 국기인 성조기는 50개의 별과 13개의 줄로 이뤄져 있습니다. 이 13개의 줄이 바로 미국의 초기 13개 주를 의미하는 건데요. 대서양 연안 동부지역에 있는 이 13개 주는 원래 영국의 13개 식민지로, 미국의 역사와 획을 같이 하는 주들이라고 할 수 있습니다. 미국 곳곳의 문화와 풍물, 다양한 이야깃거리 찾아가는 타박타박 미국 여행, 오늘은 미국의 초기 13개 주에 대해 살펴보도록 하겠습니다.
              </strong>
             </p>
             <div class="wsw__embed">
              <div class="media-pholder media-pholder--audio media-pholder--embed">
               <div class="c-sticky-container" data-poster="https://gdb.voanews.com/C5898DC1-1A97-4309-835F-CB005ECBB2A9_cx0_cy10_cw100_w250_r1.jpg">
                <div class="c-sticky-element" data-persistent="" data-sp_api="pangea-video">
                 <div class="c-mmp c-mmp--enabled c-mmp--loading c-mmp--audio c-mmp--embed c-mmp--has-poster c-sticky-element__swipe-el" data-breakpoint_l="992" data-breakpoint_m="640" data-breakpoint_s="320" data-hide-title="False" data-hlsjs-src="/Scripts/responsive/hls.b" data-player_id="" data-title="[타박타박 미국 여행 오디오] 미국의 뿌리, 초기 13개주">
                  <div class="c-mmp__poster js-poster">
                  </div>
                  <a class="c-mmp__fallback-link" href=")">
                   <span class="c-mmp__fallback-link-icon">
                    <span class="ico ico-audio">
                    </span>
                   </span>
                  </a>
                  <div class="c-spinner">
                  </div>
                  <div class="c-mmp__player">
                   <audio data-fallbacksrc="" data-fallbacktype="" data-info="64 kbps" data-lt-on-play="1" data-lt-url="https://livetracker.voa.pangea-cms.com/counter.lt?PageType=128&amp;RecordId=4688224&amp;SiteId=424&amp;r=715205182&amp;it=0&amp;pd=20181205194500" data-sources='[{"AmpSrc":"https://av.voanews.com/clips/VKO/2018/12/05/f244314b-3220-4a0c-8f59-dab1f1e0f1fc_hq.mp3","Src":"https://av.voanews.com/clips/VKO/2018/12/05/f244314b-3220-4a0c-8f59-dab1f1e0f1fc_hq.mp3","Type":"audio/mp3","DataInfo":"128 kbps","Url":null,"BlockAutoTo":null,"BlockAutoFrom":null}]' data-type="audio/mp3" playsinline="playsinline" src="https://av.voanews.com/clips/VKO/2018/12/05/f244314b-3220-4a0c-8f59-dab1f1e0f1fc.mp3" style="width:100%;height:140px" title="[타박타박 미국 여행 오디오] 미국의 뿌리, 초기 13개주" webkit-playsinline="webkit-playsinline">
                   </audio>
                  </div>
                  <div class="c-mmp__overlay c-mmp__overlay--title c-mmp__overlay--partial c-mmp__overlay--disabled c-mmp__overlay--slide-from-top js-c-mmp__title-overlay">
                   <span class="c-mmp__overlay-actions c-mmp__overlay-actions-top js-overlay-actions">
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--embed js-btn-embed-overlay" title="Embed">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-embed-code">
                     </span>
                     <span class="c-mmp__overlay-actions-link-text">
                      Embed
                     </span>
                    </span>
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--share js-btn-sharing-overlay" title="share">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-share">
                     </span>
                     <span class="c-mmp__overlay-actions-link-text">
                      share
                     </span>
                    </span>
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--close-sticky c-sticky-element__close-el" title="close">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-close">
                     </span>
                    </span>
                   </span>
                   <div class="c-mmp__overlay-title js-overlay-title">
                    <h5 class="c-mmp__overlay-media-title">
                     <a class="js-media-title-link" href="/a/4688224.html" target="_blank" title="[타박타박 미국 여행 오디오] 미국의 뿌리, 초기 13개주">
                      [타박타박 미국 여행 오디오] 미국의 뿌리, 초기 13개주
                     </a>
                    </h5>
                    <div class="c-mmp__overlay-site-title">
                     <small>
                      제작:
                      <a href="m" target="_blank" title="VOA">
                       VOA
                      </a>
                     </small>
                    </div>
                   </div>
                  </div>
                  <div class="c-mmp__overlay c-mmp__overlay--sharing c-mmp__overlay--disabled c-mmp__overlay--slide-from-bottom js-c-mmp__sharing-overlay">
                   <span class="c-mmp__overlay-actions">
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--embed js-btn-embed-overlay" title="Embed">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-embed-code">
                     </span>
                     <span class="c-mmp__overlay-actions-link-text">
                      Embed
                     </span>
                    </span>
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--share js-btn-sharing-overlay" title="share">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-share">
                     </span>
                     <span class="c-mmp__overlay-actions-link-text">
                      share
                     </span>
                    </span>
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--close js-btn-close-overlay" title="close">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-close">
                     </span>
                    </span>
                   </span>
                   <div class="c-mmp__overlay-tabs">
                    <div class="c-mmp__overlay-tab c-mmp__overlay-tab--disabled c-mmp__overlay-tab--slide-backward js-tab-embed-overlay" data-embed-source="//www.voakorea.com/embed/player/0/4688224.html?type=audio" data-trigger="js-btn-embed-overlay" role="form">
                     <div class="c-mmp__overlay-body c-mmp__overlay-body--centered-vertical">
                      <div class="column">
                       <div class="c-mmp__status-msg ta-c js-message-embed-code-copied" role="tooltip">
                        The code has been copied to your clipboard.
                       </div>
                       <div class="c-mmp__form-group ta-c">
                       </div>
                      </div>
                     </div>
                    </div>
                    <div class="c-mmp__overlay-tab c-mmp__overlay-tab--disabled c-mmp__overlay-tab--slide-forward js-tab-sharing-overlay" data-trigger="js-btn-sharing-overlay" role="form">
                     <div class="c-mmp__overlay-body c-mmp__overlay-body--centered-vertical">
                      <div class="column">
                       <div class="c-mmp__status-msg ta-c js-message-share-url-copied" role="tooltip">
                        The URL has been copied to your clipboard
                       </div>
                       <div class="not-apply-to-sticky audio-fl-bwd">
                        <aside class="player-content-share share share--mmp">
                         <ul class="share__list">
                          <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_facebook' })">
                           <a class="btn bg-transparent btn-facebook" href="/sharer.php?u=https%3a%2f%2fwww.voakorea.com%2fa%2f4688224.html" target="_blank" title="페이스북으로 공유하기">
                            <span class="ico fs-xl ico-facebook ">
                            </span>
                            <span class="btn__text sr-only">
                             페이스북으로 공유하기
                            </span>
                           </a>
                           <span class="share__count share__count--facebook share__count--empty">
                           </span>
                          </li>
                          <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_twitter' })">
                           [linkx]
                           
                           <span class="share__count shares__twitter share__count--empty">
                           </span>
                          </li>
                          <li class="share__item share__item--sharing-more">
                           [linkx]
                           
                          </li>
                          <li class="share__item share__item--sharing-more">
                           <a class="btn bg-transparent" href="/a/4688224.html" target="_blank" title="Share this media">
                            <span class="ico ico-ellipsis ">
                            </span>
                           </a>
                          </li>
                         </ul>
                        </aside>
                       </div>
                       <hr class="c-mmp__separator-line audio-fl-bwd xs-hidden s-hidden"/>
                       <div class="c-mmp__form-group ta-c audio-fl-bwd xs-hidden s-hidden">
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                  <div class="c-mmp__overlay c-mmp__overlay--settings c-mmp__overlay--disabled c-mmp__overlay--slide-from-bottom js-c-mmp__settings-overlay">
                   <span class="c-mmp__overlay-actions">
                    <span class="c-mmp__overlay-actions-link c-mmp__overlay-actions-link--close js-btn-close-overlay" title="close">
                     <span class="c-mmp__overlay-actions-link-ico ico ico-close">
                     </span>
                    </span>
                   </span>
                   <div class="c-mmp__overlay-body c-mmp__overlay-body--centered-vertical">
                    <div class="column column--scrolling js-sources">
                    </div>
                   </div>
                  </div>
                  <div class="c-mmp__overlay c-mmp__overlay--disabled js-c-mmp__disabled-overlay">
                   <div class="c-mmp__overlay-body c-mmp__overlay-body--centered-vertical">
                    <div class="column">
                     <p class="ta-c">
                      <span class="ico ico-clock">
                      </span>
                      No media source currently available
                     </p>
                    </div>
                   </div>
                  </div>
                  <div class="c-mmp__cpanel-container js-cpanel-container">
                   <div class="c-mmp__cpanel c-mmp__cpanel--hidden">
                    <div class="c-mmp__cpanel-playback-controls">
                     <span class="c-mmp__cpanel-btn c-mmp__cpanel-btn--play js-btn-play" title="play">
                      <span class="ico ico-play m-0">
                      </span>
                     </span>
                     <span class="c-mmp__cpanel-btn c-mmp__cpanel-btn--pause js-btn-pause" title="pause">
                      <span class="ico ico-pause m-0">
                      </span>
                     </span>
                    </div>
                    <div class="c-mmp__cpanel-progress-controls">
                     <span class="c-mmp__cpanel-progress-controls-current-time js-current-time" dir="ltr">
                      0:00
                     </span>
                     <span class="c-mmp__cpanel-progress-controls-duration js-duration" dir="ltr">
                      0:10:07
                     </span>
                     <span class="c-mmp__indicator c-mmp__indicator--horizontal" dir="ltr">
                      <span class="c-mmp__indicator-lines js-progressbar">
                       <span class="c-mmp__indicator-line c-mmp__indicator-line--range js-playback-range" style="width:100%">
                       </span>
                       <span class="c-mmp__indicator-line c-mmp__indicator-line--buffered js-playback-buffered" style="width:0%">
                       </span>
                       <span class="c-mmp__indicator-line c-mmp__indicator-line--tracked js-playback-tracked" style="width:0%">
                       </span>
                       <span class="c-mmp__indicator-line c-mmp__indicator-line--played js-playback-played" style="width:0%">
                       </span>
                       <span class="c-mmp__indicator-line c-mmp__indicator-line--live js-playback-live">
                        <span class="strip">
                        </span>
                       </span>
                       <span class="c-mmp__indicator-btn ta-c js-progressbar-btn">
                        <button class="c-mmp__indicator-btn-pointer" type="button">
                        </button>
                       </span>
                       <span class="c-mmp__badge c-mmp__badge--tracked-time c-mmp__badge--hidden js-progressbar-indicator-badge" dir="ltr" style="left:0%">
                        <span class="c-mmp__badge-text js-progressbar-indicator-badge-text">
                         0:00
                        </span>
                       </span>
                      </span>
                     </span>
                    </div>
                    <div class="c-mmp__cpanel-additional-controls">
                     [pkeyx][mkey1]<li>[linkx]</li>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
               </div>
               <div class="media-download">
                <div class="simple-menu">
                 <span class="handler">
                  <span class="ico ico-download">
                  </span>
                  <span class="label">
                   다운로드
                  </span>
                  <span class="ico ico-chevron-up">
                  </span>
                  <span class="ico ico-chevron-down">
                  </span>
                 </span>
                 <div class="inner">
                  <ul class="subitems">
                   <li class="subitem">
                    <a class="handler" href="/clips/VKO/2018/12/05/f244314b-3220-4a0c-8f59-dab1f1e0f1fc_hq.mp3?download=1" onclick="FireAnalyticsTagEventOnDownload(this, 'audio', 4688224, '[타박타박 미국 여행 오디오] 미국의 뿌리, 초기 13개주', null, '', '2018', '12', '06')" title="128 kbps | MP3">
                     128 kbps | MP3
                    </a>
                   </li>
                   <li class="subitem">
                    [linkx]
                    
                   </li>
                  </ul>
                 </div>
                </div>
               </div>
               <button class="btn btn--link btn-popout-player" data-default-display="block" data-popup-url="/pp/4688224/ppt0.html" title="팝업플레이어로 재생">
                <span class="ico ico-arrow-top-right">
                </span>
                <span class="text">
                 팝업플레이어로 재생
                </span>
               </button>
              </div>
             </div>
             <p>
              가장 먼저 매사추세츠주부터 살펴보죠. 1620년, 미국의 선조들이 종교의 자유를 찾아 영국을 떠나 오랜 항해 끝에 제일 처음 도착한 곳이 바로 지금의 매사추세츠 지역입니다. 또 영국과의 독립전쟁에 도화선이 됐던 보스턴 차 사건도 바로 이곳, 매사추세츠주에서 일어났는데요. 그래서 매사추세츠주는 미국 역사의 뿌리이자 독립운동의 태동지라는 별명도 갖고 있습니다.
             </p>
             <p>
              [녹취: 하버드 대학교 홍보 영상]
             </p>
             <p>
              매사추세츠주의 자랑을 꼽으라면 유서 깊은 교육의 고장이라는 겁니다. 세계적인 명문인 하버드대학과 세계 최첨단 과학기술의 산실이라고 불리는 매사추세츠공과대학(MIT), 보스턴칼리지, 웰즐리대학교 같은 명문 대학들이 매사추세츠에 있습니다.
             </p>
             <p>
              13개 주 중에서 제일 위쪽에 있는 주는 '뉴햄프셔주'인데요. 매사추세츠 주 바로 위에 있고요. 북쪽으로 캐나다 퀘벡과 국경을 접하고 있는데요. "자유가 아니면 죽음"이라는 결연한 구호를 주의 모토(Motto)로 삼을 만큼 미국의 독립 정신이 주민들의 삶 곳곳에 스며있습니다. 뉴햄프셔주는 면적이나 인구 면에서 그리 큰 주는 아니지만 정치적으로는 상당한 비중을 갖고 있는데요.
             </p>
             <p>
              [녹취: 뉴햄프셔주 예비선거]
             </p>
             <p>
              미국에서 대통령 선거가 치러질 때, 가장 먼저 예비선거를 하기 때문에 대선의 향방을 가늠할 풍향계라는 자부심이 대단합니다.
             </p>
             <p>
              뉴햄프혀주에서 내려와 매사추세츠 주를 거치면 로드아일랜드라는 정말 작은 주가 나오는데요. 미국 50개 주 가운데서 가장 작은 주입니다. 하지만 유서 깊은 역사와 전형적인 뉴잉글랜드의 풍경을 갖고 있는 이곳 주민들은 크기가 전부가 아니라고들 말하죠. 흔히 아이비리그라고 불리는 동부 명문 8개 대학 중 하나인 '브라운대학교', 미국 최고의 명문 예술 대학의 하나인 '로드아일랜드스쿨오브디자인(RISD)' 학교가 여기 있습니다.
             </p>
             <p>
              로드아일랜드 옆으로 코네티컷주가 있는데요. 코네티컷 역시 50개 주 가운데 면적 순위 48번째로 작은 주지만, 미국 최초로 성문법을 만들어 '헌법의 주'라는 묵직한 별명을 갖고 있는 주입니다.
             </p>
             <p>
              [녹취: 양키 두들(Yankee Doodle) 노래]
              <br/>
              <br/>
              코네티컷주는 또, 미국인들의 대명사처럼 여겨지기도 하는 '양키'의 본고장을 자처하는 주기도 하고요. 아이비리그의 하나인 '예일대학교'가 코네티컷주에 있습니다.
             </p>
             <p>
              코네티컷 옆으로 갑자기 큰 주가 나타나는데요. 바로 뉴욕주입니다. 워낙 앞에 소개해드렸던 주들이 작아서 크게 느껴지지만, 뉴욕주의 면적도 50개 주 중 27위로 사실은 중간쯤 하는 곳입니다. 미국에는 주보다 도시가 더 유명한 곳이 몇 있는데, 뉴욕이 바로 그런 경우인데요. 많은 사람이 뉴욕 하면 하늘을 찌를 듯 초고층 건물들이 빽빽이 들어서 있는 뉴욕시를 떠올리게 되죠. 뉴욕시는 자유와 기회, 다양성으로 상징되는 미국의 대표적인 모습이라고 하겠습니다.
              <br/>
              <br/>
              뉴욕주 밑에는 뉴저지주가 있는데요. 뉴욕주와 뉴저지주는 원래 한 줄기라고 할 수 있습니다. 이 지역은 1620년대 뉴암스테르담이라는 이름의 네덜란드 식민지였는데요. 영국에 넘어가게 된 후, 영국 왕 찰스 2세가 자기 동생인 요크 공작에게 땅을 준 것이 뉴욕주고요. 요크 공작이 친구에게 뉴욕 일부를 떼어준 게 뉴저지주가 된 겁니다. 뉴욕시와 뉴저지주는 다리 하나만 건너면 연결되기 때문에, 많은 사람이 일터는 뉴욕시에, 집은 뉴저지에 갖고 있는 경우가 많은데요. 특히 뉴저지주의 팰리세이즈파크라는 곳은 주민 2명당 1명이 한인일 정도로 한인 인구 밀도가 높습니다.
             </p>
             <p>
              뉴저지주 옆으로는 펜실베이니아주가 자리 잡고 있습니다. 펜실베이니아주도 뉴욕주보다는 작지만 앞서 13개 주 중에서는 제법 땅이 크죠. 또 마찬가지로 풍부한 역사를 자랑하고 있는 곳입니다. 미국이 영국에서 독립하겠다고 선포했던 곳이 바로 이 펜실베이니아의 도시, 필라델피아였고요. 미국의 근간이 되는 미합중국의 헌법이 만들어진 곳도, 미국의 성조기가 만들어진 곳도 바로 필라델피아였습니다. 그래서 펜실베이니아는 초기 13개 주 중에서도 특히 미국 독립과 건국의 정신이 도처에 살아 숨 쉬는 역사의 보고 같은 곳입니다.
             </p>
             <p>
              펜실베이니아 밑으로는 메릴랜드주가 있습니다. 메릴랜드주는 래리 호건 주지사의 부인이 한국계 여성이어서 한국인들이 특히 친숙히 여기는 주 가운데 하나인데요.
             </p>
             <p>
              [녹취: 유미 호건 메릴랜드 주지사 부인]
             </p>
             <p>
              미국 50개 주 최초로 한국계 주지사 부인이라는 영예를 얻게 된 유미 호건 여사가 소개하는 메릴랜드주 이야기 잠시 들어보셨는데요. 메릴랜드는 전통적으로 민주당의 견고한 아성이지만, 공화당 출신의 래리 호건 주지사는 지난 11월 중간선거에서 재임에 성공할 만큼 인기가 좋습니다. 메릴랜드의 명소이자 자랑으로 주도인 아나폴리스에 있는 미국 해군사관학교가 있습니다.
             </p>
             <p>
              메릴랜드 옆으로는 델라웨어주가 있습니다. 델라웨어는 로드아일랜드 다음으로 작은 주입니다. 그런데도 '첫 번째 주(The First State)'라는 자못 거창한 별명을 갖고 있는데요. 13개 주 가운데서 제일 처음 연방 헌법을 승인하면서 연방에 가입했기 때문입니다. 델라웨어주는 특별히 소비세를 걷지 않기 때문에, 주민들이 세금 걱정을 덜 하는 주 중의 하나입니다. 또 세계적인 화학회사인 '듀폰'사가 터줏대감처럼 버티고 있어 주 경제에 큰 도움이 된다고 하네요.
             </p>
             <p>
              메릴랜드주 밑으로는 연인들을 위한 곳이라고 달콤하게 주장하는 버지니아주가 있습니다. 버지니아는 미국에서 가장 오래된 영국의 식민지였는데요. 그래서 제임스타운과 윌리엄스버그 등 신대륙 개척 초기의 역사 유적지가 많습니다. 현재 버지니아는 주 하나에 두 개의 주가 있다는 소리를 들을 만큼 남부와 북부의 차이가 확연한데요. 메릴랜드, 워싱턴 D.C.와 더불어 수도권 지역으로 불리는 북쪽은 개방적이고 미국에서도 잘 사는 곳에 속하는데요. 담배 농사와 농업을 주로 하는 남쪽은 상대적으로 삶의 질이 떨어지고요. 보수적인 색채가 강한 편입니다.
             </p>
             <p>
              버지니아 밑으로 노스캐롤라이나주, 그리고 바로 그 밑으로 사우스캐롤라이나주가 있습니다. 이름에서 짐작하시겠지만, 원래 캐롤라이나라는 한 곳에서 남북이 갈라져 생긴 주들인데요. 노스캐롤라이나는 라이트 형제가 인류 최초로 동력 비행기로 하늘을 날았던 곳으로 유명합니다. 사우스캐롤라이나는 흑인 노예해방에 반대해 가장 먼저 연방에서 탈퇴한 주인데요. 남북전쟁의 첫 포성이 울렸던 곳으로 지금도 남부의 자긍심이 대단한 곳입니다.
             </p>
             <p>
              자, 이제 13개 주의 마지막 하나 남은 주네요. 바로 조지아주인데요. 사우스캐롤라이나의 옆에 붙어 있는 조지아주는 몇 년 전만 해도 농촌의 이미지가 매우 강했는데요. 하지만 뉴스 전문방송 CNN, 소포 배달 전문업체 UPS, 델타 항공을 비롯해 한국 현대, 기아 자동차 등 굵직한 대형 기업들이 들어서면서, 현재 남부 지역의 산업과 경제를 든든하게 받쳐주고 있고요. 남부의 제국이라는 별명도 갖고 있습니다. 또 오늘날 전 세계 안 들어간 나라가 거의 없다는 세계적인 탄산음료, 코카콜라가 처음 탄생한 곳이기도 하죠.
             </p>
             <p>
              [녹취: 마틴 루터 킹 목사 연설]
             </p>
             <p>
              미국의 유명한 민권 운동가, 마틴 루터 킹 목사의 목소리인데요. 조지아주는 미국 민권운동의 상징으로 불리는 킹 목사가 나고 자란 곳으로 미국 민권 운동의 산실로 불리고 있습니다.
             </p>
             <p>
              자, 이렇게 해서 미국 초기 13개 주, 제일 북쪽 뉴햄프셔부터 매사추세츠, 로드아일랜드, 코네티컷, 뉴욕, 뉴저지, 펜실베이니아, 메릴랜드, 델라웨어, 버지니아, 노스캐롤라이나, 사우스캐롤라이나, 조지아까지 모두 훑어봤는데요. 어떻게 미국의 초기 13개 주의 그림이 조금이나마 그려졌으면 좋겠네요. 네, 타박타박 미국 여행, 오늘은 여기서 인사드리고요. 다음 주에는 미국의 중부와 남부 주들 정리해드리겠습니다. 오늘도 함께 해주신 여러분 고맙습니다. 박영서였습니다.
             </p>
            </div>
            <ul>
            </ul>
           </div>
          </div>
          <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 pull-left design-top-offset">
           <div class="media-block-wrap">
            <h3 class="section-head">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h3>
            <div class="row">
             <ul>
              <li class="col-xs-12 col-sm-6 col-md-12 col-lg-12">
               <div class="media-block horizontal has-img size-4">
                [ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][keywordx][keywordx][linkx][mkey1][mkey1][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx]
               </div>
              </li>
              <li class="col-xs-12 col-sm-6 col-md-12 col-lg-12">
               <div class="media-block horizontal has-img size-4">
                [ahref]
                
                <div class="content">
                 [linkx]
                 
                </div>
               </div>
              </li>
              <li class="col-xs-12 col-sm-6 col-md-12 col-lg-12">
               <div class="media-block horizontal has-img size-4">
                [ahref]
                
                <div class="content">
                 [linkx]
                 
                </div>
               </div>
              </li>
              <li class="col-xs-12 col-sm-6 col-md-12 col-lg-12">
               <div class="media-block horizontal has-img size-4">
                <a class="img-wrap" href="/a/4627485.html" title="옐로스톤 국립공원을 품은 곳, 와이오밍 ">
                 <div class="thumb thumb16_9">
                 </div>
                </a>
                <div class="content">
                 [linkx]
                 
                </div>
               </div>
              </li>
             </ul>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="back-to-top-nav disabled visible-xs">
     <div class="container">
      <div class="row">
       <div class="col-xs-12">
        <a class="back-to-top-link" href="e" title="Back to top">
         <span class="ico ico-chevron-up">
         </span>
         <span class="text">
          Back to top
         </span>
        </a>
       </div>
      </div>
     </div>
    </div>
    <footer role="contentinfo">
     <div class="foot" id="foot">
      <div class="container">
       <div class="foot-nav collapsed" id="foot-nav">
        <div class="menu">
         <ul class="items">
          <li class="socials block-socials">
           <span class="handler" id="socials-handler">
            Follow Us
           </span>
           <div class="inner">
            <ul class="subitems follow">
             <li>
              <a class="btn btn--rounded btn-facebook" href="/voakorea" target="_blank" title="VOA 페이스북">
               <span class="ico ico-facebook ico--rounded">
               </span>
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a class="btn btn--rounded btn-instagram" href="/voakorea/" target="_blank" title="VOA 인스타그램">
               <span class="ico ico-instagram ico--rounded">
               </span>
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="btn btn--rounded btn-podcast" href="/podcasts" title="Podcast">
               <span class="ico ico-podcast ico--rounded">
               </span>
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="block-primary collapsed collapsible item">
           <span class="handler">
            앱/뉴스레터
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/store/apps/details?id=com.voanews.voako" onclick="window.open('https://play.google.com/store/apps/details?id=com.voanews.voako');return false;" target="_blank">
               구글 안드로이드
              </a>
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/subscribe.html">
               뉴스레터 신청
              </a>
             </li>
            </ul>
           </div>
          </li>
          <li class="block-primary collapsed collapsible item">
           <span class="handler">
            방송국 소개
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/p/3955.html">
               VOA
              </a>
             </li>
             <li class="subitem">
              <a class="handler" href="/p/5867.html">
               주파수 안내
              </a>
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              <a class="handler" href="/a/4686542.html" onclick="window.open('https://www.insidevoa.com/a/4686542.html');return false;" target="_blank">
               VOA Best Practices Guide
              </a>
             </li>
             <li class="subitem">
              <a class="handler" href="/p/5338.html">
               개인정보취급방침
              </a>
             </li>
             <li class="subitem">
              <a class="handler" href="/korean/">
               RFA
              </a>
             </li>
            </ul>
           </div>
          </li>
         </ul>
        </div>
       </div>
       <div class="foot__item foot__item--copyrights">
        <p class="copyright">
         VOA 한국어 © 2019
        </p>
       </div>
      </div>
     </div>
    </footer>
   </div>
  </div>
  <div class="responsive-indicator">
   <div class="visible-xs-block">
    XS
   </div>
   <div class="visible-sm-block">
    SM
   </div>
   <div class="visible-md-block">
    MD
   </div>
   <div class="visible-lg-block">
    LG
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0324
  </b>
 </body>
</html>|<---