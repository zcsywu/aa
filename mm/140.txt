--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="" name="csrf-token"/>
  <meta content="width=device-width" name="viewport"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="article" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="kr_KO" property="og:locale"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="https://images.france.fr/zeaejvyq9bhj/3C4ZQAs92Eeo2UCaKAOMoy/7f7fe7e316f3347c603bccd8981273f3/barenvarenneyeog1.jpg?w=1200&amp;h=630&amp;q=70&amp;fl=progressive&amp;fit=fill" property="og:image"/>
  <meta content="https://images.france.fr/zeaejvyq9bhj/3C4ZQAs92Eeo2UCaKAOMoy/7f7fe7e316f3347c603bccd8981273f3/barenvarenneyeog1.jpg?w=1200&amp;h=630&amp;q=70&amp;fl=progressive&amp;fit=fill" name="twitter:image"/>
  <meta content="@KR_FranceFR" name="twitter:site"/>
  <meta content="@KR_FranceFR" name="twitter:creator"/>
 </head>
 <body class="theme-paris lang-ko">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-N3FWS4" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div id="app">
   <header>
    <nav data-component="HeaderMenu" data-habitat-no-replace="true">
     <div>
      <div class="container-header">
       <div>
        <a class="logo" href="/ko" target="_self" title="홈 화면으로 돌아가기">
        </a>
        [ahref]
        
        <div class="magnifier-desktop search__cta">
         <div class="square-button background-color-default ">
          <div class="wrap-icon">
           <i class="icon-magnifier right">
           </i>
          </div>
         </div>
        </div>
        <div class="magnifier-mobile search__cta">
         <div class="square-button background-white ">
          <div class="wrap-icon">
           <i class="icon-magnifier right">
           </i>
          </div>
         </div>
        </div>
        <div class="hamburger">
         <div class="square-button background-color-default ">
          <div class="wrap-icon">
           <i class="icon-nav right">
           </i>
          </div>
         </div>
        </div>
        <ul class="container-category">
         <li class="category " data-key="now-in-france">
          [ahref]
          
         </li>
         <li class="category " data-key="where-to-go">
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-category="Menu" data-prop-event="clic-menu" data-prop-label="https://kr.france.fr/ko/places-to-go" href="/ko/places-to-go">
           <p>
            어디로 갈까?
           </p>
           <div class="indicator">
           </div>
          </a>
         </li>
         <li class="category " data-key="what-to-do">
          [ahref]
          
         </li>
         <li class="category " data-key="prepare-yourself">
          [ahref]
          
         </li>
        </ul>
        <div class="container-pannel header-now-in-france-section" data-key="now-in-france">
         <div class="one-column-full one-column-gutters">
          <div class="two-columns-header">
           <div class="first-column">
            <div class="back">
             <i class="icon-arrow">
             </i>
             <p>
              지금 프랑스에서는?
             </p>
            </div>
            <div class="section-title color-default">
             놓치지
             <br/>
             마세요
             <span class="dot background-color-orange">
             </span>
            </div>
            <div class="description">
             <p>
              페스티벌, 전시회, 콘서트, 대형 이벤트... France.fr에서 연중 프랑스 전역에서 열리는 풍성한 이벤트 정보를 확인해 보세요.
             </p>
            </div>
            <div class="links">
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="추천 행사" href="/ko/happening-now-in-france?event=41">
               <div class="small-arrow-link-cta icon-play">
                추천 행사
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="색다른 행사" href="/ko/happening-now-in-france?event=99">
               [pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][mkey1][pkeyx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]
              </a>
             </div>
             <div class="small-arrow-link">
              [ahref]
              
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="진행 중인 행사" href="/ko/happening-now-in-france">
               <div class="small-arrow-link-cta icon-play">
                진행 중인 행사
               </div>
              </a>
             </div>
            </div>
            <div class="more-events-cta">
             <div class="inline-button ">
              [ahref]
               [keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx][linkx][pkeyx][pkeyx][pkeyx][ahref][keywordx][mkey1][pkeyx][linkx][pkeyx][linkx][mkey1][ahref][linkx][keywordx][keywordx][linkx][ahref][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][mkey1][linkx][mkey1][ahref][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref]
              
             </div>
            </div>
           </div>
           <div class="second-column">
            <div class="section-title color-default">
             주목할
             <br/>
             행사
             <span class="dot background-color-orange">
              <li>[ahref]</li>[keywordx][pkeyx][ahref]
             </span>
            </div>
            <div class="wrap">
             <div class="half-of-two-columns ">
              <div class="inline-event-push big">
               [ahref]
               
              </div>
             </div>
             <div class="half-of-two-columns last-columns">
              <div class="inline-event-push big">
               <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Article_Maintenant" data-prop-category="Menu" data-prop-event="clic-nowinfrance-menu-featured-article" data-prop-label="https://kr.france.fr/ko/happening-now-in-france/marseille-provence-gastronomie-2019" href="/ko/happening-now-in-france/marseille-provence-gastronomie-2019" target="_self" title="2019 마르세유-프로방스 미식의 해 (MPG 2019)">
                <div class="top-container">
                </div>
                <div class="bottom">
                 <p class="title">
                  2019 마르세유-프로방스 미식의 해 (MPG 2019)
                 </p>
                 <p class="date-to">
                  종료 날짜 31 12월
                 </p>
                </div>
               </a>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="container-pannel header-where-to-go-section" data-key="where-to-go">
         <div class="one-column-full one-column-gutters">
          <div class="full-column-header">
           <div class="back">
            <i class="icon-arrow">
            </i>
            <p>
             어디로 갈까?
            </p>
           </div>
           <div class="section-title color-default">
            다양한 여행지를
            <br>
             [pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][ahref][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][ahref][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][ahref][linkx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][keywordx]
            </br>
            확인해 보세요
            <span class="dot background-color-orange">
            </span>
           </div>
           <div class="description">
            오늘은 어떤 프랑스를 만나보고 싶으세요? 알프스, 몽블랑, 노르망디, 프로방스, 루아르 계곡, 파리, 타히티... 30개 이상의 다양한 프랑스 여행지를 만나보세요.
           </div>
           <div class="cities-container">
            <div class="cities-group">
             <div class="cities-group-content">
              <ul class="city-list">
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="샹파뉴" href="/ko/champagne">
                  <div class="small-arrow-link-cta icon-play">
                   샹파뉴
                  </div>
                 </a>
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="알자스 - 로렌" href="/ko/alsace-lorraine">
                  <div class="small-arrow-link-cta icon-play">
                   알자스 - 로렌
        [linkx][linkx]<li>[linkx]</li>[linkx][mkey1]
                  </div>
                 </a>
                </div>
               </li>
              </ul>
              <ul class="city-list">
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="코트다쥐르" href="/ko/cote-dazur">
                  <div class="small-arrow-link-cta icon-play">
                   코트다쥐르
                  </div>
                 </a>
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="파리" href="/ko/paris">
                  <div class="small-arrow-link-cta icon-play">
                   파리
                  </div>
                 </a>
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="피레네" href="/ko/pyrenees">
                  <div class="small-arrow-link-cta icon-play">
                   피레네
                  </div>
                 </a>
                </div>
               </li>
              </ul>
             </div>
            </div>
            <div class="cities-group">
             <div class="cities-group-content">
              <ul class="city-list">
               <li class="subCategoryTitle">
                대서양
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [linkx]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="생피에르에미클롱" href="/ko/saint-pierre-et-miquelon">
                  <div class="small-arrow-link-cta icon-play">
                   생피에르에미클롱
                  </div>
                 </a>
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
              </ul>
              <ul class="city-list">
               <li class="subCategoryTitle">
                인도양
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="레위니옹섬" href="/ko/reunion">
                  <div class="small-arrow-link-cta icon-play">
                   레위니옹섬
                  </div>
                 </a>
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
              </ul>
              <ul class="city-list">
               <li class="subCategoryTitle">
                태평양
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="뉴칼레도니아" href="/ko/new-caledonia">
                  <div class="small-arrow-link-cta icon-play">
                   뉴칼레도니아
                  </div>
                 </a>
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 [ahref]
                 
                </div>
               </li>
               <li>
                <div class="small-arrow-link">
                 <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="타히티-프랑스령 폴리네시아" href="/ko/tahiti-french-polynesia">
                  <div class="small-arrow-link-cta icon-play">
                   타히티-프랑스령 폴리네시아
                  </div>
                 </a>
                </div>
               </li>
              </ul>
             </div>
            </div>
           </div>
           <div class="map-discover-cta">
            <div class="inline-button ">
             [linkx]
             
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="container-pannel header-what-to-do-section" data-key="what-to-do">
         <div class="one-column-full one-column-gutters">
          <div class="two-columns-header">
           <div class="first-column">
            <div class="back">
             <i class="icon-arrow">
              [pkeyx]<li>[mkey1]</li>[mkey1]
             </i>
             <p>
              무엇을 할까?
             </p>
            </div>
            <div class="section-title color-default">
             프랑스를
             <br/>
             경험하세요.
             <span class="dot background-color-orange">
             </span>
            </div>
            <div class="description">
             뛰어난 문화명소 방문, 높은 산 정상을 오르는 트레킹, 로맨틱한 와이너리 투어 또는 아이들과 함께하는 크루즈 여행... 이번 프랑스 여행은 어떤 테마로 떠나고 싶으신가요?
            </div>
            <div class="links">
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="와인" href="/ko/theme-wine">
               <div class="small-arrow-link-cta icon-play">
                와인
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="Culture" href="/ko/theme-culture">
               <div class="small-arrow-link-cta icon-play">
                문화
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              [linkx]
              
             </div>
             <div class="small-arrow-link">
              [linkx]
              
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="골프" href="/ko/theme-golf">
               <div class="small-arrow-link-cta icon-play">
                골프
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              [ahref]
              
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="장인, 수공예" href="/ko/theme-art-and-craft">
               <div class="small-arrow-link-cta icon-play">
                장인, 수공예
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="바다, 해변" href="/ko/theme-seaside">
               <div class="small-arrow-link-cta icon-play">
                바다, 해변
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="패션" href="/ko/theme-fashion">
               <div class="small-arrow-link-cta icon-play">
                패션
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              [ahref]
              
             </div>
            </div>
            <div class="head showTablet">
             <div class="button">
              <div class="inline-button ">
               <a href="/ko/things-to-do">
                <button class="inline-button__cta color-white">
                 더 많은 테마 보기
                </button>
               </a>
              </div>
             </div>
            </div>
           </div>
           <div class="second-column explore-by-themes">
            <div class="head hiddenTablet">
             <div class="title">
              <div class="section-title color-default">
               취향에 따라
               <br/>
               여행을 계획해 보세요
               <span class="dot background-color-orange">
               </span>
              </div>
             </div>
             <div class="button">
              <li>[keywordx]</li><li>[ahref]</li><li>[mkey1]</li>[pkeyx]<li>[mkey1]</li>
             </div>
            </div>
            <div class="wrap">
             <div class="half-of-two-columns">
              <div class="overlay-push ">
               [linkx]
               
              </div>
             </div>
             <div class="half-of-two-columns last-columns">
              <div class="overlay-push ">
               [linkx]
               
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="container-pannel header-prepare-yourself-section" data-key="prepare-yourself">
         <div class="one-column-full one-column-gutters">
          <div class="two-columns-header">
           <div class="first-column">
            <div class="back">
             <i class="icon-arrow">
             </i>
             <p>
              떠나기 전 준비
             </p>
            </div>
            <div class="section-title color-default">
             필수 여행 정보
             <span class="dot background-color-orange">
             </span>
            </div>
            <div class="description">
             여권, 운전면허증, 수영복... 여행 필수품을 모두 준비하셨나요? France.fr에서 프랑스 여행을 떠나기 전에 알아야 유용한 정보를 알아보세요.
            </div>
            <div class="links">
             <div class="small-arrow-link">
              [ahref]
              
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="비자와 세관" href="/ko/holiday-prep/49202">
               <div class="small-arrow-link-cta icon-play">
                비자와 세관
               </div>
              </a>
             </div>
             <div class="small-arrow-link">
              [linkx]
              
             </div>
             <div class="small-arrow-link">
              <a class="color-default" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Tag" data-prop-category="Menu" data-prop-event="clic-menu-secondary" data-prop-label="파리 대중 교통 수단" href="/ko/holiday-prep/114915">
               <div class="small-arrow-link-cta icon-play">
                파리 대중 교통 수단
               </div>
              </a>
             </div>
            </div>
            <div class="more-infos-cta">
             <div class="inline-button ">
              <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="CTA_VousPréparer" data-prop-category="Menu" data-prop-event="clic-prepareyourself-menu-more-articles" data-prop-label="https://kr.france.fr/ko/holiday-prep" href="/ko/holiday-prep">
               <button class="inline-button__cta color-white">
                실용 정보 더 보기
               </button>
              </a>
             </div>
            </div>
           </div>
           <div class="second-column">
            <div class="section-title color-default">
             유용한 정보
             <span class="dot background-color-orange">
             </span>
            </div>
            <div class="wrap">
             <div class="half-of-two-columns">
              <div class="inline-article-push theme-default small ">
               [ahref]
               
              </div>
             </div>
             <div class="half-of-two-columns last-columns">
              <div class="inline-article-push theme-default small ">
               <a class="container-inline-article-push" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Mise_en_avant_Article_VousPréparer" data-prop-category="Menu" data-prop-event="clic-prepareyourself-menu-featured-article" data-prop-label="https://kr.france.fr/ko/holiday-prep/141167" href="/ko/holiday-prep/141167" target="_self" title="배출가스 등급 표시 제도 (라 비네트 크리테르, La Vignette Crit'air)">
                <div class="container-image">
                </div>
                <div class="container-description">
                 <div class="category">
                  <p>
                   필수 여행 정보
                  </p>
                 </div>
                 <div class="title-description cat">
                  <p>
                   배출가스 등급 표시 제도 (라 비네트 크리테르, La…
                  </p>
                 </div>
                 <div class="description">
                  <p>
                   프랑스의 가장 엄격한 통행 제한 구역이 된 파리

이제 프랑스의 수도 파리 내에서…
                  </p>
                 </div>
                </div>
               </a>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="progression-bar-container" data-component="ProgressionBar" data-habitat-no-replace="true">
       </div>
      </div>
      <div class="search-bar-container">
       <div class="top">
       </div>
       <div class="bottom">
        <div class="search-bar">
         [keywordx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx]
        </div>
       </div>
       <div class="overlay">
       </div>
      </div>
      <div class="hover-div-container">
      </div>
     </div>
    </nav>
   </header>
   <main>
    <div class="view--article page article-interview">
     <div class="boxed-section top-page">
      <div class="header-article">
       <div class="container-header">
        <div class="title-author one-column-gutters">
         <div class="breadcrumb">
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Clic_de_Navigation_FilAriane" data-prop-category="Navigation" data-prop-event="click" data-prop-label="https://kr.france.fr/ko/holiday-prep" href="/ko/holiday-prep">
           떠나기 전 준비
          </a>
          <span class="sep">
           /
          </span>
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Clic_de_Navigation_FilAriane" data-prop-category="Navigation" data-prop-event="click" data-prop-label="https://kr.france.fr/ko/holiday-prep?tag=273" href="/ko/holiday-prep?tag=273">
           프랑스로 떠나기
          </a>
          <span class="sep">
           /
          </span>
         </div>
         <h1 class="title ">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
         <div class="author-date">
          <span class="date">
           2011년 10월 17일’
          </span>
         </div>
        </div>
        <figure role="group">
         <div class="image-container">
          <div class="content">
           <div data-component="LazyLoadComponent" data-prop-alt="image__header____barenvarenneyeog1jpg" data-prop-classname="header-image" data-prop-default-picture="/data/logo-france-fr.png" data-prop-image-url="//images.france.fr/zeaejvyq9bhj/3C4ZQAs92Eeo2UCaKAOMoy/7f7fe7e316f3347c603bccd8981273f3/barenvarenneyeog1.jpg?w=1120&amp;h=490&amp;q=70&amp;fl=progressive&amp;fit=fill" data-prop-mobile-url="//images.france.fr/zeaejvyq9bhj/3C4ZQAs92Eeo2UCaKAOMoy/7f7fe7e316f3347c603bccd8981273f3/barenvarenneyeog1.jpg?w=1120&amp;h=490&amp;q=70&amp;fl=progressive&amp;fit=fill" data-prop-tablet-url="//images.france.fr/zeaejvyq9bhj/3C4ZQAs92Eeo2UCaKAOMoy/7f7fe7e316f3347c603bccd8981273f3/barenvarenneyeog1.jpg?w=1120&amp;h=490&amp;q=70&amp;fl=progressive&amp;fit=fill">
           </div>
          </div>
         </div>
         <figcaption class="inline-copyright-container">
          <div class="inline-copyright">
           © Office de Tourisme de Paris / Amelie Dupont
          </div>
         </figcaption>
        </figure>
       </div>
      </div>
     </div>
     <div class="boxed-section middle-page" data-component="FixedBlock" data-habitat-no-replace="true" data-prop-elementfixed=".article-interview .middle-page .share-section" data-prop-minsize="1024">
      <div class="article-events-section">
       <div class="one-column-full title-events one-column-gutters">
        <div class="wrap">
         <div class="two-columns">
         </div>
         <div class="one-columns last-columns">
         </div>
        </div>
       </div>
       <div class="one-column-full one-column-gutters">
        <div class="wrap big-container">
         <div class="two-columns article-text-container">
          <p class="text-title">
          </p>
          <div class="editor">
           <blockquote>
            [pkeyx][linkx][ahref][pkeyx][pkeyx][ahref][ahref][linkx][mkey1]
           </blockquote>
           <p>
            파리에서 가장 편리한 이동 수단은 지하철이다. 모두 14개의 노선이 파리 곳곳을 거미줄처럼 연결한다. 지하철 역을 나타내는 사인을 보고 출입구를 쉽게 찾을 수 있으며, 사람들이 많이 다니는 파리 도심에서는 역간 거리가 가까워 지하 통로로 연결돼 있는 경우도 많다(대표적으로 생-라자르 역과 하우스만 생-라자르, 아브르 코마르탱, 오베르, 오페라 역은 모두 통로로 연결돼 있다).[mkey1][linkx]<li>[ahref]</li>
           </p>
           <p>
            지하철 노선도에 함께 기재돼 있어 보통 지하철로 생각할 수도 있는 RER(Reseau Express Regional)은 파리 도심과 일드프랑스의 교외 지역을 연결하는 광역 노선으로, 열차 생김새부터 메트로와는 다르다. RER은 A부터 E까지 모두 5개의 노선이 있으며 역 간격이 일반 지하철보다 훨씬 멀다. 같은 알파벳의 노선이라도 목적지가 달라지므로 확인을 잘 해야 한다. 4자리 알파벳으로 행선지가 표시되는데, 예를 들어 RER B 노선을 타고 샤를 드 골 공항에 가기 위해서는 B노선의 열차 중 열차 코드가 E로 시작되는 것(E···)을 타야 한다. RER 노선의 플랫폼에는 항상 다음 열차가 어느 역에 정차할 지 알려주는 전광판이 있으므로 자신이 가려는 목적지 역에 불이 들어와 있는지 확인하고 타면 된다.
           </p>
           <blockquote>
            <p>
             버스
            </p>
           </blockquote>
           <p>
            지하철과 마찬가지로 RATP에서 운영하는 버스는 바깥 풍경을 보면서 돌아다닐 수 있는 장점이 있다. 해당 노선 번호와 행선지를 확인한 뒤 이용하면 된다. 지하철과 버스 티켓에 구분이 없으며, 지하철에서 표를 기계에 통과시키듯 버스를 탈 때에도 운전석 옆에 있는 기계(콩포스퇴르composteur)에 넣어 탑승 표시를 찍어야 한다.
           </p>
           <blockquote>
            <p>
             TICKETS과 RATP 패스- 티켓 t+
            </p>
           </blockquote>
           <p>
            티켓 t+는 일시적으로 이동하는 여행자들에게 적합하다. 지하철, RER (1구역), 일-드-프랑스 버스 라인(오를리버스와 루아시 버스 예외), 트램, 몽마르트 케이블 철도를 이용할 수 있다. 장당 1,90.
           </p>
           <p>
            까르네
            <strong>
             t
            </strong>
            +
            <strong>
             10
            </strong>
            장
            <strong>
             :
            </strong>
            싱글 티켓 10장을 묶은 까르네(10세 이상부터 일반요금)를 14,50에 사면 약 27%의 요금을 절약할 수 있다.
           </p>
           <p>
            <strong>
             Mobilis:
            </strong>
            모빌리는 선택한 구역을 무제한으로 이용할 수 있는 티켓이다. 일 드 프랑스 교통 수단, 지하철, RER, 버스, 트램, 기차를 이용 할 수 있다. 필레오(Fileo)와 보게오(Vogueo), 공항 연결 노선(Orlyval, Orlybus, Roissybus, RER을 이용한 오를리와 루아시)은 제외되며, 오를리 공항을 연결해주는 183과 285라인, 루아시 공항을 연결해주는 350과 351라인은 가능하다. Zone 1-2부터 Zone 1-5 사이의 구간별로 요금이 다르다.
           </p>
           <p>
            <a href="r" target="_blank">
             <li>[keywordx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
            </a>
           </p>
          </div>
          <div class="editor">
           <blockquote>
            <p>
             TAXI 택시
            </p>
           </blockquote>
           <p>
            우리 나라에서처럼 아무 곳에서나 택시를 불러 세우기가 쉽지 않다. 주요 역과 지하철 역 근처에 지정 택시 승강장이 있다. 조수석에는 거의 앉을 수 없고, 트렁크 등 큰 집을 실을 때는 추가 요금 1 가 붙는다. 시간대, 요일, 행선지 별로 km당 요금도 다르다. 평일 저녁(Tarif B 적용) 리용 역에서 에펠탑 근처까지 택시를 이용하면 약 16 정도가 나온다.
           </p>
          </div>
          <div class="embed-articles">
          </div>
          <div class="editor">
           <blockquote>
            <p>
             PASS 여행자 패스
            </p>
           </blockquote>
           <p>
            모든 종류의 대중 교통 수단을 이용할 수 있는 패스는 큰 지하철 역과 RER 역, 공항과 파리 시내 SNCF 사무소에서 구입할 수 있다. 90분간 티켓을 다시 이용할 수 있다는 점과 하루 동안 타고 내릴 횟수를 잘 따져보고 구입할 것. 이동 횟수가 적으면 카르네가, 많으면 패스가 유리하다.
           </p>
           <p>
            <strong>
             Paris Visite:
            </strong>
            대중교통 이용뿐만 아니라 박물관 등에서 할인 혜택도 있는 패스. 정해진 구간 (Zone 1~3, Zone 1~5) 내에서 정해진 날짜(1~3, 5일)동안 제한 없이 이용 가능. Zone 1~3 구간의 3일 비지트 패스 가격은 25.85 며 패스는 출발 전 국내에서도 구입 가능하다.
           </p>
           <p>
            tel: 070-8787-3670(한국)
           </p>
           <p>
            [ahref]
            
           </p>
          </div>
          <div class="editor">
           <blockquote>
            <p>
             지하철, 버스요금
            </p>
           </blockquote>
           <ul>
            <li>
             <p>
              1장 가격
              <strong>
               1.90유로
              </strong>
             </p>
            </li>
            <li>
             <p>
              10장 가격(꺄르네 carnet) -
              <strong>
               14.50유로
              </strong>
             </p>
            </li>
            <li>
             <p>
              4-11세 어린이는 할인 요금:
              <strong>
               7.45유로
              </strong>
             </p>
            </li>
            <li>
             <p>
              Carte Paris Visite(파리 비지트)
             </p>
            </li>
           </ul>
           <p>
            1-3존 :
            <strong>
             <h3>
              [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
             </h3>
             1일 11.65유로
            </strong>
            /
            <strong>
             2일 18.95유로
            </strong>
            /
            <strong>
             3일 25.85유로
            </strong>
            /
            <strong>
             5일 37.25유로
            </strong>
           </p>
           <p>
            1-5존 :
            <strong>
             1일 24.50유로
            </strong>
            /
            <strong>
             2일 37.25유로
            </strong>
            /
            <strong>
             3일 52.20유로
            </strong>
            /
            <strong>
             5일 63.90유로<li>[mkey1]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]<li>[pkeyx]</li>
            </strong>
           </p>
          </div>
          <div class="embed-articles">
          </div>
         </div>
         <aside class="one-columns last-columns more-events desktop-show-only" title="events">
          <div data-component="StickyRight" data-habitat-no-replace="true">
           <div class="overlay-push-container">
           </div>
          </div>
         </aside>
        </div>
       </div>
      </div>
      <div class="share-section">
       <div class="add-this " data-component="AddThis" data-habitat-no-replace="true">
        <div class="add-this-wrapper">
         <div class="addthis_tool addthis_inline_share_toolbox_im44">
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="article-bottom-section">
      <div class="map-to-go-container one-column-full one-column-gutters">
       <div class="map-to-go">
        [keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[mkey1]</li>[linkx][mkey1]
       </div>
      </div>
      <div class="linked-tags one-column-full one-column-gutters">
       <div class="title-container">
        <div class="section-title ">
         더 깊이
         <br/>
         알아보기
         <span class="dot background-color-orange">
         </span>
        </div>
       </div>
       <div class="tags-container">
        <div class="inline-tag">
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="desktop-show-only">
       <div class="linked-articles one-column-full one-column-gutters">
        <div class="title-container">
         <div class="section-title ">
          관련 기사
          <span class="dot background-color-orange">
          </span>
         </div>
        </div>
        <div class="articles-container">
         <div class="wrap">
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [linkx]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [ahref]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [ahref]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            <a class="container-inline-article-push" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Article_lié" data-prop-category="Contenu" data-prop-event="clic-article-card-article" data-prop-label="https://kr.france.fr/ko/holiday-prep/49202" href="/ko/holiday-prep/49202" target="_self" title="비자와 세관">
             <div class="container-image">
              <div data-component="LazyLoadComponent" data-prop-alt="Douanes et visas - illustration" data-prop-classname="container-image__img" data-prop-default-picture="/data/logo-france-fr.png" data-prop-image-url="//images.france.fr/zeaejvyq9bhj/2vJpLW1mFC6gKqQYqGoCa4/1733ba83ee923fdcdbd956f861ba70f1/Illustration-douanes-visas-vignette.jpg?w=328&amp;h=325&amp;q=70&amp;fl=progressive&amp;fit=fill" data-prop-mobile-url="" data-prop-tablet-url="">
              </div>
             </div>
             <div class="container-description">
              <div class="category">
               <p>
                여행 서류(비자 및 여권)
               </p>
              </div>
              <div class="title-description cat">
               <p>
                비자와 세관
               </p>
              </div>
              <div class="description">
               <p>
                비자 Visa
일반적으로 프랑스 여행에는 비자가 필요하며, 프랑스로 여행 전에 각 국의…
               </p>
              </div>
             </div>
            </a>
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [linkx]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="one-column-gutters small-device-show-only">
      </div>
      <div class="small-device-show-only">
       <div class="linked-articles one-column-full one-column-gutters">
        <div class="title-container">
         <div class="section-title ">
          관련 기사
          <span class="dot background-color-orange">
          </span>
         </div>
        </div>
        <div class="articles-container">
         <div class="wrap">
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            <a class="container-inline-article-push" data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Article_lié" data-prop-category="Contenu" data-prop-event="clic-article-card-article" data-prop-label="https://kr.france.fr/ko/holiday-prep/21665" href="/ko/holiday-prep/21665" target="_self" title="프랑스의 교통 수단 : 지하철, 택시, 자전거, 도보">
             <div class="container-image">
              <div data-component="LazyLoadComponent" data-prop-alt="metro" data-prop-classname="container-image__img" data-prop-default-picture="/data/logo-france-fr.png" data-prop-image-url="//images.france.fr/zeaejvyq9bhj/3OnF3MtPugEescckgaqu2A/6f396d3d42ca0d4d5538bc04a03a9370/20072487.jpg?w=328&amp;h=325&amp;q=70&amp;fl=progressive&amp;fit=fill" data-prop-mobile-url="" data-prop-tablet-url="">
              </div>
             </div>
             <div class="container-description">
              <div class="category">
               <p>
                프랑스로 떠나기
               </p>
              </div>
              <div class="title-description cat">
               <p>
                프랑스의 교통 수단 : 지하철, 택시, 자전거, 도보
               </p>
              </div>
              <div class="description">
               <p>
               </p>
              </div>
             </div>
            </a>
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [linkx]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [ahref]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [linkx]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [linkx]
            
           </div>
          </div>
          <div class="inline-article-push-container one-columns">
           <div class="inline-article-push paris small ">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <aside class="infinite-scroll-related-content hide" data-k="5F401p23C0ae6o4iWK0mIq" data-url="https://kr.france.fr/ko/holiday-prep/21665">
     <div class="infinite-scroll-content">
     </div>
    </aside>
   </main>
   <footer>
    <div data-component="CookiesBanner" data-habitat-no-replace="true" data-prop-acceptlabel="동의합니다" data-prop-confidentiallabel="개인정보 보호정책" data-prop-confidentiallink="/ko/info/개인정보보호정책" data-prop-text="본 사이트에 접속하여 사이트를 계속 이용할 경우 방문 정보 통계를 위한 쿠키 이용에 동의하시게 됩니다.">
    </div>
    <div class="container-footer">
     <div class="languages-footer">
      <div class="one-column-full one-column-gutters">
       <div class="switch">
        언어 변경
       </div>
       <ul>
        <li>
         <div class="area">
          <span class="title">
           유럽
          </span>
          [linkx]
          
          [ahref]
          
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="da-sca" href="/da/f%C3%B8r-du-tager-afsted" target="_self" title="Denmark - Dansk">
           Denmark -
           <strong>
            Dansk
           </strong>
          </a>
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="de-de" href="/de/nuetzliche-tipps" target="_self" title="Deutschland - Deutsch">
           Deutschland -
           <strong>
            Deutsch
           </strong>
          </a>
          [linkx]
          
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="it-it" href="/it/prima-della-partenza" target="_self" title="Italia - Italiano">
           Italia -
           <strong>
            Italiano
           </strong>
          </a>
          [linkx]
          
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="no-sca" href="/no" target="_blank" title="Norway - Norsk">
           Norway -
           <strong>
            Norsk
           </strong>
          </a>
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="pt-pt" href="/pt/antes-de-partir" target="_self" title="Portugal - Português">
           Portugal -
           <strong>
            Português
           </strong>
          </a>
          [ahref]
          
          [linkx]
          
          [ahref]
          
          [linkx]
          
          [ahref]
          
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="area">
          <span class="title">
           ASIA
          </span>
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="en-au" href="/en/holiday-prep" target="_self" title="Australia - English">
           Australia -
           <strong>
            English
           </strong>
          </a>
          [ahref]
          
          [linkx]
          
          [ahref]
          
          [linkx]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="area">
          <span class="title">
           MIDDLE EAST
          </span>
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="area">
          <span class="title">
           America
          </span>
          [linkx]
          
          [linkx]
          
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="en-ca" href="/en/holiday-prep" target="_self" title="Canada - English">
           Canada -
           <strong>
            English
           </strong>
          </a>
          [linkx]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="area">
          <span class="title">
           GLOBAL
          </span>
          [ahref]
          
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Changement langue" data-prop-category="Footer" data-prop-event="clic-footer-language-menu" data-prop-label="fr-ww" href="/fr/avant-de-partir" target="_self" title="Global - Français">
           Global -
           <strong>
            Français
           </strong>
          </a>
         </div>
        </li>
       </ul>
      </div>
     </div>
     <div class="top-footer">
      <div class="top-footer-container one-column-full one-column-gutters">
       [ahref]
       
       <div class="shares">
        <div class="follow">
         <p>
          Follow us
         </p>
        </div>
        <ul class="icon-shares">
         <li class="icon">
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Réseaux Sociaux" data-prop-category="Footer" data-prop-event="clic-footer-social-media" data-prop-label="FACEBOOK" href="/KR.France.fr" target="_blank" title="FACEBOOK">
           <i class="icon-facebook">
           </i>
          </a>
         </li>
         <li class="icon">
          [ahref]
          
         </li>
         <li class="icon">
          <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Réseaux Sociaux" data-prop-category="Footer" data-prop-event="clic-footer-social-media" data-prop-label="YOUTUBE" href="/c/franceFR" target="_blank" title="YOUTUBE">
           <i class="icon-youtube-play">
           </i>
          </a>
         </li>
         <li class="icon">
          <li>[linkx]</li><li>[mkey1]</li>[pkeyx]
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="middle-footer">
      <ul class="one-column-full one-column-gutters">
       <li>
        <div class="category">
         <a href="/ko/happening-now-in-france" target="_self" title="지금 프랑스에서는? ">
          <p>
           지금 프랑스에서는?
          </p>
         </a>
         <br/>
         [linkx]
         
         <br/>
         [ahref]
         
         <br/>
         <a href="/ko/holiday-prep" target="_self" title="떠나기 전 준비">
          <p>
           떠나기 전 준비
          </p>
         </a>
         <br/>
        </div>
       </li>
       <li>
        <div 114915","selected":false},{"class":"locale_de-at","label":"db.localesde-at","value":"https:\="" \="" america.france.fr\="" ar","selected":false},{"class":"locale_nl-nl","label":"db.localesnl-nl","value":"https:\="" at.france.fr\="" au.france.fr\="" be.france.fr\="" br.france.fr\="" ca.france.fr\="" ch.france.fr\="" class":"locale_","label":"db.footerselectyourlanguage","value":"https:\="" cn.france.fr\="" da","selected":false},{"class":"locale_de-de","label":"db.localesde-de","value":"https:\="" data-component="SwitchLanguage" data-habitat-no-replace="false" data-prop-current="한국" data-prop-label="언어 변경" data-prop-languages="[{" de","selected":false},{"class":"locale_da-sca","label":"db.localesda-sca","value":"https:\="" de","selected":false},{"class":"locale_es-es","label":"db.localeses-es","value":"https:\="" de","selected":false},{"class":"locale_fr-be","label":"db.localesfr-be","value":"https:\="" de.france.fr\="" en","selected":false},{"class":"locale_en","label":"db.localesen","value":"https:\="" en","selected":false},{"class":"locale_en-au","label":"db.localesen-au","value":"https:\="" en","selected":false},{"class":"locale_es-america","label":"db.localeses-america","value":"https:\="" en","selected":false},{"class":"locale_fr","label":"db.localesfr","value":"https:\="" en","selected":false},{"class":"locale_fr-ca","label":"db.localesfr-ca","value":"https:\="" en","selected":false},{"class":"locale_zh-hans-cn","label":"db.localeszh-hans-cn","value":"https:\="" es","selected":false},{"class":"locale_en-ca","label":"db.localesen-ca","value":"https:\="" es","selected":false},{"class":"locale_it-it","label":"db.localesit-it","value":"https:\="" es.france.fr\="" fr","selected":false},{"class":"locale_de-ch","label":"db.localesde-ch","value":"https:\="" fr","selected":false},{"class":"locale_nl-be","label":"db.localesnl-be","value":"https:\="" fr","selected":false},{"class":"locale_pt-br","label":"db.localespt-br","value":"https:\="" fr","selected":false}]"="" holiday-prep\="" in.france.fr\="" it","selected":false},{"class":"locale_ar-me","label":"db.localesar-me","value":"https:\="" it.france.fr\="" ja","selected":false},{"class":"locale_ko-kr","label":"db.localesko-kr","value":"https:\="" jp.france.fr\="" ko","selected":false},{"class":"locale_en-in","label":"db.localesen-in","value":"https:\="" ko\="" kr.france.fr\="" me.france.fr\="" nl","selected":false},{"class":"locale_fr-ch","label":"db.localesfr-ch","value":"https:\="" nl","selected":false},{"class":"locale_pt-pt","label":"db.localespt-pt","value":"https:\="" nl.france.fr\="" no","selected":false},{"class":"locale_sv-sca","label":"db.localessv-sca","value":"https:\="" pt","selected":false},{"class":"locale_en-us","label":"db.localesen-us","value":"https:\="" pt","selected":false},{"class":"locale_ru-ru","label":"db.localesru-ru","value":"https:\="" pt.france.fr\="" ru","selected":false},{"class":"locale_no-sca","label":"db.localesno-sca","value":"https:\="" ru.france.fr\="" sca.france.fr\="" sv","selected":false},{"class":"locale_en-uk","label":"db.localesen-uk","value":"https:\="" uk.france.fr\="" us.france.fr\="" zh-hans","selected":false},{"class":"locale_zh-hant-cn","label":"db.localeszh-hant-cn","value":"https:\="" zh-hant","selected":false},{"class":"locale_ja-jp","label":"db.localesja-jp","value":"https:\="">
        </div>
       </li>
       <li>
        <div class="usefull-link">
         <p>
          유용한 링크
         </p>
        </div>
        <div class="usefull-sublink">
         [ahref]
         
         <br/>
         [ahref]
         
         <br/>
         [linkx]
         
         <br/>
         <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Liens_Corporate" data-prop-category="Footer" data-prop-event="clic-footer-external-link" data-prop-label="http://www.meeting.france.fr/" href="/" target="_self" title="회의 &amp; 컨벤션">
          <p>
           회의 &amp; 컨벤션
          </p>
         </a>
         <br/>
         <a data-component="Analytics" data-habitat-no-replace="true" data-prop-action="Liens_Corporate" data-prop-category="Footer" data-prop-event="clic-footer-external-link" data-prop-label="https://blog.naver.com/francois09" href="/francois09" target="_self" title="프랑스 관광청 공식 블로그">
          <p>
           프랑스 관광청 공식 블로그
          </p>
         </a>
         <br/>
         [ahref]
         
         <br/>
        </div>
       </li>
      </ul>
     </div>
     <div class="bottom-footer">
      <li>[keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]
     </div>
    </div>
   </footer>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0147
  </b>
 </body>
</html>|<---