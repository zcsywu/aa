--->|<!DOCTYPE doctype html>
<html class=" no-js" lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width" name="viewport"/>
  <meta content="10aa742263fe4ab19350c2615bf9f94c" name="p:domain_verify">
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
    <meta content="MAISON&amp;OBJET" name="author">
     <meta content="summary_large_image" property="twitter:card"/>
     <meta content="@MaisonObjet" property="twitter:site"/>
     <meta content="@MaisonObjet" property="twitter:creator"/>
     <meta content="https://www.maison-objet.com/assets/images/logo_main.png" property="twitter:image:src"/>
     <meta content="maison-objet.com" property="twitter:domain"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="website" property="og:type"/>
     <meta content="https://www.maison-objet.com/assets/images/logo_main.png" property="og:image"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="1200" property="og:image:width"/>
     <meta content="630" property="og:image:height"/>
     <meta content="#ffffff" name="theme-color"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="base ">
  <div id="fb-root">
  </div>
  <div class="outer">
   <section class="global-header dark">
    <div class="container responsive-container">
     [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[area1][keywordx]</li><li>[ahref]</li>
    </div>
   </section>
   <div class="js-overlay__content overlay overlay--router" id="login-router-lightbox">
    <div class="overlay__inner">
     <div class="lightbox base">
      <div class="lightbox__control">
       [linkx]
       
      </div>
      <div class="lightbox__main lightbox__router">
       <div class="base_mop50 lightbox__router-logo">
       </div>
       <div class="t_headline lightbox__router-toptitle">
        Identifiez-vous
       </div>
       <div class="lightbox__router-list">
        <div class="lightbox__router-item">
         <div class="lightbox__router__list-line">
          <div class="t_box-title lightbox__router-list-title">
           Espace visiteur
          </div>
          <a class=" lightbox__router-list-link" href="#">
           S’identifier
          </a>
         </div>
         <div class="lightbox__router__list-line">
          <div class="lightbox__router-list-subtitle">
           Professionnels, presse, étudiants
          </div>
          [linkx]
          
         </div>
        </div>
        <div class="lightbox__router-item">
         <div class="lightbox__router__list-line">
          <div class="t_box-title lightbox__router-list-title">
           Espace Club
          </div>
          [ahref]
           <li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][ahref]
          
         </div>
         <div class="lightbox__router__list-line">
          <div class="lightbox__router-list-subtitle">
          </div>
          <a class=" lightbox__router-list-link-secondary" href="#">
          </a>
         </div>
        </div>
        <div class="lightbox__router-item">
         <div class="lightbox__router__list-line">
          <div class="t_box-title lightbox__router-list-title">
           Espace exposants
          </div>
          [ahref]
          
         </div>
         <div class="lightbox__router__list-line">
          <div class="lightbox__router-list-subtitle">
          </div>
          [linkx]
          
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="sticky-header js-sticky-header">
    <div class="sticky-header__inner">
     <div class="container responsive-container">
      <ul class="base subtle js-sub-nav__panel login-nav" id="login-nav">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <div class="fair-header__logo js-global-header-touch">
       [ahref]
       
      </div>
      <header class="fair-header js-sticky-animating">
       <div class="fair-header__dates b_nav-strip section--nav">
        <ul class="horz-nav">
         <li class="current">
          Paris                            – September  6-10, 2019
         </li>
         <li class="subtle">
          Paris                            – January 17-21, 2020
         </li>
        </ul>
       </div>
       <div class="b_nav-strip section--nav fair-header__utils subtle">
        <ul class="horz-nav">
         <li class="js-sub-nav login-nav-container">
          [linkx]
          
         </li>
         <li>
          <ul class="horz-nav horz-nav--lang">
           <li class="nav__item">
            <a class="subtle current" href="#">
             En
            </a>
           </li>
           <li class="nav__item">
            [ahref]
            
           </li>
          </ul>
         </li>
        </ul>
       </div>
      </header>
     </div>
     <nav class="b_nav-strip b_nav-strip--primary section--nav divided base">
      <div class="container responsive-container">
       <div class="search-control-container">
        <div class="bar">
         <div class="bar__left">
          <ul class="horz-nav horz-nav--primary t_primary-nav subtle">
           <li class="">
            <a class="" href="/en/paris/sectors" target="">
             Sectors
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="js-sub-nav">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </div>
         <div class="bar__right">
          <ul class="horz-nav horz-nav--primary t_primary-nav horz-nav--btn">
           <li>
            <a href="/en/paris/how-to-exhibit" onclick="return xt_click(this,'C', '2','Devenir_exposant::Deposer_candidature_header', 'A')">
             <span class="nav-btn nav-btn--white">
              Exhibit
             </span>
            </a>
           </li>
           <li>
            [ahref][area1][mkey1]<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
           </li>
          </ul>
          <div class="js-sub-nav">
           <a class="search-control js-sub-nav__trigger" href="r">
            [area1][keywordx][ahref][pkeyx]
           </a>
          </div>
         </div>
        </div>
       </div>
      </div>
     </nav>
     <div class="js-sub-nav__panel sub-nav-panel dark--and-dull dark--trans" id="program-nav">
      <div class="container responsive-container">
       <nav class="b_sub-nav">
        <div class="row">
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Latest news
          </h4>
          [linkx]
           [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx]
          
         </section>
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Latest creative trends
          </h4>
          [ahref]
          
         </section>
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Conferences and workshops agenda
          </h4>
          [linkx]
          
         </section>
        </div>
        <div class="row">
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Established designers and rising talents
          </h4>
          [linkx]
          
         </section>
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Special installations at the show
          </h4>
          [ahref]
          
         </section>
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Thematic selection of exhibitors
          </h4>
          <a class="invisi-hit__link" href="/en/paris/program/itineraries">
           View more
          </a>
         </section>
        </div>
        <div class="row">
         <section class="col one-third b_sub-item invisi-hit">
          <h3>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h4 class="subtle b_sub-item__subtitle">
           Dedicated areas to retail outlets and specifiers
          </h4>
          [ahref]
          
         </section>
        </div>
       </nav>
      </div>
     </div>
     <div class="js-search js-sub-nav__panel search-bar" id="search-bar">
      <div class="container responsive-container">
       <form action="/en/search/paris" method="GET">
        <div class="bar">
         <div class="bar__left">
          <div class="t_primary-nav search-bar__input">
          </div>
         </div>
         <div class="bar__right">
          <div class="t_primary-nav">
           <button class="search-bar__btn js-search__btn simple-btn subtle" type="submit">
            Search
           </button>
          </div>
         </div>
        </div>
       </form>
      </div>
     </div>
    </div>
   </div>
   <div class="carousel-container js-hero-carousel-outer">
    [linkx]
    
    [linkx]
    
    <div class="carousel-container__inner carousel-container__mask">
    </div>
    <div class="carousel-container__inner carousel-container__fixed-slide-contents fixed-slide-contents">
     <div class="fixed-slide-contents__item js-carousel-item" data-model="Carousel">
      [ahref]
      
     </div>
     <div class="fixed-slide-contents__item js-carousel-item" data-model="Carousel">
      [ahref]
      
     </div>
     <div class="fixed-slide-contents__item js-carousel-item" data-model="Carousel">
      [linkx]
      
     </div>
    </div>
    <div class="mask__over">
     <div class="hero-carousel dark">
      <div class="hero-carousel__inner js-hero-carousel js-carousel-animator js-carousel-auto" data-carousel-animator-speed="400" data-carousel-animator-width="980" data-carousel-auto-timeout="7000" data-model="Carousel">
       <div class="js-carousel-item js-carousel-animator__item hero-carousel__item " data-model="Carousel" style="background-image: url(/content/SliderFeature/214/image/original/5c88e38fb5626980x460_features_homeMOPARIS-S19_letsworktogether.jpg)">
       </div>
       <div class="js-carousel-item js-carousel-animator__item hero-carousel__item " data-model="Carousel" style="background-image: url(/content/SliderFeature/218/image/original/5c4733e313997980x460_features_homeGlobal-J19__MOM-click-RED001_EN.jpg)">
       </div>
       <div class="js-carousel-item js-carousel-animator__item hero-carousel__item " data-model="Carousel" style="background-image: url(/content/SliderFeature/163/image/original/5c5d6ff541de3980x460_features_homeMOPARISl-_DevenirExposant_EN.jpg)">
       </div>
      </div>
     </div>
    </div>
   </div>
   <section class="intro-bar container">
    <div class="col three-quarters b_intro-text">
     <h2>
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h2>
     <p class="b_home-main__body">
      New visits, new audacious and intuitive purchasing experiences, inspirational and surprising itineraries, new places for sharing ... LET US SURPRISE YOU!
     </p>
     <p class="b_home-main__action">
      [ahref]
      
     </p>
    </div>
    <div class="col one-quarter intro-bar__next-edition b_intro-block">
     <section class="b_featured-event set__item">
      [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][linkx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][mkey1][area1][mkey1][area1][mkey1][linkx][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
     </section>
    </div>
   </section>
   <section class="b_feature-area mid section">
    <header class="header b_feature-area__header">
     <h2>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
    </header>
    <div class="b_feature-area__body container">
     <div class="js-packery-grid">
      <div class="js-packery__item one-third invisi-hit">
       <div class="fill-media-container">
       </div>
       <div class="summary base ">
        <div class="b_summary">
         <h3 class="b_summary__title">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <div class="b_summary__desc">
          <p>
           An office is no longer really an office, but more like a home from home, a multifunctional place where working is just one of the many things you can do such as: meeting and talking to other people,…
          </p>
         </div>
         <div class="b_summary__footer t_label-title summary__footer">
          <a class="action" href="/en/paris/news">
           News
          </a>
         </div>
        </div>
        [ahref]
        
       </div>
      </div>
      <div class="js-packery__item two-thirds invisi-hit">
       <div class="fill-media-container">
       </div>
       <div class="summary base ">
        <div class="b_summary">
         <h3 class="b_summary__title">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <div class="b_summary__desc">
          <p>
           2 times a year, more than 80,000 professionals from all over the world come to the show to order merchandise or find new sources of inspiration.
Interior designers, architects, designers, hoteliers, restaurateurs, developers, department stores, retailers, and manufacturers explore the aisles of MAISON&amp;OBJET to find products to use in their projects, discover new markets and open up to new opportunities.
          </p>
         </div>
         <div class="b_summary__footer t_label-title summary__footer">
          <a class="action" href="/en/paris/exhibitors">
           Exhibitors
          </a>
         </div>
        </div>
        [ahref]
        
       </div>
      </div>
      <div class="js-packery__item one-third invisi-hit">
       <div class="fill-media-container">
       </div>
       <div class="summary base ">
        <div class="b_summary">
         <h3 class="b_summary__title">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <div class="b_summary__desc">
          <p>
           Immerse yourself in the show.

See you in September 6-10, 2019, for five more passion-filled days.
          </p>
         </div>
         <div class="b_summary__footer t_label-title summary__footer">
          [ahref]
          
         </div>
        </div>
        [linkx]
        
       </div>
      </div>
      <div class="js-packery__item one-third invisi-hit">
       <div class="fill-media-container">
       </div>
       <div class="summary base ">
        <div class="b_summary">
         <h3 class="b_summary__title">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <div class="b_summary__desc">
          <p>
           It was whilst sitting at their desks, aged 17, at the Lycée Sainte-Marie in Lyons that Quentin, Charles and Xavier first struck up what was to become a life-long friendship.
          </p>
         </div>
         <div class="b_summary__footer t_label-title summary__footer">
          <a class="action" href="/en/magazine">
           Magazine
          </a>
         </div>
        </div>
        [ahref]
        
       </div>
      </div>
      <div class="js-packery__item one-third invisi-hit">
       <div class="fill-media-container">
        <span class="fill-media__has-video">
        </span>
       </div>
       <div class="summary base ">
        <div class="b_summary">
         <h3 class="b_summary__title">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <div class="b_summary__desc">
          <p>
           MAISON&amp;OBJET has created a tool that complements the show, just for you: the MOM digital platform, available throughout the year, even between shows.
          </p>
         </div>
         <div class="b_summary__footer t_label-title summary__footer">
          [ahref]
          
         </div>
        </div>
        <a class="invisi-hit__link" href="/en/paris/news/discover-mom-the-digital-platform">
         Read more
        </a>
       </div>
      </div>
     </div>
    </div>
   </section>
   <section class="section--exhibitors">
    <div class="container b_page-title">
     <h2>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
    </div>
    <div class="container">
     <div class="set__item set--exhibitors">
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/319/968/original/430cfa43cd3016d7902decde8a722e95.jpg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector41" style="background-color:#fcd450">
         <div class="badge__icon sprite--hall_03">
          [pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][pkeyx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][ahref][area1][mkey1][pkeyx][linkx][pkeyx]
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <p class="b_box-title-desc">
         Germany
         <br>
          <span class="action">
           COOK &amp; SHARE
          </span>
          <br>
           <span class="subtle">
            Stand A111
           </span>
          </br>
         </br>
        </p>
        [ahref]
        
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/358/361/original/bcd078aae251ee5be0d8e776b5df61ea.jpeg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector44" style="background-color:#a5d867">
         <div class="badge__icon sprite--hall_02">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <li>[area1][mkey1]</li><li>[pkeyx]</li><li>[area1][keywordx]</li><li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/396/129/original/f7796d2664f04720485f6c29576b7c70.jpg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector41" style="background-color:#fcd450">
         <div class="badge__icon sprite--hall_03">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <p class="b_box-title-desc">
         Germany
         <br>
          <span class="action">
           COOK &amp; SHARE
          </span>
          <br>
           <span class="subtle">
            Stand A135
           </span>
          </br>
         </br>
        </p>
        [ahref]
        
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor">
        <div class="media__badge badge sector45" style="background-color:#ffb070">
         <div class="badge__icon sprite--hall_04">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <p class="b_box-title-desc">
         France
         <br>
          <span class="action">
           HOME ACCESSORIES<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx][area1][keywordx][pkeyx]
          </span>
          <br>
           <span class="subtle">
            Stand E96
           </span>
          </br>
         </br>
        </p>
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="set__item set--exhibitors">
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/413/006/original/43cc0ecd2bdbcb5cf8f1e68b5ce5ff9e.jpg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector43" style="background-color:#5eb6e4">
         <div class="badge__icon sprite--hall_02">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <p class="b_box-title-desc">
         France
         <br>
          <span class="action">
           KIDS &amp; FAMILY
          </span>
          <br>
           <span class="subtle">
            Stand G102
           </span>
          </br>
         </br>
        </p>
        [linkx]
        
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor">
        <div class="media__badge badge sector46" style="background-color:#d3bf96">
         <div class="badge__icon sprite--hall_05A">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <p class="b_box-title-desc">
         France
         <br>
          <span class="action">
           HOME LINEN
          </span>
          <br>
           <span class="subtle">
            Stand F158  / G157
           </span>
          </br>
         </br>
        </p>
        <a class="invisi-hit__link hit__link" href="/en/paris/exhibitors/september-2019/toison-dor" onclick="return xt_click(this,'C', xtn2, xtpage.replace(/\w*$/, 'https://www.maison-objet.com/en/paris/exhibitors/september-2019/toison-dor'), 'N', 'http://logc279.xiti.com/go.ad?xts=562106&amp;act=PUB-[Vignette_exposant]-[toison_dor]-[home_linen]-[non]-&amp;type=AT&amp;url=https://www.maison-objet.com/en/paris/exhibitors/september-2019/toison-dor')">
         Read more[linkx][ahref][area1][mkey1][linkx][linkx][linkx][area1][mkey1][pkeyx][ahref][area1][keywordx][area1][keywordx][linkx][ahref][ahref][area1][keywordx][area1][mkey1][ahref][area1][keywordx]
        </a>
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/139/212/original/c402efff8a5f4547120c255d8f4a9d87.jpg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector47" style="background-color:#4cdbc3">
         <div class="badge__icon sprite--hall_05A">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]<li>[ahref]</li><li>[linkx]</li><li>[area1][keywordx]</li>[area1][mkey1]
        </h3>
        <p class="b_box-title-desc">
         United States
         <br>
          <span class="action">
           HOME FRAGRANCES
          </span>
          <br>
           <span class="subtle">
            Stand D35<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref]
           </span>
          </br>
         </br>
        </p>
        <a class="invisi-hit__link hit__link" href="/en/paris/exhibitors/september-2019/kobo-pure-soy-candles" onclick="return xt_click(this,'C', xtn2, xtpage.replace(/\w*$/, 'https://www.maison-objet.com/en/paris/exhibitors/september-2019/kobo-pure-soy-candles'), 'N', 'http://logc279.xiti.com/go.ad?xts=562106&amp;act=PUB-[Vignette_exposant]-[kobo_pure_soy_candles]-[home_fragrances]-[non]-&amp;type=AT&amp;url=https://www.maison-objet.com/en/paris/exhibitors/september-2019/kobo-pure-soy-candles')">
         Read more
        </a>
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/244/315/original/7bb4c7c66b1d87c9648b93cbfb7613e2.jpeg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector45" style="background-color:#ffb070">
         <div class="badge__icon sprite--hall_04">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <p class="b_box-title-desc">
         France
         <br/>
         <span class="action">
          HOME ACCESSORIES
         </span>
         <br/>
         <span class="subtle">
          Stand E55
         </span>
        </p>
        [linkx]
        
       </div>
      </div>
     </div>
     <div class="set__item set--exhibitors">
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor" style="background-image:url(https://du85s6yu4vjql.cloudfront.net/215x215/pictures/images/000/401/509/original/00ea0dbe060047c8c209e365ca9b4928.jpg); background-repeat: no-repeat; background-color: #f2f2f2;">
        <div class="media__badge badge sector44" style="background-color:#a5d867">
         <div class="badge__icon sprite--hall_02">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <p class="b_box-title-desc">
         United Kingdom
         <br/>
         <span class="action">
          FASHION ACCESSORIES
         </span>
         <br/>
         <span class="subtle">
          Stand F110
         </span>
        </p>
        <a class="invisi-hit__link hit__link" href="/en/paris/exhibitors/september-2019/socksmith" onclick="return xt_click(this,'C', xtn2, xtpage.replace(/\w*$/, 'https://www.maison-objet.com/en/paris/exhibitors/september-2019/socksmith'), 'N', 'http://logc279.xiti.com/go.ad?xts=562106&amp;act=PUB-[Vignette_exposant]-[socksmith]-[fashion_accessories]-[non]-&amp;type=AT&amp;url=https://www.maison-objet.com/en/paris/exhibitors/september-2019/socksmith')">
         Read more[linkx][linkx][area1][mkey1][linkx][linkx][pkeyx][area1][mkey1][ahref][ahref][pkeyx][area1][keywordx][ahref][pkeyx][linkx][ahref][area1][keywordx][linkx][area1][keywordx]
        </a>
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor">
        <div class="media__badge badge sector45" style="background-color:#ffb070">
         <div class="badge__icon sprite--hall_05B">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <p class="b_box-title-desc">
         France
         <br/>
         <span class="action">
          HOME ACCESSORIES
         </span>
         <br>
          <li>[pkeyx]</li><li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         </br>
         <span class="subtle">
          Stand M3  / N4
         </span>
        </p>
        [ahref]
        
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor">
        <div class="media__badge badge sector45" style="background-color:#ffb070">
         <div class="badge__icon sprite--hall_05B">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <p class="b_box-title-desc">
         Belgium
         <br/>
         <span class="action">
          HOME ACCESSORIES
         </span>
         <br/>
         <span class="subtle">
          Stand K23
         </span>
        </p>
        <a class="invisi-hit__link hit__link" href="/en/paris/exhibitors/september-2019/deknudt-frames-nv" onclick="return xt_click(this,'C', xtn2, xtpage.replace(/\w*$/, 'https://www.maison-objet.com/en/paris/exhibitors/september-2019/deknudt-frames-nv'), 'N', 'http://logc279.xiti.com/go.ad?xts=562106&amp;act=PUB-[Vignette_exposant]-[deknudt_frames_nv]-[home_accessories]-[non]-&amp;type=AT&amp;url=https://www.maison-objet.com/en/paris/exhibitors/september-2019/deknudt-frames-nv')">
         Read more[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </a>
       </div>
      </div>
      <div class="col one-quarter invisi-hit hit">
       <div class="media media__exhibitor">
        <div class="media__badge badge sector47" style="background-color:#4cdbc3">
         <div class="badge__icon sprite--hall_05A">
         </div>
        </div>
       </div>
       <div class="b_title-with-image">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <p class="b_box-title-desc">
         France
         <br/>
         <span class="action">
          HOME FRAGRANCES
         </span>
         <br/>
         <span class="subtle">
          Stand E99
         </span>
        </p>
        [linkx]
        
       </div>
      </div>
     </div>
     <div class="btn-list">
      <div class="btn-list__item">
       [ahref]
       
      </div>
     </div>
    </div>
   </section>
   <div class="base divided">
    <section class="footer-touts container">
     <section class="b_footer-tout col one-quarter invisi-hit">
      <div class="">
      </div>
      <h4 class="b_footer-tout__title">
       ORDER YOUR BADGES
      </h4>
      <p class="b_footer-tout__desc">
       Badge, Catalog, Trend Mook …
      </p>
      <div class="b_footer-tout__action">
       <span class="action hit__notify">
        Shop
       </span>
      </div>
      <a class="invisi-hit__link" href="/en/visitor.htm" target="_blank">
       Read more
      </a>
     </section>
     <section class="b_footer-tout col one-quarter invisi-hit">
      <div class="">
      </div>
      <h4 class="b_footer-tout__title">
       APP MOBILE
      </h4>
      <p class="b_footer-tout__desc">
       All the information you need: list of exhibitors, plans, programs...
      </p>
      <div class="b_footer-tout__action">
       <span class="action hit__notify">
        Download the app
       </span>
      </div>
      <a class="invisi-hit__link" href="/MAISON&amp;OBJET/6549/" target="_blank">
       Read more
      </a>
     </section>
     <section class="b_footer-tout col one-quarter invisi-hit">
      <div class="">
      </div>
      <h4 class="b_footer-tout__title">
       MOM
      </h4>
      <p class="b_footer-tout__desc">
       Click &amp; connect to the latest in design and decor.
      </p>
      <div class="b_footer-tout__action">
       <span class="action hit__notify">
        More information
       </span>
      </div>
      [linkx]
      
     </section>
    </section>
    <section class="section mid b_newsletter divided">
     <div class="container">
      <h1>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h1>
      <p>
       Subscribe to the newsletter and receive our latest news
      </p>
      <form action="/en/newsletter-subscribe" class="/js-newsletter-signup" method="POST">
       <button class="btn primary subtle" type="submit">
        Subscribe
       </button>
      </form>
      <div class="newsletter-social">
       [ahref]
       
       <a href="/MaisonObjet" target="_blank" title="Twitter">
        <span class="sprite--twitterl">
        </span>
       </a>
       <a href="/maisonobjet/" target="_blank" title="Pinterest">
        <span class="sprite--pinterestl">
        </span>
       </a>
       [ahref]
       
       <a href="/maisonetobjet/" target="_blank" title="Instagram">
        <span class="sprite--instagraml">
        </span>
       </a>
       [linkx]
       
      </div>
     </div>
    </section>
    <footer class="b_pre-footer">
     <div class="container responsive-container">
      <div class="b_pre-footer__logo">
       <div class="ir fair-header__logo sprite--mop">
        Paris
       </div>
      </div>
      <div class="b_pre-footer__main">
       [linkx]
       
       <a href="/en/paris/contacts">
        Contacts
       </a>
       [ahref]
       
       [linkx]
       
       <a href="/en/paris/faq">
        FAQ
       </a>
       [linkx]
       
      </div>
     </div>
    </footer>
    <footer class="b_bar-footer subtle ">
     <div class="container responsive-container">
      <ul class="horz-nav--footer b_bar-footer__main">
       <li>
        © 2013 -
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <div class="b_bar-footer__aux">
       <div class="t_body">
        [linkx]
        
       </div>
      </div>
     </div>
    </footer>
   </div>
  </div>
  <div class="notice" data-behavior="notice_close">
   <div class="container">
    <p>
     By using MAISON&amp;OBJET website you consent to the use of cookies in order to provide you with the best experience we can.
     [linkx]
     
     For more information,
     [ahref]
     
     .
    </p>
    [linkx]
    
   </div>
  </div>
  <noscript>
  </noscript>
  <noscript>
   <div style="display:inline;">
   </div>
  </noscript>
  <noscript>
  </noscript>
  <noscript>
  </noscript>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0209
  </b>
 </body>
</html>
|<---