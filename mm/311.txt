--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
 </head>
 <body class="" id="total">
  <div id="skip">
   <strong class="hide">
    반복영역 건너뛰기
   </strong>
   <a href="b">
    주메뉴 바로가기
   </a>
   [ahref]
   
   <a href="t">
    본문 바로가기
   </a>
  </div>
  <div id="wrap">
   <div id="header">
    <div class="header_top">
     <div class="layout">
      <span class="ut_top_btn">
      </span>
      <div class="right_button">
       [ahref]
       
       [linkx]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [linkx]
       
       [ahref]
       
      </div>
     </div>
    </div>
    <div id="animate">
     <div id="overflow">
      <div class="layout">
       <h1 class="logo">
        <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h1>
       <div class="util">
        <div class="util_search">
         <form action="/kfsweb/kfs/search.do" method="post">
          <button type="submit">
          </button>
         </form>
        </div>
        <div class="util_sitemap">
         [ahref]
         
        </div>
       </div>
      </div>
      <nav id="gnb" tabindex="0">
       <ul class="gnb_group" id="tm">
        <li class="depth_1">
         [ahref]
         
         <div class="issue">
          <div class="layout">
           <div class="isu_ssss">
            [ahref]
            
           </div>
           <div class="issue_link">
            <div class="issue1" name="issue">
             [linkx]
             
            </div>
            <div class="issue1" name="issue">
             [ahref]
             
            </div>
            <div class="issue1" name="issue">
             [ahref]
             
            </div>
            <div class="issue1" name="issue">
             <a class="hover" href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_01_04_06&amp;cmsId=FC_000387">
              숲속의 대한민국
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="group group_5">
          <div class="summary">
           <strong class="sumry_ti">
            산림청소개
           </strong>
           <div class="sumry_pt">
            사람이 중심이 되는 따뜻하고
            <br/>
            행복한 세상을 만드는데
            <br/>
            산림청이 앞장서겠습니다.
           </div>
          </div>
          <ul class="depth_2" id="tm_1th">
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_01_02_01&amp;cmsId=FC_000091" target="_self">
             조직 안내
            </a>
            <ul class="depth_3">
             <li>
              <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_01_02_01&amp;cmsId=FC_000091" target="_self">
               조직도
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_01_04_01&amp;cmsId=FC_000106" target="_self">
               주요업무계획
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </li>
        <li class="depth_1">
         [linkx]
         
         <div class="issue">
          <div class="layout">
           <div class="isu_ssss">
            [ahref]
            
           </div>
           <div class="issue_link">
            [ahref]<li>[mkey1]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[pkeyx]</li><li>[mkey1]</li>
           </div>
          </div>
         </div>
         <div class="group group_10">
          <div class="summary">
           <strong class="sumry_ti">
            산림정책
           </strong>
           <div class="sumry_pt">
            사람이 중심이 되는 따뜻하고
            <br/>
            행복한 세상을 만드는데
            <br/>
            산림청이 앞장서겠습니다.
           </div>
          </div>
          <ul class="depth_2" id="tm_2th">
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </li>
        <li class="depth_1">
         [ahref]
         
         <div class="issue">
          <div class="layout">
           <div class="isu_ssss">
            [ahref]
            
           </div>
           <div class="issue_link">
            <div class="issue3" name="issue">
             [linkx]
             
            </div>
            <div class="issue3" name="issue">
             [ahref]
             
            </div>
            <div class="issue3" name="issue">
             [linkx]
             
            </div>
            <div class="issue3" name="issue">
             <a class="hover" href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_0001_050100.html&amp;mn=KFS_01_01_03_01">
              도시숲
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="group group_20">
          <div class="summary">
           <strong class="sumry_ti">
            휴양복지
           </strong>
           <div class="sumry_pt">
            <li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx]</li>[linkx][keywordx]
           </div>
          </div>
          <ul class="depth_2" id="tm_3th">
           <li>
            <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_1002_010100.html&amp;mn=KFS_01_01_01_01" target="_self">
             산림휴양
            </a>
            <ul class="depth_3">
             <li>
              <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_1002_010100.html&amp;mn=KFS_01_01_01_01" target="_self">
               자연휴양림
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_1002_040101.html&amp;mn=KFS_01_01_04_01_01" target="_self">
               국민의숲
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [linkx]
               [keywordx][keywordx][linkx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][mkey1][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][keywordx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx]
              
             </li>
             <li>
              <a href="/newkfsweb/cop/bbs/selectBoardList.do?bbsId=BBSMSTR_1488&amp;mn=KFS_01_02_12" target="_self">
               국가산림문화자산
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_culture/UI_KFS_1010_030101.html&amp;mn=KFS_01_13_04_01" target="_self">
               산림교육전문가
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              <li>[linkx]</li><li>[keywordx]</li>[linkx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx]
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_path/UI_KFS_1004_030000_d1.html&amp;mn=KFS_01_04_07" target="_self">
               외국의숲길
              </a>
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [pkeyx][mkey1][linkx][pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][mkey1][linkx][keywordx]
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_village/UI_KFS_1006_020100.html&amp;mn=KFS_01_07_03_01" target="_self">
             산촌/귀산촌
            </a>
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </li>
        <li class="depth_1">
         [linkx]
         
         <div class="issue">
          <div class="layout">
           <div class="isu_ssss">
            [ahref]
            
           </div>
           <div class="issue_link">
            <div class="issue4" name="issue">
             <li>[ahref]</li>[ahref][pkeyx]
            </div>
            <div class="issue4" name="issue">
             [ahref]
             
            </div>
            <div class="issue4" name="issue">
             [linkx]
             
            </div>
            <div class="issue4" name="issue">
             [linkx]
             
            </div>
           </div>
          </div>
         </div>
         <div class="group group_30">
          <div class="summary">
           <strong class="sumry_ti">
            행정정보
           </strong>
           <div class="sumry_pt">
            사람이 중심이 되는 따뜻하고
            <br/>
            행복한 세상을 만드는데
            <br/>
            산림청이 앞장서겠습니다.
           </div>
          </div>
          <ul class="depth_2" id="tm_4th">
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/kfsweb/cop/bbs/selectBoardList.do?bbsId=BBSMSTR_1033&amp;mn=NKFS_04_01_04" target="_self">
               입찰정보
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              <a href="/kfsweb/kfi/kfs/mwd/selectMtstWordDictionaryList.do?mn=NKFS_04_07_01" target="_self">
               산림임업용어사전
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </li>
        <li class="depth_1">
         [ahref]
         
         <div class="issue">
          <div class="layout">
           <div class="isu_ssss">
            [ahref]
            
           </div>
           <div class="issue_link">
            <div class="issue5" name="issue">
             [linkx]
             
            </div>
            <div class="issue5" name="issue">
             [linkx]
             
            </div>
            <div class="issue5" name="issue">
             [linkx]
             
            </div>
            <div class="issue5" name="issue">
             [linkx]
             
            </div>
           </div>
          </div>
         </div>
         <div class="group group_40">
          <div class="summary">
           <strong class="sumry_ti">
            민원/소통
           </strong>
           <div class="sumry_pt">
            사람이 중심이 되는 따뜻하고
            <br/>
            행복한 세상을 만드는데
            <br/>
            산림청이 앞장서겠습니다.
           </div>
          </div>
          <ul class="depth_2" id="tm_5th">
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_05_02_06&amp;cmsId=FC_000070" target="_self">
               나의 민원조회
              </a>
             </li>
             <li>
              [linkx]
               [linkx]<li>[pkeyx]</li><li>[pkeyx]</li>[mkey1]<li>[pkeyx]</li>
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_05_03_05&amp;cmsId=FC_000457" target="_self">
             규제개혁
            </a>
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
               [keywordx]<li>[keywordx]</li><li>[ahref]</li>
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_05_05_01&amp;cmsId=FC_000088" target="_self">
               부패행위신고
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
               [ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx]</li><li>[linkx]</li>
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a href="/kfsweb/cop/bbs/selectCorruptionIntro.do?mn=NKFS_05_05_07" target="_self">
               산림조합 채용비리 신고센터
              </a>
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][linkx][ahref][pkeyx][linkx][pkeyx][ahref][pkeyx][mkey1][keywordx][pkeyx][mkey1][pkeyx][linkx]
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/kfsweb/kfi/kfs/pzm/orderPopupZoneList.do?mn=NKFS_05_07_08" target="_self">
               알림판
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </li>
        <li class="depth_1">
         [linkx]
         
         <div class="issue">
          <div class="layout">
           <div class="isu_ssss">
            <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_01_04_09&amp;cmsId=FC_000462">
             <span>
              more
             </span>
            </a>
           </div>
           <div class="issue_link">
            <div class="issue6" name="issue">
             [ahref]
             
            </div>
            <div class="issue6" name="issue">
             [ahref]
             
            </div>
            <div class="issue6" name="issue">
             <a class="hover" href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_06_08_01&amp;cmsId=FC_000130">
              공공데이터 개방
             </a>
            </div>
            <div class="issue6" name="issue">
             <a class="hover" href="/kfsweb/cop/bbs/selectBoardList.do?bbsId=BBSMSTR_1069&amp;mn=NKFS_06_09_01">
              통합자료실
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="group group_50">
          <div class="summary">
           <strong class="sumry_ti">
            정보공개
           </strong>
           <div class="sumry_pt">
            사람이 중심이 되는 따뜻하고
            <br/>
            행복한 세상을 만드는데
            <br/>
            산림청이 앞장서겠습니다.
           </div>
          </div>
          <ul class="depth_2" id="tm_6th">
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/kfsweb/cop/bbs/selectBoardList.do?bbsId=BBSMSTR_1651&amp;mn=NKFS_06_04_05" target="_self">
               세입·세출 사업설명자료
              </a>
             </li>
             <li>
              <a href="/kfsweb/cop/bbs/selectBoardList.do?bbsId=BBSMSTR_1070&amp;mn=NKFS_06_04_03" target="_self">
               예산결산
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
            <ul class="depth_3">
            </ul>
           </li>
           <li>
            <a href="/kfsweb/kfi/kfs/cms/cmsView.do?mn=NKFS_06_08_01&amp;cmsId=FC_000130" target="_self">
             공공데이터 개방
            </a>
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            <a href="/kfsweb/kfi/kfs/foreston/main/contents/FrestExpltVhc/selectFrestStryList.do?mn=NKFS_06_10_01_01&amp;orgId=fon&amp;tabFlag=1" target="_self">
             산림교육자료
            </a>
            <ul class="depth_3">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </li>
       </ul>
      </nav>
     </div>
     <div class="gnb_close">
      [linkx]
      
     </div>
    </div>
   </div>
  </div>
  <div class="container">
   <div id="remote">
    <h2 class="lt">
     <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
    </h2>
    <ul class="lm_2th">
     <li>
      [linkx]
      
      <ul class="lm_3th" id="mn_KFS_01_01_01">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
        <ul class="lm_4th" id="mn_KFS_01_01_01_02">
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
      </ul>
     </li>
     <li>
      [ahref]
      
      <ul class="lm_3th" id="mn_KFS_01_01_02">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </li>
     <li>
      <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_0001_050100.html&amp;mn=KFS_01_01_03_01" onclick="jsToggleMenu('mn_KFS_01_01_03'); return false;">
       도시숲
       <span>
       </span>
      </a>
      <ul class="lm_3th" id="mn_KFS_01_01_03">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
        <ul class="lm_4th" id="mn_KFS_01_01_03_03">
         <li>
          <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_0001_050301.html&amp;mn=KFS_01_01_03_03_01">
           도시산림공원
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_0001_050305.html&amp;mn=KFS_01_01_03_03_05">
           전통마을숲
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </li>
       <li>
        <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_recreation/UI_KFS_0001_050401.html&amp;mn=KFS_01_01_03_04_01" onclick="jsToggleMenu('mn_KFS_01_01_03_04'); return false;">
         도시숲조성사업
        </a>
        <ul class="lm_4th" id="mn_KFS_01_01_03_04">
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </li>
     <li>
      [linkx]
      
      <ul class="lm_3th" id="mn_KFS_01_01_09">
       <li>
        [linkx]
        
        <ul class="lm_4th" id="mn_KFS_01_01_09_01">
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
        <ul class="lm_4th" id="mn_KFS_01_01_09_02">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/newkfsweb/html/HtmlPage.do?pg=/mugunghwa/mugunghwa_0202.html&amp;mn=KFS_01_01_09_02_02">
           일정 및 프로그램
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        <a href="/newkfsweb/html/HtmlPage.do?pg=/mugunghwa/mugunghwa_0301.html&amp;mn=KFS_01_01_09_03_01" onclick="jsToggleMenu('mn_KFS_01_01_09_03'); return false;">
         나라꽃 무궁화 문화작품 공모
        </a>
        <ul class="lm_4th" id="mn_KFS_01_01_09_03">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        [ahref]
         [linkx][keywordx][linkx]<li>[ahref]</li>
        
        <ul class="lm_4th" id="mn_KFS_01_01_09_04">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
        <ul class="lm_4th" id="mn_KFS_01_01_09_05">
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
      </ul>
     </li>
     <li>
      [ahref]
      
      <ul class="lm_3th" id="mn_KFS_01_01_04">
       <li>
        [mkey1][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][keywordx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][mkey1][ahref][mkey1][keywordx]
       </li>
       <li>
        [ahref]
        
       </li>
       <[keywordx]>
       </[keywordx]>
      </ul>
     </li>
     <li>
      [ahref]
      
      <ul class="lm_3th" id="mn_KFS_01_01_05">
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </li>
    </ul>
   </div>
   <div class="content">
    <div class="path">
     [ahref]
     
     >
     [ahref]
     
     >
     <span class="navi_ov">
      산림휴양
     </span>
    </div>
    <div class="page_service">
     <div class="sharer-container" id="sharer-bottom">
     </div>
     <ul>
      <li>
       <a href="/newkfsweb/html/common/popPrint.html" onclick="contentPrintPage('KFS_01_01'); return false;" target="_blank" title="새창">
       </a>
      </li>
     </ul>
    </div>
    <h3 class="cont_ti" id="cont1">
     [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
    </h3>
    <div id="txt">
     <div class="fo020601_01">
      <ul class="fo020601_01_tap">
       <li>
       </li>
       <li>
       </li>
       <li>
       </li>
      </ul>
     </div>
     <div class="top_mar_15">
      <ul class="tabNum_photo" id="tabMenu">
       <li>
        [linkx]
        
       </li>
       <li>
        <em>
         <span>
          식물의 뿌리
         </span>
        </em>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_culture/UI_KFS_1001_050101_d4.html" onclick="tabMenu(this.href);return false;">
         <span>
          식물의 잎
         </span>
        </a>
       </li>
       <li>
        <a href="/newkfsweb/html/HtmlPage.do?pg=/foreston/fon_culture/UI_KFS_1001_050101_d5.html" onclick="tabMenu(this.href);return false;">
         <span>
          꽃의 구조
         </span>
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div>
      <h4>
       식물의 종류에 따른 뿌리의 분류
      </h4>
      <ul class="fo020601_01_01img">
       <li>
       </li>
       <li>
       </li>
       <li>
       </li>
      </ul>
     </div>
     <div class="top_mar_15">
      <table cellspacing="0" class="table center" summary="식물의 종류에 따른 뿌리의 분류중 옥수수, 딸기, 은행나무의 줄기색, 단단하기, 뻗은모양에 관한 내용입니다." width="100%">
       <caption>
        식물의 종류에 따른 뿌리의 분류
       </caption>
       <colgroup>
        <col width="23%"/>
        <col width="23%"/>
        <col width="23%"/>
        <col width="31%"/>
       </colgroup>
       <thead>
        <tr>
         <th scope="col">
          구분
         </th>
         <th scope="col">
          줄기색
         </th>
         <th scope="col">
          단단하기
         </th>
         <th class="t_end" scope="col">
          뻗은모양
         </th>
        </tr>
       </thead>
       <tbody>
        <tr>
         <td>
          옥수수
         </td>
         <td>
          녹색
         </td>
         <td>
          연하다
         </td>
         <td class="t_end">
          곧게 위로 자란다
         </td>
        </tr>
        <tr>
         <td>
          딸기
         </td>
         <td>
          녹색<li>[keywordx]</li>[pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
         </td>
         <td>
          연하다
         </td>
         <td class="t_end">
          옆으로 뻗으면서 자란다
         </td>
        </tr>
        <tr>
         <td>
          은행나무
         </td>
         <td>
          갈색
         </td>
         <td>
          단단하다
         </td>
         <td class="t_end">
          곧게 위로 자란다
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <div class="top_mar_15">
      <h4>
       뿌리가 하는 일
      </h4>
      <ul class="h5_ul">
       <li>
        뿌리는 식물체를 지탱해 주는 지지작용을 한다. 뿌리는 땅에 깊숙히 뿌리박혀 식물체가 비바람에 뽑히거나 날아가지 않게 해 준다.
       </li>
       <li>
        뿌리는 물과 그 속에 녹은 양분을 흡수하는 흡수작용을 한다. 물과 그 속에 녹은 양분은 뿌리털을 통해 흡수되어 뿌리의 물관에서 줄기의 물관을 거쳐 잎의 잎맥으로 이동하여 식물체의 구석구석으로 보내진다.
       </li>
       <li>
        뿌리는 잎의 엽록체에서 광합성을 통해 만들어진 당분을 녹말의 형태로 저장한다. 특히 무, 고구마, 당근, 도라지, 더덕, 칡과 같이 주로 뿌리에 양분을 저장하는 식물은 식물의 크기에 비해 뿌리가 크고 굵다.
       </li>
      </ul>
      <div class="center fo020601_waterdrop">
       <div>
        <object align="middle" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" height="430" id="visual" width="620">
         <param name="movie" value="/swf/edu/1-3-4.swf"/>
         <param name="quality" value="high"/>
         <param name="loop" value="true"/>
         <param name="wmode" value="transparent"/>
         <param name="scale" value="showall"/>
         <param name="menu" value="true"/>
         <param name="devicefont" value="false"/>
         <param name="salign" value=""/>
         <param name="allowScriptAccess" value="sameDomain"/>
         <object data="/swf/edu/1-3-4.swf" height="430" type="application/x-shockwave-flash" width="620">
          <param name="movie" value="/swf/edu/1-3-4.swf"/>
          <param name="quality" value="high"/>
          <param name="loop" value="true"/>
          <param name="wmode" value="transparent"/>
          <param name="scale" value="showall"/>
          <param name="menu" value="true"/>
          <param name="devicefont" value="false"/>
          <param name="salign" value=""/>
          <param name="allowScriptAccess" value="sameDomain"/>
          <div class="fo020601_nonflash_img">
          </div>
         </object>
        </object>
       </div>
      </div>
      <p class="center or">
       <물방울의 식물 여행>
      </p>
      <h5>
       뿌리에서 흡수된 물이 높은 나무꼭대기까지 갈 수 있는 까닭은 무엇일까?
      </h5>
      <p class="left_mar_10">
       뿌리에서 흡수된 물은 줄기와 잎의 순서로 이동하게 되는데 뿌리에서 흡수한 물이 이동할 수 있는 이유로는 뿌리압과
       <br>
        증산작용, 모세관 현상, 물의 응집력 때문이다.
       </br>
      </p>
      <ul class="h6_ul">
       <li>
        뿌리압 : 식물의 뿌리는 흡수한 물을 줄기로 밀어 올린다. 식물의 줄기를 밑동에서 잘라 주면 자른 면에서 물이 스며 나오는데, 이는 뿌리압에 의해 뿌리로부터 물이 상승하기 때문이다.
       </li>
       <li>
        증산작용 : 잎의 숨구멍을 통해 빠져 나가는 물을 보충하기 위해서 물이 계속 이동하게 된다.
       </li>
       <li>
        모세관 현상 : 직경이 매우 작은 관을 물 위에 세우면 작은 관 속의 수면은 관 밖의 수면보다 높게 된다. 이러한 현상과 마찬가지로 물관은 자체는 세포가 기둥처럼 연결된 매우 가느다란 관으로, 식물 내부의 압력보다 외부의 기압이 크므로 식물에서는 이 모세관 현상이 두드러지게 잘 나타난다.
       </li>
       <li>
        물의 응집력 : 물관 속의 물기둥은 뿌리에서부터 잎까지 계속 연결되어 있는데, 이 물기둥내에서 물분자끼리 서로 잡아당기는 힘이 물이 상승하는 데 가장 큰 역할을 하고 있다.
       </li>
      </ul>
     </div>
    </div>
    <form action="/newkfsweb/kfi/kfs/sft/insertSatisfaction.do" method="post" name="satisfactionVO">
    </form>
   </div>
   <dl class="quick">
   </dl>
   <div id="quick_top">
    [linkx]
    
   </div>
  </div>
  <div class="footer_container" style="background-color : #ebebf0;">
   <div class="footer">
    <ul class="bt_menu">
     <li class="first">
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li class="point">
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/kfsweb/kfi/kfs/mbm/selectEmployeeList.do?mn=NKFS_01_02_02">
       직원찾기
      </a>
     </li>
    </ul>
    <div class="bt_site">
     <form action="/kfsweb/html/common/orgSiteLink.jsp" method="get" name="frmLinkOrgan" target="_blank" title="새창">
      <select id="jump_01" name="selSite" title="소속기관 목록입니다. 선택하신 소속기관 페이지로 이동합니다.">
       <option value="">
        소속기관 바로가기
       </option>
       <option value="http://kna.go.kr">
        국립수목원
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=fhi&amp;mn=KFS_16">
        산림교육원
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=fao&amp;mn=KFS_17">
        산림항공본부
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=kfsv&amp;mn=KFS_18">
        국립산림품종관리센터
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=north&amp;mn=KFS_19">
        북부지방산림청
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=east&amp;mn=KFS_20">
        동부지방산림청
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=south&amp;mn=KFS_21">
        남부지방산림청
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=cntr&amp;mn=KFS_22">
        중부지방산림청
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=west&amp;mn=KFS_23">
        서부지방산림청
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=kfri&amp;mn=KFS_14">
        국립산림과학원
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=huyang&amp;mn=KFS_24">
        국립자연휴양림관리소
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=nmm&amp;mn=KFS_37">
        국립산악박물관
       </option>
      </select>
      [linkx]
      
     </form>
     <form action="/kfsweb/html/common/orgSiteLink.jsp" id="frmLinkInfo2" method="get" name="frmLinkInfo" target="_blank" title="새창">
      <select id="jump_03" name="selSite" title="관련사이트 목록입니다. 선택하신 관련사이트로 새창 이동합니다.">
       <option value="">
        관련사이트 바로가기
       </option>
       <option value="http://www.nature.go.kr/">
        국가생물종지식정보
       </option>
       <option value="http://www.nature.go.kr/kpni/">
        국가표준식물목록
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=fgis&amp;mn=KFS_02_04">
        산림공간정보서비스
       </option>
       <option value="http://ftis.forest.go.kr/">
        산림과학기술서비스
       </option>
       <option value="http://www.forest.go.kr/kfsweb/html/HtmlPage.do?pg=/2012/study/study_0301.html&amp;orgId=kfri&amp;mn=KFS_14_05_01">
        산림과학정보관
       </option>
       <option value="http://fec.forest.go.kr">
        산림사업법인
       </option>
       <option value="http://mtweather.nifos.go.kr/">
        산악기상정보시스템
       </option>
       <option value="http://forestfire.kfri.go.kr/">
        산불위험예보시스템
       </option>
       <option value="http://sansatai.forest.go.kr/welcome.ls">
        산사태정보시스템
       </option>
       <option value="http://www.forest.go.kr/kfsweb/kfs/idx/SubIndex.do?orgId=fli&amp;mn=KFS_02_05">
        산지정보시스템
       </option>
       <option value="http://www.forestinfo.or.kr/">
        임산물유통정보
       </option>
       <option value="http://ob.forest.go.kr">
        퇴직공무원커뮤니티
       </option>
       <option value="http://fbiz.forest.go.kr">
        산림사업용역관리시스템
       </option>
       <option value="http://www.forest.go.kr/newkfsweb/kfs/idx/SubIndex.do?orgId=nmm&amp;mn=KFS_37">
        국립산악박물관
       </option>
       <option value="http://www.kofpi.or.kr">
        한국임업진흥원
       </option>
       <option value="http://www.fowi.or.kr">
        한국산림복지진흥원
       </option>
       <option value="https://www.bdna.or.kr">
        국립백두대간수목원
       </option>
       <option value="https://kfpm.forest.go.kr">
        목재자원관리시스템
       </option>
      </select>
      [linkx]
      
     </form>
    </div>
    <div class="bt_cont">
     <address>
      [302-701] 대전광역시 서구 청사로 189 1동(산림청)
     </address>
     <p>
      <em>
       TEL : (주)
       [ahref]
       
       (월~금 09:00~18:00, 공휴일 제외) (야)
       [ahref]
       
       , FAX : 042-472-3222,
       <span>
        E-mail :
        <a href="r">
         mfoa@korea.kr
        </a>
       </span>
      </em>
     </p>
    </div>
    <ul class="bt_mark">
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/" target="_blank" title="새창">
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
  </div>
  <div id="footInfo">
   <div class="layout">
    <div class="f_util left_util">
     <div class="util_item icon_1">
      [ahref]
      
     </div>
     <div class="util_item icon_2">
      [ahref]
      
     </div>
    </div>
    <div class="f_util right_util">
     <div class="util_item icon_1">
      [linkx]
      
     </div>
     <div class="util_item icon_1">
      <a href="3" title="관련기관 바로가기">
       <span>
        관련기관 바로가기
       </span>
      </a>
     </div>
    </div>
   </div>
   <div class="util_item_target" id="utilItemTarget_1" style="" tabindex="0">
    <div class="target_wrap">
     <div class="target_title">
      <span>
       중앙행정기관
      </span>
      바로가기
     </div>
     <div class="target_body">
      <li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[ahref]</li>
     </div>
     <div class="target_close">
      [linkx]
      
     </div>
    </div>
   </div>
   <div class="util_item_target" id="utilItemTarget_2" style="" tabindex="0">
    <div class="target_wrap">
     <div class="target_title">
      <span>
       소속기관
      </span>
      바로가기
     </div>
     <div class="target_body">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="target_close">
      [ahref]
      
     </div>
    </div>
   </div>
   <div class="util_item_target" id="utilItemTarget_3" style="" tabindex="0">
    <div class="target_wrap">
     <div class="target_title">
      <span>
       관련기관
      </span>
      바로가기
     </div>
     <div class="target_body">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="r" target="_blank" title="새창">
         산림사업법인
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="r" target="_blank" title="새창">
         한국임업진흥원
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="r" target="_blank" title="새창">
         목재자원관리시스템
        </a>
       </li>
      </ul>
     </div>
     <div class="target_close">
      [ahref]
      
     </div>
    </div>
   </div>
   <address class="f_addr">
    <p>
     COPYRIGHTⒸ 산림청 SINCE1967. ALL RIGHTS RESERVED.
    </p>
   </address>
  </div>
  <form action="/" method="post" name="popPrint">
  </form>
  <form action="/" method="post" name="scrapVO">
  </form>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0332
  </b>
 </body>
</html>
|<---