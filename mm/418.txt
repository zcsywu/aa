--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport"/>
  <meta content="Gatsby 2.4.3" name="generator"/>
  <title data-react-helmet="true">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" name="description">
   <li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
  </meta>
  <meta content="http://resources.jetbrains.com/storage/products/research/devecosystem-2019/img/meta/preview.png" data-react-helmet="true" name="image"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" itemprop="name"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" itemprop="description"/>
  <meta content="http://resources.jetbrains.com/storage/products/research/devecosystem-2019/img/meta/preview.png" data-react-helmet="true" itemprop="image"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" property="og:title"/>
  <meta content="http://resources.jetbrains.com/storage/products/research/devecosystem-2019/img/meta/preview.png" data-react-helmet="true" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" property="og:description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" property="og:site_name"/>
  <meta content="website" data-react-helmet="true" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" property="og:url"/>
  <meta content="summary_large_image" data-react-helmet="true" name="twitter:card"/>
  <meta content="@jetbrains" data-react-helmet="true" name="twitter:site"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" name="twitter:title"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" data-react-helmet="true" name="twitter:description"/>
  <meta content="@jetbrains" data-react-helmet="true" name="twitter:creator"/>
  <meta content="http://resources.jetbrains.com/storage/products/research/devecosystem-2019/img/meta/preview.png" data-react-helmet="true" name="twitter:image:src">
   [link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
  </meta>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-5P98" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <noscript id="gatsby-noscript">
   This app works best with JavaScript enabled.
  </noscript>
  <div id="___gatsby">
   <div role="group" style="outline:none" tabindex="-1">
    <div class="devecosystem-2019_primary-colors">
     <header class="header wt-section_bg_dark wt-section_theme_dark">
      <div class="wt-container">
       <div class="wt-row wt-row_size_m wt-row_justify_between wt-row_align-items_center">
        <div class="wt-col-2">
         [linkx]
         
        </div>
        <div class="wt-col-inline">
         <div class="wt-row wt-row_size_s wt-row_align-items_center wt-text-2 wt-text-2_theme_dark">
          <div class="wt-col-inline">
           <a class="wt-link wt-link_theme_dark wt-link_hardness_average" href="/research/devecosystem-2017/">
            2017
           </a>
          </div>
          <div class="wt-col-inline">
           |
          </div>
          <div class="wt-col-inline">
           [ahref]
           
          </div>
          <button class="wt-button wt-button_mode_nude wt-button_size_s wt-button_theme_dark wt-button_with-icon wt-button_align-icon_left wt-col-inline" type="button">
           <svg class="wt-icon wt-icon_size_m wt-button__icon" viewbox="0 0 24 24">
            <path d="m11.62965 16.61452c-1.13922-.692-3.111-2.36313-3.153-2.32718a28.32942 28.32942 0 0 1 -3.30095 2.26177c-.68823.39708-1.38892.49615-1.82064-.09139a.992.992 0 0 1 .26656-1.40406c.00852-.00391 2.44665-1.594 3.25973-2.29678a11.64387 11.64387 0 0 1 -2.23281-3.53521 1.07774 1.07774 0 0 1 .52716-1.36835c.52715-.22205 1.049-.12664 1.48663.61989a10.33341 10.33341 0 0 0 1.8143 2.89517 10.853 10.853 0 0 0 2.1563-4.3469l-7.63293-.02148v-2.00685h4.8124v-.99406a.98574.98574 0 1 1 1.9713 0v.99406h5.1703v2.00685h-2.08646a17.03869 17.03869 0 0 1 -2.64065 5.75689 15.88157 15.88157 0 0 0 2.30149 1.66068l2.3092-5.66617a1.162 1.162 0 0 1 2.1802.01591l3.01041 7.389 1.85638 4.385h-2.47393l-1.08252-2.53924h-4.84082l-.888 2.53924h-2.5993l.287-.69166zm4.31307-5.16715-1.67531 4.55419h3.35059z">
            </path>
           </svg>
           한국어
          </button>
         </div>
        </div>
       </div>
      </div>
     </header>
     <main>
      <section class="wt-section wt-section_bg_gray-light section-navigation">
       <div class="wt-container wt-offset-top-48 navigation__content _team">
        <div class="wt-row wt-row_size_m wt-row_align-items_center">
         <div class="wt-col-5 wt-col-md-12">
          <h1 class="wt-hero navigation-title">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h1>
         </div>
         <div class="wt-col-7 wt-col-md-12">
          <div class="wt-row wt-row_size_m wt-offset-top-md-24 main-menu">
           <div class="wt-col-3 wt-col-md-3 wt-col-sm-5">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/">
              주요 시사점
              <br/>
              및 흥미로운 사실
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/demographics/">
              인구통계
              <br/>
              및 방법론
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <span class="wt-text-2_hardness_pale">
              원본 데이터
              <br/>
              (향후 추가 예정)
             </span>
            </p>
           </div>
           <div class="wt-col-2 wt-offset-left-1 wt-col-md-3 wt-offset-left-md-0 wt-col-sm-5 wt-offset-left-sm-1">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
           </div>
           <div class="wt-col-3 wt-col-md-3 wt-col-sm-5">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/python/">
              Python
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             PHP[content20][content1][linkx]
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/swift-objc/">
              Swift 및 Objective-C
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
           </div>
           <div class="wt-col-3 wt-col-md-3 wt-col-sm-5 wt-offset-left-sm-1">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/javascript/">
              JavaScript[link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/devops/">
              DevOps
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/rust/">
              Rust
             </a>
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </section>
      <section class="wt-section">
       <div class="wt-container wt-offset-top-96">
        <div class="wt-row wt-row_size_m wt-offset-top-48">
         <div class="wt-col-7 wt-col-md-12">
          <h3 class="wt-h3">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24 wt-text-2">
          <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
           <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
            <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
            </path>
           </svg>
          </div>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24">
          <p class="wt-subtitle-2">
           평균 29%와 비교하여 TeamCity 사용자의 45%는 11년 이상의 IT 경험을 보유하고 있습니다.
           <br/>
           TeamCity 사용자의 27%가 팀 리더이며 이는 평균 18%보다 많습니다.
          </p>
          <div class="wt-row wt-row_align-items_center wt-row_size_0 wt-offset-top-24 wt-offset-top-sm-12">
           <div class="wt-col-inline">
            <svg class="dev-ecosystem__icon-share" viewbox="0 0 24 24">
             <path d="M8.764 10.637l3.209-1.76a2.39 2.39 0 0 1-.08-.577 2.352 2.352 0 1 1 2.353 2.351h-.001c-.676 0-1.28-.288-1.707-.743l-3.21 1.76c.048.186.08.377.08.577 0 .2-.032.392-.08.576l3.21 1.761a2.337 2.337 0 0 1 1.707-.742 2.35 2.35 0 1 1-2.352 2.35c0-.2.034-.39.08-.576l-3.209-1.76a2.341 2.341 0 0 1-1.707.743 2.353 2.353 0 0 1 0-4.703c.674 0 1.28.288 1.707.743M11.755.49C5.263.49 0 5.753 0 12.245 0 18.738 5.263 24 11.755 24c6.493 0 11.755-5.262 11.755-11.755C23.51 5.753 18.248.49 11.755.49m-.33 8.128l-2.587 1.42a2.8 2.8 0 0 0-1.781-.634 2.845 2.845 0 0 0-2.842 2.84 2.846 2.846 0 0 0 2.842 2.843 2.8 2.8 0 0 0 1.78-.634l2.588 1.42a2.367 2.367 0 0 0-.022.317 2.844 2.844 0 0 0 2.842 2.84 2.843 2.843 0 0 0 2.84-2.84 2.843 2.843 0 0 0-2.84-2.84 2.8 2.8 0 0 0-1.783.634l-2.585-1.42a2.685 2.685 0 0 0 0-.637l2.585-1.42a2.802 2.802 0 0 0 1.783.634 2.844 2.844 0 0 0 2.84-2.84 2.844 2.844 0 0 0-2.84-2.842A2.844 2.844 0 0 0 11.403 8.3c0 .104.007.21.022.318m.33-7.638c6.213 0 11.265 5.053 11.265 11.265 0 6.211-5.052 11.265-11.265 11.265C5.544 23.51.49 18.456.49 12.245.49 6.033 5.544.98 11.755.98" fill-rule="nonzero">
             </path>
            </svg>
           </div>
          </div>
         </div>
        </div>
        <div class="wt-offset-top-96">
         [content13][content14][linkx][content15]
        </div>
        <div class="wt-row wt-row_size_m wt-offset-top-48">
         <div class="wt-col-7 wt-col-md-12">
          <h3 class="wt-h3">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24 wt-text-2">
          <div class="wt-row wt-row_size_m">
           <div class="wt-col-inline wt-col-md-4 wt-col-sm-12">
            <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
             <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
              <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
              </path>
             </svg>
            </div>
           </div>
           <div class="wt-col-inline wt-col-md-4 wt-col-sm-12">
            <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
             <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
              <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
              </path>
             </svg>
            </div>
           </div>
           <div class="wt-col-inline wt-col-md-4 wt-col-sm-12">
            <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
             <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
              <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
              </path>
             </svg>
            </div>
           </div>
           <div class="wt-col-2 wt-col-md-12 wt-offset-top-md-24">
            <div class="wt-row wt-row_size_0 _margin-top__bublic-chart">
             <div class="wt-col-inline wt-offset-top-24">
              <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
               <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
                <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
                </path>
               </svg>
              </div>
             </div>
             <div class="wt-col-inline wt-offset-top-24">
              <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
               <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
                <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
                </path>
               </svg>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="wt-offset-top-96">
        </div>
        <div class="wt-row wt-row_size_m wt-offset-top-48">
         <div class="wt-col-7 wt-col-md-12">
          <h3 class="wt-h3">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24 wt-text-2">
          <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
           <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
            [link]<li>[link]</li><li>[link]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
           </svg>
          </div>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24">
          <p class="wt-subtitle-2">
           YouTrack 사용자의 37%는 11년 이상의 IT 경험을 보유하고 있습니다. 모든 이슈 트래커를 대상으로 할 경우 이 수치는 29%입니다.
           <br/>
           <br/>
           데이터 분석가, 데이터 엔지니어, 데이터 과학자들도 YouTrack을 선호하는데, 이 분야의 전문가들은 YouTrack 사용자의 22%를 차지합니다. 반면, 모든 응답자 중에서는 6%에 불과합니다.
          </p>
          <div class="wt-row wt-row_align-items_center wt-row_size_0 wt-offset-top-24 wt-offset-top-sm-12">
           <div class="wt-col-inline">
            <svg class="dev-ecosystem__icon-share" viewbox="0 0 24 24">
             <path d="M8.764 10.637l3.209-1.76a2.39 2.39 0 0 1-.08-.577 2.352 2.352 0 1 1 2.353 2.351h-.001c-.676 0-1.28-.288-1.707-.743l-3.21 1.76c.048.186.08.377.08.577 0 .2-.032.392-.08.576l3.21 1.761a2.337 2.337 0 0 1 1.707-.742 2.35 2.35 0 1 1-2.352 2.35c0-.2.034-.39.08-.576l-3.209-1.76a2.341 2.341 0 0 1-1.707.743 2.353 2.353 0 0 1 0-4.703c.674 0 1.28.288 1.707.743M11.755.49C5.263.49 0 5.753 0 12.245 0 18.738 5.263 24 11.755 24c6.493 0 11.755-5.262 11.755-11.755C23.51 5.753 18.248.49 11.755.49m-.33 8.128l-2.587 1.42a2.8 2.8 0 0 0-1.781-.634 2.845 2.845 0 0 0-2.842 2.84 2.846 2.846 0 0 0 2.842 2.843 2.8 2.8 0 0 0 1.78-.634l2.588 1.42a2.367 2.367 0 0 0-.022.317 2.844 2.844 0 0 0 2.842 2.84 2.843 2.843 0 0 0 2.84-2.84 2.843 2.843 0 0 0-2.84-2.84 2.8 2.8 0 0 0-1.783.634l-2.585-1.42a2.685 2.685 0 0 0 0-.637l2.585-1.42a2.802 2.802 0 0 0 1.783.634 2.844 2.844 0 0 0 2.84-2.84 2.844 2.844 0 0 0-2.84-2.842A2.844 2.844 0 0 0 11.403 8.3c0 .104.007.21.022.318m.33-7.638c6.213 0 11.265 5.053 11.265 11.265 0 6.211-5.052 11.265-11.265 11.265C5.544 23.51.49 18.456.49 12.245.49 6.033 5.544.98 11.755.98" fill-rule="nonzero">
             </path>
            </svg>
           </div>
          </div>
         </div>
        </div>
       </div>
      </section>
      <section class="wt-section wt-section_bg_dark wt-section_theme_dark">
       <div class="wt-container wt-offset-top-96">
        <div class="wt-row wt-row_size_m wt-offset-top-48">
         <div class="wt-col-7 wt-col-md-12">
          <h3 class="wt-h3 wt-h3_theme_dark">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24 wt-text-2 wt-text-2_theme_dark">
          [content14][content15][content16][content17][linkx][content18][linkx]
         </div>
        </div>
        <div class="wt-offset-top-96">
        </div>
        <div class="wt-row wt-row_size_m wt-offset-top-48">
         <div class="wt-col-7 wt-col-md-12">
          <h3 class="wt-h3 wt-h3_theme_dark">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h3>
         </div>
         <div class="wt-col-10 wt-col-md-12 wt-offset-top-24 wt-text-2 wt-text-2_theme_dark">
          <div class="research-chart-loader-container wt-row wt-row_justify_center wt-row_align-items_center">
           <svg class="wt-icon wt-icon_size_m" viewbox="0 0 24 24">
            <path d="M12 3.25A8.76 8.76 0 0 0 3.25 12h1.5A7.25 7.25 0 1 1 12 19.25v1.5a8.75 8.75 0 1 0 0-17.5z" style="animation:wt-icon-rotate .7s linear infinite;transform-origin:center center">
            </path>
           </svg>
          </div>
         </div>
        </div>
       </div>
      </section>
      <section class="wt-section">
       <div class="wt-container wt-offset-top-48">
        <div class="wt-row wt-row_size_m wt-row_align-items_stretch">
         <div class="wt-col-4 wt-col-md-6 wt-col-sm-12 wt-offset-top-24">
          <a class="wt-card wt-card_theme_light wt-card_link card" href="/youtrack/">
           <div class="wt-card__section">
            <div class="jetbrains-logo _size-3 _full-block _logo-youtrack wt-offset-top-12">
            </div>
            <h3 class="wt-h3 wt-offset-top-24">
             [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <div class="wt-text-2 wt-text-2_flow">
             개발팀을 위해 설계된 이슈 트래커
            </div>
           </div>
           <div class="card__learn-more">
            <button class="wt-button wt-button_mode_outline wt-button_size_m wt-button_theme_light wt-button_align-icon_left" type="button">
             Try now
            </button>
           </div>
          </a>
         </div>
         <div class="wt-col-4 wt-col-md-6 wt-col-sm-12 wt-offset-top-24">
          <a class="wt-card wt-card_theme_light wt-card_link card" href="/teamcity/">
           <div class="wt-card__section">
            <div class="jetbrains-logo _size-3 _full-block _logo-teamcity wt-offset-top-12">
            </div>
            <h3 class="wt-h3 wt-offset-top-24">
             [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <div class="wt-text-2 wt-text-2_flow">
             기본으로 제공되는 강력한 지속적 통합 도구
            </div>
           </div>
           <div class="card__learn-more">
            <button class="wt-button wt-button_mode_outline wt-button_size_m wt-button_theme_light wt-button_align-icon_left" type="button">
             Try now
            </button>
           </div>
          </a>
         </div>
         <div class="wt-col-4 wt-col-md-6 wt-col-sm-12 wt-offset-top-24">
          <a class="wt-card wt-card_theme_light wt-card_link card" href="/upsource/">
           <div class="wt-card__section">
            <div class="jetbrains-logo _size-3 _full-block _logo-upsource wt-offset-top-12">
            </div>
            <h3 class="wt-h3 wt-offset-top-24">
             [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h3>
            <div class="wt-text-2 wt-text-2_flow">
             코드 검토, 팀 협업 및 분석 기능
            </div>
           </div>
           <div class="card__learn-more">
            <button class="wt-button wt-button_mode_outline wt-button_size_m wt-button_theme_light wt-button_align-icon_left" type="button">
             Try now
            </button>
           </div>
          </a>
         </div>
        </div>
       </div>
      </section>
      <section class="wt-section wt-section_bg_gray-light section-navigation">
       <div class="wt-container wt-offset-top-48 navigation__content">
        <div class="wt-row wt-row_size_m wt-row_align-items_center">
         <div class="wt-col-5 wt-col-md-12">
          <h1 class="wt-h2">
           [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
          </h1>
         </div>
         <div class="wt-col-7 wt-col-md-12">
          <div class="wt-row wt-row_size_m wt-offset-top-md-24 main-menu">
           <div class="wt-col-3 wt-col-md-3 wt-col-sm-5">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/">
              주요 시사점
              <br/>
              및 흥미로운 사실
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <span class="wt-text-2_hardness_pale">
              원본 데이터
              <br/>
              (향후 추가 예정)
             </span>
            </p>
           </div>
           <div class="wt-col-2 wt-offset-left-1 wt-col-md-3 wt-offset-left-md-0 wt-col-sm-5 wt-offset-left-sm-1">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/java/">
              Java
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/go/">
              Go
             </a>
            </p>
           </div>
           <div class="wt-col-3 wt-col-md-3 wt-col-sm-5">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/ruby/">
              Ruby
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [ahref]
              [content17][content18][content19][linkx][content20]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/scala/">
              Scala
             </a>
            </p>
           </div>
           <div class="wt-col-3 wt-col-md-3 wt-col-sm-5 wt-offset-left-sm-1">
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             JavaScript[link][link][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/kotlin/">
              Kotlin
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/databases/">
              데이터베이스
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             <a class="wt-link wt-link_hardness_average main-menu__link" href="/ko-kr/lp/devecosystem-2019/devops/">
              DevOps[content11][content12][content13][linkx]
             </a>
            </p>
            <p class="wt-text-2 wt-offset-top-12 main-menu__item">
             [linkx]
             
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </section>
     </main>
     <section class="wt-section wt-section_bg_gray-dark wt-section_theme_dark section-footer">
      <div class="wt-container wt-offset-top-96">
       <div class="wt-row wt-row_size_m">
        <div class="wt-col-7 wt-col-md-10 wt-offset-left-md-0 wt-offset-top-md-48">
         <h2 class="wt-h3 wt-h3_theme_dark">
          <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <div class="share wt-row wt-offset-top-12 wt-row_size_s wt-row_justify_start">
          <div class="wt-col-inline share__button _twitter twitter">
          </div>
          <div class="wt-col-inline share__button _facebook facebook">
          </div>
         </div>
         <div class="wt-offset-top-48">
          <h4 class="wt-h4 wt-h4_theme_dark" id="panel">
           향후 설문조사 참여:
          </h4>
          <form>
           <div>
            <label class="wt-input wt-input_theme_dark wt-input_size_m wt-input_empty wt-offset-top-12">
            </label>
           </div>
           <div>
            <label class="wt-list-item wt-list-item_placement_left wt-list-item_mode_nude wt-list-item_size_m wt-list-item_theme_dark wt-offset-top-12">
             <span class="wt-checkbox wt-checkbox_theme_dark wt-checkbox_size_m wt-list-item__icon wt-list-item__icon_placement_left">
              <label class="wt-checkbox__icon" for="checkboxId-745">
               <svg class="wt-checkbox__checkmark" height="16px" viewbox="0 0 16 16" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" y="0px">
                <path d="M2.2,8.79,5.48,12.1l8.16-8.2" fill="none" stroke="#FFF" stroke-width="2">
                </path>
               </svg>
              </label>
             </span>
             <span class="wt-list-item__content">
              향후 JetBrains 설문조사에 참여하고 싶습니다
             </span>
            </label>
           </div>
           <div>
            <label class="wt-list-item wt-list-item_placement_left wt-list-item_mode_nude wt-list-item_size_m wt-list-item_theme_dark">
             <span class="wt-checkbox wt-checkbox_theme_dark wt-checkbox_size_m wt-list-item__icon wt-list-item__icon_placement_left">
              <label class="wt-checkbox__icon" for="checkboxId-746">
               <svg class="wt-checkbox__checkmark" height="16px" viewbox="0 0 16 16" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" y="0px">
                <path d="M2.2,8.79,5.48,12.1l8.16-8.2" fill="none" stroke="#FFF" stroke-width="2">
                </path>
               </svg>
              </label>
             </span>
             <span class="wt-list-item__content">
              향후 JetBrains 연구 결과를 받고 싶습니다
             </span>
            </label>
           </div>
           <div>
            <label class="wt-list-item wt-list-item_placement_left wt-list-item_mode_nude wt-list-item_size_m wt-list-item_theme_dark">
             <span class="wt-checkbox wt-checkbox_theme_dark wt-checkbox_size_m wt-list-item__icon wt-list-item__icon_placement_left">
              <label class="wt-checkbox__icon" for="checkboxId-747">
               <svg class="wt-checkbox__checkmark" height="16px" viewbox="0 0 16 16" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" y="0px">
                <path d="M2.2,8.79,5.48,12.1l8.16-8.2" fill="none" stroke="#FFF" stroke-width="2">
                </path>
               </svg>
              </label>
             </span>
             <span class="wt-list-item__content">
              JetBrains 기업 뉴스, 제품 및 서비스에 대한 이메일을 받고 싶습니다
             </span>
            </label>
           </div>
           <div>
            <label class="wt-list-item wt-list-item_placement_left wt-list-item_mode_nude wt-list-item_size_m wt-list-item_theme_dark">
             <span class="wt-checkbox wt-checkbox_theme_dark wt-checkbox_size_m wt-list-item__icon wt-list-item__icon_placement_left">
              <label class="wt-checkbox__icon" for="checkboxId-748">
               <svg class="wt-checkbox__checkmark" height="16px" viewbox="0 0 16 16" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" y="0px">
                <path d="M2.2,8.79,5.48,12.1l8.16-8.2" fill="none" stroke="#FFF" stroke-width="2">
                </path>
               </svg>
              </label>
             </span>
             <span class="wt-list-item__content">
              <span>
               이 양식을 제출함으로써
               <a href="/company/privacy.html">
                JetBrains 개인 정보 보호 정책
               </a>
               에 동의 합니다.
              </span>
             </span>
            </label>
           </div>
           <button class="wt-button wt-button_disabled wt-button_mode_outline wt-button_size_m wt-button_theme_dark wt-button_align-icon_left wt-offset-top-12" disabled="" type="submit">
            제출
           </button>
          </form>
         </div>
         <p class="wt-text-2 wt-text-2_flow">
          질문이나 제안이 있으면
          [ahref]
          
          으로 연락해 주시기 바랍니다.
         </p>
        </div>
       </div>
      </div>
     </section>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0438
  </b>
 </body>
</html>|<---