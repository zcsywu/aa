--->|<!DOCTYPE html>
<html class="hidden" lang="ko-KR" prefix="og: http://ogp.me/ns#">
 <head>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1, user-scalable=no" name="viewport"/>
  <meta content="DXcszjxvXd" name="baidu-site-verification">
  </meta>
 </head>
 <body class="page page-id-14078 page-child parent-pageid-14022 page-template page-template-tpl-is-city-hotel page-template-tpl-is-city-hoteltpl-is-city-hotel-php okura-nikko-hotels is-hotel hotel-nikko-nara is-brand--blue">
  <div class="hfeed site js_site" id="page">
   <header class="header js_header">
    <div class="header__utility js_header__utility">
     <div class="header__utility--layout-center o_layout-center">
      <div class="header__lang-selector lang-selector js_lang-selector">
       <dl class="dropy">
        <dt class="dropy__title">
         <span class="dropy__title-span">
          Language
         </span>
        </dt>
        <dd class="dropy__content">
         <ul class="dropy__list">
          <li class="dropy__list-item dropy__list-item--current">
           [linkx]
           
          </li>
          <li class="dropy__list-item">
           [linkx]
           
          </li>
          <li class="dropy__list-item">
           [linkx]
           
          </li>
          <li class="dropy__list-item">
           [linkx]
           
          </li>
          <li class="dropy__list-item">
           [ahref]
           
          </li>
         </ul>
        </dd>
       </dl>
      </div>
      <div class="header__utility-menu menu menu--utility js_menu--utility menu--utility--brand">
       <nav class="menu__nav menu--utility__nav" id="site-navigation" role="navigation">
        <div class="menu-utility-container">
         <ul class="menu__ul menu--utility__ul menu__ul--en" id="menu-utility">
          <li class="menu-item menu-item-contact">
           [linkx]
           
          </li>
         </ul>
        </div>
       </nav>
      </div>
      <div class="header__utility__group-logo">
       [linkx]
        [content9][content10][linkx][content11][content12]
       
      </div>
     </div>
    </div>
    <div class="header__nav js_header__nav is_max">
     <div class="header__nav--layout-center o_layout-center">
      <div class="header__nav-mobile mobile__menu js_mobile__menu">
       [linkx]
       
      </div>
      <div class="header__nav-logo header__logo js_header__logo logo header__nav-logo_container logo--nikko">
       [ahref]
       
      </div>
      <div class="header__nav-book-now js_nav-book-now header__nav-book-now_brand">
       [linkx]
       
      </div>
      <div class="header__nav-home js_header__nav-home">
       <div class="home__link">
        [ahref]
        
        <span class="close-menu js-close-menu">
        </span>
       </div>
      </div>
      <div class="header__nav-menu js_header__nav-menu menu menu--primary">
       <nav class="menu__nav menu--primary__nav" id="site-navigation" role="navigation">
        <div class="menu-primary-container">
         <ul class="menu__ul menu--primary__ul menu__ul--ko" id="menu-primary-korean-1">
          <li class="js_menu-item--oneharmony-login menu-item menu-item-type-custom menu-item-object-custom menu-item-14321">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-14322">
           [linkx]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14323">
             [linkx]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14324">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14325">
             [content19][content20][content1][linkx][content2]
            </li>
           </ul>
          </li>
          <li class="js_menu-item--ourhotels menu-item menu-item-type-custom menu-item-object-custom menu-item-14326">
           [linkx]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14327">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14328">
           [ahref]
           
          </li>
         </ul>
        </div>
       </nav>
      </div>
      <div class="js_oneharmony-login oneharmony-login u_hidden">
       <form action="/en/Account/Login" class="oneharmony-login__form" method="POST" target="_blank">
        <div class="oneharmony-login__uname">
        </div>
        <div class="oneharmony-login__pwd">
        </div>
        <div class="oneharmony-login__submit">
        </div>
        [ahref]
        
       </form>
      </div>
     </div>
    </div>
   </header>
   <div class="site-content" id="content">
    <div class="hero hotel__hero" style="background-image: url( 'https://d3g2yh83to8qa2.cloudfront.net/wp-content/uploads/1/2016/04/06010005/qnzz_1600x800_2-1.jpg' )">
     <div class="hero__darken">
      <div class="hero--layout-center o_layout-center hotel__hero-container">
       <div class="hero__header-space">
       </div>
       <div class="hero__content-wrapper">
        <div class="hero__content">
         <div class="hotel__hero-title">
          호텔 닛코 나라
         </div>
         <div class="hotel__time-temp">
          <div class="hv__weather js_weather" data-city="nara" data-country="japan" data-time="1">
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="o_layout-center hotel__sabre--layout-center">
       <div class="hotel__sabre-price js-hotel__sabre-price" data-sabre="25049">
        <div class="hotel__sabre-rate-container js-hotel__sabre-loading loading">
         가격보기
        </div>
        <div class="hotel__sabre-rate-container js-hotel__sabre-avail">
         <div class="hotel-list__hotel__starting-from starting-from js-starting-from">
          <span class="starting-from__from">
           부터
          </span>
          <span class="starting-from__price">
           <span class="starting-from__currency js-starting-from__currency">
            JPY
           </span>
           <span class="starting-from__value js-starting-from__value">
            0
           </span>
           <span class="starting-from__from--chinese">
            ~부터[content12][content13][linkx][content14][content15][linkx][content16]
           </span>
           <span class="starting-from__from--korea">
            부터
           </span>
          </span>
         </div>
        </div>
        <div class="hotel__sabre-rate-container js-hotel__sabre-no-avail">
         <div class="hotel-list__no-available js_book-now__a_modify">
          검색하신 조건에 맞는 객실이 없습니다.
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <span class="u_anchor u_anchor--hotel" id="hotel-nikko-nara">
    </span>
    <div class="qs-hotel js_qs-hotel" id="id_qs-hotel" style="display: none;">
     <div class="qs-hotel__wrap qs-hotel--layout-center o_layout-center__small">
      <form action="" class="qs-hotel__form js_qs-hotel__form" id="id-qs-hotel__form" method="post" name="qs-hotel__form">
       <div class="qs-hotel__row qs-hotel__row--first js_qs-hotel__row--first">
        <div class="qs__field qs__field--datepicker qs-hotel__field--datepicker">
        </div>
        <div class="qs__field qs__field--datepicker qs-hotel__field--datepicker">
        </div>
        <div class="qs__field qs__field--select qs-hotel__width--medium">
         <select class="js_qsu__select-styled qs_field__adult js_qs-hotel__adult" id="id_qs-hotel__adult" name="qs-hotel__adult">
          <option selected="selected" value="1">
           1 성인
          </option>
          <option value="2">
           2 성인[content2][content3][content4][content5][linkx][content6]
          </option>
          <option value="3">
           3 성인
          </option>
          <option value="4">
           4 성인
          </option>
          <option value="5">
           5 성인
          </option>
          <option value="6">
           6 성인
          </option>
          <option value="7">
           7 성인
          </option>
          <option value="8">
           8 성인
          </option>
          <option value="9">
           9 성인
          </option>
          <option value="10">
           10 성인
          </option>
         </select>
        </div>
        <div class="qs__submit qs-hotel__submit qs-hotel__width--medium">
        </div>
        <div class="qs__field qs-hotel__width--medium qs__field--last">
         [linkx]
         
        </div>
       </div>
       <div class="qs-hotel__row qs-hotel__row--second js_qs-hotel__row--second qs-hotel--hidden">
        <div class="qs__field qs__field--dropdown">
        </div>
        <div class="qs__field qs__field--dropdown">
        </div>
        <div class="qs__field qs-hotel__width--medium qs__field--last">
        </div>
       </div>
      </form>
     </div>
    </div>
    <div class="breadcrumb--layout-center">
     <div class="breadcrumbs o_layout-center">
      [linkx]
      
      <span class="breadcrumbs__sep">
       >
      </span>
      [ahref]
      
      <span class="breadcrumbs__sep">
       >
      </span>
      <a class="breadcrumbs__item breadcrumbs__item--a" href="/ko/japan/nara/">
       나라
      </a>
      <span class="breadcrumbs__sep">
       >
      </span>
      <span class="breadcrumbs__item breadcrumbs__item--span">
       호텔 닛코 나라
      </span>
     </div>
    </div>
    <div class="hotel__header">
     <div class="hotel__header--layout-center o_layout-center">
      <div class="hotel__title">
       <div class="hotel__info-container">
        <ul class="hotel__info-list">
         <li class="hotel__info-item hotel__info-item--address">
          <i class="hotel__info-icon fa fa-address">
          </i>
          <span class="hotel__info-span hotel__info-span--address">
           8-1 Sanjo-hommachi  Nara-shi  Nara 630-8122  Japan
          </span>
         </li>
         <li class="hotel__info-item hotel__info-item--phone">
          <i class="hotel__info-icon fa fa-phone">
          </i>
          <span class="hotel__info-span hotel__info-span--phone">
           81-742-35-8831
          </span>
         </li>
         <li class="hotel__info-item hotel__info-item--fax">
          <i class="hotel__info-icon fa fa-fax">
          </i>
          <span class="hotel__info-span hotel__info-span--fax">
           81-742-35-6868
          </span>
         </li>
         <li class="hotel__info-item hotel__info-item--email">
          <i class="hotel__info-icon fa fa-email">
          </i>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="two-col hotel-list__body">
     <div class="two-col--layout-center section--layout-center o_layout-center">
      <div class="two-col__sidebar sidebar hotel-list__sidebar js_sidebar">
       <div class="widget">
        <ul class="sidebar__menu sidebar__menu--hotel">
         [content8[linkx]content9[linkx]content10[linkx]content11[linkx]content12]
        </ul>
       </div>
       <div class="widget">
        <ul class="hotel-mobile-nav js_hotel-mobile-nav">
         <div class="hotel-mobile-nav__row hotel-mobile-nav__row--row-1 js_hotel-mobile-nav__row--row-1 clearfix">
          <ul class="hotel-mobile-nav__ul">
           <li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-1 ">
            [ahref]
            
           </li>
          </ul>
         </div>
         <span class="hotel-mobile-nav__text">
          객실
         </span>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0360
  </b>
 </body>
</html>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-1 ">
 [linkx]
 
</li>
<span class="hotel-mobile-nav__text">
 다이닝
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-1">
 [ahref]
 
</li>
<div class="hotel-mobile-nav__row hotel-mobile-nav__row--row-2 js_hotel-mobile-nav__row--row-2 clearfix">
 <ul class="hotel-mobile-nav__ul">
  <li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 hotel-mobile-nav__li--current">
   [ahref]
   
  </li>
 </ul>
</div>
<span class="hotel-mobile-nav__text">
 개요
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 ">
 <a class="hotel-mobile-nav__a" href="/hotel-nikko-nara/ko/meetings-events/">
  <div class="hotel-mobile-nav__icon hotel-mobile-nav__icon--meetings-events">
  </div>
 </a>
</li>
<span class="hotel-mobile-nav__text">
 연회 &amp; 회의
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 ">
 [linkx]
 
</li>
<span class="hotel-mobile-nav__text">
 오퍼
</span>
<li class="hotel-mobile-nav__li hotel-mobile-nav__li--row-2 ">
 [ahref]
 
</li>
<span class="hotel-mobile-nav__text">
 One Harmony
</span>
<div class="widget">
 <div class="widget__body widget__body-ta">
  <div class="hotel__ta js_hotel-ta--13303">
   <iframe allowtransparency="true" class="hotel-list__hotel-ta__iframe" frameborder="0" scrolling="no" src="https://www.tripadvisor.com/WidgetEmbed-cdspropertysummary?partnerId=10DCC8A5A3C94363B2984DA17F8C9168&amp;display=1&amp;lang=ko&amp;locationId=574405">
   </iframe>
  </div>
 </div>
</div>
<div class="widget js_trustyou-widget u_hidden" data-lang="ko" data-trustyou-id="07adae37-b217-4272-aaea-aa1b6007cc00">
 <div class="widget__body widget__body-ty">
  <div class="hotel__ty">
   <h4 class="hotel__ty__title header__utility">
   </h4>
   <span class="hotel__ty__rating">
   </span>
   <div class="ty__rating-units clearfix js_ty__rating-units">
   </div>
   <span class="hotel__ty__reviews">
   </span>
  </div>
 </div>
</div>
<div class="two-col__content hotel-list__hotels">
 <div class="hotel-slider hotel-slider--home js_hotel-slider--home site--wrapper">
  <div class="js_hotel-slider--home__container hotel-slider__container hotel-home-slider__container">
   <div class="hotel-slider__item hotel-slider__item--531">
   </div>
   <div class="hotel-slider__item hotel-slider__item--407">
   </div>
   <div class="hotel-slider__item hotel-slider__item--197">
   </div>
   <div class="hotel-slider__item hotel-slider__item--532">
   </div>
   <div class="hotel-slider__item hotel-slider__item--530">
   </div>
   <div class="hotel-slider__item hotel-slider__item--533">
   </div>
   <div class="hotel-slider__item hotel-slider__item--412">
   </div>
  </div>
  <div class="js_hotel-slider--home__thumb-container hotel-slider__thumb-container hotel-slider--home__thumb-container">
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--531 " data-index="0">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--407 " data-index="1">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--197 " data-index="2">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--532 " data-index="3">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--530 " data-index="4">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--533 " data-index="5">
   </div>
   <div class="hotel-slider__thumb-item hotel-slider--home__thumb-item js_hotel-slider--home__thumb-item hotel-slider__thumb-item--412 " data-index="6">
   </div>
  </div>
 </div>
 <div class="hotel__content two-col__section">
  <h1 class="hotel__title">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h1>
  <p>
   일본의 원점인 나라의 세계유산 속에서 휴식을. “만요노구니” 나라. 일본의 원점을 느껴지는 신화의 무대, 시간을 초월하여 이어져 내려온 수많은 문화유산, 서정적인 풍경의 마을과 사계절의 자연, 야마토지의 여행에서 만나는, 마음 속 깊이 울리는 감동이 여기에 있습니다.
   <br/>
   호텔 닛코 나라는, 옛 수도・나라에서의 수많은 만남의 중심지로서, 수준 높은 서비스와 “오모테나시” 문화로, 해외에서 방문하시는 여러분을 환영합니다.
  </p>
 </div>
 <div class="fb-map">
  <div class="fb-map__canvas" data-color="blue" id="js_fb-map__canvas">
  </div>
 </div>
 <div class="fb-map__route" id="itineraryForm">
  <label class="fb-map__search-label" for="itineraryFrom">
   오시는길
  </label>
 </div>
 <div class="fb-map__search-results o_layout-center" id="itineraryPanel">
  <div class="fb-map__result-print" id="print_itinerary">
   [ahref]
   
  </div>
  <div class="fb-map__directions js__fb-map__directions">
  </div>
  <div class="fb-map__result-print" id="print_itinerary">
   [linkx]
   
  </div>
 </div>
 <div class="fb-map__places two-col__section" id="places">
  <div class="fb-map__categories">
   <h3 class="fb-map__title">
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h3>
   <ul class="fb-map__categories__ul" id="monuments">
    <li>
    </li>
    <li>
    </li>
    <li>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_cafe">
      카페
     </label>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_restaurant">
      레스토랑
     </label>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_museum">
      미술관
     </label>
    </li>
    <li>
     <label class="fb-map__category-label" for="m_art_gallery">
      아트 갤러리
     </label>
    </li>
   </ul>
  </div>
  <div class="fb-map__places-list">
   <h3 class="fb-map__title">
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h3>
   <ul class="fb-map__places-list__ul" id="places_list">
   </ul>
  </div>
 </div>
 <div class="hotel-home__two-col hotel-home__one-harmony two-col__section">
  <div class="hotel-home__two-col__col-1 u_text-right hotel-one-harmony__col-1">
  </div>
  <div class="hotel-home__two-col__col-2 u_text-center hotel-one-harmony__col-2">
   <div class="hotel-one-harmony__content">
    <p>
     입회비, 연회비 무료의
     <br/>
     멤버쉽 프로그램을 이용하세요.
    </p>
    <p>
     모든 숙박 및 식사시 하모니 포인트 적립
    </p>
    [ahref]
    
   </div>
  </div>
 </div>
 <div class="hotel-home__two-col hotel__content hotel-home__two-col--border-mid two-col__section">
  <div class="hotel-home__two-col__col hotel-home__two-col__col-1">
   <h3>
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h3>
   <ul>
    <li>
     JR 야마토지선, 나라선 나라역 서쪽출구 직결
     <br/>
     →
     [ahref]
     
    </li>
    <li>
     긴테츠 나라선 나라역에서 도보로 12분
    </li>
    <li>
     간사이 국제공항에서 자동차로 90분
     <br/>
     →
     [ahref]
     
    </li>
    <li오사카 60분<br="" 이타미공항에서="" 자동차로="">
    </li오사카>
    →
    [ahref]
    
   </ul>
  </div>
 </div>
</div>
<li>
 제 2한나 도로—호라이 IC에서 차로 15분
</li>
<li>
 코리야마, 텐리 IC에서 니시메이한 고속도로 차로 30분
</li>
<p>
 <주차장>
 <br/>
 나라 시영 주차장 숙박 1박당 1,500엔
</p>
<h3>
 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
</h3>
<p>
 LAN선, Wi-Fi (무료 )
</p>
<h3>
 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
</h3>
<ul>
 <li>
  객실수: 330실
 </li>
 <li>
  지상10층, 지하2층
 </li>
</ul>
<p>
 [부대시설]
 <br/>
 채플/신전
</p>
<div class="hotel-home__two-col__col hotel-home__two-col__col-2">
 <h3>
  [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
 </h3>
 <p>
  현금, 신용카드, JAL쿠폰
 </p>
 <ul>
  <li>
   신용카드
   <br/>
   VISA, MASTER, AMEX, JCB, Diners, China UnionPay 등
  </li>
  <li>
   세금 8%
  </li>
  <li>
   봉사료 10%
  </li>
 </ul>
</div>
<div class="brand-connect js_brand-connect section">
 [keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]
</div>
<footer class="footer js_footer">
 <div class="footer__nav footer__nav--section section">
  <div class="footer__nav--layout-center section--layout-center o_layout-center">
   <div class="footer__nav-menu footer__nav--nav-one">
    <div class="footer__nav-title footer__nav-title--nav-one">
     오쿠라 닛코 호텔 매니지먼트
    </div>
    <div class="menu menu--footer menu--footer__nav-one js_menu--footer__nav-one">
     <nav class="menu__nav menu--footer__nav-one__nav" role="navigation">
      <div class="menu-footer-nav-one-container">
       <ul class="menu--footer__ul menu--footer-nav-one__ul" id="menu-%ec%98%a4%ec%bf%a0%eb%9d%bc-%eb%8b%9b%ec%bd%94-%ed%98%b8%ed%85%94-%eb%a7%a4%eb%8b%88%ec%a7%80%eb%a8%bc%ed%8a%b8-1">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14309">
         <a href="/ko/contact-us/">
          고객 문의
         </a>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14310">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14311">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14312">
         [linkx]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-two">
    <div class="footer__nav-title footer__nav-title--nav-two">
     보도 정보
    </div>
    <div class="menu menu--footer menu--footer__nav-two js_menu--footer__nav-two">
     <nav class="menu__nav menu--footer__nav-two__nav" role="navigation">
      <div class="menu-footer-nav-two-container">
       [link]<li>[link]</li>[link]
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-three">
    <div class="footer__nav-title footer__nav-title--nav-three">
     관련정보
    </div>
    <div class="menu menu--footer menu--footer__nav-three js_menu--footer__nav-three">
     <nav class="menu__nav menu--footer__nav-three__nav" role="navigation">
      <div class="menu-footer-nav-three-container">
       <ul class="menu--footer__ul menu--footer-nav-three__ul" id="menu-%ea%b4%80%eb%a0%a8%ec%a0%95%eb%b3%b4-1">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14329">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14330">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14331">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14332">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14333">
         <a href="/ko/jal-coupon/">
          JAL쿠폰 이용에 관하여
         </a>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14334">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-14335">
         [ahref]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-four">
    <div class="footer__nav-title footer__nav-title--nav-four">
     어플리케이션 다운로드
    </div>
    <div class="menu menu--footer menu--footer__nav-four js_menu--footer__nav-four">
     <nav class="menu__nav menu--footer__nav-four__nav" role="navigation">
      <div class="menu-footer-nav-four-container">
       <ul class="menu--footer__ul menu--footer-nav-four__ul" id="menu-%ec%96%b4%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%eb%8b%a4%ec%9a%b4%eb%a1%9c%eb%93%9c-1">
        <li class="js_logo__app-store menu-item menu-item-type-custom menu-item-object-custom menu-item-14314">
         [ahref]
         
        </li>
        <li class="js_logo__google-play menu-item menu-item-type-custom menu-item-object-custom menu-item-17016">
         [linkx]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
   <div class="footer__nav-menu footer__nav--nav-five">
    <div class="footer__nav-title footer__nav-title--nav-five">
     One Harmony - Korean
    </div>
    <div class="menu menu--footer menu--footer__nav-five js_menu--footer__nav-five">
     <nav class="menu__nav menu--footer__nav-five__nav" role="navigation">
      <div class="menu-footer-nav-five-container">
       <ul class="menu--footer__ul menu--footer-nav-five__ul" id="menu-one-harmony-korean-1">
        <li class="menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14320">
         <div class="menu-block">
          <div class="menu-block__description">
           <p>
            일본으로, 세계로, 여행의 즐거움을 더해 보세요! 원 하모니 회원으로 등록하시면 다양한 혜택을 누리실 수 있습니다.
           </p>
          </div>
          <div class="menu-block__link">
           <a class="menu-block__link-a" href="m" target="_blank">
            회원 가입은 이곳으로
            <i class="fa fa-angle-double-right">
            </i>
           </a>
          </div>
         </div>
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
  </div>
 </div>
 <div class="footer__loc-hotels loc-hotels section">
  <div class="loc-hotels--layout-center section--layout-center o_layout-center">
   <h2 class="loc-hotels__title section__title">
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h2>
   <div class="loc-hotels__tabs tabs" data-tabs="">
    <ul class="loc-hotels__tabs-ul">
     <li class="loc-hotels__tabs-li">
      [linkx]
      
     </li>
     <li class="loc-hotels__tabs-li">
      [linkx]
      
     </li>
     <li class="loc-hotels__tabs-li">
      [linkx]
      
     </li>
     <li class="loc-hotels__tabs-li">
      [linkx]
      
     </li>
    </ul>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__state-ul">
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        홋카이도
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        도호쿠
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/aomori/">
          아오모리
         </a>
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/sendai/">
          센다이
         </a>
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        간토/도쿄
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/tsukuba/">
          츠쿠바
         </a>
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/chiba/">
          치바
         </a>
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/narita/">
          나리타
         </a>
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        주부/호쿠리쿠
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        간사이/오사카
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/osaka/">
          오사카
         </a>
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/kobe/">
          코베
         </a>
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        주고쿠/시코쿠
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        큐슈
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         <a class="loc-hotels__city-a" href="/ko/japan/nagasaki/">
          나가사키
         </a>
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        오키나와
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </section>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__city-ul">
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <span class="loc-hotels__city-a">
        베이징
       </span>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/guam/guam/">
        괌
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/vietnam/hai-phong-city/">
        하이퐁
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li style="display:block">
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/taiwan/taipei/">
        타이페이
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [ahref]
       
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       <a class="loc-hotels__city-a" href="/ko/myanmar/yangon/">
        양곤
       </a>
      </li>
      <li class="loc-hotels__city-li loc-hotels__city-li--two-lines">
       [linkx]
       
      </li>
     </ul>
    </section>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__state-ul">
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        아메리카
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
     </ul>
    </section>
    <section class="loc-hotels__tabs-section">
     <ul class="loc-hotels__state-ul">
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        네덜란드
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        독일
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="loc-hotels__state-li">
       <span class="loc-hotels__state-span">
        터키
       </span>
       <ul class="loc-hotels__city-ul">
        <li class="loc-hotels__city-li">
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </section>
   </div>
  </div>
 </div>
 <div class="footer__legal">
  <div class="footer__legal--layout-center o_layout-center">
   <div class="footer__legal">
    <div class="menu menu--footer__legal js_menu--footer__legal">
     <nav class="menu__nav menu--footer__legal__nav" role="navigation">
      <div class="menu-footer-legal-container">
       <ul class="menu--footer-legal__ul" id="menu-legal-korean-1">
        <li class="menu-item__legal-copyright menu-item menu-item-type-custom menu-item-object-custom" id="menu-item-14315">
         <span>
          Copyright © Okura Nikko Hotel Management Co., Ltd. All Rights Reserved.
         </span>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23884">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23885">
         <a href="/ko/sitemap/">
          사이트 맵
         </a>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23928">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page" id="menu-item-23905">
         [ahref]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </div>
  </div>
 </div>
</footer>
<div class="qs-modal js_qs-modal mfp-hide qs-modal--layout-center o_layout-center" id="id_qs-modal">
 <form action="" class="qs__form qs-modal__form js_qs-modal__form" data-qsu-type="modal" id="id-qs_modal__form" method="post" name="qs_modal__form">
  <div class="qs__title">
   <span class="qs__title-txt qs__title-txt--search">
    호텔검색
   </span>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-9">
   <div class="qs__field qs__field--dropdown">
    <i class="fa fa-angle-down qs__dropdown-icon js_qsu__icon-arrow">
    </i>
    <div class="qs__accordion__group qs-modal__accordion__group js_qsu__dest__acrdn-group">
    </div>
   </div>
   <div class="qs__field qs__field--dropdown">
    <li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
   </div>
   <div class="qs__second-row js_qs-modal__second-row">
    <div>
     <div class="qs__field__container">
      <div class="qs__field qs__field--datepicker">
       <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
       </i>
      </div>
      <div class="qs__field qs__field--datepicker">
       <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
       </i>
      </div>
     </div>
     <div class="qs__field__container">
      <div class="qs__field qs__field--select">
       <label class="qs__label">
        성인
       </label>
       <select class="js_qsu__select-styled qs_field__adult js_qsu__adult" id="id_qs-modal__adult" name="qs-modal__adult">
        <option selected="selected" value="1">
         1 성인
        </option>
        <option value="2">
         2 성인
        </option>
        <option value="3">
         3 성인
        </option>
        <option value="4">
         4 성인
        </option>
        <option value="5">
         5 성인
        </option>
        <option value="6">
         6 성인
        </option>
        <option value="7">
         7 성인
        </option>
        <option value="8">
         8 성인
        </option>
        <option value="9">
         9 성인
        </option>
        <option value="10">
         10 성인
        </option>
       </select>
      </div>
     </div>
    </div>
    <div class="qs__field qs__field-text-promo">
     <label class="qs__label">
      법인/프로모션 코드
     </label>
    </div>
    <div class="qs__field qs__field--update-booking">
     <a class="qs__update-booking" href="/rez.aspx?start=searchres&amp;chain=9542&amp;src=ONHM&amp;locale=ko-KR" target="_blank">
      예약 확인·취소
     </a>
    </div>
   </div>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-3">
   <div class="qs__submit qs-modal__submit">
   </div>
  </div>
 </form>
</div>
<div class="qs-modal qs-hotel-list js_qs-modal mfp-hide qs-modal--layout-center o_layout-center" id="id_qs-hotel_list">
 <form action="" class="qs__form qs-home__form js_qs-home__form" data-qsu-type="home" id="id-qs_home__form" method="post" name="qs_home__form">
  <div class="qs__title">
   <span class="qs__title-txt qs__title-txt--search">
    호텔검색
   </span>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-9">
   <div class="qs__field qs__field--dropdown">
    <i class="fa fa-angle-down qs__dropdown-icon js_qsu__icon-arrow">
    </i>
    <div class="qs__accordion__group qs-home__accordion__group js_qsu__dest__acrdn-group">
    </div>
   </div>
   <div class="qs__field__container">
    <div class="qs__field qs__field--datepicker">
     <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
     </i>
    </div>
    <div class="qs__field qs__field--datepicker">
     <i class="fa fa-calendar qs__datepicker-icon js_qsu__icon-calendar">
     </i>
    </div>
   </div>
   <div class="qs__second-row qs-home__second-row js_qs-home__second-row">
    <div class="qs__field qs__field--select no-margin-right">
     <label class="qs__label">
      성인
     </label>
     <select class="js_qsu__select-styled qs_field__adult js_qsu__adult" name="qs-home__adult">
      <option selected="selected" value="1">
       1 성인
      </option>
      <option value="2">
       2 성인
      </option>
      <option value="3">
       3 성인
      </option>
      <option value="4">
       4 성인
      </option>
      <option value="5">
       5 성인
      </option>
      <option value="6">
       6 성인
      </option>
      <option value="7">
       7 성인
      </option>
      <option value="8">
       8 성인
      </option>
      <option value="9">
       9 성인
      </option>
      <option value="10">
       10 성인
      </option>
     </select>
    </div>
    <div class="qs__field qs__field-text-promo">
     <label class="qs__label">
      법인/프로모션 코드
     </label>
    </div>
    <div class="qs__field qs__field--update-booking">
     [linkx]
     
    </div>
   </div>
  </div>
  <div class="qs__list-of-fields qs__list-of-fields-col-lg-3">
   <div class="qs__submit qs-modal__submit">
   </div>
  </div>
 </form>
</div>
<div class="back-to-top js_back-to-top">
 <span class="hidden-sm">
  위
 </span>
</div>
<div class="mfp-dark-popup mfp-hide mhl__mfp" id="id_modal-hotel-list">
 <h3 class="mhl__main-title section__title">
  [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
 </h3>
 <div class="mhl__column mhl__column--first">
  <div class="mhl__box mhl__box--japan">
   <h3 class="mhl__title mhl__title--country">
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h3>
   <div class="mhl__column mhl__column--japan">
    <div class="mhl__box__state-hotel mhl__box__state-hotel--hokkaido">
     <h4 class="mhl__title mhl__title--state">
      홋카이도
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--kanto">
     <h4 class="mhl__title mhl__title--state">
      간토/도쿄
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       <a class="mhl__hotel-a" href="/ko/japan/tokyo/grand-nikko-tokyo-daiba">
        그랜드 닛코 도쿄 다이바
       </a>
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--chubu-hokuriku">
     <h4 class="mhl__title mhl__title--state">
      주부/호쿠리쿠
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       <a class="mhl__hotel-a" href="/ko/japan/kanazawa/hotel-nikko-kanazawa">
        호텔 닛코 가나자와
       </a>
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
     </ul>
    </div>
   </div>
   <div class="mhl__column mhl__column--japan">
    <div class="mhl__box__state-hotel mhl__box__state-hotel--kansai">
     <h4 class="mhl__title mhl__title--state">
      간사이/오사카
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       <a class="mhl__hotel-a" href="/ko/japan/osaka/hotel-nikko-kansai-airport">
        호텔 닛코 간사이 공항
       </a>
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--chugoku-shikoku">
     [keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--kyusyu">
     <h4 class="mhl__title mhl__title--state">
      큐슈
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
      <li class="mhl__hotel-li">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div class="mhl__box__state-hotel mhl__box__state-hotel--okinawa">
     <h4 class="mhl__title mhl__title--state">
      오키나와
     </h4>
     <ul class="mhl__hotels">
      <li class="mhl__hotel-li">
       [linkx]
       
      </li>
     </ul>
    </div>
   </div>
  </div>
 </div>
 <div class="mhl__column">
  <h3 class="mhl__title mhl__title--country">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h3>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     <a class="mhl__hotel-a" href="/ko/china/beijing/hotel-nikko-new-century-beijing">
      호텔 닛코 신세기 베이징
     </a>
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     <a class="mhl__hotel-a" href="/ko/china/wuxi/hotel-nikko-wuxi">
      호텔 닛코 우시
     </a>
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     <a class="mhl__hotel-a" href="/ko/taiwan/taipei/hotel-royal-nikko-taipei">
      호텔 로얄 닛코 타이페이
     </a>
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [linkx]
     
    </li>
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
  <div class="mhl__box__country-hotel">
   <ul class="mhl__hotels mhl__hotels--asia">
    <li class="mhl__hotel-li">
     [ahref]
     
    </li>
   </ul>
  </div>
 </div>
 <div class="mhl__column">
  <div class="mhl__box mhl__box--usa">
   <h3 class="mhl__title mhl__title--country">
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h3>
   <div class="mhl__box__country-hotel">
    <ul class="mhl__hotels">
     <li class="mhl__hotel-li">
      [ahref]
      
     </li>
    </ul>
   </div>
  </div>
  <div class="mhl__box mhl__box--germany">
   <h3 class="mhl__title mhl__title--country">
    [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h3>
   <div class="mhl__box__country-hotel">
    <ul class="mhl__hotels">
     <li class="mhl__hotel-li">
      [linkx]
      
     </li>
    </ul>
   </div>
  </div>
 </div>
</div>
|<---