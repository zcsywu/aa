--->|<!DOCTYPE html>
<html class="wide wow-animation smoothscroll scrollTo" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"/>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
 </head>
 <body>
  <div class="wsmenucontainer clearfix">
   <div class="wsmenuexpandermain slideRight">
    <span class="animated-arrow slideLeft" id="navToggle">
     <span>
     </span>
    </span>
   </div>
   <div class="wsmenucontent overlapblackbg">
   </div>
   <div class="header green-bg">
    <div class="wrapper clearfix">
     <div class="logo clearfix text-center">
      <div style="width:176px; margin:0 auto;">
       <a href="/main.do">
       </a>
      </div>
      <div class="btn-group btn-toggle hidden-xs hidden-sm" id="select_user" style="position: absolute; top: 29px; left:0px; display:none;">
       <button class="usetype btn btn-sm btn-default active" data-type="nppro" style="border-radius: 15px 15px 0px 0px; width:110px; border:solid 1px #ccc; margin-top: -8px; height: 43px; ">
        일반사용자
       </button>
      </div>
      <div class="hidden-xs hidden-sm" style="position: absolute; top: 15px; right:0px;">
       <div class="input-group stylish-input-group" id="imaginary_container">
        <label class="visuallyhidden" for="totalsearch">
         전체검색
        </label>
        <span class="input-group-addon">
         <span class="glyphicon glyphicon-search" id="searchbtn" style="cursor: pointer;" title="검색버튼">
         </span>
        </span>
       </div>
      </div>
      <form class="hide" name="content">
      </form>
     </div>
    </div>
    <nav class="wsmenu slideLeft clearfix">
     <div class="show hidden-md hidden-lg" style=" overflow-y: auto; display:none;  text-align: left;  margin:0 auto;
     width: 100%;   padding: 20px 0px 20px 0px;   background-color:#38c0d4; color:white;  font-size:17px; ">
      바다생태정보나라
      <div class="sub_close pull-right" style="margin-right:10px;">
       <i aria-hidden="true" class="fa fa-times" style="color:white; font-size: 22px;">
       </i>
      </div>
     </div>
     <div class="show hidden-md hidden-lg" style="  overflow-y: auto;   display: none;   text-align: left;   margin: 0 auto 0 auto;   padding:0px;  color:white;  font-size:17px;  float: left; width: 30%; background-color:#38c0d4;">
      <div class="menu_sb" data-seq="1" style="background-color:white; color:black;">
       <a class="test" href="#" style="display: inline-block;">
        바다생태
       </a>
      </div>
      <div class="menu_sb" data-seq="2">
       [linkx]
       
      </div>
      <div class="menu_sb" data-seq="3">
       [linkx]
       
      </div>
      <div class="menu_sb" data-seq="4">
       [ahref]
       
      </div>
      <div class="menu_sb" data-seq="5">
       [linkx]
       
      </div>
      <div class="menu_sb" data-seq="6">
       [ahref]
        <li>[mkey1]</li><li>[keywordx]</li><li>[keywordx]</li><li>[keywordx]</li>
       
      </div>
      <div class="menu_sb" data-seq="7">
       [linkx]
       
      </div>
      <div class="menu_sb" data-seq="8">
       [ahref]
       
      </div>
      <div class="menu_sb" data-seq="9" style="height:1000px;">
       [ahref]
       
      </div>
     </div>
     <div class="sub_right">
      <ul class="mobile-sub wsmenu-list" style="margin-top: 2px;">
       <li class="hide">
        [ahref]
        
       </li>
       <li>
        <a href="/oceaneco/marineinfo/marineinfo01.do">
         <i class="fa fa-align-justify">
         </i>
         바다생태
        </a>
        <ul class="wsmenu-submenu" style="display:block;">
         <li>
          [linkx]
          
          <ul class="wsmenu-submenu-sub">
           <li>
            <a href="/oceaneco/marineinfo/marineinfo01.do">
             해양생태계란
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="/importance1/marineinfo/marineinfo03.do">
             해양생태계의 중요성
            </a>
           </li>
           <li>
            <a href="/oceanecomap/marineinfo/marineinfo04.do">
             해양생태도란
            </a>
           </li>
           <li>
            <a href="/internal/marineinfo/marineinfo05.do">
             <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
             </i>
             국내외생태정보
            </a>
            <ul class="wsmenu-submenu-sub-sub">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
          </ul>
         </li>
         <li>
          [ahref]
          
          <ul class="wsmenu-submenu-sub" id="sub013">
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="/tidalagree/tidalinfo/tidalinfo06.do">
             갯벌관련협약
            </a>
           </li>
           <li>
            <a href="/benthiceco/tidalinfo/tidalinfo07.do">
             <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
             </i>
             갯벌저서생태
            </a>
            <ul class="wsmenu-submenu-sub-sub" id="sub014">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            <a href="/content/tidalinfo/tidalinfo11.do" id="cate5">
             <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
             </i>
             초등학생을 위한 갯벌이야기
            </a>
            <ul class="wsmenu-submenu-sub-sub" id="sub015">
             <li>
              <a href="/content/tidalinfo/tidalinfo11.do">
               갯벌이야기
              </a>
             </li>
             <li>
              <h3>
               [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
              </h3>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </li>
         <li>
          [ahref]
          
          <ul class="wsmenu-submenu-sub" id="sub016">
           <li>
            <a href="/k_tidalflat/tidalcondi/tidalcondi01.do">
             <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
             </i>
             한국의갯벌
            </a>
            <ul class="wsmenu-submenu-sub-sub" id="sub017">
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/k_condition/tidalcondi/tidalcondi02.do">
               한국갯벌 현황
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="wsmenu-submenu-sub-sub" id="sub018">
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/fivestatus/tidalcondi/tidalcondi07.do">
               세계주요갯벌
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </li>
         <li>
          [ahref]
          
          <ul class="wsmenu-submenu-sub" id="sub019">
           <li>
            [ahref]
            
            <ul class="wsmenu-submenu-sub-sub" id="sub0110">
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li>
            [ahref]
            
            <ul class="wsmenu-submenu-sub-sub" id="sub0111">
             <li>
              <a href="/story/tidalexp/tidalexp02.do">
               살아있는 갯벌 이야기
              </a>
             </li>
            </ul>
           </li>
           <li>
            <a href="/rightexpr/tidalexp/tidalexp04.do" id="cate12">
             올바른갯벌체험
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li>
        [linkx]
        
        <ul class="wsmenu-submenu">
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </li>
       <li>
        <a href="/webgis/webgis/webgis.do">
         <i aria-hidden="true" class="fa fa-map-marker">
         </i>
         전자지도
        </a>
        <ul class="wsmenu-submenu">
         <li>
          <a href="/webgis/webgis/webgis.do">
           Web GIS
          </a>
         </li>
        </ul>
       </li>
       <li>
        [linkx]
        
        <ul class="wsmenu-submenu">
         <li>
          [ahref]
          
         </li>
         <li>
          [pkeyx][keywordx][pkeyx][linkx][keywordx][pkeyx][mkey1][pkeyx][keywordx][pkeyx][pkeyx][linkx]
         </li>
         <li>
          [ahref]
          
          <ul class="wsmenu-submenu-sub" id="sub031">
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/cwbs/svyproject/pre/pre02.do">
             연안습지 기본조사
            </a>
           </li>
           <li>
            <a href="/mpaip/svyproject/pre/pre03.do">
             해양보호구역 조사관찰
            </a>
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
        <ul class="wsmenu-submenu">
         <li>
          <a href="/marineprotect1/marineprotect/marineprotect01.do">
           <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
           </i>
           해양보호생물
          </a>
          <ul class="wsmenu-submenu-sub" id="sub071">
           <li>
            [linkx]
            
            <li>
             [ahref]
             
             <ul class="wsmenu-submenu-sub" id="sub072">
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/seaweed/marineprotect/otp/marineprotect04.do">
                해조류/해초류
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/marineprotect3/marineprotect/marineprotect08.do">
              해양동물 전문구조·치료기관
             </a>
            </li>
            <li>
             <a href="/marineprotect4/marineprotect/marineprotect09.do">
              이달의 보호해양생물
             </a>
            </li>
           </li>
          </ul>
         </li>
         <li>
          [ahref]
          
          <ul class="wsmenu-submenu-sub" id="sub073">
           <li>
            [linkx]
            
            <li>
             [linkx]
             
             <ul class="wsmenu-submenu-sub-sub" id="sub074">
              <li>
               <a href="/ham/marineharmful/otp/marineharmful02.do">
                식물플랑크톤
               </a>
              </li>
              <li>
               <a href="/hai/marineharmful/otp/marineharmful03.do">
                자포동물
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/rha/marineharmful/otp/marineharmful05.do">
                태형동물
               </a>
              </li>
              <li>
               [keywordx][linkx][linkx][linkx]
              </li>
             </ul>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/chordata/marineharmful/marineharmful10.do">
              <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
              </i>
              해양생태계교란생물 지정종
             </a>
             <ul class="wsmenu-submenu-sub-sub" id="sub075">
              <li>[mkey1]</li><li>[linkx]</li><li>[linkx]</li>
             </ul>
            </li>
            <li>
             <a href="/hajelly/marineharmful/marineharmful08.do">
              <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
              </i>
              주요 유해해양생물 관리
             </a>
             <ul class="wsmenu-submenu-sub-sub" id="sub076">
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li class="rd-navbar--has-dropdown rd-navbar-submenu">
        <a href="/ecbs_synreport/datacenter/doc/datacenter08.do">
         <i aria-hidden="true" class="fa fa-folder-open">
         </i>
         자료실
        </a>
        <ul class="wsmenu-submenu">
         <li>
          [linkx]
          
          <ul class="wsmenu-submenu-sub" id="sub051">
           <li>
            [linkx]
            
            <ul class="wsmenu-submenu-sub" id="sub052">
             <li>
              <a href="/ecbs_synreport/datacenter/doc/datacenter08.do">
               국가해양생태계종합조사
              </a>
             </li>
             <li>
              <a href="/cwbs_report/datacenter/doc/datacenter01.do">
               2015년 이전조사
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/habitat_report/datacenter/doc/datacenter09.do">
               해양생태계 서식처 기능 개선복원
              </a>
             </li>
            </ul>
           </li>
           <li>
            <a href="/ebooklib/datacenter/doc/datacenter05.do">
             E-book 도서관
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            DB자료[pkeyx][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][ahref][ahref][mkey1][mkey1][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][linkx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][mkey1][pkeyx]
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </li>
         <li>
          <a href="/biopic1/datacenter/pic/datacenter08.do">
           <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
           </i>
           사진자료
          </a>
          <ul class="wsmenu-submenu-sub" id="sub053">
           <li>
            [linkx]
            
            <ul class="wsmenu-submenu-sub-sub" id="sub054">
             <li>
              <a href="/biopic1/datacenter/pic/datacenter08.do">
               사구생물
              </a>
             </li>
             <li>
              <a href="/biopic2/datacenter/pic/datacenter09.do">
               염생식물
              </a>
             </li>
             <li>
              [linkx]
               <li>[ahref]</li>[ahref]<li>[linkx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li>
              
             </li>
             <li>
              <a href="/biopic4/datacenter/pic/datacenter11.do">
               부유생물
              </a>
             </li>
             <li>
              <a href="/biopic5/datacenter/pic/datacenter12.do">
               유영생물
              </a>
             </li>
             <li>
              <a href="/biopic6/datacenter/pic/datacenter13.do">
               바닷새
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </li>
         <li>
          <a href="/publicvideo/datacenter/video/datacenter16.do">
           <i class="fa fa-angle-right pull-right hidden-xs hidden-sm" style="padding-top:4px">
           </i>
           동영상자료
          </a>
          <ul class="wsmenu-submenu-sub" id="sub055">
           <li>
            <a href="/publicvideo/datacenter/video/datacenter16.do">
             홍보 동영상
            </a>
           </li>
           <li>
            <a href="/eduvideo/datacenter/video/datacenter17.do">
             교육 동영상
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
          <ul class="wsmenu-submenu-sub" id="sub056">
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li>
        [linkx]
        
        <ul class="wsmenu-submenu">
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/press/announce/announce02.do">
           보도자료
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
           <li>[ahref]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        [linkx]
        
        <ul class="wsmenu-submenu">
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
          <ul class="wsmenu-submenu-sub" id="sub058">
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/contest11/datacenter/pic/datacenter15_11.do">
           공모전 역대 수상작
          </a>
         </li>
        </ul>
       </li>
      </ul>
     </div>
    </nav>
   </div>
   <div class="wrapper text-center" style="padding-top:5px;padding-bottom:5px;">
    <div class="row visible-xs-12 visible-sm-12 hidden-md hidden-lg" style="padding:0px; margin-top:-7px; margin-bottom: 15px;">
     <div class="col-xs-6 user_select" style="margin:0px; padding:0; height:50px; width:50%; background-color:#ccc; font-size:15px; color:#000; position: relative;">
      <div style="margin-top: 13px;">
       [linkx]
       
      </div>
     </div>
     <div class="col-xs-6 user_select" style="margin:0px; padding:0px; height:50px; width:50%; background-color:#eee; font-size:15px; color:#000; position: relative;">
      <div style="margin-top: 13px;">
       [linkx]
       
      </div>
     </div>
    </div>
    <div class="carousel slide" data-ride="carousel" id="myCarousel2">
     <ol class="carousel-indicators hidden-xs">
      <li class="active" data-slide-to="0" data-target="#myCarousel2">
      </li>
      <li data-slide-to="1" data-target="#myCarousel2">
      </li>
      <li data-slide-to="2" data-target="#myCarousel2">
      </li>
      <li data-slide-to="3" data-target="#myCarousel2">
      </li>
      <li data-slide-to="4" data-target="#myCarousel2">
      </li>
      <li id="playButton2" style="background-image: url(/images/playButton3.png); background-size: 120%; background-position: 12px;">
      </li>
      <li id="pauseButton2" style="background-image: url(/images/pauseButton2.png);  background-size: 130%; background-position: 12px;">
      </li>
     </ol>
     <div class="carousel-inner" role="listbox">
      <div class="item active">
       <div class="container">
        <div class="carousel-caption">
         <span class="nps fs40">
         </span>
         <br/>
         <span class="fs50 fw800">
         </span>
        </div>
       </div>
      </div>
      <div class="item">
       <div class="container">
        <div class="carousel-caption">
         <span class="nps fs40">
         </span>
         <br/>
         <span class="fs50 fw800">
          [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[pkeyx]</li><li>[linkx]</li>
         </span>
        </div>
       </div>
      </div>
      <div class="item">
       <div class="container">
        <div class="carousel-caption">
         <h2>
          <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
         </h2>
         <span class="nps fs40">
         </span>
         <br/>
         <span class="fs50 fw800">
         </span>
        </div>
       </div>
      </div>
      <div class="item">
       <div class="container">
        <div class="carousel-caption">
         <span class="nps fs40">
         </span>
         <br/>
         <span class="fs50 fw800">
         </span>
        </div>
       </div>
      </div>
      <div class="item">
       <div class="container">
        <div class="carousel-caption">
         <span class="nps fs40">
         </span>
         <br/>
         <span class="fs50 fw800">
         </span>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="wrapper">
    <div class="row hidden-xs">
     <div class="col-sm-6 col-md-3 main_out_box01">
      <li>[ahref]</li>[keywordx][keywordx][ahref]
     </div>
     <div class="col-sm-6 col-md-3 main_out_box01">
      <div class="main_in_box01">
       <button class="btn btn-default nps main_title01 hov" onclick="location.href='/exprlearn/tidalinfo/tidalinfo12.do'" type="button">
       </button>
       <div class="row" style="padding-top:10px; padding-left:15px; padding-right:15px;">
        <div class="pull-left" style="margin-right:10px;">
        </div>
        <div>
         교과서에 나오는 갯벌이야기를 확인해 보세요!
        </div>
       </div>
      </div>
     </div>
     <div class="col-sm-6 col-md-3 main_out_box01">
      <div class="main_in_box01">
       <button class="btn btn-default nps main_title01 hov" onclick="location.href='/ovr/tidalexp/tidalexp01.do'" type="button">
       </button>
       <div class="row" style="padding-top:10px; padding-left:15px; padding-right:15px;">
        <div class="pull-left" style="margin-right:10px;">
        </div>
        <div>
         갯벌생물을 3D OVR로 만나보세요.
        </div>
       </div>
      </div>
     </div>
     <div class="col-sm-6 col-md-3 main_out_box01">
      <div class="main_in_box01">
       <button class="btn btn-default nps main_title01 hov" onclick="location.href='/mpa_domcondi/mpa/coni/mpa02.do'" type="button">
       </button>
       <div class="row" style="padding-top:10px; padding-left:15px; padding-right:15px;">
        <div class="pull-left" style="margin-right:10px;">
        </div>
        <div>
         해양보호구역 어디에 있을까요?
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="row visible-xs-12 hidden-sm hidden-md hidden-lg" style="background-color:#eff7f7; padding:20px; margin-top:10px;">
     <div class="media">
      <a href="/story/tidalexp/tidalexp02.do" style="display: inline-block;">
       <span class="media-body">
        <span class="media-heading nps" style="width:100%; border-radius: 25px; font-size:25px;">
        </span>
        <br>
         <li>[mkey1]</li>[pkeyx][mkey1]
        </br>
        생생한 우리 갯벌의 이야기를 들어보세요!
       </span>
       <span class="media-right">
       </span>
      </a>
     </div>
     <hr style="border-bottom:#999 1px dashed;"/>
     <div class="media">
      [linkx]
      
     </div>
     <hr style="border-bottom:#999 1px dashed;"/>
     <div class="media">
      [ahref]
      
     </div>
     <hr style="border-bottom:#999 1px dashed;"/>
     <div class="media">
      [ahref]
      
     </div>
    </div>
    <div class="clear pdtb-10">
    </div>
    <div class="row">
     <div class="col-xs-12 col-sm-6 col-md-4 pull-right ht" style="position: relative; margin-bottom:10px;">
      <div style="position: relative">
       <div style="position: absolute; top:1px; z-index:9999; width:100%;">
        <div style="padding:10px 20px 10px 10px;">
         <span style="font-size:22px; color:#083053; font-weight:bold;">
          팝업존
         </span>
         <span class="pull-right" style="font-size:20px;">
          [ahref]
          
          [ahref]
          
          [linkx]
          
          [ahref]
          
         </span>
        </div>
       </div>
       <div class="owl-carousel" id="owl3">
        <div style="width:100%;">
         [ahref]
         
        </div>
        <div style="width:100%;">
         [ahref]
         
        </div>
        <div style="width:100%;">
         [linkx]
         
        </div>
        <div style="width:100%;">
         [linkx]
         
        </div>
        <div style="width:100%;">
         [ahref]
         
        </div>
        <div style="width:100%;">
         [ahref]
         
        </div>
        <div style="width:100%;">
         <a href="/event/announce/announce04.do" target="_self">
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="col-xs-12 col-sm-6 col-md-4 pdtb-10 ht" style="margin-bottom:10px;">
      <div class="pull-left" style="margin-top: -5px;">
       <h6 class="notices" style="height:40px; padding:10px; margin-bottom: 15px;">
        <i aria-hidden="true" class="fa fa-microphone">
        </i>
        <a onclick="location.href='/notice/announce/announce01.do'" style="cursor: pointer;" title="공지사항 더보기">
         공지사항
        </a>
       </h6>
      </div>
      <div class="pull-right" style="margin-top: -5px;">
       [linkx]
       
      </div>
      <div class="clear">
      </div>
      <div class="text-subline">
      </div>
      <ul class="list" style="padding:11px 0px 0px 0px;margin:0;">
       <li style="border-bottom: solid 1px #ddd; padding: 5px 10px 5px 10px; list-style:none;">
        [linkx]
        
       </li>
       <li style="border-bottom: solid 1px #ddd; padding: 5px 10px 5px 10px; list-style:none;">
        [ahref]
        
       </li>
       <li style="border-bottom: solid 1px #ddd; padding: 5px 10px 5px 10px; list-style:none;">
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="col-xs-12 col-sm-6 col-md-4 pdtb-10 ht" style="margin-bottom:10px;">
      <div class="pull-left" style="max-width:200px; margin-top: -5px;">
       <h6 class="notices" style="height:40px; padding:10px; margin-bottom: 15px;">
        [linkx]
        
       </h6>
      </div>
      <div class="pull-right " id="plusimg" style="margin-top: -5px;">
       [linkx]
       
      </div>
      <div class="clear">
      </div>
      <div class="text-subline">
      </div>
      <div class="tab-content" style="border:0px; padding-top:10px; margin:0px;">
       <div class="tab-pane active" id="press" role="tabpanel" style="padding-top:15px;">
        <div class="owl-carousel" id="owl1">
         <div>
          <p style="font-size:16px; color:#000; font-weight:bold;">
           [keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][ahref][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx]
          </p>
          <div style="padding-top:10px;">
           <div class="hide col-xs-12 col-sm-4 col-md-3 text-left" style="padding-left:0px;">
           </div>
           <div class="com-ms-12">
            유착나무돌산호, 예쁘다고 꺾으면 안 돼요 !    

   -  해양수산부 , 7 월의 보호해양생물로  ‘ 유착나무돌산호 ‘  선정  -   

  해양수산부 ( 장관 문성혁 ..
           </div>
          </div>
         </div>
         <div>
          <p style="font-size:16px; color:#000; font-weight:bold;">
           [ahref]
           
          </p>
          <div style="padding-top:10px;">
           <div class="hide col-xs-12 col-sm-4 col-md-3 text-left" style="padding-left:0px;">
           </div>
           <div class="com-ms-12">
            국가 해양생태계 종합조사 정보가 한권에 쏙   !     

    - KOEM,    국가 해양생태계 종합조사 소식지    ‘   바다숨    10   호   ’    발..
           </div>
          </div>
         </div>
         <div>
          <p style="font-size:16px; color:#000; font-weight:bold;">
           [ahref]
           
          </p>
          <div style="padding-top:10px;">
           <div class="hide col-xs-12 col-sm-4 col-md-3 text-left" style="padding-left:0px;">
           </div>
           <div class="com-ms-12">
            해안가에서 만날 수 있는 갯바위 서식생물을 소개합니다        
  - ‘우리나라 갯바위 생태계’책자 최초 발간 -   

  해양수산부(장관 문성혁)와 해양환경공단(이사..
           </div>
          </div>
         </div>
         <div>
          <p style="font-size:16px; color:#000; font-weight:bold;">
           [linkx]
           
          </p>
          <div style="padding-top:10px;">
           <div class="hide col-xs-12 col-sm-4 col-md-3 text-left" style="padding-left:0px;">
           </div>
           <div class="com-ms-12">
            지난 5년간 갯벌면적, 여의도 면적 1.79배 감소    
  - 해수부, 2018년 전국갯벌면적조사 결과 발표 -    

  해양수산부(장관 문성혁)는 ‘2018 전국갯벌..
           </div>
          </div>
         </div>
         <div>
          <p style="font-size:16px; color:#000; font-weight:bold;">
           [ahref]
           
          </p>
          <div style="padding-top:10px;">
           <div class="hide col-xs-12 col-sm-4 col-md-3 text-left" style="padding-left:0px;">
           </div>
           <div class="com-ms-12">
            보금자리 공사 중인 ’ 남방방게 ’ 를 지켜주세요 !    

   - 해수부 , 6 월의 보호해양생물로 ‘ 남방방게 ‘ 선정 -    

  해양수산부 ( 장관 문성혁 ) ..
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="nopropage hidden-xs col-sm-6 col-md-4 pdtb-10 ht">
      <div style="background-image:url(/images/main05_69.png); background-repeat:no-repeat; background-size:55px 45px; background-position: 20px 0px; height: 45px; background-color:#f6cd12; width:100%; border-radius: 25px; padding:10px; color:#fff; font-weight:bold; font-size:20px; text-align:center;">
       [linkx]
       
      </div>
      <div class="carousel slide" id="myCarousel" style="margin-top:10px;">
       <div class="carousel-inner text-center" style="padding-left:10px; width:260px; margin:0 auto;">
        <div class="item active">
         <div class="row">
          <div class="col-sm-6 col-md-6">
           <a href='/data/EB/vol10/vol10.html")' title="바다숨 Vol.10 보기">
           </a>
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.10
           </p>
          </div>
          <div class="col-sm-6 col-md-6">
           [ahref]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            갯바위 생태계
           </p>
          </div>
         </div>
        </div>
        <div class="item ">
         <div class="row">
          <div class="col-sm-6 col-md-6">
           <a href='/data/EB/vol9re/vol9re.html")' title="바다숨 Vol.9 보기">
           </a>
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.9
           </p>
          </div>
          <div class="col-sm-6 col-md-6">
           [linkx]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.8
           </p>
          </div>
         </div>
        </div>
        <div class="item ">
         <div class="row">
          <div class="col-sm-6 col-md-6">
           [ahref]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            남해안갯벌
           </p>
          </div>
          <div class="col-sm-6 col-md-6">
           <a href='/data/EB/Vol7/Vol7.html")' title="바다숨 Vol.7 보기">
           </a>
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.7
           </p>
          </div>
         </div>
        </div>
        <div class="item ">
         <div class="row">
          <div class="col-sm-6 col-md-6">
           [ahref]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.6
           </p>
          </div>
          <div class="col-sm-6 col-md-6">
           [ahref]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.5
           </p>
          </div>
         </div>
        </div>
        <div class="item ">
         <div class="row">
          <div class="col-sm-6 col-md-6">
           [linkx]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.4
           </p>
          </div>
          <div class="col-sm-6 col-md-6">
           [ahref]
           
           <p class="text-center" style="padding:24px 0 10px 0;">
            바다숨 Vol.3
           </p>
          </div>
         </div>
        </div>
       </div>
       [ahref]
       
       [ahref]
       
      </div>
     </div>
     <div class="nopropage hidden-xs ht">
      <div class="col-xs-12 col-sm-6 col-md-4 pdtb-10">
       <div style="background-image:url(/images/main05_68.png); background-repeat:no-repeat; background-position: 17px 0px; height: 45px; background-color:#39c0d5; width:100%; border-radius: 25px; padding:10px; color:#fff; font-weight:bold; font-size:20px; text-align:center;">
        [ahref]
        
       </div>
       <div style="padding:10px 0 10px 0;">
        [linkx]
        
       </div>
       <p class="text-center">
        '이달의 보호해양생물'은 무엇일까요?[pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][linkx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1]
       </p>
      </div>
      <div class="nopropage hidden-xs col-sm-6 col-md-4 pdtb-10 ht">
       <div style="background-image:url(/images/main05_70.png); background-repeat:no-repeat; background-position: 11px 0px; height: 45px; background-color:#a0cd38; width:100%; border-radius: 25px; padding:10px; color:#fff; font-weight:bold; font-size:20px; text-align:center;">
        [ahref]
        
       </div>
       <div class="carousel slide" id="myCarousel1" style="margin-top:10px;">
        <div class="carousel-inner text-center" style="padding-left:10px; width:260px; margin:0 auto;">
         <div class="item active">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            <a href="/rest/data/getimge/482" title="이 지도는 누가 그렸니?(이지빈)">
            </a>
            <p class="text-center" style="padding:10px 0 10px 0;">
             바다를 향해 달리는 새끼거북이들(이민서)
            </p>
           </div>
          </div>
         </div>
         <div class="item">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            <a href="/rest/data/getimge/483" title="빨대가 콧구멍에 들어갈까봐 피해다니는 바다거북들(주의현)">
            </a>
            <p class="text-center" style="padding:10px 0 10px 0;">
             빨대가 콧구멍에 들어갈까봐 피해다니는 바다거북들(주의현)
            </p>
           </div>
          </div>
         </div>
         <div class="item">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            <a href="/rest/data/getimge/425" title="이 지도는 누가 그렸니?(장소영)">
            </a>
            <p class="text-center" style="padding:10px 0 10px 0;">
             이 지도는 누가 그렸니?(장소영)
            </p>
           </div>
          </div>
         </div>
         <div class="item">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            <a href="/rest/data/getimge/426" title="쓰레기바다를 살리고 싶다(윤서진)">
            </a>
            <p class="text-center" style="padding:10px 0 10px 0;">
             쓰레기바다를 살리고 싶다(윤서진)
            </p>
           </div>
          </div>
         </div>
         <div class="item">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            <a href="/rest/data/getimge/519" title="해양생물과 심청이의 海해피엔딩(박예송)">
            </a>
            <p class="text-center" style="padding:10px 0 10px 0;">
             해양생물과 심청이의 海해피엔딩(박예송)
            </p>
           </div>
          </div>
         </div>
         <div class="item">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            <a href="/rest/data/getimge/520" title="예원이의바다(손형민)">
            </a>
            <p class="text-center" style="padding:10px 0 10px 0;">
             예원이의바다(손형민)
            </p>
           </div>
          </div>
         </div>
         <div class="item">
          <div class="row">
           <div class="col-sm-12 col-md-12">
            [linkx]
            
            <p class="text-center" style="padding:10px 0 10px 0;">
             순환(김세희)
            </p>
           </div>
          </div>
         </div>
        </div>
        [linkx]
        
        [linkx]
        
       </div>
      </div>
     </div>
     <div class="hidden-sm propage clear ">
     </div>
     <div class="propage hidden-xs col-sm-6 col-md-4 pdtb-10" style="min-height:305px;">
      <div style="background-image:url(/images/main05_71.png); background-repeat:no-repeat; background-position: 17px 0px; /* width: 63px;  */height: 45px; background-color:#996699; width:100%; border-radius: 25px; padding:10px; color:#fff; font-weight:bold; font-size:20px; text-align:center;">
       [ahref]
       
      </div>
      <p style="padding:35px 0px;text-align:center;">
       <button class=" btn btn-default report" onclick="location.href='/ecbs_synreport/datacenter/doc/datacenter08.do'" style="width:45%; margin-right:10px; margin-bottom:10px; font-size:14px; border: solid 1px #C3C3C3; border-radius: 10px;" type="button">
        국가해양생태계종합조사
       </button>
       <button class=" btn btn-default report" onclick="location.href='/cwbs_report/datacenter/doc/datacenter01.do'" style="width:45%; margin-right:10px; margin-bottom:10px; font-size:14px; border: solid 1px #C3C3C3; border-radius: 10px;" type="button">
        연안습지기초조사
       </button>
       <button class=" btn btn-default report" onclick="location.href='/ecbs_report/datacenter/doc/datacenter02.do'" style="width:45%; margin-bottom:10px; font-size:14px; border: solid 1px #C3C3C3; border-radius: 10px;" type="button">
        해양생태기본조사<li>[mkey1]</li><li>[keywordx]</li><li>[ahref]</li>
       </button>
       <button class=" btn btn-default report" onclick="location.href='/mpa_report/datacenter/doc/datacenter03.do'" style="width:45%; margin-right:10px; margin-bottom:10px; font-size:14px; border: solid 1px #C3C3C3; border-radius: 10px;" type="button">
        해양보호구역조사관찰
       </button>
       <button class=" btn btn-default report" onclick="location.href='/etc_report/datacenter/doc/datacenter04.do'" style="width:45%; margin-bottom:10px; font-size:14px; border: solid 1px #C3C3C3; border-radius: 10px;" type="button">
        기타해양관련보고서
       </button>
      </p>
     </div>
     <div class="propage hidden-xs col-sm-6 col-md-4 pdtb-10" style="min-height:305px;">
      <div style="background-image:url(/images/main05_72.png); background-repeat:no-repeat; background-position: 17px 0px; /* width: 56px;  */ height: 45px; background-color:#666699; width:100%; border-radius: 25px; padding:10px; color:#fff; font-weight:bold; font-size:20px; text-align:center;">
       [linkx]
       
      </div>
      <p style="margin-top:10px; padding-top:10px;">
       [linkx]
       
      </p>
     </div>
     <div class="propage hidden-xs col-sm-6 col-md-4 pdtb-10" style="min-height:269px;">
      <div style="background-image:url(/images/main05_75.png);background-repeat:no-repeat; background-position: 17px 0px; width: 81px; height: 45px; background-color:#996666;width:100%;border-radius: 25px;padding:10px;color:#fff;font-weight:bold;font-size:20px;text-align:center;">
       [ahref]
       
      </div>
      <div class="carousel slide" id="myCarousel3" style="margin-top:10px;">
       <div class="carousel-inner text-center" style="padding-left:10px;width:260px;margin:0 auto;">
        <div class="item active">
         <div class="row">
          <div class="col-sm-12 col-md-12">
           [linkx]
           
           <p class="text-center" style="padding:10px 0 10px 0;">
            혹등고래
           </p>
          </div>
         </div>
        </div>
        <div class="item">
         <[keywordx]>
         </[keywordx]>
        </div>
        <div class="item">
         <div class="row">
          <div class="col-sm-12 col-md-12">
           [ahref]
           
           <p class="text-center" style="padding:10px 0 10px 0;">
            삼나무말
           </p>
          </div>
         </div>
        </div>
        <div class="item">
         <div class="row">
          <div class="col-sm-12 col-md-12">
           [ahref]
           
           <p class="text-center" style="padding:10px 0 10px 0;">
            푸른바다거북
           </p>
          </div>
         </div>
        </div>
        <div class="item">
         <div class="row">
          <div class="col-sm-12 col-md-12">
           [ahref]
           
           <p class="text-center" style="padding:10px 0 10px 0;">
            가시해마
           </p>
          </div>
         </div>
        </div>
        <div class="item">
         <div class="row">
          <div class="col-sm-12 col-md-12">
           [linkx]
           
           <p class="text-center" style="padding:10px 0 10px 0;">
            청다리도요사촌
           </p>
          </div>
         </div>
        </div>
       </div>
       <a class="left carousel-control" data-slide="prev" href="3" style="background-image:none" title="전 보호대상해양생물 사진보기">
       </a>
       [ahref]
       
      </div>
     </div>
     <div class="clear pdt-10">
     </div>
     <div class="usertype row visible-xs-12 hidden-sm hidden-md hidden-lg" style="padding:0px;">
      <div>
       [linkx]
       
      </div>
      <div class="clear">
      </div>
      <div>
       [linkx]
       
      </div>
      <div>
       <a class="col-xs-6" href="/biopic1/datacenter/pic/datacenter08.do" style="display: inline-block; margin:0px; padding:0px; height:100px; width:50%; background-color:#99CC33; font-size:22px; color:#fff; position: relative;" title="해양생물 사진 바로가기">
        <span class="pull-right text-center" style="width:94px; position: absolute; right:30px; top:20px;">
         해양생물 사진
        </span>
       </a>
      </div>
     </div>
     <div class="usertype row visible-xs-12 hidden-sm hidden-md hidden-lg" style="padding:0px; display:none;">
      <div>
       [linkx]
       
      </div>
      <div class="clear">
       <li>[keywordx]</li><li>[linkx]</li>[keywordx][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
      </div>
      <div>
       <a class="col-xs-6" href="/webgis/webgis/webgis.do" style="margin:0px; padding:0; height:100px; width:50%; background-color:#666699; font-size:22px; color:#fff; position: relative;" title="해양생태 전자지도 바로가기">
        <span class="pull-right text-center " style="width:94px; position: absolute; right:30px; top:20px;">
         해양생태 전자지도
        </span>
       </a>
      </div>
      <div>
       [linkx]
       
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="clear:both;">
  </div>
  <div class="container-fluid" style="padding:0px">
   <footer class="section-relative page-footer context-dark">
    <div class="visible-md-12 hidden-sm hidden-xs" style="border-top:#cccccc 1px solid; border-bottom:#cccccc 1px solid; margin-bottom:10px; padding:15px 0; height:56px; margin-bottom:10px;">
     <div class="shell">
      <div>
       <span class="pull-left">
        [ahref]
        
        [ahref]
        
        [ahref]
        
        [linkx]
        
       </span>
       <span class="pull-right">
        <span>
         <select id="relSite1" name="relative">
          <option title="관련사이트바로가기" value="/relsite/announce/announce05.do">
           ::관련사이트바로가기::
          </option>
          <option title="해양수산부바로가기" value="http://www.mof.go.kr/">
           해양수산부
          </option>
          <option title="해양환경공단바로가기" value="http://www.koem.or.kr/">
           해양환경공단
          </option>
          <option title="국립해양조사원바로가기" value="http://www.khoa.go.kr/">
           국립해양조사원
          </option>
          <option title="한국해양과학기술원바로가기" value="http://www.kiost.ac/">
           한국해양과학기술원
          </option>
          <option title="MEIS바로가기" value="http://www.meis.go.kr/">
           MEIS
          </option>
          <option title="국립생물자원관바로가기" value="https://www.nibr.go.kr">
           국립생물자원관
          </option>
          <option title="국립해양생물자원관바로가기" value="http://www.mabik.re.kr/html/kr/">
           국립해양생물자원관
          </option>
         </select>
        </span>
        <label class="visuallyhidden" for="relSite1">
         관련 사이트 바로가기 리스트
        </label>
        <button onclick='relsiteLink($("#relSite1 option:selected").val())' type="button">
         GO
        </button>
       </span>
      </div>
     </div>
    </div>
    <div class="visible-sm-12 hidden-lg hidden-md hidden-xs">
     <table class="table">
      <caption class="visuallyhidden">
       하단
      </caption>
      <thead>
       <tr>
        <th class="visuallyhidden" colspan="2" scope="row">
         하단
        </th>
       </tr>
      </thead>
      <tbody>
       <tr>
        <td>
         [linkx]
         
         [linkx]
         
         [linkx]
         
         [linkx]
         
        </td>
        <td>
         <span>
          <select id="relSite2" name="relative" title="관련사이트바로가기">
           <option title="관련사이트바로가기" value="/relsite/announce/announce05.do">
            ::관련사이트바로가기::
           </option>
           <option title="해양수산부바로가기" value="http://www.mof.go.kr/">
            해양수산부
           </option>
           <option title="해양환경공단바로가기" value="http://www.koem.or.kr/">
            해양환경공단
           </option>
           <option title="국립해양조사원바로가기" value="http://www.khoa.go.kr/">
            국립해양조사원
           </option>
           <option title="한국해양과학기술원바로가기" value="http://www.kiost.ac/">
            한국해양과학기술원
           </option>
           <option title="MEIS바로가기" value="http://www.meis.go.kr/">
            MEIS
           </option>
           <option title="국립생물자원관바로가기" value="https://www.nibr.go.kr">
            국립생물자원관
           </option>
          </select>
         </span>
         <label class="visuallyhidden" for="relSite2">
          관련 사이트 바로가기 리스트
         </label>
         <button onclick='relsiteLink($("#relSite2 option:selected").val())' type="button">
          GO
         </button>
        </td>
       </tr>
       <tr>
        [linkx][mkey1][keywordx][keywordx][mkey1][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][keywordx][pkeyx][ahref][linkx][mkey1][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
       </tr>
      </tbody>
     </table>
    </div>
    <div class="visible-xs-12 hidden-lg hidden-md hidden-sm">
     <table class="table table-bordered ">
      <caption class="visuallyhidden">
       하단
      </caption>
      <thead>
       <tr>
        <th class="visuallyhidden" colspan="2" scope="row">
         하단
        </th>
       </tr>
      </thead>
      <tbody>
       <tr>
        <td class="text-center" colspan="2">
         <select id="relSite3" name="relative">
          <option title="관련사이트바로가기" value="/relsite/announce/announce05.do">
           ::관련사이트바로가기::
          </option>
          <option title="해양수산부관바로가기" value="http://www.mof.go.kr/">
           해양수산부
          </option>
          <option title="해양환경공단바로가기" value="http://www.koem.or.kr/">
           해양환경공단
          </option>
          <option title="국립해양조사원바로가기" value="http://www.khoa.go.kr/">
           국립해양조사원
          </option>
          <option title="한국해양과학기술원바로가기" value="http://www.kiost.ac/">
           한국해양과학기술원
          </option>
          <option title="MEIS바로가기" value="http://www.meis.go.kr/">
           MEIS
          </option>
          <option title="국립생물자원관바로가기" value="https://www.nibr.go.kr">
           국립생물자원관
          </option>
         </select>
         <label class="visuallyhidden" for="relSite3">
          관련 사이트 바로가기 리스트
         </label>
         <button onclick='relsiteLink($("#relSite3 option:selected").val())' type="button">
          Go
         </button>
        </td>
       </tr>
       <tr>
        <td class="text-center">
         <div style="height:100%; width:100%">
          [ahref]
          
         </div>
        </td>
        <td class="text-center">
         <div style="height:100%; width:100%">
          <a href="/email/guide/guide02.do" style="display: inline-block;" target="_self">
           이메일무단수집거부
          </a>
         </div>
        </td>
       </tr>
       <tr>
        <td class="text-center">
         <div style="height:100%; width:100%">
          [ahref]
          
         </div>
        </td>
        <td class="text-center">
         <div style="height:100%; width:100%">
          [ahref]
          
         </div>
        </td>
       </tr>
      </tbody>
     </table>
    </div>
    <div style="clear:both;">
    </div>
    <div class="container">
     <div class="col-xs-12 com-sm-12 col-md-8 text-center">
      세종특별자치시 다솜2로 94 정부세종청사 5동 해양수산부
      <br/>
      해양환경공단 해양생태팀 T. 051-400-7975
      <br/>
      Copyright@Ministry of Oceans and fisheries. &amp; KOEM. All rights reserved.
     </div>
     <div class="col-xs-12 col-sm-12 col-md-4 pull-left text-center" style="padding:10px;">
     </div>
    </div>
   </footer>
   [linkx]
   
  </div>
  <form name="contents">
  </form>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0371
  </b>
 </body>
</html>
|<---