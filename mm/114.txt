--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <noscript>
  </noscript>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <noscript>
   <div style="display:inline;">
   </div>
  </noscript>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-PJDD7T" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div id="skipnavi">
   [linkx]
   
  </div>
  ﻿﻿﻿﻿
  <div id="container">
   <div class="gnb_2016_head" id="header">
    <div class="gnb_2016_head_wrap" id="head_wrap">
     <div class="navArea">
      <h1 class="siteLogo">
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h1>
      <ul class="gnb_2016_nav" id="navHeader">
       <li>
        [linkx]
        
        <div class="gnb_2016_sub">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A02A07A01">
             [linkx]
             
            </li>
            <li id="NQ1A02A07A02">
             <a href="/displayPromotion/listLimited.lecs?displayNo=NQ1A02A06A03&amp;ctgNm=All&amp;lmtYn=Y&amp;middleNo=NQ1A02&amp;categoryNo=NQ1A02" target="_self">
              기간한정상품
             </a>
            </li>
            <li id="NQ1A02A07A03">
             <a href="/displayPromotion/listPriceCut.lecs?displayNo=NQ1A02A06A04&amp;ctgNm=All&amp;dscYn=Y&amp;middleNo=NQ1A02&amp;categoryNo=NQ1A02" target="_self">
              가격인하상품
             </a>
            </li>
            <li id="NQ1A02A07A04">
             [linkx]
             
            </li>
            <li id="NQ1A02A07A10">
             [linkx]
             
            </li>
            <li id="NQ1A02A07A16">
             [linkx]
             
            </li>
            <li id="NQ1A02A07A17">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayMallNo=NQ1&amp;displayNo=NQ1A01A07A20" target="_self">
              UNIQLO UPDATE
             </a>
            </li>
            <li id="NQ1A02A07A06">
             [ahref]
             
            </li>
            <li id="NQ1A02A07A11">
             <a href="/lifewear/kr/" target="_blank">
              LifeWear
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A02A08A65">
             [ahref]
             
            </li>
            <li id="NQ1A02A08A67">
             [linkx]
             
            </li>
            <li id="NQ1A02A08A66">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A08A57" target="_self">
              유니클로 여름생활백서
             </a>
            </li>
            <li id="NQ1A02A08A09">
             <a href="/display/displayShop.lecs?displayNo=NQ1A01A08A06" target="_self">
              UT! 나의 세상을 입다
             </a>
            </li>
            <li id="NQ1A02A08A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A08A02">
              Comfort Active Wear
             </a>
            </li>
            <li id="NQ1A02A08A05">
             [linkx]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A02A09A26">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A02A11A03">
             [ahref]
             
            </li>
            <li id="NQ1A02A11A17">
             [linkx]
             
            </li>
            <li id="NQ1A02A11A04">
             [linkx]
             
            </li>
            <li id="NQ1A02A11A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A11A01">
              셔츠·블라우스
             </a>
            </li>
            <li id="NQ1A02A11A07">
             [linkx]
             
            </li>
            <li id="NQ1A02A11A06">
             [linkx]
             
            </li>
            <li id="NQ1A02A11A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A11A05">
              스웨트(후디·팬츠)
             </a>
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A02A10A03">
             [ahref]
             
            </li>
            <li id="NQ1A02A10A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A10A02">
              재킷·코트
             </a>
            </li>
            <li id="NQ1A02A10A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A10A01">
              울트라라이트다운 (경량패딩)
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            [content13[linkx]content14[linkx]content15]
           </h5>
           <ul>
            <li id="NQ1A02A12A06">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A12A06">
              스커트
             </a>
            </li>
            <li id="NQ1A02A12A07">
             [ahref]
             
            </li>
            <li id="NQ1A02A12A03">
             [ahref]
             
            </li>
            <li id="NQ1A02A12A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A12A02">
              진
             </a>
            </li>
            <li id="NQ1A02A12A05">
             [linkx]
             
            </li>
            <li id="NQ1A02A12A04">
             [linkx]
             
            </li>
            <li id="NQ1A02A12A18">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A08A29" target="_self">
              Maternity Collection　(임부복)
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <div class="col_block">
           <h5>
            <a>
             INNER WEAR
            </a>
           </h5>
           <ul>
            <li id="NQ1A02A13A01">
             [linkx]
             
            </li>
            <li id="NQ1A02A13A03">
             [ahref]
             
            </li>
            <li id="NQ1A02A13A02">
             [ahref]
             
            </li>
            <li id="NQ1A02A13A09">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A13A09">
              쇼츠
             </a>
            </li>
            <li id="NQ1A02A13A05">
             [linkx]
             
            </li>
            <li id="NQ1A02A13A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A13A04">
              이너T
             </a>
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            <a>
             ROOM WEAR
            </a>
           </h5>
           <ul>
            <li id="NQ1A02A14A07">
             [linkx]
             
            </li>
            <li id="NQ1A02A14A02">
             [linkx]
             
            </li>
            <li id="NQ1A02A14A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A14A03">
              룸슈즈
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A02A15A02">
             [content7][content8][linkx][content9]
            </li>
            <li id="NQ1A02A15A01">
             [linkx]
             
            </li>
            <li id="NQ1A02A15A04">
             [ahref]
             
            </li>
            <li id="NQ1A02A15A07">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [linkx]
         
        </div>
       </li>
       <li>
        <a href="e">
        </a>
        <div class="gnb_2016_sub">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A01A07A01">
             [linkx]
             
            </li>
            <li id="NQ1A01A07A02">
             [ahref]
             
            </li>
            <li id="NQ1A01A07A03">
             [linkx]
             
            </li>
            <li id="NQ1A01A07A04">
             [linkx]
             
            </li>
            <li id="NQ1A01A07A16">
             [linkx]
             
            </li>
            <li id="NQ1A01A07A22">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A07A22">
              365일 판매상품
             </a>
            </li>
            <li id="NQ1A01A07A20">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A07A20">
              UNIQLO UPDATE
             </a>
            </li>
            <li id="NQ1A01A07A06">
             [ahref]
             
            </li>
            <li id="NQ1A01A07A17">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A01A08A59">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A08A59">
              2019 UNIQLO SUMMER T셔츠 컬렉션
             </a>
            </li>
            <li id="NQ1A01A08A62">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A08A62">
              에어리즘을 입는　　　100가지 이유
             </a>
            </li>
            <li id="NQ1A01A08A57">
             [linkx]
             
            </li>
            <li id="NQ1A01A08A06">
             [linkx]
              <li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
             
            </li>
            <li id="NQ1A01A08A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A08A02">
              Comfort Active Wear
             </a>
            </li>
            <li id="NQ1A01A08A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A08A04">
              직장인을 위한, 　　　Comfort Smart Wear
             </a>
            </li>
            <li id="NQ1A01A08A61">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A11A15" target="_self">
              당신만의 저스트 사이즈, 맞춤형 셔츠
             </a>
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A01A09A16">
             [linkx]
             
            </li>
            [ahref]
            
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            <a>
             TOPS
            </a>
           </h5>
           <ul>
            <li id="NQ1A01A11A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A11A02">
              UT(그래픽티셔츠)
             </a>
            </li>
            <li id="NQ1A01A11A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A11A03">
              폴로셔츠
             </a>
            </li>
            <li id="NQ1A01A11A04">
             [ahref]
             
            </li>
            <li id="NQ1A01A11A05">
             [linkx]
             
            </li>
            <li id="NQ1A01A11A21">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A11A21">
              캐주얼셔츠(반팔)
             </a>
            </li>
            <li id="NQ1A01A11A07">
             [ahref]
             
            </li>
            <li id="NQ1A01A11A08">
             [linkx]
             
            </li>
            <li id="NQ1A01A11A15">
             [ahref]
             
            </li>
            <li id="NQ1A01A11A10">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A11A10">
              가디건·스웨터
             </a>
            </li>
            <li id="NQ1A01A11A09">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A11A09">
              스웨트(파카·셔츠·팬츠)
             </a>
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A01A10A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A10A02">
              재킷·코트
             </a>
            </li>
            <li id="NQ1A01A10A03">
             [ahref]
             
            </li>
            <li id="NQ1A01A10A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            <a>
             BOTTOMS
            </a>
           </h5>
           <ul>
            <li id="NQ1A01A12A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A12A04">
              쇼트팬츠
             </a>
            </li>
            <li id="NQ1A01A12A01">
             [ahref]
             
            </li>
            <li id="NQ1A01A12A03">
             [ahref]
             
            </li>
            <li id="NQ1A01A12A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A12A05">
              진
             </a>
            </li>
            <li id="NQ1A01A12A06">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A12A06">
              캐주얼팬츠
             </a>
            </li>
            <li id="NQ1A01A12A12">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A12A12">
              치노팬츠
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A01A13A01">
             [linkx]
             
            </li>
            <li id="NQ1A01A13A04">
             [ahref]
             
            </li>
            <li id="NQ1A01A13A05">
             [ahref]
             
            </li>
            <li id="NQ1A01A13A03">
             [linkx]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A01A14A08">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A14A08">
              STETECO·쇼트팬츠
             </a>
            </li>
            <li id="NQ1A01A14A01">
             [linkx]
              [content16[linkx]content17[linkx]content18[linkx]content19]
             
            </li>
            <li id="NQ1A01A14A02">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A01A15A08">
             [ahref]
             
            </li>
            <li id="NQ1A01A15A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A01A15A01">
              벨트·타이
             </a>
            </li>
            <li id="NQ1A01A15A02">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         <a class="gnb_2016_close" href="#">
          close
         </a>
        </div>
       </li>
       <li>
        [ahref]
        
        <div class="gnb_2016_sub kids">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A03A07A01">
             <a href="/displayPromotion/listNewArrival.lecs?displayNo=NQ1A03A06A01&amp;ctgNm=All&amp;newYn=Y&amp;middleNo=NQ1A03&amp;categoryNo=NQ1A03" target="_self">
              신상품
             </a>
            </li>
            <li id="NQ1A03A07A02">
             [linkx]
             
            </li>
            <li id="NQ1A03A07A03">
             <a href="/displayPromotion/listPriceCut.lecs?displayNo=NQ1A03A06A04&amp;ctgNm=All&amp;dscYn=Y&amp;middleNo=NQ1A03&amp;categoryNo=NQ1A03" target="_self">
              가격인하상품
             </a>
            </li>
            <li id="NQ1A03A07A04">
             [linkx]
             
            </li>
            <li id="NQ1A03A07A13">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A07A13">
              365일 판매상품
             </a>
            </li>
            <li id="NQ1A03A07A06">
             <a href="/kr/news/" target="_self">
              Today‘s Pick Up
             </a>
            </li>
            <li id="NQ1A03A07A11">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A03A08A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A08A04">
             <a href="/display/displayShop.lecs?displayNo=NQ1A01A08A06" target="_self">
              UT! 나의 세상을 입다
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <h4>
           <span>
            BOYS
           </span>
          </h4>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A03A11A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A11A03">
              UT(그래픽티셔츠)
             </a>
            </li>
            <li id="NQ1A03A11A02">
             티셔츠·스웨트<li>[link]</li>[link][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
            </li>
            <li id="NQ1A03A11A01">
             [linkx]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            <a>
             BOTTOMS
            </a>
           </h5>
           <ul>
            <li id="NQ1A03A12A06">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A12A06">
              쇼트팬츠
             </a>
            </li>
            <li id="NQ1A03A12A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <h4>
          </h4>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A03A13A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A13A01">
              AIRism
             </a>
            </li>
            <li id="NQ1A03A13A06">
             [linkx]
             
            </li>
            <li id="NQ1A03A13A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A13A04">
              룸웨어
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <h4>
           <span>
            GIRLS
           </span>
          </h4>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A03A16A04">
             [ahref]
             
            </li>
            <li id="NQ1A03A16A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A16A02">
              티셔츠·스웨터
             </a>
            </li>
            <li id="NQ1A03A16A08">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A16A08">
              셔츠·블라우스
             </a>
            </li>
            <li id="NQ1A03A16A05">
             [ahref]
             
            </li>
            <li id="NQ1A03A16A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A16A01">
              아우터
             </a>
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            <a>
             BOTTOMS
            </a>
           </h5>
           <ul>
            <li id="NQ1A03A14A08">
             [linkx]
             
            </li>
            <li id="NQ1A03A14A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A14A05">
              캐주얼팬츠·스커트
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <h4>
          </h4>
          <div class="col_block">
           <h5>
            <a>
             INNER &amp; ROOM WEAR
            </a>
           </h5>
           <ul>
            <li id="NQ1A03A17A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A17A01">
              AIRism
             </a>
            </li>
            <li id="NQ1A03A17A04">
             [ahref]
             
            </li>
            <li id="NQ1A03A17A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A17A05">
              레깅스·삭스·모자
             </a>
            </li>
            <li id="NQ1A03A17A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A17A03">
              룸웨어
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         <a class="gnb_2016_close" href="#">
          close
         </a>
        </div>
       </li>
       <li>
        <a href="e">
        </a>
        <div class="gnb_2016_sub baby">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A04A05A01">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A02">
             <a href="/displayPromotion/listLimited.lecs?displayNo=NQ1A04A04A03&amp;ctgNm=All&amp;lmtYn=Y&amp;middleNo=NQ1A04&amp;categoryNo=NQ1A04" target="_self">
              기간한정상품
             </a>
            </li>
            <li id="NQ1A04A05A03">
             [linkx]
             
            </li>
            <li id="NQ1A04A05A04">
             [linkx]
             
            </li>
            <li id="NQ1A04A05A11">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A06">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A10">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            <a>
             특집
            </a>
           </h5>
           <ul>
            <li id="NQ1A04A06A23">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A04A06A23">
              내 아이의 시선으로, UNIQLO BABY
             </a>
            </li>
            <li id="NQ1A04A06A04">
             [linkx]
             
            </li>
            <li id="NQ1A04A06A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A04A08A02">
             [linkx]
             
            </li>
            <li id="NQ1A04A08A05">
             [ahref]
             
            </li>
            <li id="NQ1A04A08A06">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A04A09A03">
             [linkx]
             
            </li>
            <li id="NQ1A04A09A01">
             [ahref]
             
            </li>
            <li id="NQ1A04A09A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A04A09A04">
              하의(레깅스·팬츠)
             </a>
            </li>
            <li id="NQ1A04A09A12">
             [ahref]
             
            </li>
            <li id="NQ1A04A09A06">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A04A09A06">
              파자마·삭스
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [ahref]
         
        </div>
       </li>
       <li>
        <a href="e">
        </a>
        <div class="gnb_2016_sub company">
         <div class="gnb_2016_col col1">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A12A01A01">
             <a href="/display/displayShop.lecs?displayNo=NQ1A12A12" target="_self">
              유니클로에 대해서
             </a>
            </li>
            <li id="NQ1A12A01A02">
             <a href="/display/displayShop.lecs?displayNo=NQ1A12A13" target="_self">
              회사정보
             </a>
            </li>
            <li id="NQ1A12A01A03">
             <a href="/display/displayShop.lecs?displayNo=NQ1A12A14" target="_self">
              사업현황
             </a>
            </li>
            <li id="NQ1A12A01A04">
             [linkx]
             
            </li>
            <li id="NQ1A12A01A05">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A02A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            [content14[linkx]content15]
           </h5>
           <ul>
            <li id="NQ1A12A03A02">
             <a href="/kr/sustainability/mission/" target="_blank">
              우리가 생각하는　　　지속가능성
             </a>
            </li>
            <li id="NQ1A12A03A03">
             [linkx]
             
            </li>
            <li id="NQ1A12A03A04">
             [linkx]
             
            </li>
            <li id="NQ1A12A03A05">
             <a href="/kr/sustainability/people/" target="_blank">
              함께 일하는 동료들
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A04A06">
             [linkx]
             
            </li>
            <li id="NQ1A12A04A05">
             <a href="/display/displayShop.lecs?displayNo=NQ1A12A17" target="_self">
              Adam Scott
             </a>
            </li>
            <li id="NQ1A12A04A08">
             [linkx]
             
            </li>
            <li id="NQ1A12A04A03">
             [ahref]
             
            </li>
            <li id="NQ1A12A04A07">
             [linkx]
             
            </li>
            <li id="NQ1A12A04A02">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A12A05A01">
             <a href="/employment/ko/uniqlo/kr/" target="_blank">
              채용정보
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A06A01">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [linkx]
         
        </div>
       </li>
      </ul>
      <div id="gnav_util_area">
       <ul class="clearfix">
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/voc/customerCenter.lecs?tracking=header_cs" target="_self">
         </a>
        </li>
       </ul>
       <ul class="gnav_util_slider" id="navUtil">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li id="gnav_search_slide">
         <form action="/search/searchUniqlo.lecs" method="post" name="HeaderSearch">
          <div class="search_input_wrap">
           <span id="gnav_textClear">
            x
           </span>
           [ahref]
           
          </div>
          <div class="search_layer_rank search_layer_pop" id="search_layer_pop">
           <div class="search_layer">
            [content14[linkx]content15[linkx]content16]
           </div>
           <div class="search_layer_btm on">
            <div class="lft_btns">
             <a class="on" href=";" id="recentWordOffY" onclick="recentWordOff('Y','Y')">
              자동저장 끄기
             </a>
             [ahref]
             
            </div>
            <div class="rit_btns">
             <a class="all_del" href=";" onclick="recentWordOff('All', 'Y')">
              전체삭제
             </a>
             <a class="hide_me" href=";" id="searchLayerClose">
              닫기
             </a>
            </div>
           </div>
          </div>
          <div class="search_layer_rank search_layer_auto" id="search_layer_auto">
           <div class="search_list">
            <ul>
            </ul>
           </div>
          </div>
         </form>
        </li>
       </ul>
      </div>
     </div>
     <div class="gnb_2016_head_topbg">
     </div>
    </div>
    <div class="gnb_2016_dimmed" id="gnb_2016_dimmed">
    </div>
    <a class="gnb_2016_exit" href="#" id="gnb_2016_exit" onclick="return false;">
     서브메뉴 닫기
    </a>
   </div>
   <div id="content">
    <div class="l3banner_popupCover">
    </div>
    <div class="visarea" style="margin-bottom:15px;">
     <div class="L3_Wdown_cover_171020 clearfix">
      <div class="left_col">
       <div class="center_wrapper">
        <div class="center_area">
         <h1>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0119
  </b>
 </body>
</html>
<p class="text" style="padding-top:0px;">
 매일을 멋스럽게,
 <br/>
 시즌 액세사리
</p>
<div class="right_col">
</div>
<div class="blkMultibuyContent">
 <h3 class="tittype01">
  [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
 </h3>
</div>
<div class="L3_swimwear_180601">
 <div class="gender_area mb15 l3framework-tab l3framework-01">
  <ul class="clearfix">
   <li>
    [linkx]
    
   </li>
   <li class="men_btn_active">
    <span>
     MEN
    </span>
   </li>
  </ul>
 </div>
 <div class="visarea">
  <div class="L3_Wknit_lineup_180119">
   <div class="l3framework-anchor l3framework-02">
    <div>
     <ul>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="5">
        모자
       </a>
      </li>
     </ul>
    </div>
   </div>
  </div>
 </div>
 <div>
 </div>
 <div>
 </div>
</div>
<div id="content1">
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A02">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A02" style="margin-top:15px;">
  <p class="h3_ttl">
   우산
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [ahref]
       
      </p>
      [ahref]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a class="selected" data-chip-color="COL69" data-goods-no="NQ31117805" data-image-path="https://simage-kr.uniqlo.com/goods/31/11/78/05/413077_COL_COL69_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31117805&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL69" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [linkx]
       
      </span>
      <strong class="price limited">
       14,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A07">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A07" style="margin-top:15px;">
  <p class="h3_ttl">
   선글라스
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [ahref]
       
      </p>
      <a class="quick_btn" href=";" id="quickViewLayerBtn">
      </a>
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [ahref]
        
       </li>
       <li>
        <a class="selected" data-chip-color="COL37" data-goods-no="NQ31119255" data-image-path="https://simage-kr.uniqlo.com/goods/31/11/92/55/416507_COL_COL37_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31119255&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL37" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [linkx]
       
      </span>
      <strong class="price">
       12,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31119251&amp;displayNo=NQ1A01A15A08">
       </a>
      </p>
      [ahref]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        <a data-chip-color="COL38" data-goods-no="NQ31119251" data-image-path="https://simage-kr.uniqlo.com/goods/31/11/92/51/416511_COL_COL38_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31119251&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL38" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31119251&amp;displayNo=NQ1A01A15A08">
        스포츠라이트웨이트하프림
       </a>
      </span>
      <strong class="price">
       12,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31119250&amp;displayNo=NQ1A01A15A08">
       </a>
      </p>
      [linkx]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [linkx]
       
      </span>
      <strong class="price">
       9,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A08">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A08" style="margin-top:15px;">
  <p class="h3_ttl">
   스톨
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08">
       </a>
      </p>
      <a class="quick_btn" href=";" id="quickViewLayerBtn">
      </a>
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        <a data-chip-color="COL01" data-goods-no="NQ31123162" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/31/62/418377_COL_COL01_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL01" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a data-chip-color="COL12" data-goods-no="NQ31123162" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/31/62/418377_COL_COL12_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL12" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-chip-color="COL55" data-goods-no="NQ31123162" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/31/62/418377_COL_COL55_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL55" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        <a data-chip-color="COL67" data-goods-no="NQ31123162" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/31/62/418377_COL_COL67_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL67" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08">
        라이트스톨
       </a>
      </span>
      <strong class="price">
       12,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A05">
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A05" style="margin-top:15px;">
  <p class="h3_ttl">
   모자
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124583&amp;displayNo=NQ1A01A15A08">
       </a>
      </p>
      [linkx]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        <a class="selected" data-chip-color="COL56" data-goods-no="NQ31124583" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/45/83/420151_COL_COL56_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31124583&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL56" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124583&amp;displayNo=NQ1A01A15A08">
        캠프햇<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>
       </a>
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [ahref]
       
      </p>
      <a class="quick_btn" href=";" id="quickViewLayerBtn">
      </a>
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        <a class="selected" data-chip-color="COL09" data-goods-no="NQ31124582" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/45/82/420150_COL_COL09_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31124582&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL09" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124582&amp;displayNo=NQ1A01A15A08">
        코튼트윌캡
       </a>
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124581&amp;displayNo=NQ1A01A15A08">
       </a>
      </p>
      [linkx]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a data-chip-color="COL69" data-goods-no="NQ31124581" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/45/81/418846_COL_COL69_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31124581&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL69" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124581&amp;displayNo=NQ1A01A15A08">
        울캐시미어캡
       </a>
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
</div>
<div class="bx_prevNext" id="recopickApiDiv" style="display:none;">
 <div class="uqrcopicNew">
  <h2 id="recopickApiTitleDiv">
   <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
  </h2>
  <ul class="specialBxSlider recopick" data-controls="true" data-easing="easeOutCubic" data-max-slides="12" data-min-slides="1" data-move-slides="1" data-pager="true" data-pause="3000" data-slide-width="960" id="recopickApiGoodsListDiv">
  </ul>
 </div>
</div>
<iframe frameborder="0" height="0" name="submitFrame" src="about:blank" style="width:0;height:0" title="빈프레임" width="0">
</iframe>
<iframe frameborder="0" height="0" name="downloadFrame" src="about:blank" style="width:0;height:0" title="빈프레임" width="0">
</iframe>
﻿﻿﻿﻿﻿
<div id="footer2">
 <div class="siteinfo">
  <p class="sitename">
   <a href="m">
   </a>
  </p>
  <ul class="utility clearfix">
   <li>
    <a href="/kr/store/?tracking=footer_01" target="_blank" title="새창열림">
    </a>
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
   <li>
   </li>
   <li>
    <a href="/display/displayShop.lecs?displayNo=NQ1A12A13&amp;tracking=footer_03" target="_blank" title="새창열림">
    </a>
   </li>
   <li>
   </li>
   <li>
    [linkx]
    
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
   <li>
   </li>
   <li>
    <a href="/display/displayShop.lecs?displayNo=NQ1A12A10&amp;tracking=footer_08" target="_blank" title="새창열림">
    </a>
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
   <li>
   </li>
   <li>
    <a href="/display/displayShop.lecs?displayNo=NQ1A12A08&amp;tracking=footer_09" target="_blank" title="새창열림">
    </a>
   </li>
  </ul>
  <p id="goPageTop">
   [ahref]
   
  </p>
 </div>
</div>
<div id="footWrap">
 <div id="footer">
  <dl class="world clearfix">
   <dt>
    <li>[link]</li><li>[link]</li>[link]
   </dt>
   <dd class="country_menu1">
    [ahref]
    
   </dd>
   <dd>
    <a href="/ca/en/" target="_blank">
     CANADA
    </a>
   </dd>
   <dd>
    <a href="/?tracking=footer_china" target="_blank">
     CHINA
    </a>
   </dd>
   <dd>
    <a href="/dk/en" target="_blank">
     DENMARK
    </a>
   </dd>
   <dd>
    <a href="/eu/en" target="_blank">
     EU
    </a>
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    <a href="/de/?tracking=footer_germany_jp" target="_blank">
     GERMANY
    </a>
   </dd>
   <dd>
    <a href="/hk/?tracking=footer_hongkong_jp" target="_blank">
     HONGKONG &amp; MACAU
    </a>
   </dd>
   <dd>
    <a href="/id/?tracking=footer_indonesia" target="_blank">
     INDONESIA
    </a>
   </dd>
   <dd>
    <a href="/it/it" target="_blank">
     ITALY
    </a>
   </dd>
   <dd>
    <a href="/jp/?tracking=footer_japan" target="_blank">
     JAPAN
    </a>
   </dd>
   <dd class="second">
    <a href="/?tracking=footer_korea" target="_blank">
     KOREA
    </a>
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    <a href="/ph/?tracking=footer_philippines" target="_blank">
     PHILIPPINES
    </a>
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    <a href="/es/es/home" target="_blank">
     SPAIN
    </a>
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    <a href="/tw/?tracking=footer_taiwan" target="_blank">
     TAIWAN
    </a>
   </dd>
   <dd>
    <a href="/th/store/" target="_blank">
     THAILAND
    </a>
   </dd>
   <dd>
    <a href="/?tracking=footer_uk" target="_blank">
     UK<li>[link]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
    </a>
   </dd>
   <dd>
    <a href="/us/?tracking=footer_usa" target="_blank">
     USA
    </a>
   </dd>
  </dl>
  <div class="foot_uniqlo">
   <table>
    <tbody>
     <tr>
      <td class="borrig">
       <ul>
        <li>
         유니클로 공식 온라인스토어는
         [linkx]
         
         를 이용하고 있습니다.
        </li>
        <li style="margin-top: 5px">
         에프알엘코리아(주) 대표: 배우진, 와카바야시 타카히로, 서울특별시 중구 세종대로 136(서울파이낸스센터 25층)
        </li>
        <li>
         통신판매업신고번호: 2018-서울중구-0487 / 사업자등록번호:104-81-91189
         [linkx]
         
        </li>
        <li style="margin-top: 5px">
         <strong class="bold" id="foot_txt2">
          고객만족센터: 1577-0296
         </strong>
         , FAX: 02-3668-8900, E-mail:
         <a href="m" title="새창열림">
          uniqlo@lotte.com
         </a>
         <span class="footLayer1">
         </span>
        </li>
        <li>
         호스팅서비스사업자: 롯데쇼핑(주) e커머스 사업본부
        </li>
       </ul>
      </td>
      <td class="pl30" valign="top">
       <ul>
        <li>
         <strong class="bold">
          서울보증보험 구매안전서비스(쇼핑몰보증보험)
         </strong>
         [linkx]
         
        </li>
        <li>
         고객님은 안전거래를 위해 현금 등으로 결제 시 결제금액 전액에 대해
         <br>
          저희 쇼핑몰에서 가입한 구매안전서비스 "소비자피해보상보험서비스"를
          <br>
           이용하실 수 있습니다.
          </br>
         </br>
        </li>
        <li>
         -보상대상: 미배송, 반품/환불거부, 쇼핑몰부도
        </li>
        <li>
         -구매안전서비스를 통하여 주문하시고 서울보증보험에서 발행하는
         <br>
          보험계약 체결내역서를 반드시 확인하시기 바랍니다.
         </br>
        </li>
        <li style="margin-top: 10px">
         <strong class="bold">
          콘텐츠산업진흥법에 의한 콘텐츠보호안내
         </strong>
         [ahref]
         
         <span class="footLayer2">
         </span>
        </li>
        <li style="margin-top: 5px">
         COPYRIGHT(C) UNIQLO CO., LTD. ALL RIGHTS RESERVED
        </li>
       </ul>
      </td>
     </tr>
    </tbody>
   </table>
  </div>
 </div>
</div>
<p>
</p>
<div class="layerPopup" id="divCommonViewLayer" style="z-index:1000">
</div>
<div class="layer_quickview" id="quickviewLayer" style="z-index:1000;display:none;">
</div>
<div id="ttdUniversalPixelTag3886b0a122f942d3ba209bc2688197a8" style="display:none">
</div>
|<---