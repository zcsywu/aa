--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles">
   <li>[linkx]</li><li>[mkey1]</li><li>[keywordx]</li>[linkx]
  </meta>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/c/cd/Chapeaux_en_peau_de_castor.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-모자 rootpage-모자 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [linkx]
    
    [linkx]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <div class="dablink">
       [linkx]
       
       다른 뜻에 대해서는
       <a class="mw-disambig" href="/wiki/%EB%AA%A8%EC%9E%90_(%EB%8F%99%EC%9D%8C%EC%9D%B4%EC%9D%98)" title="모자 (동음이의)">
        모자 (동음이의)
       </a>
       문서를 참조하십시오.
      </div>
      <div class="thumb tright">
       <div class="thumbinner" style="width:302px;">
        <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Chapeaux_en_peau_de_castor.jpg">
        </a>
        <div class="thumbcaption">
         <div class="magnify">
          [linkx]
          
         </div>
         18세기 ~ 19세기의 다양한 남성모.
        </div>
       </div>
      </div>
      <p>
       <b>
        모자
       </b>
       (帽子)는 머리를 덮을 수 있는 것 중의 하나이며, 예의를 차리거나 더위·추위·먼지 등을 막기 위하여 머리에 쓰는 물건이다. 양복의 모자에는 해트·캡·보닛·후드·베일 등이 있으며, 세계 여러 나라의 모자는 지역에 따라 특색이 있다.
      </p>
      <p>
       그러나 보호를 위한 몇가지 이유로 이용할 수 있다.
      </p>
      <p>
       주로
       <a href="/wiki/%EC%A2%85%EA%B5%90" title="종교">
        종교
       </a>
       적인 이유 또는
       [linkx]
       
       및
       <[keywordx]>
       </[keywordx]>
       [ahref]
       
       를 목적으로 사용한다. 예전에는 모자가 사회적 신분의 상징이었고,
       [linkx]
       
       에서는
       [ahref]
       
       과 연대를 표기하였다.
      </p>
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <div class="center">
       <table class="wikitable">
        <caption>
         <b>
          모자 크기
         </b>
        </caption>
        <tbody>
         <tr>
          <th>
           크기
          </th>
          <th>
          </th>
          <th>
          </th>
          <th>
          </th>
          <th>
          </th>
          <th>
           Youth S/M
          </th>
          <th>
           Youth L/XL
          </th>
          <th>
           XXS
          </th>
          <th>
           XS
          </th>
          <th>
           S
          </th>
          <th>
           M
          </th>
          <th>
           L
          </th>
          <th>
           XL
          </th>
          <th>
           XXL
          </th>
          <th>
           XXXL
          </th>
         </tr>
         <tr>
          <th>
           나이
          </th>
          <td>
           0
          </td>
          <td>
           ½
          </td>
          <td>
           1
          </td>
          <td>
           1½
          </td>
          <td>
           2
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
           <li>[linkx]</li>[ahref][pkeyx]<li>[pkeyx]</li>[linkx]
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
          </td>
          <td>
           [linkx][mkey1][mkey1][linkx]
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           Circumference (cm)
          </th>
          <td>
           34[mkey1][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][linkx][mkey1][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][pkeyx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][pkeyx]
          </td>
          <td>
           43
          </td>
          <td>
           47
          </td>
          <td>
           48
          </td>
          <td>
           49
          </td>
          <td>
           50
          </td>
          <td>
           51–52
          </td>
          <td>
           53–54
          </td>
          <td>
           55–56
          </td>
          <td>
           57–58
          </td>
          <td>
           59–60
          </td>
          <td>
           61–62
          </td>
          <td>
           63–64
          </td>
          <td>
           65–66
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           Circumference (인치)
          </th>
          <td>
           13⅜
          </td>
          <td>
           17
          </td>
          <td>
           18½
          </td>
          <td>
           18¾
          </td>
          <td>
           19¼
          </td>
          <td>
           19¾
          </td>
          <td>
           20–20½
          </td>
          <td>
           20–21¼
          </td>
          <td>
           21–22
          </td>
          <td>
           22–22½⅞
          </td>
          <td>
           23–23½⅝
          </td>
          <td>
           24–24⅜
          </td>
          <td>
           24¾–25¼
          </td>
          <td>
           25–26
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           영국(UK) 모자 크기
          </th>
          <td>
          </td>
          <td>
          </td>
          <td>
           5
          </td>
          <td>
           5¾
          </td>
          <td>
           6
          </td>
          <td>
           6
          </td>
          <td>
           6–6¼⅜
          </td>
          <td>
           6–6½⅝
          </td>
          <td>
           6–6¾⅞
          </td>
          <td>
           7–7⅛
          </td>
          <td>
           7–7¼⅜
          </td>
          <td>
           7–7½
          </td>
          <td>
           7–7¾⅞
          </td>
          <td>
           8–8⅛
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           미국(US) 모자 크기
          </th>
          <td>
          </td>
          <td>
          </td>
          <td>
           5⅞
          </td>
          <td>
           6
          </td>
          <td>
           6⅛
          </td>
          <td>
           6¼
          </td>
          <td>
           6–6½
          </td>
          <td>
           6⅝- 6¾
          </td>
          <td>
           6–7
          </td>
          <td>
           7–7¼
          </td>
          <td>
           7–7½
          </td>
          <td>
           7–7¾
          </td>
          <td>
           7–8
          </td>
          <td>
           8–8¼
          </td>
         </tr>
         <tr style="text-align:center;">
          <th>
           프랑스(French) 모자 크기
          </th>
          <td>
          </td>
          <td>
          </td>
          <td>
           0
          </td>
          <td>
           ½
          </td>
          <td>
           1
          </td>
          <td>
           1½
          </td>
          <td>
           2–2½
          </td>
          <td>
           3–3½
          </td>
          <td>
           4–4½
          </td>
          <td>
           5–5½
          </td>
          <td>
           6–6½
          </td>
          <td>
           7–7½
          </td>
          <td>
           8–8½
          </td>
          <td>
           9–9½
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <h2>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>[linkx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][linkx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][linkx][mkey1][linkx][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][ahref][pkeyx]
      </h2>
      <table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;">
       <tbody>
        <tr>
         <td class="mbox-image">
         </td>
         <td class="mbox-text plainlist" style="">
          <b>
           위키미디어 공용[linkx][ahref][mkey1][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][pkeyx][pkeyx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][mkey1][mkey1][pkeyx][ahref]
          </b>
          에 관련된
          <br/>
          미디어 분류가 있습니다.
          <div style="padding-left:1em;">
           <b>
            <a class="external text" href="/wiki/Category:Hats?uselang=ko">
             모자
            </a>
           </b>
          </div>
         </td>
        </tr>
       </tbody>
      </table>
      <ul>
       <li>
        <a href="/wiki/%EC%BA%A1" title="캡">
         캡
        </a>
       </li>
      </ul>
      <div>
       <small>
        [ahref]
        
        [ahref]
        
        이 문서에는
        [ahref]
        
        (현
        <a href="/wiki/%EC%B9%B4%EC%B9%B4%EC%98%A4_(%EA%B8%B0%EC%97%85)" title="카카오 (기업)">
         카카오
        </a>
        )에서
        [linkx]
        
        또는
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:Creative_Commons_Attribution-ShareAlike_3.0_Unported_License" title="위키백과:Creative Commons Attribution-ShareAlike 3.0 Unported License">
         CC-SA
        </a>
        라이선스로 배포한
        [linkx]
        
        의 내용을 기초로 작성된 글이 포함되어 있습니다.
       </small>
      </div>
      <div aria-labelledby="전거_통제" class="navbox" role="navigation" style="padding:3px">
       <table class="nowraplinks hlist navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
        <tbody>
         <tr>
          <th class="navbox-group" id="전거_통제" scope="row" style="width:1%">
           [linkx]
            <li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx]</li>
           
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              <a href="/wiki/%EB%AF%B8%EA%B5%AD_%EC%9D%98%ED%9A%8C%EB%8F%84%EC%84%9C%EA%B4%80_%EC%A0%9C%EC%96%B4_%EB%B2%88%ED%98%B8" title="미국 의회도서관 제어 번호">
               LCCN
              </a>
              :
              <span class="uid">
               <a class="external text" href="/authorities/subjects/sh85059282" rel="nofollow">
                sh85059282
               </a>
              </span>
             </li>
             <li>
              <a href="/wiki/%EA%B2%8C%EB%A7%88%EC%9D%B8%EC%9E%90%EB%A9%94_%EB%85%B8%EB%A6%84%EB%8B%A4%ED%83%80%EC%9D%B4" title="게마인자메 노름다타이">
               GND
              </a>
              :
              <span class="uid">
               <a class="external text" href="/gnd/4160830-6" rel="nofollow">
                4160830-6
               </a>
              </span>
             </li>
             <li>
              <a href="/wiki/%EC%9D%BC%EB%B3%B8_%EA%B5%AD%EB%A6%BD%EA%B5%AD%ED%9A%8C%EB%8F%84%EC%84%9C%EA%B4%80" title="일본 국립국회도서관">
               NDL
              </a>
              :
              <span class="uid">
               [linkx]
               
              </span>
             </li>
            </ul>
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <table class="notice metadata plainlinks stub" style="clear: both; font-size: smaller;">
       <tbody>
        <tr>
         <td style="width: 40px;">
          <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:High_heel_temaplate.png">
          </a>
         </td>
         <td>
          이 글은 패션에 관한
          [linkx]
          
          입니다. 여러분의 지식으로 알차게
          [ahref]
          
          갑시다.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [ahref]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      숨은 분류:
      <ul>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:%EA%B8%80%EB%A1%9C%EB%B2%8C%EC%84%B8%EA%B3%84%EB%8C%80%EB%B0%B1%EA%B3%BC%EB%A5%BC_%EC%9D%B8%EC%9A%A9%ED%95%9C_%EB%AC%B8%EC%84%9C" title="분류:글로벌세계대백과를 인용한 문서">
         글로벌세계대백과를 인용한 문서
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       <li>[mkey1]</li><li>[ahref]</li>[mkey1]
      </li>
      <li id="pt-anoncontribs">
       [ahref]
       
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       [linkx]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      [pkeyx][mkey1][mkey1][pkeyx][ahref][linkx][ahref][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][mkey1][keywordx][keywordx][mkey1][linkx][keywordx][ahref]
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [linkx]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [linkx]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        <a accesskey="z" href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%8C%80%EB%AC%B8" title="대문으로 가기 [z]">
         대문
        </a>
       </li>
       <li id="n-portal">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EC%82%AC%EC%9A%A9%EC%9E%90_%EB%AA%A8%EC%9E%84" title="위키백과 참여자를 위한 토론/대화 공간입니다.">
         사용자 모임
        </a>
       </li>
       <li id="n-currentevents">
        요즘 화제<li>[linkx]</li><li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1]<li>[ahref]</li>
       </li>
       <li id="n-recentchanges">
        [ahref]
        
       </li>
       <li id="n-index">
        [ahref]
        
       </li>
       <li id="n-randompage">
        [linkx]
        
       </li>
       <li id="n-help">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%8F%84%EC%9B%80%EB%A7%90" title="도움말">
         도움말
        </a>
       </li>
       <li id="n-sitesupport">
        <a href="/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_ko.wikipedia.org&amp;uselang=ko" title="지원을 기다립니다">
         기부
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        <a accesskey="j" href="/wiki/%ED%8A%B9%EC%88%98:%EA%B0%80%EB%A6%AC%ED%82%A4%EB%8A%94%EB%AC%B8%EC%84%9C/%EB%AA%A8%EC%9E%90" title="여기를 가리키는 모든 위키 문서의 목록 [j]">
         여기를 가리키는 문서
        </a>
       </li>
       <li id="t-recentchangeslinked">
        [linkx]
        
       </li>
       <li id="t-upload">
        [linkx]
        
       </li>
       <li id="t-specialpages">
        [linkx]
        
       </li>
       <li id="t-permalink">
        [ahref]
        
       </li>
       <li id="t-info">
        [linkx]
        
       </li>
       <li id="t-wikibase">
        [ahref]
        
       </li>
       <li id="t-cite">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
     <h3 id="p-wikibase-otherprojects-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="wb-otherproject-link wb-otherproject-commons">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [linkx]
        
       </li>
       <li id="coll-download-as-rl">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:ElectronPdf&amp;page=%EB%AA%A8%EC%9E%90&amp;action=show-download-screen">
         PDF로 다운로드
        </a>
       </li>
       <li id="t-print">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-af">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ar">
        <a class="interlanguage-link-target" href="/wiki/%D9%82%D8%A8%D8%B9%D8%A9" hreflang="ar" lang="ar" title="قبعة – 아랍어">
         العربية
        </a>
       </li>
       <li class="interlanguage-link interwiki-ast">
        <a class="interlanguage-link-target" href="/wiki/Sombreru" hreflang="ast" lang="ast" title="Sombreru – 아스투리아어">
         Asturianu
        </a>
       </li>
       <li class="interlanguage-link interwiki-atj">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ay">
        <a class="interlanguage-link-target" href="/wiki/Q%27aspa" hreflang="ay" lang="ay" title="Q'aspa – 아이마라어">
         Aymar aru
        </a>
       </li>
       <li class="interlanguage-link interwiki-az">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ba">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-bar">
        <a class="interlanguage-link-target" href="/wiki/Huad" hreflang="bar" lang="bar" title="Huad – Bavarian">
         Boarisch
        </a>
       </li>
       <li class="interlanguage-link interwiki-be">
        <a class="interlanguage-link-target" href="/wiki/%D0%9A%D0%B0%D0%BF%D1%8F%D0%BB%D1%8E%D1%88" hreflang="be" lang="be" title="Капялюш – 벨라루스어">
         Беларуская
        </a>
       </li>
       <li class="interlanguage-link interwiki-be-x-old">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-bg">
        <a class="interlanguage-link-target" href="/wiki/%D0%A8%D0%B0%D0%BF%D0%BA%D0%B0" hreflang="bg" lang="bg" title="Шапка – 불가리아어">
         Български
        </a>
       </li>
       <li class="interlanguage-link interwiki-bjn">
        <a class="interlanguage-link-target" href="/wiki/Saraung" hreflang="bjn" lang="bjn" title="Saraung – Banjar">
         Bahasa Banjar
        </a>
       </li>
       <li class="interlanguage-link interwiki-br">
        <a class="interlanguage-link-target" href="/wiki/Tog" hreflang="br" lang="br" title="Tog – 브르타뉴어">
         Brezhoneg
        </a>
       </li>
       <li class="interlanguage-link interwiki-ca">
        <a class="interlanguage-link-target" href="/wiki/Barret" hreflang="ca" lang="ca" title="Barret – 카탈로니아어">
         Català
        </a>
       </li>
       <li class="interlanguage-link interwiki-cdo">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ceb">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-cs">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-cv">
        <a class="interlanguage-link-target" href="/wiki/%D0%A8%D0%BB%D0%B5%D0%BF%D0%BA%D0%B5" hreflang="cv" lang="cv" title="Шлепке – 추바시어">
         Чӑвашла
        </a>
       </li>
       <li class="interlanguage-link interwiki-cy">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-de">
        <a class="interlanguage-link-target" href="/wiki/Hut" hreflang="de" lang="de" title="Hut – 독일어">
         Deutsch
        </a>
       </li>
       <li class="interlanguage-link interwiki-el">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-en">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-eo">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-es">
        <a class="interlanguage-link-target" href="/wiki/Sombrero" hreflang="es" lang="es" title="Sombrero – 스페인어">
         Español
        </a>
       </li>
       <li class="interlanguage-link interwiki-et">
        <a class="interlanguage-link-target" href="/wiki/K%C3%BCbar" hreflang="et" lang="et" title="Kübar – 에스토니아어">
         Eesti
        </a>
       </li>
       <li class="interlanguage-link interwiki-eu">
        <a class="interlanguage-link-target" href="/wiki/Kapela" hreflang="eu" lang="eu" title="Kapela – 바스크어">
         Euskara
        </a>
       </li>
       <li class="interlanguage-link interwiki-fa">
        [keywordx]<li>[ahref]</li>[pkeyx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
       </li>
       <li class="interlanguage-link interwiki-fi">
        <a class="interlanguage-link-target" href="/wiki/Hattu" hreflang="fi" lang="fi" title="Hattu – 핀란드어">
         Suomi
        </a>
       </li>
       <li class="interlanguage-link interwiki-fr">
        <a class="interlanguage-link-target" href="/wiki/Chapeau" hreflang="fr" lang="fr" title="Chapeau – 프랑스어">
         Français
        </a>
       </li>
       <li class="interlanguage-link interwiki-fy">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ga">
        <a class="interlanguage-link-target" href="/wiki/Hata" hreflang="ga" lang="ga" title="Hata – 아일랜드어">
         Gaeilge
        </a>
       </li>
       <li class="interlanguage-link interwiki-gd">
        <a class="interlanguage-link-target" href="/wiki/Ad" hreflang="gd" lang="gd" title="Ad – 스코틀랜드 게일어">
         Gàidhlig
        </a>
       </li>
       <li class="interlanguage-link interwiki-gn">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-gv">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-he">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hi">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hr">
        <a class="interlanguage-link-target" href="/wiki/%C5%A0e%C5%A1ir" hreflang="hr" lang="hr" title="Šešir – 크로아티아어">
         Hrvatski
        </a>
       </li>
       <li class="interlanguage-link interwiki-hu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hy">
        <a class="interlanguage-link-target" href="/wiki/%D4%B3%D5%AC%D5%AD%D5%A1%D6%80%D5%AF" hreflang="hy" lang="hy" title="Գլխարկ – 아르메니아어">
         Հայերեն
        </a>
       </li>
       <li class="interlanguage-link interwiki-id">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-io">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-is">
        <a class="interlanguage-link-target" href="/wiki/Hattur" hreflang="is" lang="is" title="Hattur – 아이슬란드어">
         Íslenska
        </a>
       </li>
       <li class="interlanguage-link interwiki-it">
        <a class="interlanguage-link-target" href="/wiki/Copricapo" hreflang="it" lang="it" title="Copricapo – 이탈리아어">
         Italiano
        </a>
       </li>
       <li class="interlanguage-link interwiki-ja">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-jv">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ka">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ku">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-lb">
        <a class="interlanguage-link-target" href="/wiki/Hutt" hreflang="lb" lang="lb" title="Hutt – 룩셈부르크어">
         Lëtzebuergesch
        </a>
       </li>
       <li class="interlanguage-link interwiki-lmo">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lt">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lv">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-mk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ml">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ms">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-mzn">
        <a class="interlanguage-link-target" href="/wiki/%DA%A9%D8%A7%D9%84%D8%A7" hreflang="mzn" lang="mzn" title="کالا – 마잔데라니어">
         مازِرونی
        </a>
       </li>
       <li class="interlanguage-link interwiki-nah">
        <a class="interlanguage-link-target" href="/wiki/Watlasecawiloni" hreflang="nah" lang="nah" title="Watlasecawiloni – Nāhuatl">
         Nāhuatl
        </a>
       </li>
       <li class="interlanguage-link interwiki-ne">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-nl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-nn">
        <a class="interlanguage-link-target" href="/wiki/Hatt" hreflang="nn" lang="nn" title="Hatt – 노르웨이어(니노르스크)">
         Norsk nynorsk
        </a>
       </li>
       <li class="interlanguage-link interwiki-no">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-nrm">
        <a class="interlanguage-link-target" href="/wiki/Cap%C3%A9" hreflang="nrf" lang="nrf" title="Capé – Norman">
         Nouormand
        </a>
       </li>
       <li class="interlanguage-link interwiki-oc">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pa">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pdc">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pt">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-qu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ro">
        <a class="interlanguage-link-target" href="/wiki/P%C4%83l%C4%83rie" hreflang="ro" lang="ro" title="Pălărie – 루마니아어">
         Română
        </a>
       </li>
       <li class="interlanguage-link interwiki-ru">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sco">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-se">
        <a class="interlanguage-link-target" href="/wiki/Gahpir" hreflang="se" lang="se" title="Gahpir – 북부 사미어">
         Davvisámegiella
        </a>
       </li>
       <li class="interlanguage-link interwiki-sh">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-si">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-simple">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sk">
        <a class="interlanguage-link-target" href="/wiki/Klob%C3%BAk" hreflang="sk" lang="sk" title="Klobúk – 슬로바키아어">
         Slovenčina
        </a>
       </li>
       <li class="interlanguage-link interwiki-sl">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-so">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-sq">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sr">
        <a class="interlanguage-link-target" href="/wiki/%D0%A8%D0%B5%D1%88%D0%B8%D1%80" hreflang="sr" lang="sr" title="Шешир – 세르비아어">
         Српски / srpski
        </a>
       </li>
       <li class="interlanguage-link interwiki-su">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sv">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-sw">
        [linkx]
         <li>[mkey1]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[ahref]</li><li>[mkey1]</li>
        
       </li>
       <li class="interlanguage-link interwiki-szl">
        <a class="interlanguage-link-target" href="/wiki/K%C5%82obuk" hreflang="szl" lang="szl" title="Kłobuk – Silesian">
         Ślůnski
        </a>
       </li>
       <li class="interlanguage-link interwiki-ta">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-te">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-tg">
        <a class="interlanguage-link-target" href="/wiki/%D0%9A%D1%83%D0%BB%D0%BE%D2%B3" hreflang="tg" lang="tg" title="Кулоҳ – 타지크어">
         Тоҷикӣ[mkey1]<li>[linkx]</li>[ahref]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        </a>
       </li>
       <li class="interlanguage-link interwiki-th">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-tl">
        <a class="interlanguage-link-target" href="/wiki/Sumbrero" hreflang="tl" lang="tl" title="Sumbrero – 타갈로그어">
         Tagalog
        </a>
       </li>
       <li class="interlanguage-link interwiki-tr">
        <a class="interlanguage-link-target" href="/wiki/%C5%9Eapka" hreflang="tr" lang="tr" title="Şapka – 터키어">
         Türkçe
        </a>
       </li>
       <li class="interlanguage-link interwiki-uk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-vec">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-vi">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-wa">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-wuu">
        <a class="interlanguage-link-target" href="/wiki/%E5%B8%BD%E5%AD%90" hreflang="wuu" lang="wuu" title="帽子 – 우어">
         吴语
        </a>
       </li>
       <li class="interlanguage-link interwiki-yi">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-zh">
        <a class="interlanguage-link-target" href="/wiki/%E5%B8%BD%E5%AD%90" hreflang="zh" lang="zh" title="帽子 – 중국어">
         中文
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh-min-nan">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-zh-yue">
        [linkx]
        
       </li>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-edit wb-langlinks-link">
        <a class="wbc-editpage" href="/wiki/Special:EntityPage/Q80151#sitelinks-wikipedia" title="언어 인터위키 링크 편집">
         링크 편집
        </a>
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 12월 3일 (월) 01:42에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     [ahref]
     
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     <a href="/wiki/Terms_of_Use/ko">
      이용 약관
     </a>
     을 참고하십시오.
     <br/>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     [ahref]
      [ahref]<li>[linkx]</li>[linkx]<li>[pkeyx]</li><li>[pkeyx]</li>
     
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [linkx]
     
    </li>
    <li id="footer-places-about">
     [ahref]
     
    </li>
    <li id="footer-places-disclaimer">
     <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%A9%B4%EC%B1%85_%EC%A1%B0%ED%95%AD" title="위키백과:면책 조항">
      면책 조항
     </a>
    </li>
    <li id="footer-places-developers">
     [linkx]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     <a class="noprint stopMobileRedirectToggle" href="/w/index.php?title=%EB%AA%A8%EC%9E%90&amp;mobileaction=toggle_view_mobile">
      모바일 보기
     </a>
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0121
  </b>
 </body>
</html>
|<---