--->|<!DOCTYPE html>
<html lang="ko">
 <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
  <meta charset="utf-8"/>
  <meta content="text/html" http-equiv="Content-Type"/>
  <meta content="IE=Edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="Star, 스타" name="classification"/>
  <meta content="article" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="https://img.insight.co.kr/static/2019/06/30/1200/1t43kdep429p8683w148.jpg" property="og:image"/>
  <meta content="1100" property="og:image:width"/>
  <meta content="619" property="og:image:height"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="ko_KR" property="og:locale"/>
  <meta content="374726359324617,521806404635683" property="fb:pages"/>
  <meta content="845242515523569" property="fb:app_id"/>
  <meta content="100006164349856" property="fb:admins"/>
  <meta content="https://www.facebook.com/insight.co.kr" property="article:author"/>
  <meta content="https://www.facebook.com/insight.co.kr" property="article:publisher"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" itemprop="name"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" itemprop="description"/>
  <meta content="https://img.insight.co.kr/static/2019/06/30/1200/1t43kdep429p8683w148.jpg" itemprop="image"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" itemprop="url"/>
  <meta content="2019-06-30T11:34:28+09:00" itemprop="datePublished"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="@insight_co_kr" name="twitter:site"/>
  <meta content="@insight_co_kr" name="twitter:creator"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
  <meta content="https://img.insight.co.kr/static/2019/06/30/1200/1t43kdep429p8683w148.jpg" name="twitter:image"/>
  <meta content="https://img.insight.co.kr/static/2019/06/30/1200/1t43kdep429p8683w148.jpg" name="thumbnail"/>
  <meta content="hVCYGo__9qGqCzmg5yOL-mYEY76zVTRmZmJNyi8NSvA" name="google-site-verification"/>
  <meta content="cBoYKiEl_hxXNQ9Kl84fZHKkTS7gehw2X0xatUnXYz4" name="google-site-verification"/>
  <meta content="6b894f22dc010128144eb73b7cf8361ccb534e5f" name="naver-site-verification"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <noscript>
  </noscript>
 </head>
 <body class="newsRead ">
  <div class="g-menu">
   <div class="g-menu-wrap">
    <div class="g-menu-open">
     <ul>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       <a href="/issue/">
        이슈
       </a>
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <li>[keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[linkx]</li>[keywordx]
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [linkx]
       
       <ul class="g-menu-sub">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [linkx]
       
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       <a href="/industry/">
        산업
       </a>
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="/section/mobile-communication">
          모바일·통신
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [pkeyx][keywordx][mkey1][keywordx][linkx][keywordx][ahref][keywordx][ahref][ahref][mkey1][mkey1][ahref][mkey1][pkeyx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1]
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]
        </li>
        <li>
         <[keywordx]>
         </[keywordx]>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [linkx]
       
       <ul class="g-menu-sub">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li class="g-menu-line">
       <span class="g-menu-bLine">
        [linkx]<li>[pkeyx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx]</li>
       </span>
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub" style="top: -130px;">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li>
       [linkx]
       
       <ul class="g-menu-sub" style="top: -130px;">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[mkey1]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li class="g-menu-only">
       [linkx]
       
      </li>
      <li class="g-menu-only">
       [pkeyx][ahref][linkx][keywordx][ahref][keywordx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][mkey1][pkeyx][ahref][linkx][keywordx][pkeyx][ahref][pkeyx][mkey1]
      </li>
      <li>
       [ahref]
       
       <ul class="g-menu-sub">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
      <li class="g-menu-only">
       [linkx]
       
      </li>
      <li>
       [linkx]
       
       <ul class="g-menu-sub bot" style="top: -150px;">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <span class="g-menu-rLine">
       </span>
      </li>
     </ul>
     <div class="g-menu-open-overlay">
     </div>
    </div>
    <div class="g-menu-close">
     <div class="g-menu-close-btn">
      <span class="g-menu-close-hamburger">
      </span>
     </div>
    </div>
   </div>
  </div>
  <div class="header">
   <div class="header-wrap">
    <div class="header-logo-container">
     [ahref]
     
    </div>
    <div class="header-navigation">
     [ahref]
     
    </div>
    <div class="header-social">
     <div class="header-social-wrap">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <li>[keywordx]</li><li>[keywordx]</li>[ahref]
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div class="nav">
   <div class="nav-wrap">
    <div class="nav-btn">
     <span class="nav-hamburger">
     </span>
    </div>
    [ahref]
    
    <span class="nav-title">
     "꼬맹이 안아주는데 설렌다"···'예비 딸바보' 예약한 방탄 진 연기 영상
    </span>
    <div class="nav-share">
     <div class="nav-share-wrap">
      [linkx]
      
      [ahref]
      
      [ahref]
      
      [ahref]
      
     </div>
    </div>
    <ul class="nav-ul">
     <li>
      [ahref]
      
     </li>
     <li>
      <li>[ahref]</li>[linkx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[pkeyx]
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <div class="nav-search">
     <span>
     </span>
     <div class="nav-search-form">
      <form accept-charset="utf-8" action="/search/" method="get" name="searchForm">
       <label>
       </label>
      </form>
     </div>
    </div>
   </div>
  </div>
  <div class="content">
   <div class="content-wrap">
    <div class="news-container">
     <div class="news-header">
      <h1>
       <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h1>
     </div>
     <div class="news-byline">
      <span class="news-byline-writer">
       디지털뉴스팀
      </span>
      <ul class="news-option-font">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
      <span class="news-byline-date">
       <em class="news-byline-date-send">
        입력 : 2019.06.30 11:34
       </em>
      </span>
     </div>
     <div class="news-wrap">
      <div class="ad-google-side1">
       <div class="ad-google-left" style="height: 600px">
        <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="7775330664" style="display:inline-block;width:160px;height:600px">
        </ins>
       </div>
       <div class="ad-daum-left">
        <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="3360317201" style="display:inline-block;width:160px;height:600px;margin-top: 10px">
        </ins>
       </div>
      </div>
      <div class="fixed-share">
       <div class="fixed-share-wrap">
        [linkx]
        
        [ahref]
        
        [ahref]
        
        [ahref]
        
       </div>
      </div>
      <div class="ad-google-side2">
       [pkeyx][mkey1][pkeyx][linkx][ahref][ahref][pkeyx][keywordx]
      </div>
      <div class="news-article">
       <div class="news-article-memo">
        <p>
         <span class="caption cp-image" style="display:block;font-size:12px;line-height:1;color:#333;">
          'BTS월드'
         </span>
        </p>
        <p>
         <br/>
        </p>
        <p>
         [인사이트] 디지털뉴스팀 = 방탄소년단 진이 로맨틱코미디 속 실장님 비주얼로 연기력을 폭발했다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         지난 26일 출시된 게임 'BTS월드'는 방탄소년단의 매니저가 돼 이들을 성장시키는 스토리텔링형 육성 게임이다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         게임에서 멤버들은 드라마 속 주인공처럼 자신의 스토리를 직접 연기한다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         진은 호텔리어로 변신해 빛나는 비주얼과 연기력을 과시했다.
        </p>
        <p>
         <br>
          [mkey1][pkeyx]<li>[keywordx]</li><li>[pkeyx]</li><li>[linkx]</li>
         </br>
        </p>
        <p>
         <iframe allowfullscreen="" class="giphy-embed" frameborder="0" height="100%" src="https://giphy.com/embed/WV36FZxfwQMiCqQLCp" width="100%">
         </iframe>
         <span class="caption cp-embed" style="display:block; font-size:12px; line-height:1; color:#333;">
          'BTS월드'
         </span>
        </p>
        <p>
         <br/>
        </p>
        <p>
         극중 꼬마 진상 고객을 만난 진은 '쭈굴미'를 보이면서도 훈훈한 미모를 과시했다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         자신의 고객인 아이가 없어지자 해변을 돌아다니며 아이를 찾는 진의 비주얼은 멜로드라마 분위기를 뽐냈다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         아이와 놀아주는 장면에서 진은 아이와 훈훈한 케미스트리를 보이기도 했다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         실제로 연극영화과 출신이기도 한 진은 게임에서 전혀 어색하지 않은 연기력을 보였다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         진의 자연스러운 연기에 팬들은 "로맨스 드라마 한 편만 찍어줬으면 좋겠다"며 열광했다.
        </p>
        <p>
         <br/>
        </p>
        <p>
         <iframe allowfullscreen="" class="giphy-embed" frameborder="0" height="100%" src="https://giphy.com/embed/TkDDO1zgElbH5xIgQM" width="100%">
         </iframe>
        </p>
        <p>
         <br/>
        </p>
        <p>
         <iframe allowfullscreen="" class="giphy-embed" frameborder="0" height="100%" src="https://giphy.com/embed/dyLlAy95RBi3r0ClHo" width="100%">
         </iframe>
        </p>
        <p>
         <br/>
        </p>
        <p>
         <iframe allowfullscreen="" class="giphy-embed" frameborder="0" height="100%" src="https://giphy.com/embed/JULpU25LBMqZEi5E45" width="100%">
         </iframe>
        </p>
        <p>
         <br/>
        </p>
        <p>
        </p>
        <p>
         <br/>
        </p>
        <p>
        </p>
        <p>
         <br/>
        </p>
        <p>
         <span class="caption cp-image" style="display:block;font-size:12px;line-height:1;color:#333;">
          'BTS월드'
         </span>
        </p>
        <p>
         <br/>
        </p>
        <p>
        </p>
        <p>
         <br/>
        </p>
        <p>
         <span class="caption cp-image" style="display:block;font-size:12px;line-height:1;color:#333;">
          YouTube 'BTS WORLD Official'
         </span>
        </p>
        <p>
         <br/>
        </p>
        <p>
         <iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="100%" src="https://www.youtube.com/embed/4gdQPPMSKwQ" width="100%">
         </iframe>
         <span class="caption cp-embed" style="display:block; font-size:12px; line-height:1; color:#333;">
          YouTube 'BTS WORLD Official'
         </span>
        </p>
       </div>
       <div class="news-article-copyright" style="margin-top: 30px;">
        <span>
         [저작권자 ⓒ인사이트, 무단전재 및 재배포 금지]
        </span>
       </div>
       <div class="news-article-more">
        <ul>
         <li>
          <div class="news-article-more-wrap">
           [linkx][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][keywordx][linkx][pkeyx][ahref][mkey1][linkx][mkey1][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][ahref][mkey1][linkx][mkey1][pkeyx][keywordx]
          </div>
          <span class="news-article-more-summary">
           넷마블과 방탄소년단이 콜라보한 게임 'BTS월드'가 출시 하루 만에 33개국 앱스토어 인기 게임 1위에 이름을 올렸다.
          </span>
         </li>
         <li>
          <div class="news-article-more-wrap">
           [linkx]
           
           [linkx]
           
          </div>
          <span class="news-article-more-summary">
           이탈리아의 한 뉴스 방송에서 '버닝썬 사건'을 보도하던 중, 사건과는 무관한 방탄소년단의 사진을 사용하는 실수를 범했다.
          </span>
         </li>
         <li>
          <div class="news-article-more-wrap">
           [linkx]
           
           [ahref]
           
          </div>
          <span class="news-article-more-summary">
           휴가지에서 낮만큼이나 뜨거운 밤을 보낼 이들을 위해 올바른 피임법 5가지를 소개한다.
          </span>
         </li>
        </ul>
       </div>
       <div class="news-article-taboola" style="padding: 0;">
        <div id="taboola-below-article-thumbnails">
        </div>
       </div>
      </div>
      <div class="aside">
       <div class="aside-sticky">
        <div class="aside-google-300">
         <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="4986076269" style="display:inline-block;width:300px;height:250px">
         </ins>
        </div>
        <div class="aside-popular">
         [linkx]
         
         <ul class="aside-popular-wrap">
          <li>
           [ahref]
           
           [ahref]
           
          </li>
          <li>
           [linkx]
           
           [linkx]
           
          </li>
          <li>
           [ahref]
           
           [linkx]
           
          </li>
          <li>
           <div style="display: block;width: 300px;height: 250px;">
            <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="2449919934" style="display:inline-block;width:300px;height:250px">
            </ins>
           </div>
          </li>
          <li>
           [ahref]
           
           [linkx]
           
          </li>
          <li>
           [linkx]
           
           [linkx]
            <li>[linkx]</li><li>[mkey1]</li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
           
          </li>
          <li>
           [linkx]
           
           [linkx]
           
          </li>
          <li>
           <div style="display: block;width: 300px;height: 250px;">
            <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="2449919934" style="display:inline-block;width:300px;height:250px">
            </ins>
           </div>
          </li>
          <li>
           [ahref]
           
           [linkx]
           
          </li>
          <li>
           [ahref]
           
           [linkx]
           
          </li>
          <li>
           [ahref]
           
           [linkx]
           
          </li>
          <li>
           <div style="display: block;width: 300px;height: 250px;">
            <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="2449919934" style="display:inline-block;width:300px;height:250px">
            </ins>
           </div>
          </li>
         </ul>
         <div class="aside-popular-more">
          [linkx]
          
          <ul>
           <li>
            <div>
             [ahref]
             
             [ahref]
             
            </div>
           </li>
           <li>
            <div>
             [linkx]
             
             [ahref]
             
            </div>
           </li>
           <li>
            <div>
             [ahref]
             
             [linkx]
             
            </div>
           </li>
           <li>
            <div>
             [linkx]
             
             [linkx]
             
            </div>
           </li>
           <li>
            <div>
             [ahref]
             
             [linkx]
             
            </div>
           </li>
           <li>
            <div>
             [ahref]
             
             [linkx]
             
            </div>
           </li>
           <li>
            <div>
             [linkx]
             
             [ahref]
             
            </div>
           </li>
           <li>
            <div>
             [ahref]
             
             [ahref]
             
            </div>
           </li>
           <li>
            <div>
             [ahref]
             
             [ahref]
             
            </div>
           </li>
           <li>
            <div>
             [linkx]
             
             [ahref]
             
            </div>
           </li>
           <li>
            <div>
             [linkx]
             
             [linkx]
             
            </div>
           </li>
           <li>
            <div>
             [linkx]
             
             [linkx]
             
            </div>
           </li>
          </ul>
         </div>
        </div>
        <div style="display: block;width: 300px;height: 250px;">
         <ins class="adsbygoogle" data-ad-client="ca-pub-7850554504053194" data-ad-slot="2449919934" style="display:inline-block;width:300px;height:250px">
         </ins>
        </div>
        <div class="aside-contact">
         <div class="aside-contact-header">
          <span>
           기사제보
          </span>
         </div>
         <div class="aside-contact-body">
          <div class="aside-contact-body-text">
           <p>
            여러분의 제보가 세상을 바꿀 수 있습니다.
           </p>
           <p>
            세상을 건강하게 변화시키는 인사이트의 수많은
           </p>
           <p>
            기사들은 여러분의 제보로부터 시작됩니다.
           </p>
          </div>
          <div class="aside-contact-body-item">
           <ul>
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
            <li>
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="news-comment">
   <div class="news-comment-header">
    <span class="news-comment-header-title">
     댓글
    </span>
    [ahref]
    
   </div>
   <div class="news-comment-like">
    <div class="fb-like" data-action="like" data-href="https://www.insight.co.kr/news/234627" data-layout="standard" data-share="false" data-show-faces="false" data-width="480">
    </div>
   </div>
   <div class="news-comment-container">
    <li>[pkeyx]</li>[keywordx][pkeyx][mkey1]
   </div>
  </div>
  <div class="news-top">
   [linkx]
   
  </div>
  <div class="footer">
   <div class="footer-wrap">
    [ahref]
    
    <div class="footer-container" style="width: auto">
     <ul class="footer-ul">
      <h2>
       [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="footer-item" href="/contact/?g_page=ethics" style="color: #333;" title="윤리강령">
        윤리강령
       </a>
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       <li>[keywordx]</li><li>[linkx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
        [keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][ahref][linkx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][keywordx][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][pkeyx][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][linkx][ahref][keywordx][ahref][ahref][ahref]
       
      </li>
     </ul>
     <span class="footer-address" style="color: #333;">
      서울특별시 강남구 논현로99길 23, 인사이트빌딩 | 등록번호: 서울 아 02953 | 등록일자: 2014 년 01 월 02 일 | 발행・편집인: 안길수
     </span>
     <span style="display: block;margin-top: 5px;font-size: 1.2rem;color: #333;">
      인사이트의 모든 콘텐츠(기사·사진)는 저작권법의 보호를 받은 바, 무단 전재, 복사, 배포 등을 금합니다. 이를 어길 시 법적 제재를 받을 수 있습니다.
     </span>
     <ul class="footer-ul" style="margin-top: 10px;">
      <li>
       <span class="footer-copyright" style="color: #333;">
        Copyright ⓒ
        <em>
         인사이트
        </em>
        , Ltd. All Rights Reserved.
       </span>
      </li>
      <li>
       <span class="footer-internet" style="margin-top: 0;background: #999;color: #fff;font-size: 1.2rem;">
        인터넷신문위원회 윤리강령을 준수합니다.
       </span>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0086
  </b>
 </body>
</html>
|<---