--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Apple_blossoms.jpg/1200px-Apple_blossoms.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-사과나무 rootpage-사과나무 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [linkx]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키낱말사전, 말과 글의 누리
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [ahref]
    
    [linkx]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <h2>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <table cellpadding="0" cellspacing="8" style="clear: both; float: right; border: 1px solid #C0C0C0; margin-left: 1em; margin-bottom: .5em; background-color: #FAFAFA;" width="360px">
       <tbody>
        <tr>
         <td style="border: 1px solid #DFDFDF; text-align: center; width: 180px; height: 120px; background-color: #FDFDFD;">
          [linkx]
          
         </td>
         <td style="border: 1px solid #DFDFDF; text-align: center; width: 180px; height: 120px; background-color: #FDFDFD;">
          [linkx]
          
         </td>
        </tr>
        <tr>
         <td style="background-color: #F3F3F3;">
          사과나무 꽃
         </td>
         <td style="background-color: #F3F3F3;">
          사과 나무
         </td>
        </tr>
       </tbody>
      </table>
      <ul>
       <li>
        어원:
        <a href="/wiki/%EC%82%AC%EA%B3%BC" title="사과">
         사과
        </a>
        (한자
        [ahref]
        
        ) +
        [linkx]
         <li>[area1][keywordx]</li><li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]<li>[ahref]</li>
        
       </li>
      </ul>
      <dl>
       <dd>
        <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
         <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EA%B5%AD%EC%A0%9C_%EC%9D%8C%EC%84%B1_%EA%B8%B0%ED%98%B8" title="위키낱말사전:국제 음성 기호">
          <span style="color: #8F390A">
           IPA
          </span>
         </a>
        </span>
        <span style="color: #000; font-size: 100%;">
         <span class="IPA">
          [linkx]
          
         </span>
        </span>
       </dd>
      </dl>
      <dd>
       <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
        발음
       </span>
       [
       <span style="font-size:110%">
        사
       </span>
       <span style="font-size:110%">
        과
       </span>
       <span style="font-size:110%">
        나
       </span>
       <span style="font-size:110%">
        무[linkx][linkx][area1][keywordx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][ahref][area1][mkey1][ahref][area1][mkey1][area1][keywordx][pkeyx][area1][mkey1]
       </span>
       ]
      </dd>
      <table style="margin: 0 1em .5em 1.6em;">
       <tbody>
        <tr>
         <td>
          <table cellpadding="1" style="border: 1px solid #DFDFDF; line-height: 9pt; padding: .1em .3em .1em .3em">
           <tbody>
            <tr>
             <td id="subheadline" style="padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               <a class="mw-redirect" href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%A1%9C%EB%A7%88%EC%9E%90_%ED%91%9C%EA%B8%B0%EB%B2%95/%ED%95%9C%EA%B8%80" title="위키낱말사전:로마자 표기법/한글">
                국어의 로마자 표기
               </a>
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               Revised Romanization
              </span>
             </td>
             <td class="IPA" id="subheadline" style="padding: .1em .5em; font-size: 100%;">
              sagwanamu
             </td>
            </tr>
            <tr>
             <td id="subheadline" style="border-bottom: 1px solid #FFF; padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [linkx]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               McCune-Reischauer
              </span>
             </td>
             <td class="IPA" id="subheadline" style="border-bottom: 1px solid #FFF; padding: .1em .5em; font-size: 100%;">
              sagwanamu[pkeyx][area1][keywordx][area1][keywordx][ahref][area1][mkey1][area1][mkey1][pkeyx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </td>
            </tr>
            <tr>
             <td id="subheadline" style="padding: .4em .5em .2em .5em; font-size: 100%;">
              <b>
               [linkx]
               
              </b>
              <br/>
              <span style="padding-left: .3em; font-size: 8pt; font-family: DejaVu Sans; color: #555;">
               Yale Romanization
              </span>
             </td>
             <td class="IPA" id="subheadline" style="padding: .1em .5em; font-size: 100%;">
              sakwanamu
             </td>
            </tr>
            <tr class="mw-empty-elt">
            </tr>
           </tbody>
          </table>
         </td>
        </tr>
       </tbody>
      </table>
      <ul>
       [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][pkeyx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][mkey1][linkx][linkx][pkeyx][area1][keywordx][linkx][ahref][pkeyx][area1][mkey1][linkx]
      </ul>
      <dl>
       <dd>
        <ul>
         <li>
          사과나무는 흔히 재배 식물의 대표적인 한 예로 손꼽힌다.
         </li>
         <li>
          사과나무의 꽃이 곱기도 하구나.
         </li>
         <li>
          참조:
          [linkx]
          
         </li>
        </ul>
       </dd>
      </dl>
      <div class="NavFrame" style="clear: both; margin: .5em 0 1em 2em;">
       <div class="NavHead" style="border-bottom: 1.2px solid #c0c0c0; text-align: left; line-height: 18pt; background-color: transparent; font-size: 100%;">
        <b>
         번역
        </b>
       </div>
       <div class="NavContent">
        <table border="0" style="padding: 3px; background-color: #f5f5f5;" width="100%">
         <tbody>
          <tr>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              갈로어(roa-gal):
              [linkx]
              
              (남성)
             </li>
             <li>
              고대동슬라브어(orv):
              [ahref]
              
             </li>
             <li>
              고대영어(ang):
              <a class="new" href="/w/index.php?title=%C3%A6ppel&amp;action=edit&amp;redlink=1" title="æppel (없는 문서)">
               æppel
              </a>
              ,
              [linkx]
              
             </li>
             <li>
              그리스어(el):
              [linkx]
              
              (miliá) (여성)
             </li>
             <li>
              네덜란드어(nl):
              [ahref]
              
              (남성),
              [ahref]
              
              (남성)
             </li>
             <li>
              노르웨이어(no):
              [linkx]
              
             </li>
             <li>
              노비알(nov):
              [ahref]
              
             </li>
             <li>
              덴마크어(da):
              [ahref]
              
             </li>
             <li>
              독일어(de):
              [linkx]
              
              (남성)
             </li>
             <li>
              <li>[pkeyx]</li><li>[pkeyx]</li>[ahref]
             </li>
             <li>
              [linkx][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][pkeyx][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][area1][mkey1][area1][mkey1][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
             </li>
             <li>
              러시아어(ru):
              [ahref]
              
              (jáblonja) (여성)
             </li>
             <li>
              <li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>
             </li>
             <li>
              루마니아어(ro):
              [ahref]
              
              (남성)
             </li>
             <li>
              리투아니아어(lt):
              [ahref]
              
              (여성)
             </li>
             <li>
              링구아프랑카노바(lfn):
              [ahref]
              
             </li>
             <li>
              마케도니아어(mk):
              <a class="new" href="/w/index.php?title=%D1%98%D0%B0%D0%B1%D0%BE%D0%BB%D0%BA%D0%BD%D0%B8%D1%86%D0%B0&amp;action=edit&amp;redlink=1" title="јаболкница (없는 문서)">
               јаболкница
              </a>
              (jabólknica) (여성)
             </li>
             <li>
              몽골어(mn):
             </li>
             <li>
              바스크어(eu):
              [linkx]
              
             </li>
             <li>
              베트남어(vi):
              [ahref]
              
             </li>
             <li>
              보스니아어(bs):
              [ahref]
              
              (여성)
             </li>
             <li>
              불가리아어(bg):
              [ahref]
              
              (jabǎlka) (여성)
             </li>
             <li>
              브레통어(br):
             </li>
             <li>
              세르비아어(sr):
              [linkx]
              
              (키릴)/
              [ahref]
              
              (라틴) (여성),
              [linkx]
              
              (중성)
             </li>
             <li>
              스웨덴어(sv):
              [ahref]
              
              (중성)
             </li>
             <li>
              슬로바키아어(sk):
              [ahref]
              
              (여성)
             </li>
             <li>
              슬로베니아어(sl):
              [ahref]
              
              (여성)
             </li>
             <li>
              아랍어(ar):
              <a class="new" href="/w/index.php?title=%D8%B4%D8%AC%D8%B1%D8%A9_%D8%A7%D9%84%D8%AA%D9%81%D8%A7%D8%AD&amp;action=edit&amp;redlink=1" title="شجرة التفاح (없는 문서)">
               شجرة التفاح
              </a>
              (šájarat it-tuffāħ)
             </li>
             <li>
              아르메니아어(hy):
              [linkx]
              
              (xnjoreni)
             </li>
             <li>
              아이슬란드어(is):
              <a class="new" href="/w/index.php?title=eplatr%C3%A9&amp;action=edit&amp;redlink=1" title="eplatré (없는 문서)">
               eplatré
              </a>
              (중성)
             </li>
             <li>
              아일랜드어(ga):
              [ahref]
              
              (여성),
              <a class="new" href="/w/index.php?title=crann_%C3%BAll&amp;action=edit&amp;redlink=1" title="crann úll (없는 문서)">
               crann úll
              </a>
              (남성)
             </li>
            </ul>
           </td>
           <td style="width:1%;" valign="top">
           </td>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              에르자어(myv):
              [linkx]
              
              (umarina)
             </li>
             <li>
              에스토니아어(et):
              [linkx]
              
             </li>
             <li>
              스페인어(es):
              [ahref]
              
              (남성)
             </li>
             <li>
              에스페란토(eo):
              [ahref]
              
              ,
              [ahref]
              
             </li>
             <li>
              영어(en):
              <a href="/wiki/apple" title="apple">
               apple
              </a>
              [linkx]
              
             </li>
             <li>
              오세티야어(os):
              <a class="new" href="/w/index.php?title=%D1%84%C3%A6%D1%82%D0%BA%D1%8A%D1%83%D1%8B%D0%B1%C3%A6%D0%BB%D0%B0%D1%81&amp;action=edit&amp;redlink=1" title="фæткъуыбæлас (없는 문서)">
               фæткъуыбæлас
              </a>
             </li>
             <li>
              우크라이나어(uk):
              [linkx]
              
              (jablunja) (여성)
             </li>
             <li>
              웨일스어(cy):
              [ahref]
              
              , (문어);
              <a class="new" href="/w/index.php?title=afallen&amp;action=edit&amp;redlink=1" title="afallen (없는 문서)">
               afallen
              </a>
             </li>
             <li>
              이도(io):
             </li>
             <li>
              이디시어(yi):
              [ahref]
              
              (eplboym) (남성)
             </li>
             <li>
              이탈리아어(it):
              [ahref]
              
              (남성)
             </li>
             <li>
              인도네시아어(id):
             </li>
             <li>
              인터링구아(ia):
             </li>
             <li>
              일본어(ja):
              <span class="lang-ja" lang="ja">
               <a class="new" href="/w/index.php?title=%E6%9E%97%E6%AA%8E%E3%81%AE%E6%9C%A8&amp;action=edit&amp;redlink=1" title="林檎の木 (없는 문서)">
                林檎の木
               </a>
               (
               [linkx]
               
               )
              </span>
              (ringonoki)
             </li>
             <li>
              중국어(zh):
              <a class="new" href="/w/index.php?title=%E8%8B%B9%E6%9E%9C%E6%A0%91&amp;action=edit&amp;redlink=1" title="苹果树 (없는 문서)">
               苹果树
              </a>
              (píngguǒshù)
             </li>
             <li>
              체코어(cs):
              [linkx]
              
              (여성)
             </li>
             <li>
              카탈루냐어(ca):
              <a class="new" href="/w/index.php?title=pomer&amp;action=edit&amp;redlink=1" title="pomer (없는 문서)">
               pomer
              </a>
              (남성),
              [linkx]
              
              (여성)
             </li>
             <li>
              크로아티아어(hr):
              [linkx]
              
             </li>
             <li>
              [pkeyx][linkx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][ahref][pkeyx][ahref][area1][keywordx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
             </li>
             <li>
              포르투갈어(pt):
              <a class="new" href="/w/index.php?title=macieira&amp;action=edit&amp;redlink=1" title="macieira (없는 문서)">
               macieira
              </a>
              (여성)
             </li>
             <li>
              폴란드어(pl):
              [ahref]
              
              (여성)
             </li>
             <li>
              프랑스어(fr):
              [ahref]
              
              (남성)
             </li>
             <li>
              핀란드어(fi):
              [ahref]
              
             </li>
             <li>
              헝가리어(hu):
              <a class="new" href="/w/index.php?title=almafa&amp;action=edit&amp;redlink=1" title="almafa (없는 문서)">
               almafa
              </a>
             </li>
             <li>
              히브리어(he):
              <a href="/wiki/%D7%AA%D7%A4%D7%95%D7%97" title="תפוח">
               תפוח
              </a>
              (tapúkh)
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [linkx]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        <li>[linkx]</li>[linkx]<li>[area1][mkey1]</li>[pkeyx]
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1]<li>[pkeyx]</li><li>[area1][mkey1]</li><li>[area1][mkey1]</li>
     </h3>
     <ul>
      <li>[area1][keywordx]</li><li>[linkx]</li>[linkx][pkeyx]
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         <a accesskey="c" href="/wiki/%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4" title="본문 보기 [c]">
          문서
         </a>
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         [linkx]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         <a href="/wiki/%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4">
          읽기
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         <a accesskey="h" href="/w/index.php?title=%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4&amp;action=history" title="문서의 과거 판 [h]">
          역사 보기
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [linkx]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        <a accesskey="z" href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EB%8C%80%EB%AC%B8" title="대문으로 가기 [z]">
         대문
        </a>
       </li>
       <li id="n-bulletinboard">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EC%9E%90%EC%9C%A0%EA%B2%8C%EC%8B%9C%ED%8C%90" title="자유게시판">
         자유게시판[pkeyx][pkeyx]<li>[linkx]</li>
        </a>
       </li>
       <li id="n-helpdesk">
        [ahref]
        
       </li>
       <li id="n-recentchanges">
        <a accesskey="r" href="/wiki/%ED%8A%B9%EC%88%98:%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C" title="위키의 최근 바뀐 목록 [r]">
         최근 바뀜
        </a>
       </li>
       <li id="n-randompage">
        <a accesskey="x" href="/wiki/%ED%8A%B9%EC%88%98:%EC%9E%84%EC%9D%98%EB%AC%B8%EC%84%9C" title="임의 문서 불러오기 [x]">
         임의 문서로
        </a>
       </li>
       <li id="n-editroom">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%ED%8E%B8%EC%A7%91%EC%8B%A4" title="낱말 편집을 위한 도움말">
         편집실
        </a>
       </li>
       <li id="n-createpage">
        [linkx]
        
       </li>
       <li id="n-help">
        [ahref]
        
       </li>
       <li id="n-sitesupport">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [linkx]
        
       </li>
       <li id="coll-download-as-rl">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:ElectronPdf&amp;page=%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4&amp;action=show-download-screen">
         PDF로 다운로드
        </a>
       </li>
       <li id="t-print">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        [linkx]
        
       </li>
       <li id="t-upload">
        [linkx]
        
       </li>
       <li id="t-specialpages">
        [linkx]
        
       </li>
       <li id="t-permalink">
        [ahref]
        
       </li>
       <li id="t-info">
        [linkx]
        
       </li>
       <li id="t-cite">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-cs">
        [linkx]
         [area1][mkey1]<li>[area1][mkey1]</li><li>[pkeyx]</li>
        
       </li>
       <li class="interlanguage-link interwiki-de">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-fr">
        <a class="interlanguage-link-target" href="/wiki/%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4" hreflang="fr" lang="fr" title="사과나무 – 프랑스어">
         Français
        </a>
       </li>
       <li class="interlanguage-link interwiki-hu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-li">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lt">
        <[area1][keywordx]>
         [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>
        </[area1][keywordx]>
       </li>
       <li class="interlanguage-link interwiki-lv">
        <a class="interlanguage-link-target" href="/wiki/%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4" hreflang="lv" lang="lv" title="사과나무 – 라트비아어">
         Latviešu
        </a>
       </li>
       <li class="interlanguage-link interwiki-mg">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-sk">
        <a class="interlanguage-link-target" href="/wiki/%EC%82%AC%EA%B3%BC%EB%82%98%EB%AC%B4" hreflang="sk" lang="sk" title="사과나무 – 슬로바키아어">
         Slovenčina
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 7월 10일 (화) 15:24에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     내용은
     <a href="/licenses/by-sa/3.0/deed.ko">
      크리에이티브 커먼즈 저작자표시-동일조건변경허락 라이선스
     </a>
     에 따라 사용할 수 있으며
추가적인 조건이 적용될 수 있습니다.
자세한 내용은
     [ahref]
     
     을 참조하십시오.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [ahref]
     
    </li>
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     [linkx]
     
    </li>
    <li id="footer-places-developers">
     [ahref]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
      <li>[area1][keywordx]</li><li>[linkx]</li>[ahref]<li>[ahref]</li>
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0519
  </b>
 </body>
</html>
|<---