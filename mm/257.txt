--->|<!DOCTYPE HTML>
<html lang="ko">
 <head itemscope="">
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi" name="viewport">
  </meta>
 </head>
 <body class="renewal2015 view2016">
  <div class="sub-wrap gnb-news-00" id="wrap">
   <span class="skip-link">
    <a href="t">
     본문 바로가기
    </a>
    <a href="h">
     검색 바로가기
    </a>
    [ahref]
    
   </span>
   <div class="header hdr2015" id="header">
    <div class="link-wrap">
     <strong class="logo-yna">
      [linkx]
      
     </strong>
     <div class="lang-wrap">
      <span class="hidden-obj">
       연합뉴스 다국어사이트 바로가기
      </span>
      <ul class="lang-site">
       <li class="en">
        [linkx]
        
       </li>
       <li class="zh">
        [linkx]
        
       </li>
       <li class="jp">
        <a data-stat-code="header_lang_jp" data-stat-section="" href="/" title="(새창)Japanese">
         日本語
        </a>
       </li>
       <li class="ar">
        [ahref]
        
       </li>
       <li class="sp">
        <a data-stat-code="header_lang_sp" data-stat-section="" href="/" title="(새창)Spanish">
         Español
        </a>
       </li>
       <li class="fr">
        [linkx]
        
       </li>
      </ul>
      <span class="bar">
       [ahref]
       
      </span>
      <span class="bar">
       <a data-stat-code="header_pd" data-stat-section="" href="/product/premium">
        상품소개
       </a>
      </span>
     </div>
     <div class="agency-svc agency-svc02">
      <dl class="svc-zone">
       <dt class="hidden-obj">
        연합뉴스 자회사 서비스 바로가기
       </dt>
       <dd>
        [linkx]
        
       </dd>
       <dd class="bar">
        <a data-stat-code="header_svc_mds" data-stat-section="" href="m" rel="nofollow" target="_blank" title="새창">
         MIDAS
        </a>
       </dd>
       <dd>
        [linkx]
        
       </dd>
       <dd>
        [ahref]
        
       </dd>
      </dl>
      <div class="account-zone">
       <div class="acc-active">
        [linkx]
        
       </div>
       <div class="acc-disable">
        [ahref]
        
        <a href="/member/update" rel="nofollow">
         정보수정
        </a>
       </div>
      </div>
      <dl class="sns-zone">
       <dt class="hidden-obj">
        연합뉴스 SNS 계정 바로가기
       </dt>
       <dd class="fb">
        [ahref]
        
       </dd>
       <dd class="tw">
        <a data-stat-code="header_sns_tw" data-stat-section="" href="/yonhaptweet" rel="nofollow" target="_blank" title="새창">
         트위터
        </a>
       </dd>
       <dd class="insta">
        [linkx]
        
       </dd>
       <dd class="kks">
        <a data-stat-code="header_sns_kks" data-stat-section="" href="/ch/yonhapmedia" rel="nofollow" target="_blank" title="새창">
         카카오스토리
        </a>
       </dd>
      </dl>
     </div>
     <div class="top-banner">
      <span class="blind">
       배너
      </span>
      <ul>
       <li class="top-banner1 ads-top01">
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
       </li>
       <li class="top-banner2 ads-top02">
       </li>
      </ul>
     </div>
     <div class="today today-weather">
      <span class="blind">
       날짜와 날씨
      </span>
      <span class="date" id="tickerWeatherDate">
       <strong>
       </strong>
       <em>
       </em>
      </span>
      <div class="weather main-top-weather" id="tickerWeather">
       <a data-stat-code="header_weather" data-stat-section="" href="/weather/index">
        <ul>
        </ul>
       </a>
      </div>
     </div>
    </div>
    <div class="navi-wrap">
     <div class="nav-zone" id="nav">
      <span class="hidden-obj">
       메뉴
      </span>
      <p class="home">
       [linkx]
       
      </p>
      <p class="d-news">
       [ahref]
       
      </p>
      <p class="hng-news">
       [linkx]
       
      </p>
      <ul class="nav">
       <li class="m01" name="m01">
        <span class="nochild">
         [linkx]
         
        </span>
       </li>
       <li class="m02 gnb-wrap" name="m02">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/national-assembly">
            국회/정당
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m03 gnb-wrap" name="m03">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [content13[linkx]content14[linkx]content15[linkx]content16]
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/person/index">
            인물
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/video/index">
            영상
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m04 gnb-wrap" name="m04">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/all">
            전체기사
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m05 gnb-wrap" name="m05">
        <a data-stat-code="navi_stock" data-stat-section="" href="/stock/index">
         <span>
          금융/증권
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_stock_dep02" data-stat-section="" href="/stock/all">
            전체기사
           </a>
          </li>
          <li>
           <a data-stat-code="navi_stock_dep02" data-stat-section="" href="/stock/finance">
            금융
           </a>
          </li>
          <li>
           <a data-stat-code="navi_stock_dep02" data-stat-section="" href="/stock/stocks">
            시황
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m06 gnb-wrap" name="m06">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/science">
            과학
           </a>
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/internet">
            인터넷/PC
           </a>
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/mobile">
            모바일
           </a>
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/games">
            게임
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m07 gnb-wrap" name="m07">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/accident">
            사건/사고
           </a>
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/court-prosecution">
            법원/검찰
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m08 gnb-wrap" name="m08">
        <a data-stat-code="navi_local" data-stat-section="" href="/local/index">
         <span>
          전국
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gyeonggi/index">
            경기
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/incheon/index">
            인천
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/busan/index">
            부산
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/ulsan/index">
            울산
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gyeongnam/index">
            경남
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/chungbuk/index">
            충북
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/jeju/index">
            제주
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m09 gnb-wrap" name="m09">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_entertainment_dep02" data-stat-section="" href="/entertainment/tv">
            방송
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_entertainment_dep02" data-stat-section="" href="/entertainment/pop-song">
            가요
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m10 gnb-wrap" name="m10">
        <a data-stat-code="navi_culture" data-stat-section="" href="/culture/index">
         <span>
          문화
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/all">
            전체기사
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/books">
            책/문학
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/religion">
            종교
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/performance-exhibition">
            공연/전시
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/scholarship">
            학술/문화재
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m11 gnb-wrap" name="m11">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_sports_dep02" data-stat-section="" href="/sports/baseball">
            야구
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m12 gnb-wrap" name="m12">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           전체기사<li>[link]</li><li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/japan">
            일본
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/europe">
            유럽
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/centralsouth-america">
            중남미
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/prnewswire">
            PR Newswire
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m13" name="m13">
        <span class="nochild">
         <a data-stat-code="navi_koreancenter" data-stat-section="" href="r" rel="nofollow">
          한민족
         </a>
        </span>
       </li>
       <li class="m14 gnb-wrap" name="m14">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/obituary-notice">
            부고
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="m15 gnb-wrap" name="m15">
        <a data-stat-code="navi_travel_festival" data-stat-section="" href="/travel-festival/index">
         <span>
          여행/축제
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_travel_festival_dep02" data-stat-section="" href="/travel-festival/festival">
            축제
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m16" name="m16">
        <span class="nochild">
         <a data-stat-code="navi_opinion" data-stat-sectio="" href="/opinion/index">
          오피니언
         </a>
        </span>
       </li>
       <li class="m17 visual" name="m17">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li class="video">
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/video/index">
            영상
           </a>
           <span>
            <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/video/scene">
             현장영상
            </a>
            [ahref]
            
           </span>
          </li>
          <li class="vrroom">
           [linkx]
           
          </li>
         </ul>
         <ul class="visual-list">
          <li>
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="fixed-bnr02">
    <span class="blind">
     배너
    </span>
    <div>
     <div class="ads-fixed01">
     </div>
    </div>
   </div>
   <div class="fixed-bnr03">
    <span class="blind">
     배너
    </span>
    <div>
    </div>
   </div>
   <div id="content">
    <div class="header-content contents-box">
     <div class="newsflash-wrap">
      <div class="emergency" id="emergency">
      </div>
      <div class="newsflash" id="newsFlash">
       <p class="blind">
        [실시간뉴스]
       </p>
       <div class="update">
        <strong>
         최종업데이트
        </strong>
        <span>
         YYYY-mm-dd hh:mm:ss
        </span>
       </div>
       <ul>
        <li>
        </li>
       </ul>
       <span class="newsflash-btn1">
       </span>
       <span class="newsflash-btn2">
       </span>
      </div>
     </div>
     <form action="e" class="search-wrap" data-stat-code="search" data-stat-section="">
      <fieldset>
       <span class="blind">
        검색
       </span>
       <label class="blind" for="search">
        검색어 입력
       </label>
       <span class="srchbar">
       </span>
      </fieldset>
     </form>
    </div>
    <div class="today-news-wrap" id="todayJuyo">
     <div class="today-news">
      <span class="today-sl-btn">
       <button class="today-prev">
        이전 슬라이드
       </button>
       <button class="today-next">
        다음 슬라이드
       </button>
      </span>
      <ul class="list">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703163700004?section=society/welfare-labor">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           경영계, 내년 최저임금 4.2% 삭감안 제출…&amp;apos시급 8천원&amp;apos
          </p>
         </div>
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703142900004?section=society/environment">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           내일 서울 등 폭염주의보…대구 낮 최고 34도 예상
          </p>
         </div>
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190703139800083?section=international/correspondents/beijing">
         <div class="img-con">
         </div>
         <div class="news-con">
          [content10][content11][content12][linkx][content13][content14]
         </div>
        </a>
       </li>
      </ul>
     </div>
     <div class="in">
     </div>
    </div>
    <div class="contents">
     <div class="contents01 scroll-article-zone01">
      <div class="scroll-start01">
       <div class="scroll-in01">
        <div class="contents-box view-wrap">
         <div class="sta-wrap02" data-stat-code="lnb_news" data-stat-section="">
          <span class="tit">
           [linkx]
           
          </span>
         </div>
         <div class="article-wrap" id="articleWrap">
          <h2>
           <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h2>
          <h1 class="tit-article">
           <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h1>
          <div class="article-sns-md sns-md04">
           <div class="share-info">
            <span class="tt">
             송고시간 |
             <em>
              2017-06-13 11:00
             </em>
            </span>
            <div class="sns-share01">
             <button class="fb" data-stat-code="share_fb" data-stat-section="" onclick="javascript:SNS.fbShare();" type="button">
              <span>
               페이스북
              </span>
             </button>
             <button class="tw" data-stat-code="share_tw" data-stat-section="" onclick="javascript:SNS.twit();" type="button">
              <span>
               트위터
              </span>
             </button>
             <button class="kks" data-stat-code="share_kks" data-stat-section="" onclick="javascript:SNS.kakaostory();" type="button">
              <span>
               카카오스토리
              </span>
             </button>
             <div class="more-wrap">
              <button class="more" type="button">
               <span>
                더보기
               </span>
              </button>
              <div class="more-list">
               <button class="fbm" data-stat-code="share_fbm" data-stat-section="" onclick="javascript:SNS.fmShare();" type="button">
                <span>
                 페이스북메신저
                </span>
               </button>
               <button class="band" data-stat-code="share_band" data-stat-section="" onclick="javascript:SNS.band();" type="button">
                <span>
                 밴드
                </span>
               </button>
               <button class="blog" data-stat-code="share_blog" data-stat-section="" onclick="javascript:SNS.blog();" type="button">
                <span>
                 블로그
                </span>
               </button>
               <button class="pin" data-stat-code="share_pin" data-stat-section="" onclick="javascript:SNS.pinShare();" type="button">
                <span>
                 핀터레스트
                </span>
               </button>
              </div>
             </div>
            </div>
            <ul class="link-btn-md">
             <li class="btn_print">
              [ahref]
              
             </li>
             <li class="btn_zoom_in">
              <a data-stat-code="btn_zoom_in" data-stat-section="" href="#">
               확대
              </a>
             </li>
             <li class="btn_zoom_out">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="link-info">
            <ul class="link-site">
            </ul>
           </div>
          </div>
          <div class="article">
           <div class="stit">
            <strong>
             <b>
              정민유 한국식품연구원 박사팀 실험결과
             </b>
            </strong>
           </div>
           <p>
            (서울=연합뉴스) 정빛나 기자 = 도토리가 비만 예방에 탁월한 효능이 있다는 연구 결과가 나왔다.
           </p>
           <p>
            정민유 한국식품연구원 박사팀은 도토리로 세포·동물 실험을 한 결과 비만 예방 효능을 확인했다고 13일 밝혔다.
           </p>
           <p>
            도토리는 우리나라에서 흔하게 볼 수 있는 식재료이다. 예로부터 묵이나 전 등으로 만들어 먹었다. 최근에는 건강식품으로도 주목받고 있다.
           </p>
           <div class="banner-0-wrap">
            <div class="ads-article01">
            </div>
           </div>
           <p>
            연구팀은 세포실험 결과 도토리 추출물이 '히스톤 아세틸전달효소'(histone acetyltransferase·HAT)라는 물질의 활동을 대조군 대비 50%가량 감소시켜 지방 축적을 억제한다는 사실을 찾아냈다.
           </p>
           <p>
            동물 실험에서도 도토리가 고지방 식이로 비만이 유도된 실험용 쥐의 간과 지방 조직, 이중 특히, 신장지방 조직 무게를 의미있게 감소시키는 한편 나쁜 콜레스테롤로 알려진 'LDL 콜레스테롤' 등을 효과적으로 줄인 것으로 나타났다.
           </p>
           <p>
            정민유 박사는 "도토리가 비만 예방과 함께 혈중 콜레스테롤을 낮추는 데도 효과가 있다는 사실을 과학적으로 입증했다"며 "도토리묵이나 전 등으로 꾸준히 섭취하면 좋은 결과를 얻을 수 있을 것"이라고 말했다.
           </p>
           <p>
            연구 결과는 국제 전문 학술지인 '약용 식품 저널'(Journal of Medicinal Food)에 게재될 예정이다.
           </p>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <p>
            shine@yna.co.kr
            <br/>
           </p>
           <p class="adrs">
            <span class="cprgt">
             <저작권자(c) 연합뉴스, 무단 전재-재배포 금지>
            </span>
            <span class="pblsh">
             2017/06/13 11:00 송고
            </span>
           </p>
          </div>
         </div>
         <div class="view-ad-wrap">
          <span class="blind">
           광고
          </span>
          <ul id="ad2235_1548979385783">
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text01" scrolling="no" src="https://www.kodcad.kr/ad/43/d27b94fe14563f6097725a5dce7e632c.html" title="엠엔에이치마케팅 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text04" scrolling="no" src="https://adv.imadrep.co.kr/3588_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text05" scrolling="no" src="https://adv.imadrep.co.kr/3554_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4136_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4137_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
          </ul>
         </div>
         <div class="ad-ifm01">
          <iframe frameborder="0" height="180" name="ifm-ad-joyninfo01" scrolling="no" src="//m.joyninfo.com/yna/yna_w1.asp" title="조인&amp;amp;인포 텍스트 광고" width="586">
          </iframe>
         </div>
         <div class="comment-wrap">
          <span class="blind">
           댓글쓰기
          </span>
          <div data-id="yonhapnews" data-uid="NTYvNzAxLzYz" id="lv-container">
          </div>
         </div>
         <div class="banner-box09">
          <div class="con">
           <div id="div-gpt-ad-1536740010408-0" style="height:250px; width:300px;">
           </div>
           <div id="div-gpt-ad-1536740054859-0" style="height:250px; width:300px;">
           </div>
          </div>
         </div>
         <div class="floating-banner01">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
        <div class="contents-box view-wrap03">
         <iframe frameborder="0" height="168" name="ifm-ad-joyninfo02" scrolling="no" src="//m.joyninfo.com/yna/yna_w2.asp" title="조인&amp;amp인포 썸네일형 광고" width="586">
         </iframe>
         <div id="_popIn_recommend">
         </div>
        </div>
        <div class="contents-box view-wrap02">
         <div class="list-style05">
          <h6 class="tit-category" data-stat-code="box_view_visual_tit" data-stat-section="">
           비주얼뉴스
          </h6>
          <ul class="photomovie2">
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             <a data-stat-code="box_view_photo" data-stat-section="" href="/view/PYH20190703113000013?section=news">
              <span class="img-con img-cover">
              </span>
              <span class="tit-con">
               <strong class="tit">
                &amp;apos총파업 투쟁&amp;apos…학교비정규직 총파업대회
               </strong>
              </span>
             </a>
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [ahref]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [ahref]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [linkx]
             
            </div>
           </li>
          </ul>
         </div>
         <div class="floating-banner02">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="contents02 scroll-article-zone02">
      <div class="scroll-start02">
       <div class="scroll-in02">
        <div class="contents-box aside-top-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-topright01">
          </li>
         </ul>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe allowtransparency="yes" border="0" frameborder="no" height="26" id="popin_iframe_ad" marginheight="0" marginwidth="0" scrolling="no" src="https://api.popin.cc/iframe/code.html?id=yna_right_text&amp;w=290px&amp;h=26px&amp;containerId=_popIn_recommend_text_iframe&amp;media=www.yna.co.kr_text" width="290">
         </iframe>
         <iframe allowtransparency="true" frameborder="0" height="235" marginheight="0" marginwidth="0" name="ifm-ad-imad-text01" scrolling="no" src="//adv.imadrep.co.kr/2161_01.html" title="아이엠애드 광고(텍스트8)" width="290">
         </iframe>
        </div>
        <iframe class="ifm-hot-news" frameborder="0" height="370" name="ifm-hot-news" scrolling="no" src="//www.yna.co.kr/program/hot-news" title="핫뉴스 프레임" width="340">
        </iframe>
        <iframe class="ifm-ad-bithumb" frameborder="0" height="253" name="ifm-ad-bithumb" scrolling="no" src="/program/bithumb" title="빗썸배너광고" width="340">
        </iframe>
        <div class="contents-box aside-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-right01">
          </li>
          <li class="ads-right02">
          </li>
          <li class="ads-right03">
          </li>
          <li class="ads-right04">
          </li>
          <li class="ads-right05">
          </li>
          <li class="ads-right06">
          </li>
          <li class="ads-right07">
          </li>
          <li class="ads-right08">
          </li>
          <li class="ads-right09">
          </li>
         </ul>
        </div>
        <div class="contents-box list-style01 popularnews-zone">
         <h5 class="tit-type01" data-stat-code="box_popularnews_tit" data-stat-section="">
          <a href="/theme/mostviewed/index" target="_top">
           많이 본 뉴스
          </a>
         </h5>
         <h5 class="tit-type03" data-stat-code="box_popularnews_tit" data-stat-section="">
          <a href="/theme/mostviewed/index" target="_top">
           많이 본 뉴스
          </a>
         </h5>
         <div class="tab-wrap01 tab-setting" data-stat-code="box_popularnews_tab" data-stat-section="">
          <ul>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="y">
             사회
            </a>
           </li>
           <li>
            <a href="l">
             전국
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="t">
             연예ㆍ문화
            </a>
           </li>
           <li>
            <a href="d">
             세계
            </a>
           </li>
          </ul>
         </div>
         <div class="list-wrap" id="popularTotal">
          <h6 class="hidden-obj">
           종합
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularPolitics">
          <h6 class="hidden-obj">
           정치
          </h6>
          <ul>
           <li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]
          </ul>
         </div>
         <div class="list-wrap" id="popularEconomy">
          <h6 class="hidden-obj">
           산업/경제
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSociety">
          <h6 class="hidden-obj">
           사회
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularLocal">
          <h6 class="hidden-obj">
           전국
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSports">
          <h6 class="hidden-obj">
           스포츠
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEntertainment">
          <h6 class="hidden-obj">
           연예ㆍ문화
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularWorld">
          <h6 class="hidden-obj">
           세계
          </h6>
          <ul>
          </ul>
         </div>
         <a class="btn_more" data-stat-code="box_popularnews_btn_more" data-stat-section="" href="/theme/mostviewed/index" target="_top" title="많이 본 뉴스 더보기">
          더보기
         </a>
        </div>
        <div class="contents-box ad-wrap02">
         <iframe allowtransparency="true" frameborder="0" height="96" name="ifm-ad-imad-text02" scrolling="no" src="//adv.imadrep.co.kr/2162_01.html" title="아이엠애드 광고(텍스트4)" width="290">
         </iframe>
        </div>
        <div class="contents-box ad-wrap01">
        </div>
        <iframe class="iframe-todaynews" frameborder="0" name="ifm-todaynews" scrolling="no" src="//www.yna.co.kr/program/major-news" title="오늘의 주요 뉴스">
        </iframe>
        <div class="contents-box list-style01 yspecial-wrap">
         <div class="iframe-yspecial" name="ifm-yspecial">
          <div class="y-special-zone">
           <h5 class="tit-category">
           </h5>
           <h5 class="tit-type01" data-stat-code="y_special_tit" data-stat-section="">
            [linkx]
            
           </h5>
           <ul class="list" data-stat-code="y_special" data-stat-section="">
            <li>
             <a data-stat-code="box_y_special" data-stat-section="" href="/view/MYH20190529011400508?section=video/y-special">
              <div class="thumb">
              </div>
              <span class="con">
               <strong class="tit">
                서울에서 걷는 재미에 빠지다…서울트래킹 5곳
               </strong>
               <span class="txt">
                경기도 남한산성, 제주도...
               </span>
              </span>
             </a>
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe border="0" frameborder="0" height="156" leftmargin="0" name="ifm-ad-sw-text02" scrolling="no" src="//ad.sunnyworks.co.kr/data/SW125152.html" title="써니웍스 광고(텍스트 6줄)" topmargin="0" width="290">
         </iframe>
        </div>
        <div class="contents-box goolge-banner">
         <span class="blind">
          광고
         </span>
         <div id="ad_visual" title="인라이플 광고">
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe frameborder="0" height="192" name="ifm-ad-imad-text03" scrolling="no" src="//adv.imadrep.co.kr/2837_01.html" title="아이엠애드 광고(텍스트7)" width="100%">
         </iframe>
        </div>
        <div class="contents-box list-style02 journey-zone">
         <h5 class="tit-type03">
          <span class="arr">
           여행/축제
          </span>
         </h5>
         <ul class="area">
          <li>
           <div class="box-flex">
            [linkx]
            
           </div>
          </li>
          <li>
           <div class="box-flex">
            [linkx]
            
           </div>
          </li>
         </ul>
         [linkx]
         
        </div>
        <div class="contents-box list-style02 banner-box06">
         <span class="ad-tag">
         </span>
         <div class="con">
          <iframe allowtransparency="false" frameborder="0" height="224" marginheight="0" marginwidth="0" name="ifm-ad-imad-text04" scrolling="no" src="//adv.imadrep.co.kr/1247_01.html" title="아이엠애드 광고" width="290">
          </iframe>
         </div>
        </div>
        <div class="hng-zone" id="hngZone">
         <h5 class="tit02">
          [linkx]
          
         </h5>
         <ul class="list">
          <li>
           <a data-stat-code="box_hng" data-stat-section="" href="e" rel="nofollow" target="_blank" title="새창">
            <div class="img-con">
             <span class="over">
             </span>
            </div>
            <div class="news-con">
             <h4 class="tit">
             </h4>
            </div>
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <span class="btn-top" id="btnScrollTop">
    <button type="button">
     맨위로
    </button>
   </span>
   <div id="footer">
    <div class="footer-wrap01 service-wrap">
     <span class="blind">
      전체메뉴
     </span>
     <div class="footer-menu01">
      <div class="menu-zone01">
       <div class="link-con">
        <dl class="list01">
         <dt class="tit">
          [linkx]
          
         </dt>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <a href="/nk/index">
           북한
          </a>
         </dd>
         <dd>
          <a href="/economy/index">
           산업/경제
          </a>
         </dd>
         <dd>
          <a href="/stock/index">
           금융/증권
          </a>
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <a href="/society/index">
           사회
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="/sports/index">
           스포츠
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="r" rel="nofollow">
           한민족
          </a>
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
        </dl>
       </div>
      </div>
      <div class="menu-zone02">
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
            <li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
           
          </dd>
          <dd>
           <a href="/people/ceo">
            CEO
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/video/index">
            영상
           </a>
          </dd>
          <dd>
           <a href="/gallery/index">
            화보
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit space01">
           [linkx]
           
          </dt>
          <dd class="br">
           <a href="/opinion/paper">
            주요신문
            <br/>
            톱뉴스/사설
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
         <div class="list01">
          <p class="tit">
           [linkx]
           
          </p>
         </div>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           테마별뉴스
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/theme/headlines">
            주요뉴스
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [linkx]
           
          </dt>
          <dd>
           <a href="/mobile-service/web">
            모바일웹
           </a>
          </dd>
          <dd>
           <a href="/mobile-service/app">
            모바일앱
           </a>
          </dd>
         </dl>
         <dl class="list01">
          <dt class="hidden-obj">
           비주얼뉴스
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            #흥
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           외국어
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="r">
            中文
           </a>
          </dd>
          <dd>
           <a href="r">
            日本語
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="r">
            Français
           </a>
          </dd>
         </dl>
        </div>
       </div>
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][link]
          </dd>
          <dd>
           <a href="/press-release/index">
            보도자료 국내배포
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           출판물
          </dt>
          <dd>
           <a href="/imazine/index">
            이매진
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/publication/koreaannual">
            영문연감[content10][content11][linkx][content12]
           </a>
          </dd>
          <dd>
           <a href="/publication/index">
            한국인물사전
           </a>
          </dd>
          <dd>
           <a href="/publication/book">
            단행본
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/advertisement/ktx">
            광고
           </a>
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/advertisement/pc">
            PC/홈페이지
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/" target="_blank" title="새창">
            콘텐츠 판매
           </a>
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           관련사이트
          </dt>
          <dd>
           <a href="r" rel="nofollow" target="_blank" title="새창">
            한민족센터
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list02">
          <dt class="tit">
           유튜브
          </dt>
          <dd class="yna">
           <a href="/channel/UCj3_t5p4L4aFsvdW3uHjnnw" rel="nofollow" target="_blank" title="새창">
            연합뉴스
           </a>
          </dd>
          <dd class="tong">
           [linkx]
           
          </dd>
          <dd class="kn">
           [ahref]
           
          </dd>
          <dd class="yttv">
           <a href="/channel/UC-l8M5QwG0Rdb5MVlOVuFSA" rel="nofollow" target="_blank" title="새창">
            연통TV
           </a>
          </dd>
         </dl>
        </div>
       </div>
      </div>
     </div>
     <div class="footer-menu02">
      <a href="/policy/partner">
       계약사/제휴문의
      </a>
     </div>
    </div>
    <ul class="footer-link" data-stat-code="footer" data-stat-section="">
     <li>
      [ahref]
      
     </li>
     <li>
      [content3][content4][linkx]
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/policy/contents">
       콘텐츠자문위원회
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/board/jebo/index">
       <strong>
        기사제보(02-398-3000)
       </strong>
      </a>
     </li>
     <li>
      <a href="/sitemap/index">
       사이트맵
      </a>
     </li>
    </ul>
    <div class="addr-info">
     <address>
      연합뉴스 서울시 종로구 율곡로2길 25 | 등록번호 문화, 나00009 | 등록일자 1980.12.29 | 발행일자 1980.12.29 | Tel. 02-398-3114
     </address>
    </div>
    <ul class="copy">
     [content3][content4][content5][content6][content7][linkx]
    </ul>
   </div>
  </div>
  <div class="article-ad-box">
   <div id="div-gpt-ad-1554859786318-0" style="height:250px; width:300px;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0265
  </b>
 </body>
</html>|<---