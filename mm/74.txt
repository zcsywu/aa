--->|<!DOCTYPE doctype html>
<html dir="ltr" lang="en">
 <head>
  <base href="https://play.google.com/"/>
  <meta content="origin" name="referrer"/>
  <meta content="IE=10" http-equiv="X-UA-Compatible"/>
  <meta content="PJKdyVFC5jlu_l8Wo_hirJkhs1cmitmn44fgpOc3zFc" name="google-site-verification"/>
  <meta content="A6H2WZG5rRIUFFopIQcyPeabS5ffxhFlhTiyhzWGPRA" name="google-site-verification"/>
  <meta content="website" property="og:type"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="신비아파트 고스트헌터 - Apps on Google Play" name="twitter:title">
   <title id="main-title">
    [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description" property="og:description"/>
   <meta content="https://lh3.googleusercontent.com/_J60RHV77m-gEKbMTxd-N8QK2OMKfrFIjC2yROC5nhr-zWWn__gs5NIO_SLGlmBK62U" property="og:image"/>
   <meta content="https://lh3.googleusercontent.com/_J60RHV77m-gEKbMTxd-N8QK2OMKfrFIjC2yROC5nhr-zWWn__gs5NIO_SLGlmBK62U" name="twitter:image">
    <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="appstore:developer_url"/>
    <meta content="com.dev3factory.shinbiApart" name="appstore:bundle_id"/>
    <meta content="com.dev3factory.shinbiApart" name="appstore:store_id"/>
   </meta>
  </meta>
 </head>
 <body class="tQj5Y ghyPEc IqBfM e2G3Fb EWZcud k8Lt0" data-has-footer="true" data-ih="120" data-iw="600" id="yDmH0d" jsaction="rcuQ6b:npT2md; click:FAbpgf; auxclick:FAbpgf" jscontroller="pjICDe">
  <div class="QKtxw" id="fcxH9b" jsmodel="jnH8Sb">
   <c-wiz data-legacy-base-path-prefix="https://play.google.com" data-node-index="4;0" data-p="%.@.]
" jsaction="rcuQ6b:npT2md; submit:GNwXB; input:w2SLu;Dl5S0c:XUhII;" jscontroller="mqk2rb" jsdata="deferred-i1" jsmodel="hc6Ubd HBRW5b" jsname="OEs3Cf" jsrenderer="rGsFle" jsshadow="">
    <div>
     <div id="gbar">
      <nobr>
       <a class="gb1" href="/webhp?tab=8w" target="_blank">
        Search
       </a>
       [ahref]
       
       [linkx]
       
       <b class="gb1">
        Play
       </b>
       [ahref]
       
       <a class="gb1" href="/mail/?tab=8m" target="_blank">
        Gmail
       </a>
       [linkx]
       
       [ahref]
       
       <a class="gb1" href="/intl/en/about/products?tab=8h" style="text-decoration:none" target="_blank">
        <u>
         More
        </u>
        »
       </a>
      </nobr>
     </div>
     <div id="guser" width="100%">
      <nobr>
       <span class="gbi" id="gbn">
       </span>
       <span class="gbf" id="gbf">
       </span>
       <span id="gbe">
       </span>
       [linkx]
       
      </nobr>
     </div>
     <div class="gbh" style="left:0">
     </div>
     <div class="gbh" style="right:0">
     </div>
    </div>
    <c-data id="i1" jsdata=" Gz1Cwb;_;1">
    </c-data>
   </c-wiz>
   <div jsaction="rcuQ6b:Rayp9d;" jscontroller="VQbeBe">
    <div jsaction="rcuQ6b:YUF6vf" jscontroller="Tc5Ble">
     <div class="sZwd7c B6Vhqe qdulke jK7moc Cq5pMb" jsaction="transitionend:Zdx3Re" jscontroller="ltDFwf" jsname="Igk6W" role="progressbar">
      <div class="xcNBHc um3FLe">
      </div>
      <div class="w2zcLc Iq5ZMc" jsname="cQwEuf">
      </div>
      <div class="MyvhI TKVRUb" jsname="P1ekSe">
       <span class="l3q5xe SQxu9c">
       </span>
      </div>
      <div class="MyvhI sUoeld">
       <span class="l3q5xe SQxu9c">
       </span>
      </div>
     </div>
     <div class="XDXaGc" jsname="uZXxQc" style="display: none">
     </div>
    </div>
    <c-wiz class="Knqxbd tzLNed Mfkobe" data-node-index="3;0" data-p="%.@.[1,1]
]
" data-selected-corpus-id="1" jsaction="rcuQ6b:Rayp9d; blur:C0ntFf; mouseleave: C0ntFf;jd9b9e:C0ntFf;cY8qRd:dpbS5;EY8hMd:G3Uxgd;dERoL:umQQ7b;" jscontroller="kRhlSb" jsdata="deferred-i2" jsmodel="hc6Ubd vFJKcf" jsname="HXIGjc" jsrenderer="NVKKEe" jsshadow="">
     <div class="ZpIPg" jsname="aDLa4e" tabindex="-1">
     </div>
     <span class="znPNx" jsaction="mouseenter:dpbS5" jsname="zyXJec">
      <span class="osoUAb" jsname="gzTIse">
      </span>
     </span>
     <ul class="XBXPXc wEDdvc" jsname="SW97x" role="navigation">
      <li class="uQeS5e qKjvAb J919pd" data-item-id="1" data-selected="true" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       [ahref]
       
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         [ahref]
         
        </li>
        <li class="AhXF6c ">
         <a class="WhMnYc gWazle" href="/store/apps" jsname="rSwqg">
          Shop
         </a>
        </li>
        <li aria-hidden="true" class="POfIAc">
        </li>
        <li class="fle8Af">
         [linkx]
          [area1][mkey1][area1][mkey1][linkx][pkeyx][pkeyx][linkx][linkx][area1][keywordx][ahref][pkeyx][ahref]
         
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/apps/category/FAMILY">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           Family
          </span>
         </a>
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/apps/editors_choice">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           Editors' Choice
          </span>
         </a>
        </li>
       </ul>
      </li>
      <li class="uQeS5e N41Tic iZhiic oPekyc" data-item-id="9" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/movies" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span class="S6Rud" jsname="vdp2Fc">
          <span class="Mqdrgf">
          </span>
         </span>
         <span class="pvVVcb" jsname="r4nke">
          Movies &amp; TV
         </span>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         <a class="WtH9qd " href="/movies" jsname="IdGokb">
          My movies &amp; TV
         </a>
        </li>
        <li class="AhXF6c ">
         [ahref]
         
        </li>
        <li aria-hidden="true" class="POfIAc">
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/movies/category/TV">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           TV
          </span>
         </a>
        </li>
        <li class="fle8Af">
         [linkx]
         
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/movies/stream/promotion_collections_movie_studios">
          <li>[ahref]</li><li>[area1][mkey1]</li><li>[linkx]</li>
         </a>
        </li>
        <li class="fle8Af">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="uQeS5e od7MSc iZhiic oPekyc" data-item-id="4" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/music" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span class="S6Rud" jsname="vdp2Fc">
          <span class="Mqdrgf">
          </span>
         </span>
         <span class="pvVVcb" jsname="r4nke">
          Music
         </span>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         <a class="WtH9qd " href="/music" jsname="IdGokb">
          My music
         </a>
        </li>
        <li class="AhXF6c ">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="uQeS5e WEMC7e iZhiic oPekyc" data-item-id="5" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       [linkx]
       
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         [linkx]
         
        </li>
        <li class="AhXF6c ">
         [linkx]
         
        </li>
        <li aria-hidden="true" class="POfIAc">
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/books/category/audiobooks">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           Audiobooks
          </span>
         </a>
        </li>
        <li class="fle8Af">
         [linkx]
         
        </li>
        <li class="fle8Af">
         [linkx]
         
        </li>
        <li class="fle8Af">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="uQeS5e KVqzMb iZhiic oPekyc" data-item-id="7" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/devices" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span class="S6Rud" jsname="vdp2Fc">
          <span class="Mqdrgf">
          </span>
         </span>
         <span class="pvVVcb" jsname="r4nke">
          Devices<li>[linkx]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>[area1][keywordx]
         </span>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c ">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="uQeS5e KhlB4 iZhiic oPekyc" data-item-id="8" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span class="S6Rud" jsname="vdp2Fc">
          <span class="Mqdrgf">
          </span>
         </span>
         <span class="pvVVcb" jsname="r4nke">
          Entertainment
         </span>
        </span>
       </a>
      </li>
     </ul>
     <div jsaction="focus:C0ntFf">
      <ul class="CoKTif" jsname="EkaWNc">
       <li class="fle8Af">
        <a class="gm1qLe" href="/store/account">
         <span class="Mqdrgf">
         </span>
         <span class="null">
          Account[pkeyx]<li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
         </span>
        </a>
       </li>
       <li class="fle8Af">
        <a class="gm1qLe" href="/store/paymentmethods">
         <span class="Mqdrgf">
         </span>
         <span class="null">
          Payment methods
         </span>
        </a>
       </li>
       <li class="fle8Af">
        <a class="gm1qLe" href="/store/account/subscriptions">
         <span class="Mqdrgf">
         </span>
         <span class="null">
          My subscriptions
         </span>
        </a>
       </li>
       <li class="fle8Af" jscontroller="vK6idb">
        <button class="gm1qLe" jsaction="CnOdef" jsname="U50xre">
         <span class="Mqdrgf">
         </span>
         <span>
          Redeem
         </span>
        </button>
       </li>
       <li class="fle8Af">
        [ahref]
        
       </li>
       <li class="fle8Af">
        <a class="gm1qLe" href="/wishlist">
         <span class="Mqdrgf">
         </span>
         <span class="null">
          My wishlist
         </span>
        </a>
       </li>
       <li class="fle8Af">
        <a class="gm1qLe" href="/store/myplayactivity">
         <span class="Mqdrgf">
         </span>
         <span class="null">
          My Play activity
         </span>
        </a>
       </li>
       <li class="fle8Af">
        [linkx]
        
       </li>
       <li class="YWGNae">
       </li>
      </ul>
     </div>
     <c-data id="i2" jsdata=" Mc5Qae;_;2">
     </c-data>
    </c-wiz>
    <c-wiz data-node-index="1;0" data-p="%.@.1]
" jsdata="deferred-i3" jsmodel="hc6Ubd" jsrenderer="fgZ3Zd" jsshadow="">
     <div class="wkJZwc rXI5N j0qzGf" data-country="US" data-locale="en-US" jsaction="EY8hMd:G3Uxgd;pEd11e:MUIB6d;kLjSF:GcWTpd;" jscontroller="aqLWcd" jsmodel="lwqmbc" role="navigation">
      <div class="Rc8qze sVEEmc">
       <div class="t5eBue ovVTif">
        <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>[area1][keywordx][pkeyx]
       </div>
      </div>
     </div>
     <c-data id="i3" jsdata=" ULZlTb;_;3">
     </c-data>
    </c-wiz>
   </div>
   <div aria-labelledby="main-title" class="id-body-content-beginning" tabindex="-1">
   </div>
   <c-wiz jsaction="XndO6: WHyGDc" jscontroller="R6xS0b" jsdata="deferred-i4" jsmodel="hc6Ubd" jsshadow="">
    <c-data id="i4">
    </c-data>
   </c-wiz>
   <div jsaction="o3VKB:eQqUMb" jscontroller="BfdUQc">
   </div>
   <div class="WpDbMd" jsname="LcUpsb">
    <c-wiz class="zQTmif SSPGKf I3xX3c drrice" data-node-index="0;0" data-ogpc="" data-p='%.@.["com.dev3factory.shinbiApart",7]
,false,false,[false]
,true,[96,27,4,8,57,30,110,79,11,16,49,1,3,9,12,104,55,56,51,10,34,77]
]
' jscontroller="tiSncc" jsdata="deferred-i5" jslog="43407; 1:2|CBSqARUKEwjI5e67lZnjAhUOiZYKHdk0ANc=; track:impression" jsmodel="hc6Ubd" jsrenderer="Z5wzge">
     <div class="T4LgNb" jsname="a9kxte">
      <div class="VjFXz">
      </div>
      <div class="ZfcPIb">
       <div class="UTg3hd">
        <div class="JNury Ekdcne">
         <div class="LXrl4c">
          <c-wiz data-node-index="4;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
,false,false]
' jsdata="deferred-i6" jsmodel="hc6Ubd" jsrenderer="rDSaC" jsshadow="">
           <c-wiz data-node-index="2;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
,false]
' jsdata="deferred-i7" jsmodel="hc6Ubd" jsrenderer="uYqOpb" jsshadow="">
            <div class="oQ6oV">
             <div class="hkhL9e">
              <div class="xSyT2c">
              </div>
             </div>
             <div class="D0ZKYe">
              <div class="rlnrKc">
               <div class="sIskre">
                <c-wiz data-node-index="11;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i8" jsmodel="hc6Ubd" jsrenderer="vVnOi" jsshadow="">
                 <h1 class="AHFaub" itemprop="name">
                  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                 </h1>
                 <c-data id="i8" jsdata=" OKeYaf;_;11">
                 </c-data>
                </c-wiz>
                <div class="jdjqLd">
                 <div class="ZVWMWc">
                  <li>[linkx]</li><li>[linkx]</li><li>[linkx]</li><li>[pkeyx]</li>[area1][keywordx]
                 </div>
                 <div class="dNLKff">
                  <c-wiz data-node-index="9;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i9" jsmodel="hc6Ubd" jsrenderer="GxnCG" jsshadow="">
                   <div class="pf5lIe">
                    <div aria-label="Rated 4.1 stars out of five stars" role="img">
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="L0jl5e bUWb7c cm4lTe">
                      <div class="vQHuPe bUWb7c D3FNOd" style="width: 8.871269226074219%">
                      </div>
                     </div>
                    </div>
                   </div>
                   <span class="AYi5wd TBRnV">
                    <span aria-label="74,995 ratings" class="">
                     74,995<li>[area1][mkey1]</li><li>[ahref]</li>[area1][mkey1]<li>[area1][mkey1]</li>
                    </span>
                    <span class="O3QoBc qLorRc">
                    </span>
                   </span>
                   <c-data id="i9" jsdata=" V4l1v;_;5">
                   </c-data>
                  </c-wiz>
                 </div>
                </div>
                <c-wiz autoupdate="" data-node-index="2;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i10" jsmodel="hc6Ubd" jsrenderer="TAD86b" jsshadow="">
                 <c-data id="i10">
                 </c-data>
                </c-wiz>
                <div class="bSIuKf">
                 Contains Ads
                </div>
               </div>
               <div class="wE7q7b">
                <div class="i9550b">
                 <div class="KO5dHd">
                  <c-wiz data-node-index="6;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i11" jsmodel="hc6Ubd" jsrenderer="VR9ywb" jsshadow="">
                   <c-data id="i11">
                   </c-data>
                  </c-wiz>
                  <c-wiz autoupdate="" data-node-index="4;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
,null,false]
' jsdata="deferred-i12" jsmodel="hc6Ubd" jsrenderer="MGKh8" jsshadow="">
                   <c-wiz autoupdate="" data-node-index="1;0" data-p='%.@.null,["com.dev3factory.shinbiApart",7]
,false]
' jsdata="deferred-i13" jsmodel="hc6Ubd" jsrenderer="JuzNtf" jsshadow="">
                    <c-data id="i13" jsdata=" v3Bbmc;unsupported;16 v3Bbmc;unsupported;16 v3Bbmc;unsupported;16">
                    </c-data>
                   </c-wiz>
                   <c-data id="i12">
                   </c-data>
                  </c-wiz>
                 </div>
                 <div class="hfWwZc">
                  <div class="RpN8n">
                   <c-wiz autoupdate="" data-node-index="8;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i14" jsmodel="hc6Ubd" jsrenderer="rxFDD" jsshadow="">
                    <wishlist-add>
                     <button aria-label="Add to wishlist" class="Bovvxc " data-item-id='%.@."com.dev3factory.shinbiApart",7]
' jsaction="rcuQ6b:WYd;focus:AHmuwe; blur:O22p3e; mouseup:GfWc1e; touchend:GfWc1e;click:OuTedb;" jscontroller="q8NYMd" jslog="38005; 1:204; track:click; mutable:true" jsmodel="c7dHKc">
                      <span class="Gj57vc d4tZAd">
                      </span>
                      <span class="O53zde vaqewe">
                       Add to Wishlist
                      </span>
                     </button>
                    </wishlist-add>
                    <c-data id="i14">
                    </c-data>
                   </c-wiz>
                  </div>
                  <div class="NznqUc">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
            <c-data id="i7" jsdata=" OKeYaf;_;11">
            </c-data>
           </c-wiz>
           <c-wiz data-node-index="3;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i15" jsmodel="hc6Ubd" jsrenderer="OvGHec" jsshadow="">
            <c-wiz data-node-index="1;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i16" jsmodel="hc6Ubd GVgNYb" jsrenderer="mmmrlc" jsshadow="">
             <div class="Rx5dXb" data-slideable-portion-heuristic-width="2990" jsaction="rcuQ6b:npT2md;tPOirb:iksoyf;" jscontroller="HtFpZ">
              <div class="awJjId" jsaction="mousedown:q1TRae; mouseup: V43Ssf; mouseleave:V43Ssf" jsname="PjUZJf">
               <div class="gIyxRc" jsname="ZlDilf">
               </div>
              </div>
              <div class="JiLaSd u3EI9e" jsname="CmYpTb">
               <div class="SgoUSc" jsname="pCbVjb">
                <div class="MSLVtf Q4vdJd" jsname="WR0adb">
                 <div class="TdqJUe">
                  <button aria-label="Play 신비아파트 고스트헌터" class="MMZjL lgooh " data-item-id="com.dev3factory.shinbiApart" data-item-type="7" data-should-show-kav="true" data-trailer-url="https://www.youtube.com/embed/HP5EC1S2U6E?ps=play&amp;vq=large&amp;rel=0&amp;autohide=1&amp;showinfo=0" jsaction="click:axChxd" jscontroller="HnDLGf" jsname="pWHZ7d">
                  </button>
                 </div>
                </div>
                <button aria-label="Open screenshot 0" class="Q4vdJd" data-screenshot-item-index="0" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 1" class="Q4vdJd" data-screenshot-item-index="1" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 2" class="Q4vdJd" data-screenshot-item-index="2" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 3" class="Q4vdJd" data-screenshot-item-index="3" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 4" class="Q4vdJd" data-screenshot-item-index="4" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                 [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][pkeyx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][linkx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                </button>
                <button aria-label="Open screenshot 5" class="Q4vdJd" data-screenshot-item-index="5" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 6" class="Q4vdJd" data-screenshot-item-index="6" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 7" class="Q4vdJd" data-screenshot-item-index="7" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 8" class="Q4vdJd" data-screenshot-item-index="8" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 9" class="Q4vdJd" data-screenshot-item-index="9" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 10" class="Q4vdJd" data-screenshot-item-index="10" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 11" class="Q4vdJd" data-screenshot-item-index="11" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 12" class="Q4vdJd" data-screenshot-item-index="12" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 13" class="Q4vdJd" data-screenshot-item-index="13" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
                <button aria-label="Open screenshot 14" class="Q4vdJd" data-screenshot-item-index="14" jsaction="click:O1htCb" jscontroller="DeWHJf" jsname="WR0adb">
                </button>
               </div>
              </div>
              <div class="awJjId nmBghe" jsaction="mousedown:Ak0pgd; mouseup: V43Ssf; mouseleave:V43Ssf" jsname="kZCROc">
               <div class="juegYd" jsname="RWbse">
               </div>
              </div>
             </div>
             <c-data id="i16" jsdata=" OKeYaf;_;11">
             </c-data>
            </c-wiz>
            <c-data id="i15" jsdata=" OKeYaf;_;11">
            </c-data>
           </c-wiz>
           <c-wiz data-node-index="1;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jscontroller="NHqEnf" jsdata="deferred-i17" jsmodel="hc6Ubd" jsrenderer="UsuzQd" jsshadow="">
            <div class="BwJuYe">
             <span class="DfsfS">
             </span>
             <span class="ALnref">
             </span>
             <span jsname="sngebd">
              Translate the description into English (United States) using Google Translate?
             </span>
             <span jsname="Igi1ac" style="display: none;">
              Translate the description back to Korean (South Korea)
             </span>
             <div class="gAo2Id">
              <button class="pOXYxc LkLjZd ScJHi nMZKrb " jsaction="click:GUAMQb">
               Translate
              </button>
             </div>
             <div style="clear: both">
             </div>
            </div>
            <div class="JHTxhe IQ1z0d">
             <div class="W4P4ne ">
              <div class="wSaTQd">
              </div>
              <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
              <h2 aria-label="Description">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h2>
              <div class="PHBdkd" data-content-height="144" jsaction="rcuQ6b:npT2md" jscontroller="IsfMIf" jsshadow="">
               <div class="DWPxHb" itemprop="description" jsname="bN97Pc">
                <span jsslot="">
                 <div jsname="sngebd">
                  사람들이 위험해!!
                  <br/>
                  내가 잡은 착한 귀신들을 소환!!
                  <br/>
                  우리가 힘을 합쳐 최고 점수 만큼 사람들을 구하자구!
                  <br/>
                  <br/>
                  ■드디어
                  <strong>
                   신비아파트 고스트 헌터
                  </strong>
                  오픈!
                  <br/>
                  ■신비아파트의 멋진 주인공들과 즐기는 귀신잡기!
                  <br/>
                  <br/>
                  <strong>
                   <font color="#FF0000">
                    더도 말고 딱 10분만!
                   </font>
                  </strong>
                  <br/>
                  운영자가 열심히 퍼줍니다!! 믿고 받으세요!
                  <br/>
                  <br/>
                  ■■■■■
                  <strong>
                   게임 특징
                  </strong>
                  ■■■■■
                  <br/>
                  <br/>
                  <font color="#0000CD">
                   애니메이션처럼,
                   <br/>
                   내 주변의 귀신들을 잡을 수 있다는 사실~
                  </font>
                  <br/>
                  <br/>
                  <font color="#0000CD">
                   캐릭터를 업그레이드 하고,
                   <br/>
                   전투에서 더 많은 점수를 획득해서 사람들을 구해보자구!
                  </font>
                  <br/>
                  <br/>
                  <font color="#0000CD">
                   공략 카페
                  </font>
                  <br/>
                  <font color="#FF0000">
                   https://cafe.naver.com/sinbighosthunter
                  </font>
                  <br/>
                  소통이 무엇인지 보여준다!
                  <br/>
                  <br/>
                  <font color="#0000CD">
                   홈페이지
                  </font>
                  <br/>
                  <font color="#FF0000">
                   https://goo.gl/wDvnvn
                  </font>
                  <br/>
                  <font color="#FF0000">
                   https://www.facebook.com/daerisoft
                  </font>
                  <br/>
                  <font color="#FF0000">
                   https://twitter.com/daerisoft
                  </font>
                  <br/>
                  <br/>
                  ■■■■■
                  <strong>
                   게임 방법[pkeyx][ahref][ahref][linkx][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][pkeyx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
                  </strong>
                  ■■■■■
                  <br/>
                  <br/>
                  ■
                  <font color="#FF0000">
                   [내 편이 될 귀신을 잡아라! : 포획모드]
                  </font>
                  <br/>
                  -제자리에서 천천히 카메라를 돌려보면… 으아아! 귀신이!
                  <br/>
                  -내 주변을 떠도는 신비아파트 귀신들을 잡아봐!!
                  <br/>
                  -현실세계에서 신비아파트 귀신을 포획하고 나만의 귀신 콜렉션을 만들자!
                  <br/>
                  <br/>
                  ■
                  <font color="#FF0000">
                   [악귀랑 싸우고 점수를 획득하라! : 전투하기]
                  </font>
                  <br/>
                  -포획한 착한 귀신들을 소환해서 악귀를 무찌르자!
                  <br/>
                  -내가 구한 사람들의 수가 점수로 나온다고!?!?
                  <br/>
                  -나의 최고점수는?
                  <br/>
                  <br/>
                  유저분들과 함께 만드는 게임 "신비아파트 고스트헌터"
                  <br/>
                  <strong>
                   유저님들이 남겨주시는 소중한 리뷰는 개발사에게 큰 힘이 됩니다^^
                  </strong>
                  <br/>
                  <br/>
                  ▶ 다운로드만 하면 인터넷 연결 없이 언제든지 플레이 가능합니다
                  <br/>
                  <br/>
                  ■권한안내
                  <br/>
                  카메라 : 귀신포획을 위하여 기기의 카메라를 이용합니다.
                  <br/>
                  저장공간 : 게임데이터를 보관하기 위하여 기기의 저장공간을 이용합니다.
                  <br/>
                  <br/>
                  이용약관:https://s3.ap-northeast-2.amazonaws.com/daerisoft/terms_kr.html
                  <br/>
                  ----
                  <br/>
                  개발자 연락처 :
                  <br/>
                  +07041348986
                 </div>
                 <div jsname="Igi1ac" style="display:none;">
                  People are dangerous !!
                  <br/>
                  I summoned the good ghosts I caught !!
                  <br/>
                  Let's join forces and get people as high as you can!
                  <br/>
                  <br/>
                  ■ Finally open
                  <strong>
                   Mystery Apartment Ghost Hunter !
                   <br/>
                   ■ Mysterious apartments to catch the ghost of the cool characters and enjoy!
                   <br/>
                   <br/>
                   <strong>
                    <font color="# FF0000">
                     Just 10 minutes!
                     <br/>
                     Operator will work hard !! Believe it!
                     <br/>
                     <br/>
                     ■■■■■
                     <strong>
                      Game Features  ■■■■■
                      <br/>
                      <br/>
                      <font color="# 0000CD">
                       Like animation,
                       <br/>
                       The fact that I can catch demons around me ~
                       <br/>
                       <br/>
                       <font color="# 0000CD">
                        Upgrade your character,
                        <br/>
                        Get more points in battle and save people!
                        <br/>
                        <br/>
                        <font color="# 0000CD">
                         Attack Cafe
                         <br/>
                         <font color="# FF0000">
                          https://cafe.naver.com/sinbighosthunter
                          <br/>
                          Show what communication is!
                          <br/>
                          <br/>
                          <font color="# 0000CD">
                           Homepage
                           <br/>
                           <font color="# FF0000">
                            https://goo.gl/wDvnvn
                            <br/>
                            <font color="# FF0000">
                             https://www.facebook.com/daerisoft
                             <br/>
                             <font color="# FF0000">
                              https://twitter.com/daerisoft
                              <br/>
                              <br/>
                              ■■■■■
                              <strong>
                               How to play  ■■■■■
                               <br/>
                               <br/>
                               ■
                               <font color="# FF0000">
                                [Get the ghost to be my side! : Capture mode]
                                <br>
                                 [ahref]<li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                                </br>
                                - If you turn the camera slowly in place ... Oh! A ghost!
                                <br>
                                 [ahref][area1][mkey1][ahref][ahref][area1][keywordx][linkx][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][mkey1][linkx]
                                </br>
                                - Catch the ghosts of the mysterious apartment gods around me!
                                <br/>
                                - In the real world, capture the ghost of the mysterious apartment and make your own ghost collection!
                                <br/>
                                <br/>
                                ■
                                <font color="# FF0000">
                                 [Fight the evil spirits and earn points! : Fighting]
                                 <br/>
                                 - Summon the captured good ghosts to defeat the goblins!
                                 <br/>
                                 - The number of people I saved came out as a score!?!?
                                 <br/>
                                 - My highest score?
                                 <br/>
                                 <br/>
                                 A game created with users "Shinobi Apartment Ghost Hunter"
                                 <br/>
                                 <strong>
                                  The important reviews that you leave behind are great for developers
                                  <br/>
                                  <br/>
                                  ▶ If you just download, you can play anytime without internet connection
                                  <br/>
                                  <br/>
                                  ■ Permissions Guide
                                  <br/>
                                  Camera: Use your device's camera to capture ghosts.
                                  <br/>
                                  Storage space: Use your device's storage space to store game data.
                                  <br/>
                                  <br/>
                                  Terms and Conditions: https: //s3.ap-northeast-2.amazonaws.com/daerisoft/terms.html
                                 </strong>
                                </font>
                               </font>
                              </strong>
                             </font>
                            </font>
                           </font>
                          </font>
                         </font>
                        </font>
                       </font>
                      </font>
                     </strong>
                    </font>
                   </strong>
                  </strong>
                 </div>
                </span>
                <div class="uwAgLc f3Fr9d" jsname="WgKync">
                </div>
               </div>
               <div class="n1EcZc uhqVLe" jsaction="JIbuQc:ornU0b" jsname="xBmnf">
                <div aria-disabled="false" aria-label="Read more" class="U26fgb O0WRkf oG5Srb C0oVfc n9lfJ" jsaction="click:cOuCgd; mousedown:UX7yZ; mouseup:lbsD7e; mouseenter:tfO1Yc; mouseleave:JywGue; focus:AHmuwe; blur:O22p3e; contextmenu:mg9Pef;touchstart:p6p2H; touchmove:FwuNnf; touchend:yfqBxc(preventMouseEvents=true|preventDefault=true); touchcancel:JMtRjd;" jscontroller="VXdfxd" jsshadow="" role="button" tabindex="0">
                 <div class="Vwe4Vb MbhUzd" jsname="ksKsZd">
                 </div>
                 <div class="ZFr60d CeoRYc">
                 </div>
                 <span class="CwaK9" jsslot="">
                  <span class="RveJvd snByac">
                   Read more
                  </span>
                 </span>
                </div>
               </div>
               <div class="n1EcZc uhqVLe" jsaction="JIbuQc:ornU0b" jsname="zDTjtb">
                <div aria-disabled="false" aria-label="Collapse" class="U26fgb O0WRkf oG5Srb C0oVfc n9lfJ" jsaction="click:cOuCgd; mousedown:UX7yZ; mouseup:lbsD7e; mouseenter:tfO1Yc; mouseleave:JywGue; focus:AHmuwe; blur:O22p3e; contextmenu:mg9Pef;touchstart:p6p2H; touchmove:FwuNnf; touchend:yfqBxc(preventMouseEvents=true|preventDefault=true); touchcancel:JMtRjd;" jscontroller="VXdfxd" jsshadow="" role="button" tabindex="0">
                 <div class="Vwe4Vb MbhUzd" jsname="ksKsZd">
                 </div>
                 <div class="ZFr60d CeoRYc">
                 </div>
                 <span class="CwaK9" jsslot="">
                  Collapse<li>[ahref]</li><li>[area1][keywordx]</li>[ahref]
                 </span>
                </div>
               </div>
              </div>
             </div>
             <div class="Njo8s">
             </div>
            </div>
            <c-data id="i17" jsdata=" OKeYaf;_;11">
            </c-data>
           </c-wiz>
           <c-data id="i6">
           </c-data>
          </c-wiz>
          <c-wiz data-node-index="6;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
,[false]
]
' jsaction="rcuQ6b:si1QCe" jscontroller="Qa6EOc" jsdata="deferred-i18" jsmodel="hc6Ubd" jsrenderer="xEEoMc" jsshadow="">
           <div class="W4P4ne ">
            <div class="wSaTQd">
             <h2 class="Rm6Gwb">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h2>
             [ahref]
             
            </div>
            <c-wiz data-node-index="3;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i19" jsmodel="hc6Ubd" jsrenderer="JV1xu" jsshadow="">
             <div class="K9wGie">
              <div aria-label="Rated 4.1 stars out of five stars" class="BHMmbe">
               4.1
              </div>
              <div class="LvvOW">
               <div aria-label="Rated 4.1 stars out of five stars" role="img">
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="NVmCwd WF1WQd cm4lTe">
                 <div class="BGNhFb WF1WQd D3FNOd" style="width: 8.871269226074219%">
                 </div>
                </div>
               </div>
              </div>
              <span class="EymY4b">
               <span class="O3QoBc hzfjkd">
               </span>
               <span aria-label="74,995 ratings" class="">
                74,995
               </span>
               total
              </span>
             </div>
             <div class="VEF2C">
              <div class="mMF0fd">
               <span class="Gn2mNd">
                <h3>
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h3>
                5
               </span>
               <span class="L2o20d P41RMc" style="width: 100%">
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                4
               </span>
               <span class="L2o20d tpbQF" style="width: 11%">
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                3
               </span>
               <span class="L2o20d Sthl9e" style="width: 7%">
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                2
               </span>
               <span class="L2o20d rhCabb" style="width: 4%">
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                1
               </span>
               <span class="L2o20d A3ihhc" style="width: 23%">
               </span>
              </div>
             </div>
             <c-data id="i19" jsdata=" V4l1v;_;5">
             </c-data>
            </c-wiz>
            <div class="Fx1lse">
             <div class="EmVfjc qs41qe" data-active="true" data-loadingmessage="Loading..." jsaction="animationend:kWijWc;dyRcpb:dyRcpb" jscontroller="qAKInc">
              <div aria-live="assertive" class="Cg7hO" jsname="vyyg5">
               Loading...
              </div>
              <div class="xu46lf" jsname="Hxlbvc">
               <div class="ir3uv uWlRce co39ub">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
               <div class="ir3uv GFoASc Cn087">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
               <div class="ir3uv WpeOqd hfsr6b">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
               <div class="ir3uv rHV3jf EjXFBf">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="Njo8s">
           </div>
           <c-data id="i18" jsdata=" v3Bbmc;unsupported;18 v3Bbmc;unsupported;18">
           </c-data>
          </c-wiz>
          <c-wiz data-node-index="1;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jsdata="deferred-i20" jsmodel="hc6Ubd" jsrenderer="HEOg8" jsshadow="">
           <div class="W4P4ne ">
            <div class="wSaTQd">
             <h2 class="Rm6Gwb">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h2>
            </div>
            <div class="JHTxhe IQ1z0d">
             <div class="IxB2fe">
              <div class="hAyfc">
               <div class="BgcNfc">
                Updated
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  June 24, 2019
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Size
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  89M
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Installs
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  1,000,000+
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Current Version
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  2.0.13
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Requires Android
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  4.4 and up
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Content Rating
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  <div>
                   Teen
                  </div>
                  <div>
                   <a href="/googleplay?p=appgame_ratings">
                    Learn More
                   </a>
                  </div>
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Interactive Elements
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  Digital Purchases
                 </span>
                </div>
               </span>
              </div>
              <c-wiz data-node-index="1;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
]
' jscontroller="pal88" jsdata="deferred-i21" jsmodel="hc6Ubd" jsrenderer="iP1zqe" jsshadow="">
               <div class="hAyfc">
                <div class="BgcNfc">
                 Permissions
                </div>
                <span class="htlgb">
                 <div class="IQ1z0d">
                  <span class="htlgb">
                   <div jsaction="click:UMmHgd(Hly47e)">
                    [linkx]
                    
                   </div>
                  </span>
                 </div>
                </span>
               </div>
               <c-data id="i21" jsdata=" OKeYaf;_;11">
               </c-data>
              </c-wiz>
              <div class="JHTxhe IQ1z0d YjpPef">
               <div class="hAyfc">
                <div class="BgcNfc">
                 Report
                </div>
                <span class="htlgb">
                 <div class="IQ1z0d">
                  <span class="htlgb">
                   <a href="/googleplay/?p=report_content" target="_blank">
                    Flag as inappropriate
                   </a>
                  </span>
                 </div>
                </span>
               </div>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Offered By
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  DAERISOFT
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Developer
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  <div>
                   Visit website<li>[linkx]</li><li>[linkx]</li>[area1][keywordx]
                  </div>
                  <div>
                   [ahref]
                   
                  </div>
                  <div>
                   [ahref]
                   
                  </div>
                  <div>
                   서울특별시 금천구 가산동 벽산디지털밸리5차
                  </div>
                 </span>
                </div>
               </span>
              </div>
             </div>
            </div>
           </div>
           <div class="Njo8s">
           </div>
           <c-data id="i20" jsdata=" OMXY1e;_;8 OKeYaf;_;11">
           </c-data>
          </c-wiz>
          <c-wiz data-node-index="2;0" data-p='%.@.["com.dev3factory.shinbiApart",7]
,true,[96,27,4,8,57,30,110,79,11,16,49,1,3,9,12,104,55,56,51,10,34,77]
]
' jsdata="deferred-i22" jsmodel="hc6Ubd" jsrenderer="qWgK1d" jsshadow="">
           <c-wiz data-node-index="1;0" data-p="%.@.true]
" jsaction="rcuQ6b:iEtWhe;fXS6ad:Jov36c;FcZK2d:k4bDCc;" jscontroller="fPcQoe" jsdata="deferred-i23" jsmodel="hc6Ubd" jsrenderer="LRovxc" jsshadow="">
            <c-wiz class="UBeTzd Ubi8Z" data-node-index="1;0" data-p="%.@.true,false]
" jsdata="deferred-i24" jslog="38000; 1:400|CBSqARUKEwic0PC7lZnjAhUOiZYKHdk0ANc=; track:click,impression" jsmodel="hc6Ubd" jsrenderer="Y413Bc" jsshadow="">
             <c-wiz data-node-index="5;0" data-p="%.@.true]
" jsdata="deferred-i25" jsmodel="hc6Ubd" jsrenderer="w08zce" jsshadow="">
              <div class="ex4AWb">
               <div class="oVP4Cb">
                <div class="aELZ1d">
                </div>
               </div>
               <div class="OI7HUe">
                <div class="zri8D">
                 <h2 class="J7tk9b">
                  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                 </h2>
                 [linkx]
                 
                </div>
                <div class="aFK00e" jsaction="rcuQ6b:npT2md" jscontroller="x7DRrf">
                 <c-wiz autoupdate="" data-node-index="1;0" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i26" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                  <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-eyJpod drrice" jslog="38003; 1:500|CAIaOQogEh4KGGNvbS5maXZlYnl0ZS5saWZlaXNhZ2FtZRABGAMQADITCJic7ruVmeMCFQ6Jlgod2TQA16oCOxo5CAASIAoeChhjb20uZml2ZWJ5dGUubGlmZWlzYWdhbWUQARgDShMImJzuu5WZ4wIVDomWCh3ZNADX; track:click,impression">
                   <div class="Vpfmgd">
                    <div class="uzcko">
                     <div class="N9c7d eJxoSc">
                      <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                      </span>
                      <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                      </span>
                      <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                      </span>
                      <div class="wXUyZd">
                       <a aria-hidden="true" class="poRVub" href="/store/apps/details?id=com.fivebyte.lifeisagame" tabindex="-1">
                       </a>
                      </div>
                     </div>
                    </div>
                    <div class="RZEgze">
                     <div class="vU6FJ p63iDd">
                      <a aria-hidden="true" class="JC71ub" href="/store/apps/details?id=com.fivebyte.lifeisagame" tabindex="-1">
                      </a>
                      <div class="k6AFYd">
                       <div class="bQVA0c">
                        <div class="PODJt">
                         <div class="kCSSQe">
                          <div class="b8cIId ReQCgd Q9MA7b" title="Life is a Game">
                           <a href="/store/apps/details?id=com.fivebyte.lifeisagame">
                            <div class="WsMG1c nnK0zc">
                             Life is a Game
                            </div>
                           </a>
                           <div class="cqtbn">
                           </div>
                          </div>
                          <div class="b8cIId ReQCgd KoLSrc" title="">
                           [linkx]
                           
                           <div class="cqtbn">
                           </div>
                          </div>
                          <div class="b8cIId f5NCO">
                           <a href="/store/apps/details?id=com.fivebyte.lifeisagame">
                            life simulation game where you see the life of a person from birth until death.
                           </a>
                           <div class="cqtbn xKFUib">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                       <div class="Z2nl8b">
                        <div class="PODJt">
                         <div class="kCSSQe">
                          <div class="pf5lIe">
                           <div aria-label="Rated 4.4 stars out of five stars" role="img">
                            <div class="vQHuPe bUWb7c">
                            </div>
                            <div class="vQHuPe bUWb7c">
                            </div>
                            <div class="vQHuPe bUWb7c">
                            </div>
                            <div class="vQHuPe bUWb7c">
                            </div>
                            <div class="L0jl5e bUWb7c cm4lTe">
                             <div class="vQHuPe bUWb7c D3FNOd" style="width: 35.285282135009766%">
                             </div>
                            </div>
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                  <c-data id="i26" jsdata=" OhlBSe;7,com.fivebyte.lifeisagame,;19 QwEV2c;7,com.fivebyte.lifeisagame,;20">
                  </c-data>
                 </c-wiz>
                 <c-wiz autoupdate="" data-node-index="1;1" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i27" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                  <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-eyJpod drrice" jslog="38003; 1:500|CAIaNwoeEhwKFmV4aXplLnRhcGFzLmdpcmxBZHJpZnQQARgDEAEyEwiYnO67lZnjAhUOiZYKHdk0ANeqAjkaNwgBEh4KHAoWZXhpemUudGFwYXMuZ2lybEFkcmlmdBABGANKEwiYnO67lZnjAhUOiZYKHdk0ANc=; track:click,impression">
                   <div class="Vpfmgd">
                    <div class="uzcko">
                     <div class="N9c7d eJxoSc">
                      <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                      </span>
                      <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                      </span>
                      <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                      </span>
                      <div class="wXUyZd">
                       [linkx]
                       
                      </div>
                     </div>
                    </div>
                    <div class="RZEgze">
                     <div class="vU6FJ p63iDd">
                      <a aria-hidden="true" class="JC71ub" href="/store/apps/details?id=exize.tapas.girlAdrift" tabindex="-1">
                      </a>
                      <div class="k6AFYd">
                       <div class="bQVA0c">
                        <div class="PODJt">
                         <div class="kCSSQe">
                          <div class="b8cIId ReQCgd Q9MA7b" title="A Girl Adrift">
                           [ahref]
                           
                           <div class="cqtbn">
                           </div>
                          </div>
                          <div class="b8cIId ReQCgd KoLSrc" title="">
                           [linkx]
                           
                           <div class="cqtbn">
                           </div>
                          </div>
                          <div class="b8cIId f5NCO">
                           [linkx]
                           
                           <div class="cqtbn xKFUib">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                       <div class="Z2nl8b">
                        <div class="PODJt">
                         <div class="kCSSQe">
                          <div class="pf5lIe">
                           <[area1][keywordx]>
                           </[area1][keywordx]>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                  <c-data id="i27" jsdata=" OhlBSe;7,exize.tapas.girlAdrift,;21 QwEV2c;7,exize.tapas.girlAdrift,;22">
                  </c-data>
                 </c-wiz>
                </div>
               </div>
              </div>
              <c-data id="i25" jsdata=" U7FBRe;_;23">
              </c-data>
             </c-wiz>
             <c-data id="i24" jsdata=" yehdwb;_;24 LK9wFf;_;25">
             </c-data>
            </c-wiz>
            <c-data id="i23" jsdata=" yehdwb;_;24">
            </c-data>
           </c-wiz>
           <c-data id="i22" jsdata=" zvDxob;_;15">
           </c-data>
          </c-wiz>
         </div>
        </div>
        <div class="tlG8q">
        </div>
       </div>
      </div>
      <div data-deep-link-cookie="CBSqARUKEwjI5e67lZnjAhUOiZYKHdk0ANc=" data-deep-link-type="1" jsaction="rcuQ6b:c6Ziwc;IBB03b:TfPcKb;" jscontroller="LCkxpb">
      </div>
     </div>
     <c-data id="i5" jsdata=" sCuaec;_;6 EDxpkb;_;10 OKeYaf;_;11 v3Bbmc;unsupported;26 V4l1v;_;5">
     </c-data>
    </c-wiz>
    <div class="y089Ob" id="ZCHFDb">
     <c-wiz data-node-index="1;0" data-p="%.@.true]
" jsaction="DzyM5d:EHCGpf" jscontroller="ozuUvf" jsdata="deferred-i28" jsmodel="hc6Ubd" jsrenderer="c4OaZ" jsshadow="">
      <div class="TAviAb">
       <div class="vUI6Ye" style="display: none">
       </div>
       <div class="sIIDsc IQ1z0d">
        <div class="RRKTjb">
         <span class="BDUOnf">
          ©2019 Google
         </span>
         <a class="XjE2Pb fx1akb" href="/intl/en-US_us/about/play-terms.html" target="_blank">
          Site Terms of Service
         </a>
         [ahref]
         
         [ahref]
         
         [ahref]
         
         <a class="XjE2Pb fx1akb" href="/googleplay/?p=about_play" target="_blank">
          About Google
         </a>
         <span class="XjE2Pb">
          |
         </span>
         <span class="XjE2Pb">
          Location: United States
         </span>
         <span class="XjE2Pb">
          Language: English (United States)
         </span>
         <div jsname="Gvbqzc">
          <span>
           By purchasing this item, you are transacting with Google Payments and agreeing to the Google Payments
           <a href="/termsOfService?hl=en_US" target="_blank">
            Terms of Service
           </a>
           and
           <a href="/legaldocument?family=0.privacynotice&amp;hl=en_US" target="_blank">
            Privacy Notice
           </a>
           .
          </span>
         </div>
        </div>
       </div>
      </div>
      <c-data id="i28" jsdata=" Qv8W4;_;4">
      </c-data>
     </c-wiz>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0080
  </b>
 </body>
</html>|<---