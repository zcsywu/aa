--->|<!DOCTYPE html>
<html class="no-js" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="ko" name="Language_type"/>
  <meta content="Older" name="Update_date"/>
  <meta content="Drupal 7 (http://drupal.org)" name="Generator"/>
  <meta content="Club administration" name="Topics"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="html not-front not-logged-in no-sidebars page-node page-node- page-node-237591 node-type-landing-page i18n-ko domain-myrotary">
  <div class="outdated-browser-alert-wrapper" role="alert">
   <div class="row" id="outdated-browser-alert">
    <div class="alert-message-wrapper">
     <h3>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <p>
     </p>
    </div>
    <div class="alert-dismiss-wrapper">
     <a class="alert-dismiss-link">
     </a>
    </div>
   </div>
  </div>
  <div data-a11y-content-wrapper="">
   [linkx]
   
   <header class="site-header">
    <div class="site-header-container" data-nav-header="">
     <p class="site-header-logo">
      [ahref]
      
      <strong>
       내 로타리
      </strong>
     </p>
     <button aria-controls="site-navigation" aria-expanded="false" class="site-nav-toggle-mobile" data-features="setToWindowHeight" data-module="nav-toggle" data-toggle="navigation">
      <span class="site-nav-toggle-mobile-icon">
      </span>
      <span class="a11y-sr-only">
       Main
      </span>
      Menu
     </button>
     <button aria-controls="site-search" aria-expanded="false" class="site-nav-toggle-search" data-features="focusInput" data-module="nav-toggle" data-toggle="search">
      <span class="site-nav-toggle-search-icon">
      </span>
      Search
     </button>
    </div>
    <div class="site-nav-container" id="site-navigation">
     <div class="site-nav-utility">
      <div class="site-nav-utility-container">
       <p class="site-nav-utility-login">
        <a class="prompt-login" data-path="member-center/online-tools" href="/ko/user/login?destination=member-center/online-tools" id="top-bar-sign-in">
         로그인
        </a>
        <a href="/user/register">
         등록하기
        </a>
       </p>
       <ul class="site-nav-utility-links -large">
        <li>
         <a href="/ko">
          <svg focusable="false" height="11" viewbox="0 0 12.298 11" width="12.298" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <path d="M0 0h12.298v11H0z" id="a">
            </path>
           </defs>
           <clippath id="b">
            <use overflow="visible" xlink:href="#a">
            </use>
           </clippath>
           <path clip-path="url(#b)" d="M12.14 5.705L6.66.218c-.282-.29-.74-.29-1.02 0L.156 5.705c-.28.29-.175.53.232.53H1.53v4.213c0 .304.013.552.564.552h2.66V6.773h2.786V11h2.793c.42 0 .43-.247.43-.552V6.234h1.144c.406 0 .51-.238.23-.53">
           </path>
          </svg>
          Rotary.org
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <div class="site-nav-utility-search" id="site-search">
        <form accept-charset="UTF-8" action="/ko/search/all/" class="search-form search-google-appliance-search-form" id="rotary-search-gsa-header-desktop-form" method="post" novalidate="1">
         <div>
          <div class="container-inline">
           <div class="form-wrapper" id="edit-basic">
            <div class="form-item form-type-textfield form-item-search-keys">
            </div>
            <button class="form-submit" id="edit-submit" name="op" type="submit" value="검색하기">
             <svg focusable="false" height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
              <defs>
               <path d="M0 0h16v16H0z" id="a">
               </path>
              </defs>
              <path d="M15.64 13.536L11.814 9.71a6.242 6.242 0 0 0 .908-3.252C12.723 2.998 9.725 0 6.265 0A6.265 6.265 0 0 0 0 6.265c0 3.459 2.998 6.458 6.458 6.458 1.15 0 2.227-.312 3.154-.853l3.847 3.848a.964.964 0 0 0 1.363 0l.955-.954c.376-.377.24-.851-.137-1.228M1.928 6.265a4.337 4.337 0 0 1 4.337-4.337c2.396 0 4.53 2.134 4.53 4.53a4.337 4.337 0 0 1-4.337 4.337c-2.396 0-4.53-2.134-4.53-4.53" fill="#FFF">
              </path>
             </svg>
            </button>
           </div>
          </div>
         </div>
        </form>
       </div>
       <ul class="site-nav-utility-ctas">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
     <nav aria-label="main navigation" class="site-nav" data-nav="">
      <ul class="site-nav-list">
       <li class="site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         아이디어 나누기<li>[linkx]</li>[area1][mkey1]<li>[area1][mkey1]</li><li>[linkx]</li>
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/search/people" id="header-main-menu-22291">
             커뮤니티 사용자 검색
            </a>
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko" id="header-main-menu-6631" target="_blank">
             국제대회
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            <a href="/ko/exchange-ideas/events/rotary-institutes" id="header-main-menu-6741">
             로타리 연수회<li>[area1][keywordx]</li><li>[linkx]</li><li>[linkx]</li>[linkx]<li>[ahref]</li>
            </a>
           </li>
           <li class="">
            <a href="/ko/exchange-ideas/events/donor-events" id="header-main-menu-6776">
             기부자 초청 행사
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/exchange-ideas/club-connections" id="header-main-menu-960">
            클럽 연결하기
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko/exchange-ideas/club-connections/rotaract-clubs" id="header-main-menu-968">
             로타랙트클럽
            </a>
           </li>
           <li class="">
            <a href="/ko/exchange-ideas/club-connections/interact-clubs" id="header-main-menu-972">
             인터랙트클럽
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li class="site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         [ahref]
         
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/take-action/give/recognition" id="header-main-menu-1005">
             기부자 표창
            </a>
           </li>
          </ul>
          <p>
           <a class="u-button u-button-red -fluid" href="/ko/donate" id="header-main-menu-998">
            지금 기부하기
           </a>
          </p>
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a class="prompt-login" data-path="/secure/17871" href="/ko/user/login?destination=/secure/17871" id="header-main-menu-6891">
             로타리클럽 센트럴
            </a>
           </li>
           <li class="">
            <a href="/ko/exchange-ideas/groups/project-lifecycle-resources" id="header-main-menu-15776">
             프로젝트 단계별 자원 토의 그룹
            </a>
           </li>
           <li class="">
            <a href="/20086" id="header-main-menu-1097">
             자원 나누기
            </a>
           </li>
           <li class="">
            <a href="/ko/secure/showcase" id="header-main-menu-1091" target="_blank">
             로타리 쇼케이스
            </a>
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [area1][mkey1][linkx]<li>[linkx]</li>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            <a href="/ko/take-action/apply-grants/rotary-disaster-response-grants" id="header-main-menu-603828">
             로타리 재해 대응 보조금
            </a>
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko/take-action/empower-leaders/sponsor-rotaract-club" id="header-main-menu-1131">
             로타랙트클럽 스폰서하기
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/take-action/empower-leaders/organize-ryla-event" id="header-main-menu-1136">
             라일라 행사 조직하기
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/take-action/empower-leaders/start-exchange" id="header-main-menu-1140">
             청소년교환 시작하기
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/take-action/empower-leaders/form-rotary-fellowship" id="header-main-menu-1146">
             로타리 동호회 창설하기
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li class="site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         <a data-nav-headinglink="" href="/ko/learning-reference" id="header-main-menu-5581">
          학습 &amp; 참고자료
         </a>
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/learning-reference/learn-role" id="header-main-menu-5621">
            역할별 학습
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/learning-reference/learn-topic" id="header-main-menu-5661">
            주제별 학습
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/learning-reference/learn-topic/fundraising" id="header-main-menu-6111">
             기금조성
            </a>
           </li>
           <li class="">
            <a href="/ko/take-action/develop-projects/project-lifecycle-resources" id="header-main-menu-6151">
             프로젝트
            </a>
           </li>
           <li class="">
            <a href="/ko/take-action/apply-grants" id="header-main-menu-13871">
             보조금
            </a>
           </li>
           <li class="">
            <a href="/ko/learning-reference/learn-topic/start-club" id="header-main-menu-6191">
             클럽 만들기
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/learning-reference/about-rotary" id="header-main-menu-5701">
            로타리 소개
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <li>[area1][mkey1]</li>[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/learning-reference/policies-and-procedures" id="header-main-menu-5741">
            방침 &amp; 절차
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko/learning-reference/about-rotary/governance-documents">
             거버넌스 문서
            </a>
           </li>
           <li class="">
            <a href="/ko/learning-reference/about-rotary/councils">
             결의심의회 및 규정심의회
            </a>
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="prompt-login" data-path="/secure/13161" href="/ko/user/login?destination=/secure/13161" id="header-main-menu-5801">
            학습센터
           </a>
          </p>
          <p class="site-nav-subitem-heading">
           <a href="/ko/learning-reference/webinars/upcoming" id="header-main-menu-5866">
            웨비나
           </a>
          </p>
         </li>
        </ul>
       </li>
       <li class="site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         <a data-nav-headinglink="" href="/ko/manage" id="header-main-menu-1358">
          로타리 업무
         </a>
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/manage/club-district-administration" id="header-main-menu-1363">
            클럽/지구 관리
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/manage/club-district-administration/831" id="header-main-menu-1371">
             지구 관리
            </a>
           </li>
           <li class="">
            <a href="/ko/manage/club-district-administration/836" id="header-main-menu-1373">
             기부
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko/manage/community-marketplace/official-rotary-apps" id="header-main-menu-12531">
             공식 로타리 앱
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="prompt-login" data-path="/secure/application/136" href="/ko/user/login?destination=/secure/application/136" id="header-main-menu-15306">
            브랜드 센터
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a class="prompt-login" data-path="/secure/102296" href="/ko/user/login?destination=/secure/102296" id="header-main-menu-15501" target="_blank">
             이미지 &amp;  동영상[area1][mkey1][area1][keywordx][pkeyx][linkx][ahref][area1][mkey1][area1][mkey1][ahref][area1][keywordx][pkeyx][area1][mkey1][linkx][ahref][area1][mkey1][area1][mkey1][area1][keywordx][pkeyx][area1][mkey1][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][pkeyx]
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/manage/products-services" id="header-main-menu-1401">
            상품 &amp; 서비스
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/manage/products-services/travel-expenses" id="header-main-menu-1396">
            여행 &amp; 경비
           </a>
          </p>
         </li>
        </ul>
       </li>
       <li class="site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         [linkx]
         
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a class="prompt-login" data-path="/secure/application/236" href="/ko/user/login?destination=/secure/application/236" id="header-main-menu-12201">
             보조금 센터
            </a>
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
         </li>
        </ul>
       </li>
       <li class="site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         [ahref]
         
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a href="/ko/news-media/office-president" id="header-main-menu-1530">
            RI 회장
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko/news-media/office-president/ri-president" id="header-main-menu-1633">
             약력
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/news-media/office-president/presidential-message" id="header-main-menu-1535">
             회장 메시지
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            <a href="/ko/news-media/office-president/presidents-representatives" id="header-main-menu-1539">
             회장대리
            </a>
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx][linkx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][linkx][linkx][pkeyx][area1][keywordx][area1][keywordx][area1][mkey1][pkeyx][pkeyx]
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/news-media/magazines" id="header-main-menu-2521">
            잡지
           </a>
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/member-news/news-features" id="header-main-menu-1427">
            뉴스 &amp; 하이라이트
           </a>
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/news-features/media-center?domain=publicsite" id="header-main-menu-14646">
            미디어 센터
           </a>
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           <a class="" href="g" id="header-main-menu-14681">
            Rotary Video
           </a>
          </p>
         </li>
        </ul>
       </li>
       <li class="active-trail site-nav-item" data-features="setHeight" data-module="nav-group">
        <p class="site-nav-item-heading">
         <a class="active-trail" data-nav-headinglink="" href="/ko/member-center" id="header-main-menu-53621">
          회원 센터
         </a>
        </p>
        <ul class="site-nav-sublist" data-nav-sublist="">
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/member-center/member-referral" id="header-main-menu-54586">
            새로운 회원 추천하기
           </a>
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="active-trail site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/member-center/rotary-global-rewards" id="header-main-menu-54786">
            로타리 리워드 프로그램
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a href="/ko/member-center/rotary-global-rewards/offers">
             리워드 찾기
            </a>
           </li>
          </ul>
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a class="prompt-login" data-path="/secure/application/341" href="/ko/user/login?destination=/secure/application/341">
             로타리클럽 센트럴
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/secure/showcase">
             로타리 쇼케이스
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/member-center/awards-recognition" id="header-main-menu-55061">
            표창
           </a>
          </p>
          <ul data-nav-sublist="">
           [ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>
          </ul>
          <p class="site-nav-subitem-heading">
           <a class="" href="/ko/member-center/products-services" id="header-main-menu-55226">
            상품 &amp; 서비스
           </a>
          </p>
          <ul data-nav-sublist="">
           <li class="">
            <a class="prompt-login" data-path="/secure/application/506" href="/ko/user/login?destination=/secure/application/506" target="_blank">
             Shop.rotary.org
            </a>
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
             [pkeyx][linkx][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][pkeyx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
            
           </li>
           <li class="">
            [linkx]
            
           </li>
           <li class="">
            <a href="/ko/manage/community-marketplace/official-rotary-apps">
             공식 로타리 앱
            </a>
           </li>
          </ul>
         </li>
         <li class="site-nav-subitem">
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
          <p class="site-nav-subitem-heading">
           [linkx]
           
          </p>
          <ul data-nav-sublist="">
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ko/news-media/calendar">
             캘린더
            </a>
           </li>
           <li class="">
            <a class="prompt-login" data-path="/secure/application/361" href="/ko/user/login?destination=/secure/application/361">
             공식명부
            </a>
           </li>
          </ul>
          <p class="site-nav-subitem-heading">
           [ahref]
           
          </p>
         </li>
        </ul>
       </li>
      </ul>
     </nav>
     <ul class="site-nav-utility-links -small">
      <li>
       <a href="/ko">
        <svg focusable="false" height="11" viewbox="0 0 12.298 11" width="12.298" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
         <defs>
          <path d="M0 0h12.298v11H0z" id="a">
          </path>
         </defs>
         <clippath id="b">
          <use overflow="visible" xlink:href="#a">
          </use>
         </clippath>
         <path clip-path="url(#b)" d="M12.14 5.705L6.66.218c-.282-.29-.74-.29-1.02 0L.156 5.705c-.28.29-.175.53.232.53H1.53v4.213c0 .304.013.552.564.552h2.66V6.773h2.786V11h2.793c.42 0 .43-.247.43-.552V6.234h1.144c.406 0 .51-.238.23-.53">
         </path>
        </svg>
        Rotary.org
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
   </header>
   <div class="row" role="breadcrumb-container">
    <div class="large-12 columns">
     <nav class="breadcrumb" id="breadcrumb">
      <h2 class="element-invisible">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <a href="/ko">
       홈
      </a>
      |
      <a href="/ko/member-center">
       회원 센터
      </a>
      | 온라인 도구
     </nav>
    </div>
   </div>
   <div class="row" id="main" role="main">
    <div class="alert_messages">
     <div class="region region-alert-messages">
      <div class="block block-rotary-scheduled-alerts" id="block-rotary-scheduled-alerts-all-alerts">
       <div class="content">
        <div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <section class="large-8 small-12 columns">
     <a id="main-content">
     </a>
     <h1 class="page-title">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h1>
     <div class="region region-content">
      <div class="block block-system" id="block-system-main">
       <div class="content">
        <div about="/ko/member-center/online-tools" class="ds-1col node node-landing-page node-full view-mode-full clearfix" typeof="sioc:Item foaf:Document">
         <div class="field field-name-body field-type-text-with-summary field-label-hidden">
          <div class="field-items">
           <div class="field-item even" property="content:encoded">
            <p>
             로타리가 제공하는 온라인 도구로 클럽 활동과 봉사 프로젝트를 강화하고 로타리 홍보 효과를 높이세요. 학습센터를 방문하면 각 도구에 대한 사용법을 배우실 수 있습니다.<li>[area1][keywordx]</li><li>[pkeyx]</li><li>[pkeyx]</li><li>[pkeyx]</li>
            </p>
            <ul>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a class="prompt-login" data-path="secure/ideas" href="/ko/user/login?destination=secure/ideas" target="_self">
               자원 나누기
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </section>
    <aside class="large-4 small-12 columns">
     <div class="region region-right-sidebar">
      <div class="block block-rotary-social" id="block-rotary-social-social-side">
       <div class="content">
        <div class="social_side" id="social-links">
         <div class=" ">
          <div id="fb-root">
          </div>
          [ahref]
           <li>[area1][keywordx]</li><li>[linkx]</li><li>[area1][keywordx]</li><li>[pkeyx]</li>
          
          [linkx]
          
          [ahref]
          
          <a class="custom_button_email" href="/ko/member-center/online-tools" id="custom_button_email" title="이메일">
           이메일
          </a>
          <a class="custom_button_print" id="custom_button_print" onclick="window.print();" title="인쇄">
           인쇄
          </a>
         </div>
        </div>
       </div>
      </div>
      <div class="block block-rotary-task-navigator" id="block-rotary-task-navigator-new-rotary-task-navigation-block">
       <div class="content">
        <form accept-charset="UTF-8" action="/ko/member-center/online-tools" id="rotary-task-navigator-navigation-form" method="post" novalidate="1">
         [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[area1][keywordx]</li>
        </form>
       </div>
      </div>
     </div>
    </aside>
   </div>
   <div class="row">
    <div class="region region-content-bottom">
     <div id="feedback-collect-form">
      <div class="block block-rotary-content-effectiveness" id="block-rotary-content-effectiveness-rotary-content-effectiveness">
       <div class="content">
        <form accept-charset="UTF-8" action="/ko/member-center/online-tools" id="rotary-content-effectiveness-feedback-form" method="post" novalidate="1">
         <div>
          <div class="form-item form-type-item" id="edit-headline">
           <div class="headline">
            사이트 개선에 도움을 주세요. 이 페이지가 유용했나요?
           </div>
          </div>
         </div>
        </form>
       </div>
      </div>
     </div>
    </div>
   </div>
   <footer aria-label="site footer" class="site-footer">
    <div class="layout-container -padding-reduced u-container">
     <div class="site-footer-myrotary u-container u-width-11">
      <h2 class="a11y-sr-only">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <div class="u-grid-row">
       <div class="block block-rotary-menu" id="block-rotary-menu-rotary-footer-menu">
        <div class="content">
         <div class="u-grid-2">
         </div>
         <div class="u-grid-2">
         </div>
         <div class="u-grid-2">
         </div>
         <div class="u-grid-2">
         </div>
         <div class="u-grid-2">
         </div>
         <div class="u-grid-2">
         </div>
         <div class="u-grid-2">
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="block block-rotary-menu" id="block-rotary-menu-rotary-tertiary-nav">
      <div class="content">
       <ul class="site-footer-nav u-container">
        <li class="site-footer-nav-item">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item">
         [ahref]
         
        </li>
        <li class="site-footer-nav-item">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item">
         <a href="/ko">
          Endpolio.org<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li><li>[area1][mkey1]</li>
         </a>
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-rotary-social" id="block-rotary-social-social-footer">
      <div class="content">
       <ul class="site-footer-social u-container">
        <li class="site-footer-nav-item">
         <a href="/rotary">
          <span class="a11y-sr-only">
           Twitter
          </span>
         </a>
        </li>
        <li class="site-footer-nav-item">
         <a href="/rotary">
          <span class="a11y-sr-only">
           Facebook
          </span>
         </a>
        </li>
        <li class="site-footer-nav-item">
         [ahref]
          [area1][mkey1]<li>[area1][mkey1]</li>[ahref][area1][mkey1][ahref]
         
        </li>
        <li class="site-footer-nav-item">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item">
         [ahref]
         
        </li>
        <li class="site-footer-nav-item">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="block block-rotary-myrotary-blocks" id="block-rotary-myrotary-blocks-language-switcher">
      <div class="content">
       <ul class="site-footer-nav">
        <li class="site-footer-nav-item">
         [ahref]
          [area1][mkey1][linkx][pkeyx][linkx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         
        </li>
        <li class="site-footer-nav-item -margin-reduced">
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="u-text-centered">
      <div class="block block-rotary-menu" id="block-rotary-menu-rotary-site-info">
       <div class="content">
        <div class="footer-section" id="site-info">
         <p>
          <span>
           © 2019 Rotary International.
          </span>
          <span>
           저작권 보유.
          </span>
          [ahref]
          
          <a href="/ko/rotary-international-website-terms-use">
           이용약관
          </a>
          <a href="/ko/contact">
           문의
          </a>
         </p>
        </div>
       </div>
      </div>
     </div>
     <p class="u-text-centered">
      [ahref]
      
     </p>
    </div>
    <div class="layout-container -padding-reduced u-text-centered u-container">
    </div>
   </footer>
  </div>
  <div class="user_relationships_ui_popup_form" id="user_relationships_popup_form">
  </div>
  <div id="ZN_8Bx6STtNwACtxWZ">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0458
  </b>
 </body>
</html>
|<---