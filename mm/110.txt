--->|<!DOCTYPE html>
<html class="v2" dir="ltr" lang="ko" xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://www.google.com/2005/gml/b" xmlns:data="http://www.google.com/2005/gml/data" xmlns:expr="http://www.google.com/2005/gml/expr">
 <head>
  <meta content="width=1100" name="viewport"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="blogger" name="generator"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="https://4.bp.blogspot.com/-qdjiczW_gcM/WqY9Q1Hj8QI/AAAAAAAAdvU/_l_WfzJTcsMG2aLPJiBmrPhkp2UrXgilgCLcBGAs/w1200-h630-p-k-no-nu/collage03.jpg" property="og:image"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <noscript>
  </noscript>
 </head>
 <body class="loading variant-light">
  <div class="navbar section" id="navbar" name="Navbar">
   <div class="widget Navbar" data-version="1" id="Navbar1">
    <div id="navbar-iframe-container">
    </div>
   </div>
  </div>
  <div class="body-fauxcolumns">
   <div class="fauxcolumn-outer body-fauxcolumn-outer">
    <div class="cap-top">
     <div class="cap-left">
     </div>
     <div class="cap-right">
     </div>
    </div>
    <div class="fauxborder-left">
     <div class="fauxborder-right">
     </div>
     <div class="fauxcolumn-inner">
     </div>
    </div>
    <div class="cap-bottom">
     <div class="cap-left">
     </div>
     <div class="cap-right">
     </div>
    </div>
   </div>
  </div>
  <div class="content">
   <div class="content-fauxcolumns">
    <div class="fauxcolumn-outer content-fauxcolumn-outer">
     <div class="cap-top">
      <div class="cap-left">
      </div>
      <div class="cap-right">
      </div>
     </div>
     <div class="fauxborder-left">
      <div class="fauxborder-right">
      </div>
      <div class="fauxcolumn-inner">
      </div>
     </div>
     <div class="cap-bottom">
      <div class="cap-left">
      </div>
      <div class="cap-right">
      </div>
     </div>
    </div>
   </div>
   <div class="content-outer">
    <div class="content-cap-top cap-top">
     <div class="cap-left">
     </div>
     <div class="cap-right">
     </div>
    </div>
    <div class="fauxborder-left content-fauxborder-left">
     <div class="fauxborder-right content-fauxborder-right">
     </div>
     <div class="content-inner">
      <header>
       <div class="header-outer">
        [linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][mkey1][linkx][area1][mkey1][area1][mkey1][linkx][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][area1][mkey1][pkeyx][ahref][area1][mkey1][linkx][ahref][area1][keywordx][area1][mkey1][area1][keywordx][linkx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1]
       </div>
      </header>
      <div class="tabs-outer">
       <div class="tabs-cap-top cap-top">
        <div class="cap-left">
        </div>
        <div class="cap-right">
        </div>
       </div>
       <div class="fauxborder-left tabs-fauxborder-left">
        <div class="fauxborder-right tabs-fauxborder-right">
        </div>
        <div class="region-inner tabs-inner">
         <div class="tabs no-items section" id="crosscol" name="전체 열">
         </div>
         <div class="tabs no-items section" id="crosscol-overflow" name="Cross-Column 2">
         </div>
        </div>
       </div>
       <div class="tabs-cap-bottom cap-bottom">
        <div class="cap-left">
        </div>
        <div class="cap-right">
        </div>
       </div>
      </div>
      <div class="main-outer">
       <div class="main-cap-top cap-top">
        <div class="cap-left">
        </div>
        <div class="cap-right">
        </div>
       </div>
       <div class="fauxborder-left main-fauxborder-left">
        <div class="fauxborder-right main-fauxborder-right">
        </div>
        <div class="region-inner main-inner">
         <div class="columns fauxcolumns">
          <div class="fauxcolumn-outer fauxcolumn-center-outer">
           <div class="cap-top">
            <div class="cap-left">
            </div>
            <div class="cap-right">
            </div>
           </div>
           <div class="fauxborder-left">
            <div class="fauxborder-right">
            </div>
            <div class="fauxcolumn-inner">
            </div>
           </div>
           <div class="cap-bottom">
            <div class="cap-left">
            </div>
            <div class="cap-right">
            </div>
           </div>
          </div>
          <div class="fauxcolumn-outer fauxcolumn-left-outer">
           <div class="cap-top">
            <div class="cap-left">
            </div>
            <div class="cap-right">
            </div>
           </div>
           <div class="fauxborder-left">
            <div class="fauxborder-right">
            </div>
            <div class="fauxcolumn-inner">
            </div>
           </div>
           <div class="cap-bottom">
            <div class="cap-left">
            </div>
            <div class="cap-right">
            </div>
           </div>
          </div>
          <div class="fauxcolumn-outer fauxcolumn-right-outer">
           <div class="cap-top">
            <div class="cap-left">
            </div>
            <div class="cap-right">
            </div>
           </div>
           <div class="fauxborder-left">
            <div class="fauxborder-right">
            </div>
            <div class="fauxcolumn-inner">
            </div>
           </div>
           <div class="cap-bottom">
            <div class="cap-left">
            </div>
            <div class="cap-right">
            </div>
           </div>
          </div>
          <div class="columns-inner">
           <div class="column-center-outer">
            <div class="column-center-inner">
             <div class="main section" id="main" name="기본">
              <div class="widget Blog" data-version="1" id="Blog1">
               <div class="blog-posts hfeed">
                <div class="date-outer">
                 <h2 class="date-header">
                  [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                 </h2>
                 <div class="date-posts">
                  <div class="post-outer">
                   <div class="post hentry uncustomized-post-template" itemprop="blogPost" itemscope="itemscope" itemtype="http://schema.org/BlogPosting">
                    <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="image_url"/>
                    <meta content="5485550875015286825" itemprop="blogId"/>
                    <meta content="9172774317393616401" itemprop="postId"/>
                    [ahref]
                    
                    <h3 class="post-title entry-title" itemprop="name">
                     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                    </h3>
                    <div class="post-header">
                     <div class="post-header-line-1">
                     </div>
                    </div>
                    <div class="post-body entry-content" id="post-body-9172774317393616401" itemprop="description articleBody">
                     <div style="background-color: white; color: #222222; font-size: 14px; text-align: right;">
                      <span style="font-size: x-small;">
                       <span style="font-family: inherit;">
                        글 : 유형민(소자농, 사단법인 인천도시농업네트워크 이사)
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span lang="EN-US" style="letter-spacing: 0pt;">
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold;">
                      <span lang="EN-US" style="letter-spacing: 0pt;">
                       <span style="font-family: inherit;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                     </div>
                     <div class="0" style="font-weight: bold;">
                      <span lang="EN-US" style="letter-spacing: 0pt;">
                       <span style="font-family: inherit;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold;">
                      <span lang="EN-US" style="letter-spacing: 0pt;">
                       <span style="font-family: inherit;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold;">
                      <span lang="EN-US" style="letter-spacing: 0pt;">
                       <span style="color: #3d85c6; font-family: inherit;">
                        소자농의 파종에서 채종까지
                       </span>
                      </span>
                     </div>
                     <div>
                      <span lang="EN-US" style="letter-spacing: 0pt;">
                       <span style="font-family: inherit;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <blockquote class="tr_bq" style="background-color: white; color: #222222; font-size: 14px;">
                      <span style="color: #0b5394; font-size: x-small;">
                       <span style="font-family: inherit;">
                        이 연재글은 변현단
                        <span style="background-color: transparent; font-variant-east-asian: normal; font-variant-numeric: normal;">
                         (씨드림대표)
                        </span>
                        선생의
                        <b>
                         토종농사는 이렇게
                        </b>
                        라는 책과 오도선생(홍성씨앗도서관원장)의
                        <b>
                         씨앗받는 농사매뉴얼
                        </b>
                        이란 책, 가와구치 요시카츠(일본 아카메 자연농학교 교장)씨의
                        <b>
                         자연농교실
                        </b>
                        그리고 농부들의 경작 경험과 자료를 참고하고 있습니다.
                       </span>
                      </span>
                     </blockquote>
                     <blockquote class="tr_bq" style="background-color: white; color: #222222; font-size: 14px;">
                      <span style="color: #0b5394; font-size: x-small;">
                       <span style="font-family: inherit;">
                        계절별로 씨뿌려야 하는 작물 중 밭농사 중심으로 원산지, 토종의 종류, 일반적인 특징, 파종(씨앗, 모종), 혼작작물, 재배관리, 채종방법에 대해 이야기 하려합니다. 도시농부들이 기왕이면 토종씨앗으로 농사를 짓고 좋은 씨를 받아 재배하기를 반복하여 자기씨앗 한 개정도는 보유하기를 바랍니다.
                       </span>
                      </span>
                     </blockquote>
                     <blockquote class="tr_bq" style="background-color: white; color: #222222; font-size: 14px;">
                      <span style="color: #0b5394; font-size: x-small;">
                       <span style="font-family: inherit;">
                        먹거리가 산업화되어 저렴하게 소비함으로 우리들이 먹는 음식이 공산품이 되어가고 있습니다. 살아있는 모든 존재(사람,식물,동물,미생물 등)는 땅에서 살고 있는 생명을 먹습니다. 살아있는 생명은 우주의 탄생에 근원합니다.  생명의 먹거리는 지구 진화와 함께 존재하고 있습니다. 우주 아버지의 기운과 지구 어머니의 조화로움으로 생명을 유지하고, 우리는 그것을 먹습니다.
                       </span>
                      </span>
                     </blockquote>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                       </span>
                      </span>
                     </div>
                     <blockquote class="tr_bq" style="background-color: white; color: #222222; font-size: 14px;">
                      <span style="color: #0b5394; font-size: x-small;">
                       <span style="font-family: inherit;">
                        씨앗은 지속되어야 하며 순환되어야 합니다. 도시에서 씨받는 농사가 번창하길 바랍니다.
                       </span>
                      </span>
                     </blockquote>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-align: center; text-autospace: none; word-break: keep-all;">
                      <br/>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        1.
                       </span>
                       원산지 및 고구마이야기
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       가
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        .
                       </span>
                       원산지 등
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        :
                       </span>
                       남아메리카
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        /
                       </span>
                       메꽃과
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        /
                       </span>
                       씨앗수명
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        1
                       </span>
                       년
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마 씨앗을 받아 재배하였다는 이야기는 아직 들어본 적이 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       왜 그럴까요
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ?
                       </span>
                       그 이유의 해법은 원산지에 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       지구에 원시 식물의 종이 다양성을 확장하던 시대
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       남아메리카 열대 지역에서는 땅속에 저장기관을 가진 몇몇 식물이 자라나게 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       이 식물들은 휴면기에 덩이 속에 탄수화물을 저장했다가 휴면기가 지나면 덩이에서 다시 싹을 틔워 번식하는 생존전략을 구상하게 되었습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       극심한 건조기가 없는 열대기후에서 수분 부족으로 죽음을 앞두고 씨앗이나 열매로 종족을 보존 할 이유가 없었던 자연환경의 순응 결과라고 할 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       감자는 토마토
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       가지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       고추와 같은 가지과입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마는 메꽃과에 속하는 식물입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       메꽃과 식물은 덩굴식물입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       나팔꽃이 고구마와 같은 메꽃과라서 덩굴과 꽃이 고구마와 유사합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       약
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        2000
                       </span>
                       년 전부터 중
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ·
                       </span>
                       남아메리카에서 재배하였습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       콜럼버스에 의해서 에스파냐에 전해졌고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       그 뒤 필리핀
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       중국의 푸젠성
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        [
                       </span>
                       <span style="letter-spacing: 0pt;">
                        福建省
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ]
                       </span>
                       에 전해 졌으며 차차 아시아 각국에 퍼졌습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       나
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        .
                       </span>
                       우리나라 고구마재배 유래
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       조선시대에는 고구마를 감저
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       <span style="letter-spacing: 0pt;">
                        甘藷
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )·
                       </span>
                       조저
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       <span style="letter-spacing: 0pt;">
                        趙藷
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )·
                       </span>
                       남감저
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       <span style="letter-spacing: 0pt;">
                        南甘藷
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )[area1][keywordx]<li>[linkx]</li><li>[pkeyx]</li>[area1][mkey1][area1][mkey1]
                       </span>
                       라고 불렀습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       우리나라에는 일본을 통하여 전래되었습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마라는 이름도 일본말 고귀위마
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       <span style="letter-spacing: 0pt;">
                        古貴爲麻
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       에서 유래하였다고 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       조선왕조실록에 의하면
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        , 1663
                       </span>
                       년
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       현종
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        4)
                       </span>
                       에 표착하였던 사람이 그 곳에서 고구마를 먹고 있는 것을 보고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       이 작물을 재배하면 굶주림을 면할 수 있다고 보고한 기록이 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       이와 같이
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        , 1600
                       </span>
                       년대 중엽부터 일본에 표착한 어민이나 통신사들을 통하여 고구마의 존재가 우리나라에 알려지기는 하였으나
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       이를 재배하기 시작한 것은
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        1700
                       </span>
                       년대 후반부터입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마와 관련된 우리나라 고서는
                       <span style="letter-spacing: 0pt;">
                        『
                       </span>
                       운석유고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       <span style="letter-spacing: 0pt;">
                        雲石遺稿
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       <span style="letter-spacing: 0pt;">
                        』
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       <span style="letter-spacing: 0pt;">
                        『
                       </span>
                       강씨감저보
                       <span style="letter-spacing: 0pt;">
                        』
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       <span style="letter-spacing: 0pt;">
                        『
                       </span>
                       감저신보
                       <span style="letter-spacing: 0pt;">
                        』
                       </span>
                       등이 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마는 구황작물로 중요성이 인정되어 조선시대부터 관심과 재배보급에 노력하였습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        2.
                       </span>
                       씨 고구마 보관 방법
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        가
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        고구마의 보관온도
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       영상
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        10~20
                       </span>
                       <span style="letter-spacing: 0pt;">
                        ℃
                       </span>
                       이며
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       추위에 약해서 영상
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        10[area1][mkey1]<li>[ahref]</li><li>[area1][keywordx]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                       </span>
                       <span style="letter-spacing: 0pt;">
                        ℃
                       </span>
                       이하에서 오래 노출되거나 영하에서
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        5~6
                       </span>
                       시간만 노출되어도 냉해를 입을 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       냉해를 입은 고구마는 썩어 식용하지 못합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       독성이 있다고 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        나
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        가정에서 고구마 저장방법
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       고구마를 가정에서 보관할 때 너무 높은 온도에 두게 되면 싹이 일찍 올라 오게 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 보관 시에 이곳저곳으로 움직이면 고구마가 상하는 등 보관상태가 불량하게 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       영상
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        10
                       </span>
                       도에서
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        15
                       </span>
                       도 쯤 온도가 일정하게 유지되는 서늘한 창가에 박스에 숨구멍을 내어 보관 하시면 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       저는 종이박스에 신문지를 층층 깔고 고구마를 보관하여 온도가 일정한 아파트 거실 출입구에 보관합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 2
                       </span>
                       월
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        10
                       </span>
                       일경이 되면 고구마에서 싹눈이 올라옵니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        3.
                       </span>
                       가정에서 고구마 순 기르기
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       전문농가에서는
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        3
                       </span>
                       월초 하우스에 고구마를 심고 온도를 유지하여 고구마 순을 냅니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       가정에서도 가능합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 10
                       </span>
                       평정도 고구마 순을 심기위해서는 약
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        3
                       </span>
                       단
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (300
                       </span>
                       개
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       정도의 고구마 순이 필요합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 1
                       </span>
                       개의 고구마에서 순을
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        15
                       </span>
                       개 정도 수확
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       전문농가는
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        30
                       </span>
                       개 이상
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       한다면
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        20
                       </span>
                       개 정도의 고구마가 필요하겠습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[area1][keywordx][area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                       </span>
                       도시농장의 작은 텃밭에는 그리 많은 고구마 순이 필요 없으니
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        5
                       </span>
                       개
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ~10
                       </span>
                       개 정도의 고구마에서 순을 기르면 적당하겠습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        가
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        씨 고구마 선별
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       고구마가 상하거나 상처가 있는 것을 골라냅니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       외형상 건강한 고구마를 선별합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 크기는 작아도 큰 문제가 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       컴퓨터 마우스 크기에서 스마트폰 길이면 적절합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그 이상 큰 것도 문제는 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       씨 고구마 소독은
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        48
                       </span>
                       도 정도의 따듯한 물에
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        15
                       </span>
                       분정도 담그면 흑성병
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       검은별무늿병
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       을 예방 할 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        나
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        고구마 순 수경 재배하기
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       고구마를 적당한 그릇
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       바가지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       김치냉장고용 통 등
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       에 가지런히 세워줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       이때 싹눈이 많이 올라온 곳이 하늘을 보도록 세워줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마가
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        3/1
                       </span>
                       정도 잠기게 물을 부어 줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       소량의 고구마는 컵이나 페트병 등을 활용하시면 좋습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       온도가 높을수록 고구마 순이 잘 자랍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       해가 잘 드는 따듯한 곳에 보관합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       주의사항은 물에서 냄새가 나면 새물로 교체합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       물이 고여 썩으면 냄새와 가끔 날파리가 생길 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 5
                       </span>
                       월초 고구마를 밭에 심기 전 고구마 잎이 나오는 마디를 약
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        7
                       </span>
                       개
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (30cm)
                       </span>
                       정로로 가위로 잘라줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       자른 고구마 순이 밭에 심고 남으면 밭의 흙을 파서 가식하면 뿌리가 내려 활착이 더 좋아 집니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       자르고 남은 고구마를 그 상태로 계속 두면 자라서 한 번 더 수학하여 심을 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       자른 고구마 순을 스티로폼 박스에 흙을 담고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        30cm
                       </span>
                       길이의 순을
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (3/2
                       </span>
                       정도
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       흙에 묻어준 후 물을 충분히 주고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        2~3
                       </span>
                       일 정도 지나면 뿌리가 나와 밭에 옮겨 심게 되면 활착률이 더 좋아집니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US">
                       </span>
                       <span style="letter-spacing: 0pt;">
                        【
                       </span>
                       가정에서 고구마 순 수경재배
                       <span style="letter-spacing: 0pt;">
                        】
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                      </span>
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      <span style="font-family: inherit;">
                       <a href="/-b6mn-syhan0/WqY17FJq_II/AAAAAAAAdto/KzWxUg8M0nk-dQ1WI7_PZBnDBT4JxktZQCLcBGAs/s1600/resized_20170305_193701_981556104-1.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;">
                       </a>
                      </span>
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      <span style="font-family: inherit;">
                       [linkx]
                       
                      </span>
                     </div>
                     <br/>
                     <div class="0">
                      <span lang="EN-US">
                       <span style="font-family: inherit;">
                       </span>
                      </span>
                     </div>
                     <div class="0" style="color: blue; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        @ 3
                       </span>
                       월 그릇에 씨 고구마를 가지런하게 세우고 물을
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        3/1
                       </span>
                       정도 채워준다
                      </span>
                     </div>
                     <div class="0">
                      <span lang="EN-US">
                       <span style="font-family: inherit;">
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span lang="EN-US">
                       <span style="font-family: inherit;">
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        다
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        고구마 순 화분에서 재배하기
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       스티로폼 박스에 흙이나 상토를 담고 고구마를 뉘어서 심어줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       깊이는 고구마 위부분이 흙에
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        1cm
                       </span>
                       정도 덮이도록 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       나머지는 수경재배와 같습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US">
                       </span>
                       <span style="letter-spacing: 0pt;">
                        【
                       </span>
                       고구마 순 수확하기
                       <span style="letter-spacing: 0pt;">
                        】
                       </span>
                      </span>
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      <a href="/-Oqt6Pb8idYs/WqY7rJLtJdI/AAAAAAAAduw/3a623tspwCoTdYNhtxEWzN5NzBS-131kQCLcBGAs/s1600/resized_20170501_105018_1594532653.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;">
                      </a>
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      [linkx]
                      
                     </div>
                     <div class="0" style="color: blue; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        @
                       </span>
                       고구마 순을 자를 때 마디가 약
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        7
                       </span>
                       개정도 되도록 한다
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        4.
                       </span>
                       고구마 순 밭에 옮겨심기
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        가
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[linkx]<li>[ahref]</li>[linkx]
                       </span>
                       <span style="font-weight: bold;">
                        밭 만들기
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        : 5
                       </span>
                       월 초순에 보통 고구마를 심게 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마는 한줄 이랑에 심는 것이 수확하기가 수월합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그러나 도시농업 밭은 평이랑 이니
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       그 상태에서 그냥 심어도 문제는 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       전문농가에서는 고구마를 상품성
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (
                       </span>
                       크기가 작고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       균일하고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       다수확
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       있게 재배하기 위하여 여러 방법을 사용합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그러나 도시농부들은 자급을 목적으로 하니 상업 농사를 따라 할 이유가 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       도시농부가 약간의 도움만 주어도 고구마가 알아서 잘 자랍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        나
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        심기 전 물주기
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       물주기 전 호미로 고구마 순 심을 자리를 한 줄로 배를 갈라줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그리고 물을 주면 물이 다른 곳으로 흘러내리지 않고 흙속으로 침투됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그 이유는 흙속에 수분을 유지하면 고구마 순에서 뿌리가 나와 물을 찾아 깊이 들어갑니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       만약 고구마를 심고 흙 위에 물을 주면 고구마 뿌리가 땅속으로 깊이 가지 않고 위로 올라와 쉽게 가뭄에 영향을 받을 수 있기 때문입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 순을 심고 나서도 비가 오지 않으면 순이 죽습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       밭의 건조 상태를 확인하셔서 고구마 새순이 성장하는 초기에는 물을 주셔야 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마의 원산지가 습기가 있는 열대지방임을 참고하세요
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       뿌리가 활착되면 물주기를 하실 필요가 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 6
                       </span>
                       월 하순부터는 장마 등 우기가 오기 때문입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       따라서 감자를 수확하고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        6
                       </span>
                       월중순경 고구마 순을 심는 것이 고구마 생리 특성상 더 적합 할 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마가 성장하고 배수가 불량하면 고구마가 갈라지고 병이 듭니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       물 관리를 잘 하여야 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        다
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        고구마 순 심기
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       도시농부는 비닐멀칭을 사용하지 않고 고구마 순을 심습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       차라리 고구마 순 심기에는 비닐 멀칭이 없는 것이 더 도움이 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 마디가
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        7
                       </span>
                       개라면
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        5~ 6
                       </span>
                       마디는 흙속에 들어가도록 흙바닥과 수평으로 순을 놓고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        2~3cm
                       </span>
                       깊이로 흙을 덮어주고 힘 것 눌러 밀착 시켜줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       이런 방법을 수평심기라고 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 순은 잎이 있는 마디에서 뿌리가 내리고 고구마가 달리게 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 6
                       </span>
                       마디가 흙속에 들어가게 되면 최소
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        6
                       </span>
                       개 이상의 고구마가 열리게 됩니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       또한 수평심기는 고구마의 크기를 균일하게 해 줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       전문농가에서는 수평심기를 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 순을 나무 심듯이 세워서 일직선 또는 비스듬하게 심어도 고구마는 달립니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       단지 고구마의 크기가 일정하게 나오지 않을 뿐입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       먹는 것에는 하등의 문제가 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       여기서 주의 사항은 흙 밖으로 나온 고구마 순의 가냘픈 순이나 잎이 충분하게 살아 있어야 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       만약 첫마디의 잎이 부실하다면
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        2
                       </span>
                       번째 내지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        3
                       </span>
                       번째 마디의 잎이 흙 밖으로 나오도록 심습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       심고 나서 흙밖에 있는 잎이 타 죽어도 며칠 지나서 뿌리가 활착되면 새로운 순이 나옵니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마의 상태를 확인하고 죽은 곳에는 새로이 고구마 순을 심던지 혼작하는 작물을 심습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US">
                       </span>
                       <span style="letter-spacing: 0pt;">
                        【
                       </span>
                       밭에 고구마 순 심기
                       <span style="letter-spacing: 0pt;">
                        】
                       </span>
                      </span>
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      [linkx]
                      
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      [linkx]
                      
                     </div>
                     <div class="separator" style="clear: both; text-align: center;">
                      [ahref]
                      
                     </div>
                     <div class="0" style="color: blue; letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-align: center; text-autospace: none; word-break: keep-all;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        @
                       </span>
                       한줄 이랑을 만든 후 두둑에 물을 주고 고구마 순을 심는다
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        라
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        순 심는 간격
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       전문농가에서는 심은 줄기에 바로 이어서 줄기를 반복하여 심습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       수확량을 높이고 고구마를 상품성 있는 작은 크기로 생산하기 위해서입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       도시농부들은 밭의 규모가 협소하니 이런 방법으로 하는 것도 좋습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 순이 많다면 더욱 그렇습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       밭의 규모가 크고 고구마 순이 여유가 없다면 심는 줄 간격을 넓게 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그러면 고구마가 크게 달립니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        마
                       </span>
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       <span style="font-weight: bold;">
                        고구마 줄기 심고 풀 덮어주기
                       </span>
                       <span lang="EN-US">
                       </span>
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        :
                       </span>
                       감자심기에서 언급하였듯이 맨 흙이 햇빛에 노출되는 것은 땅을 건조하게 하고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       미생물의 활동에 악영향을 줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       주변의 풀이나 유기물을 이용하여 밭 표면을 덮어줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       만약 감자 후작으로 고구마를 심는 다면 감자줄기와 잎으로 덮어 주어도 좋습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        5.
                       </span>
                       감자 후작으로 고구마 심기
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       감자를 일찍
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (3
                       </span>
                       월
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        20
                       </span>
                       일경
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       심게 되면 수확을
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        6
                       </span>
                       월
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        20
                       </span>
                       일경에 할 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       저는 몇 년간
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        3
                       </span>
                       월
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        20
                       </span>
                       일경에 심었습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       감자를 수확하고 이어서 그 자리에 고구마 순을 심어도 고구마를 수확 할 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       어른신들 말씀으로는 예전에는 후작으로 고구마를 심어 늦게 수확했는데 요즘은 일찍 심고 일찍 수확한다고 합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그 이유는 상업농들이 추석을 앞두고 고구마를 좋은 가격에 판매하기 위해서 입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마는
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        6
                       </span>
                       월 중하순에 심어도 자급하는 것에 하등의 문제가 없습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마 수확을 서리가 내리기 전인
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        10
                       </span>
                       월 초중 순에 하면 먹고 남은 것은 씨 고구마로도 충분하게 보관 할 수 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        6.
                       </span>
                       고구마 수확하기
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마는
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        120
                       </span>
                       일
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ~130
                       </span>
                       일 정도는 되어야 맛도 있고 씨종자로서도 훌륭합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 5
                       </span>
                       월초에 심으면
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        9
                       </span>
                       월초부터 수확이 가능합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        . 6
                       </span>
                       월 중순경 심으면
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        10
                       </span>
                       월 초중 순경 서리 내리기 전에 수확합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       만약 시기를 놓쳐 수확이 늦어진다면 고구마 줄기를 서리 내리기 전에 미리 베어 놓고 며칠 늦게 수확합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마는 열대작물이라 온도에 민감합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       영상
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        9
                       </span>
                       도 이상에서 수확합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        7.
                       </span>
                       <span style="font-weight: bold;">
                        고구마 저장
                       </span>
                       <span lang="EN-US">
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마는 캐면서 껍질에 상처가 납니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       저장하기 전
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        30
                       </span>
                       도 정도의 온도에 펼쳐서 말려야 하는데 도시농부는 그런 전문적인 저장 시설이 없음으로 햇빛이 있거나 통풍이 잘되는 곳에 고구마를 펼쳐서
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        7
                       </span>
                       일정도 말립니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그런 곳이 마당하게 없다면 아파트 거실이나 베란다에 신문지를 깔고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ,
                       </span>
                       고구마를 펼쳐서 말립니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그리고 종이박스에 통풍이 되도록 사면에 적당하게 구멍을 내주고 신문지를 깔고 고구마를 한층 올리고 신문지를 까는 것을 반복합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       종이박스의 윗덮개를 테이프로 밀봉하지 말고 통풍이 되도록 덮습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       그리고
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        15
                       </span>
                       도 정도의 온도가 유지되는 적당한 곳에 보관하고는 가능한 이동시키지 않습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마를 박스에 저장 할 때 상태가 나쁜 것들은 선별합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; tab-stops: left blank 272.2pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="font-weight: bold; letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        8.
                       </span>
                       <span style="font-weight: bold;">
                        고구마와 혼작 가능한 작물
                       </span>
                       <span lang="EN-US">
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <span style="font-weight: bold;">
                        <br/>
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마를 심으면서 참깨를 적당한 간격을 두고 점파합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        5
                       </span>
                       월 초순이나 감자 후작으로 고구마를 심는
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        6
                       </span>
                       월 중순의 경우도 마찬가지로 혼작 가능합니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       고구마를 심으면서 적당한 간격으로 옥수수를 씨앗을 점파하여도 잘 자랍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        9.
                       </span>
                       고구마 수확 후 후작 심기
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마를 수확하면 배추 등 가을 작물 심는 시기가 지납니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       겨울 작물을 심습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       마늘
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (11
                       </span>
                       월초까지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ),
                       </span>
                       보리
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (10
                       </span>
                       월말까지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ),
                       </span>
                       밀
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (10
                       </span>
                       월말까지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        ),
                       </span>
                       양파
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        (10
                       </span>
                       월말까지
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        )
                       </span>
                       등 입니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        10.
                       </span>
                       토종고구마
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li>[pkeyx][linkx]
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <span lang="EN-US" style="letter-spacing: 0pt;">
                        11.
                       </span>
                       맺는 말
                      </span>
                     </div>
                     <div class="0" style="font-weight: bold; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="font-family: inherit;">
                       <br/>
                      </span>
                     </div>
                     <div class="0" style="letter-spacing: 0pt; mso-font-width: 100%; mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; mso-text-raise: 0pt; text-autospace: none;">
                      <span style="font-family: inherit;">
                       고구마줄기에도 천연적인 방제성분이 있습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       자연계의 모든 식물은 수만 년 진화하면서 자신을 병해충과 다른 식물의 공격으로부터 지켜내고 번식을 위한 방편으로 기능성 물질을 만들어 냈습니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       겨울 작물을 심고 고구마 순을 밭 표면에 덮어줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       거름도 되고 밭의 흙을 건강하게 유지시켜 줍니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       죽음도 순환되어야 삶이 건강해 집니다
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                       끝
                       <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                        .
                       </span>
                      </span>
                     </div>
                     <br/>
                     <div class="0">
                      <span style="font-family: inherit;">
                       <span lang="EN-US">
                       </span>
                      </span>
                     </div>
                     <br/>
                     <div class="0" style="mso-padding-alt: 0pt 0pt 0pt 0pt; mso-pagination: none; text-autospace: none;">
                      <span style="mso-fareast-font-family: 함초롬바탕;">
                       <span style="font-family: inherit;">
                       </span>
                       <o:p>
                       </o:p>
                      </span>
                     </div>
                     <div style="clear: both;">
                     </div>
                    </div>
                    <div class="post-footer">
                     <div class="post-footer-line post-footer-line-1">
                      <span class="post-author vcard">
                       By
                       <span class="fn" itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person">
                        <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
                        <a class="g-profile" href="/profile/10794572947516765786" rel="author" title="author profile">
                         <span itemprop="name">
                          김충기
                         </span>
                        </a>
                       </span>
                      </span>
                      <span class="post-timestamp">
                       -
                       <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
                       <a class="timestamp-link" href="/2018/03/n-3.html" rel="bookmark" title="permanent link">
                        <abbr class="published" itemprop="datePublished" title="2018-03-12T17:43:00+09:00">
                         3월 12, 2018
                        </abbr>
                       </a>
                      </span>
                      <span class="reaction-buttons">
                      </span>
                      <span class="post-comment-link">
                      </span>
                      <span class="post-backlinks post-comment-link">
                      </span>
                      <span class="post-icons">
                       <span class="item-action">
                        [linkx]
                        
                       </span>
                       <span class="item-control blog-admin pid-1739326593">
                        [linkx]
                        
                       </span>
                      </span>
                      <div class="post-share-buttons goog-inline-block">
                       [ahref]
                       
                       [ahref]
                       
                       [linkx]
                       
                       [ahref]
                       
                       [ahref]
                       
                      </div>
                     </div>
                     <div class="post-footer-line post-footer-line-2">
                      <span class="post-labels">
                       라벨:
                       <a href="/search/label/3%EC%9B%94" rel="tag">
                        3월
                       </a>
                       ,
                       [linkx]
                       
                       ,
                       [linkx]
                       
                       ,
                       [linkx]
                       
                       ,
                       <a href="/search/label/%EC%B1%84%EC%A2%85" rel="tag">
                        채종
                       </a>
                       ,
                       <a href="/search/label/%ED%85%83%EB%B0%ADn%EC%A7%80%EA%B8%88" rel="tag">
                        텃밭n지금
                       </a>
                       ,
                       [linkx]
                       
                      </span>
                     </div>
                     <div class="post-footer-line post-footer-line-3">
                      <span class="post-location">
                      </span>
                     </div>
                    </div>
                   </div>
                   <div class="comments" id="comments">
                    [linkx]
                    
                    <h4>
                     댓글 없음:
                    </h4>
                    <div id="Blog1_comments-block-wrapper">
                     <dl class="avatar-comment-indent" id="comments-block">
                     </dl>
                    </div>
                    <p class="comment-footer">
                     <div class="comment-form">
                      <a name="comment-form">
                      </a>
                      <h4 id="comment-post-message">
                       댓글 쓰기
                      </h4>
                      <p>
                      </p>
                      [ahref]
                      
                      <iframe allowtransparency="true" class="blogger-iframe-colorize blogger-comment-from-post" frameborder="0" height="410px" id="comment-editor" name="comment-editor" src="" width="100%">
                      </iframe>
                     </div>
                    </p>
                    <div id="backlinks-container">
                     <div id="Blog1_backlinks-container">
                     </div>
                    </div>
                   </div>
                  </div>
                  <div class="inline-ad">
                   <ins class="adsbygoogle" data-ad-client="ca-pub-8502959914386879" data-ad-format="auto" data-ad-host="ca-host-pub-1556223355139109" data-ad-host-channel="L0007" data-ad-slot="1424856682" data-full-width-responsive="true" style="display:block">
                   </ins>
                  </div>
                 </div>
                </div>
               </div>
               <div class="blog-pager" id="blog-pager">
                <span id="blog-pager-newer-link">
                 <a class="blog-pager-newer-link" href="/2018/03/29-3.html" id="Blog1_blog-pager-newer-link" title="최근 게시물">
                  최근 게시물
                 </a>
                </span>
                <span id="blog-pager-older-link">
                 [ahref]
                  <li>[linkx]</li><li>[area1][keywordx]</li>[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                 
                </span>
                [linkx]
                
               </div>
               <div class="clear">
               </div>
               <div class="post-feeds">
                <div class="feed-links">
                 피드 구독하기:
                 [ahref]
                 
                </div>
               </div>
              </div>
              <div class="widget PopularPosts" data-version="1" id="PopularPosts1">
               <h2>
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="widget-content popular-posts">
                <ul>
                 <li>
                  <div class="item-content">
                   <div class="item-thumbnail">
                    [linkx]
                    
                   </div>
                   <div class="item-title">
                    [ahref]
                    
                   </div>
                   <div class="item-snippet">
                    도시농업전문가란?  ● 인천도시농업네트워크는 매년 80시간 이상의 교육과정(도시농업법 제11조제1항에 의한 전문인력양성기관의 전문가과정)을 운영하고 있습니다.  ● 도시농업전문가는 도시텃밭에 적합한 농사기술의 지도, 텃밭조성 및 운영에 관한 ...
                   </div>
                  </div>
                  <div style="clear: both;">
                  </div>
                 </li>
                 <li>
                  <div class="item-content">
                   <div class="item-thumbnail">
                    <a href="/2019/06/767.html" target="_blank">
                    </a>
                   </div>
                   <div class="item-title">
                    [linkx]
                    
                   </div>
                   <div class="item-snippet">
                    미추홀구 도시농업지원센터 지원사업  2019 도시농업활동가 워크샵   일시 : 2019. 7. 6(토) ~ 7(일) 1박2일  장소 : 남양주 은행나무수련원 ( 수동면 축령산로 212-5)  대상 : 인천에서 활동하는 도시농업활동가 30여명...
                   </div>
                  </div>
                  <div style="clear: both;">
                  </div>
                 </li>
                 <li>
                  <div class="item-content">
                   <div class="item-thumbnail">
                    [ahref]
                    
                   </div>
                   <div class="item-title">
                    <a href="/2019/06/7.html">
                     [공지] 도시농부특강 7월 - 텃밭에서 만나는 곤충
                    </a>
                   </div>
                   <div class="item-snippet">
                    2019 미추홀구 도시농업지원센터  도시농부특강 7월 [텃밭에서 만나는 곤충]    2019. 7. 4.(목) 19시  미추홀구 도시농업지원센터    생태텃밭에서는 작물에 해를 주는 곤충만 있는 것이 아닙니다.  밭에서 만나는 곤충이야기를 통해...
                   </div>
                  </div>
                  <div style="clear: both;">
                  </div>
                 </li>
                 <li>
                  <div class="item-content">
                   <div class="item-thumbnail">
                    [linkx]
                    
                   </div>
                   <div class="item-title">
                    [linkx]
                    
                   </div>
                   <div class="item-snippet">
                    농생태학 공부   *농생태학은 농업과 생태학을 합친 말로, 생태과학의 적용이자 지속가능한 농생태계를 기획하고 관리하는 것이다. 과학이면서 실천이다.   누가_ 관심있는 누구나  언제_ 한 달에 한 번 (참여자를 모아보고 5명 이상이 모이면 날을 ...
                   </div>
                  </div>
                  <div style="clear: both;">
                  </div>
                 </li>
                 <li>
                  <div class="item-content">
                   <div class="item-thumbnail">
                    [linkx]
                    
                   </div>
                   <div class="item-title">
                    [linkx]
                    
                   </div>
                   <div class="item-snippet">
                    미추홀구 도시농업지원센터와 어울림텃밭에서 열린 '우리동네 텃밭축제'가 성황리에 마무리 되었습니다. 첫 행사라 부족한 점도 있었지만 전체적으로 참여하신 분들이 즐거워하여 기분이 좋았습니다.      미추홀구 도시농업지원센터는 어울림텃밭을 ...
                   </div>
                  </div>
                  <div style="clear: both;">
                  </div>
                 </li>
                </ul>
                <div class="clear">
                </div>
                <span class="widget-item-control">
                 <span class="item-control blog-admin">
                  [ahref]
                  
                 </span>
                </span>
                <div class="clear">
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="column-left-outer">
            <div class="column-left-inner">
             <aside>
              <div class="sidebar section" id="sidebar-left-1">
               <div class="widget Text" data-version="1" id="Text1">
                <h2 class="title">
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h2>
                <div class="widget-content">
                 <div>
                  - 비영리법인 단체
                 </div>
                 <div>
                  - 도시농업지원센터
                 </div>
                 <div>
                  - 전문인력양성기관
                 </div>
                 인천 남동구 백범로 275-1
                 <br/>
                 032)201-4549
                 <br/>
                 office@dosinong.net
                 <div>
                 </div>
                </div>
                <div class="clear">
                </div>
                <span class="widget-item-control">
                 <span class="item-control blog-admin">
                  <a class="quickedit" href="/rearrange?blogID=5485550875015286825&amp;widgetType=Text&amp;widgetId=Text1&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick='return _WidgetManager._PopupConfig(document.getElementById("Text1"));' rel="nofollow" target="configText1" title="수정">
                  </a>
                 </span>
                </span>
                <div class="clear">
                </div>
               </div>
               <div class="widget BlogSearch" data-version="1" id="BlogSearch1">
                <h2 class="title">
                 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                </h2>
                <div class="widget-content">
                 <div id="BlogSearch1_form">
                  <form action="/search" class="gsc-search-box" target="_top">
                   <table cellpadding="0" cellspacing="0" class="gsc-search-box">
                    <tbody>
                     <tr>
                      <td class="gsc-input">
                      </td>
                      <td class="gsc-search-button">
                      </td>
                     </tr>
                    </tbody>
                   </table>
                  </form>
                 </div>
                </div>
                <div class="clear">
                </div>
                <span class="widget-item-control">
                 <span class="item-control blog-admin">
                  <a class="quickedit" href="/rearrange?blogID=5485550875015286825&amp;widgetType=BlogSearch&amp;widgetId=BlogSearch1&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick='return _WidgetManager._PopupConfig(document.getElementById("BlogSearch1"));' rel="nofollow" target="configBlogSearch1" title="수정">
                  </a>
                 </span>
                </span>
                <div class="clear">
                </div>
               </div>
               <div class="widget FeaturedPost" data-version="1" id="FeaturedPost1">
                <h2 class="title">
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h2>
                <div class="post-summary">
                 <h3>
                  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                 </h3>
                </div>
                <div class="clear">
                </div>
                <span class="widget-item-control">
                 <span class="item-control blog-admin">
                  [linkx]
                  
                 </span>
                </span>
                <div class="clear">
                </div>
               </div>
               <div class="widget Text" data-version="1" id="Text2">
                <h2 class="title">
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h2>
                <div class="widget-content">
                 <div>
                  [ahref]
                  
                 </div>
                 <div>
                  <div class="separator" style="clear: both;">
                   [linkx]
                   
                  </div>
                  <div class="separator" style="clear: both;">
                   <a href="/iuanet" target="_blank">
                   </a>
                  </div>
                  <div class="separator" style="clear: both;">
                   [ahref]
                   
                  </div>
                 </div>
                </div>
                <div class="clear">
                </div>
                <span class="widget-item-control">
                 <span class="item-control blog-admin">
                  <a class="quickedit" href="/rearrange?blogID=5485550875015286825&amp;widgetType=Text&amp;widgetId=Text2&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick='return _WidgetManager._PopupConfig(document.getElementById("Text2"));' rel="nofollow" target="configText2" title="수정">
                  </a>
                 </span>
                </span>
                <div class="clear">
                </div>
               </div>
               <div class="widget PageList" data-version="1" id="PageList1">
                <h2>
                 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                </h2>
                <div class="widget-content">
                 <ul>
                  <li>
                   [linkx]
                   
                  </li>
                  <li>
                   [linkx]
                   
                  </li>
                  <li>
                   [ahref]
                   
                  </li>
                  <li>
                   <a href="/p/blog-page_28.html">
                    (후원)회원 가입하기
                   </a>
                  </li>
                  <li>
                   [linkx]
                   
                  </li>
                 </ul>
                 <div class="clear">
                 </div>
                 <span class="widget-item-control">
                  <span class="item-control blog-admin">
                   <a class="quickedit" href="/rearrange?blogID=5485550875015286825&amp;widgetType=PageList&amp;widgetId=PageList1&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick='return _WidgetManager._PopupConfig(document.getElementById("PageList1"));' rel="nofollow" target="configPageList1" title="수정">
                   </a>
                  </span>
                 </span>
                 <div class="clear">
                 </div>
                </div>
               </div>
               <div class="widget BlogArchive" data-version="1" id="BlogArchive1">
                <h2>
                 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                </h2>
                <div class="widget-content">
                 <div id="ArchiveList">
                  <div id="BlogArchive1_ArchiveList">
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     [ahref]
                     
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (55)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (2)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (16)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (9)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (8)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (2)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate expanded">
                     <a class="toggle" href=")">
                      <span class="zippy toggle-open">
                       ▼
                      </span>
                     </a>
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (99)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (12)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       <a class="post-count-link" href="/2018/11/">
                        11월
                       </a>
                       <span class="post-count" dir="ltr">
                        (6)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][linkx][pkeyx]
                       </a>
                       <a class="post-count-link" href="/2018/10/">
                        10월
                       </a>
                       <span class="post-count" dir="ltr">
                        (10)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <li>[area1][keywordx]</li><li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (9)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2018/04/">
                        4월
                       </a>
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate expanded">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                       <ul class="posts">
                        <li>
                         [linkx]
                         
                        </li>
                        <li>
                         <a href="/2018/03/800.html">
                          [농부이야기]800명의 안전한 먹거리를 책임지는 농부
                         </a>
                        </li>
                        <li>
                         <a href="/2018/03/4.html">
                          [공지] 도시와 농촌을 잇는 농산물 직거래 (4월 접수받습니다)
                         </a>
                        </li>
                        <li>
                         <a href="/2018/03/blog-post_26.html">
                          [텃밭, 접시에 담다] 미세먼지 잡는 돌나물요리, 돌나물두부까나페
                         </a>
                        </li>
                        <li>
                         <a href="/2018/03/n-3-4.html">
                          [텃밭n지금] 3월 말 ~ 4월 초 감자이야기
                         </a>
                        </li>
                        <li>
                         [ahref]
                         
                        </li>
                        <li>
                         <a href="/2018/03/blog-post_49.html">
                          [소식] 남동도시농업네트워크 창립! 구별활동 본격화!
                         </a>
                        </li>
                        <li>
                         <a href="/2018/03/blog-post_16.html">
                          [텃밭에서 읽다]  도시농부의 친구가 될 책들
                         </a>
                        </li>
                        <li>
                         <a href="/2018/03/29-3.html">
                          [네트워크 활동소식-29] 3월, 농심을 자극하다.
                         </a>
                        </li>
                        <li>
                         <a href="/2018/03/n-3.html">
                          [텃밭n지금] 집에서 길러 심는 고구마순, 3월부터 시작!
                         </a>
                        </li>
                        <li>
                         [ahref]
                         
                        </li>
                        <li>
                         [ahref]
                         
                        </li>
                        <li>
                         <a href="/2018/03/blog-post.html">
                          [공지] 남동도시농업네트워크 창립식에 초대합니다.
                         </a>
                        </li>
                       </ul>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                        [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][pkeyx][ahref][linkx][pkeyx][pkeyx][area1][mkey1][area1][mkey1][area1][mkey1][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][keywordx][area1][keywordx][area1][keywordx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (10)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (6)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     <a class="toggle" href=")">
                      <span class="zippy">
                       ►
                      </span>
                     </a>
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (125)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (8)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (10)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (10)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][linkx][ahref][pkeyx][pkeyx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (14)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       <a class="post-count-link" href="/2017/04/">
                        4월
                       </a>
                       <span class="post-count" dir="ltr">
                        (8)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2017/03/">
                        3월
                       </a>
                       <span class="post-count" dir="ltr">
                        (9)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (10)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       <a class="post-count-link" href="/2017/01/">
                        1월
                       </a>
                       <span class="post-count" dir="ltr">
                        (9)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     <a class="toggle" href=")">
                      <span class="zippy">
                       ►
                      </span>
                     </a>
                     [linkx]
                     
                     <span class="post-count" dir="ltr">
                      (154)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (14)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (17)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (11)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (15)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (11)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2016/05/">
                        5월
                       </a>
                       <span class="post-count" dir="ltr">
                        (16)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (16)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (14)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2016/01/">
                        1월
                       </a>
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     [linkx]
                     
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (54)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (4)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (3)[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx]
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (3)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (11)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       <a class="post-count-link" href="/2015/08/">
                        8월
                       </a>
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (3)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2015/05/">
                        5월
                       </a>
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2015/04/">
                        4월
                       </a>
                       <span class="post-count" dir="ltr">
                        (6)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2015/03/">
                        3월
                       </a>
                       <span class="post-count" dir="ltr">
                        (1)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (3)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (1)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     [linkx]
                     
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (100)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (9)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       <a class="post-count-link" href="/2014/11/">
                        11월
<li>[area1][keywordx]</li>[area1][keywordx]<li>[area1][mkey1]</li>
                       </a>
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (7)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2014/09/">
                        9월
                       </a>
                       <span class="post-count" dir="ltr">
                        (8)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (8)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (14)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (11)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (8)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (6)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (16)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (3)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     <a class="toggle" href=")">
                      <span class="zippy">
                       ►
                      </span>
                     </a>
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (39)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                        [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][pkeyx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][linkx][pkeyx][pkeyx][area1][mkey1][pkeyx][linkx][area1][mkey1][linkx][area1][keywordx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (3)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       <a class="toggle" href=")">
                        <span class="zippy">
                         ►
                        </span>
                       </a>
                       [ahref]
                       
                       <span class="post-count" dir="ltr">
                        (4)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (6)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (4)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       <a class="post-count-link" href="/2013/08/">
                        8월
                       </a>
                       <span class="post-count" dir="ltr">
                        (4)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       <a class="post-count-link" href="/2013/07/">
                        7월
                       </a>
                       <span class="post-count" dir="ltr">
                        (5)
                       </span>
                      </li>
                     </ul>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [ahref]
                       
                       <a class="post-count-link" href="/2013/06/">
                        6월
                       </a>
                       <span class="post-count" dir="ltr">
                        (13)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                   <ul class="hierarchy">
                    <li class="archivedate collapsed">
                     [ahref]
                     
                     [ahref]
                     
                     <span class="post-count" dir="ltr">
                      (2)
                     </span>
                     <ul class="hierarchy">
                      <li class="archivedate collapsed">
                       [linkx]
                       
                       [linkx]
                       
                       <span class="post-count" dir="ltr">
                        (2)
                       </span>
                      </li>
                     </ul>
                    </li>
                   </ul>
                  </div>
                 </div>
                 <div class="clear">
                 </div>
                 <span class="widget-item-control">
                  <span class="item-control blog-admin">
                   [ahref]
                   
                  </span>
                 </span>
                 <div class="clear">
                 </div>
                </div>
               </div>
               <div class="widget Subscribe" data-version="1" id="Subscribe1">
                <div style="white-space:nowrap">
                 <h2 class="title">
                  [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                 </h2>
                 <div class="widget-content">
                  <div class="subscribe-wrapper subscribe-type-POST">
                   <div class="subscribe expanded subscribe-type-POST" id="SW_READER_LIST_Subscribe1POST" style="display:none;">
                    <div class="top">
                     <span class="inner" onclick='return(_SW_toggleReaderList(event, "Subscribe1POST"));'>
                      글
                     </span>
                     <div class="feed-reader-links">
                      [linkx]
                      
                      [linkx]
                      
                      [linkx]
                      
                     </div>
                    </div>
                    <div class="bottom">
                    </div>
                   </div>
                   <div class="subscribe" id="SW_READER_LIST_CLOSED_Subscribe1POST" onclick='return(_SW_toggleReaderList(event, "Subscribe1POST"));'>
                    <div class="top">
                     <span class="inner">
                      <span onclick='return(_SW_toggleReaderList(event, "Subscribe1POST"));'>
                       글
                      </span>
                     </span>
                    </div>
                    <div class="bottom">
                    </div>
                   </div>
                  </div>
                  <div class="subscribe-wrapper subscribe-type-PER_POST">
                   <div class="subscribe expanded subscribe-type-PER_POST" id="SW_READER_LIST_Subscribe1PER_POST" style="display:none;">
                    <div class="top">
                     <span class="inner" onclick='return(_SW_toggleReaderList(event, "Subscribe1PER_POST"));'>
                      댓글
                     </span>
                     <div class="feed-reader-links">
                      [linkx]
                      
                      [linkx]
                      
                      <a class="feed-reader-link" href="/feeds/9172774317393616401/comments/default" target="_blank">
                       Atom
                      </a>
                     </div>
                    </div>
                    <div class="bottom">
                    </div>
                   </div>
                   <div class="subscribe" id="SW_READER_LIST_CLOSED_Subscribe1PER_POST" onclick='return(_SW_toggleReaderList(event, "Subscribe1PER_POST"));'>
                    <div class="top">
                     <li>[area1][keywordx]</li><li>[pkeyx]</li><li>[ahref]</li>[ahref][area1][keywordx]
                    </div>
                    <div class="bottom">
                    </div>
                   </div>
                  </div>
                  <div style="clear:both">
                  </div>
                 </div>
                </div>
                <div class="clear">
                </div>
                <span class="widget-item-control">
                 <span class="item-control blog-admin">
                  [ahref]
                  
                 </span>
                </span>
                <div class="clear">
                </div>
               </div>
               <div class="widget FollowByEmail" data-version="1" id="FollowByEmail1">
                <h2 class="title">
                 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                </h2>
                <div class="widget-content">
                 <div class="follow-by-email-inner">
                  <form action="/fb/a/mailverify" method="post" onsubmit='window.open("https://feedburner.google.com/fb/a/mailverify?uri=dosinong/AVxs", "popupwindow", "scrollbars=yes,width=550,height=520"); return true' target="popupwindow">
                   <table width="100%">
                    <tr>
                     <td>
                     </td>
                     <td width="64px">
                     </td>
                    </tr>
                   </table>
                  </form>
                 </div>
                </div>
                <span class="item-control blog-admin">
                 <div class="clear">
                 </div>
                 <span class="widget-item-control">
                  <span class="item-control blog-admin">
                   [linkx]
                   
                  </span>
                 </span>
                 <div class="clear">
                 </div>
                </span>
               </div>
              </div>
              <table border="0" cellpadding="0" cellspacing="0" class="section-columns columns-2">
               <tbody>
                <tr>
                 <td class="first columns-cell">
                  <div class="sidebar no-items section" id="sidebar-left-2-1">
                  </div>
                 </td>
                 <td class="columns-cell">
                  <div class="sidebar no-items section" id="sidebar-left-2-2">
                  </div>
                 </td>
                </tr>
               </tbody>
              </table>
              <div class="sidebar no-items section" id="sidebar-left-3">
              </div>
             </aside>
            </div>
           </div>
           <div class="column-right-outer">
            <div class="column-right-inner">
             <aside>
             </aside>
            </div>
           </div>
          </div>
          <div style="clear: both">
          </div>
         </div>
        </div>
       </div>
       <div class="main-cap-bottom cap-bottom">
        <div class="cap-left">
        </div>
        <div class="cap-right">
        </div>
       </div>
      </div>
      <footer>
       <div class="footer-outer">
        <div class="footer-cap-top cap-top">
         <div class="cap-left">
         </div>
         <div class="cap-right">
         </div>
        </div>
        <div class="fauxborder-left footer-fauxborder-left">
         <div class="fauxborder-right footer-fauxborder-right">
         </div>
         <div class="region-inner footer-inner">
          <div class="foot no-items section" id="footer-1">
          </div>
          <table border="0" cellpadding="0" cellspacing="0" class="section-columns columns-2">
           <tbody>
            <tr>
             <td class="first columns-cell">
              <div class="foot no-items section" id="footer-2-1">
              </div>
             </td>
             <td class="columns-cell">
              <div class="foot no-items section" id="footer-2-2">
              </div>
             </td>
            </tr>
           </tbody>
          </table>
          <div class="foot section" id="footer-3" name="바닥글">
           <div class="widget Attribution" data-version="1" id="Attribution1">
            <div class="widget-content" style="text-align: center;">
             세련 테마. 테마 이미지 제공:
             [linkx]
             
             . Powered by
             <a href="m" target="_blank">
              Blogger
             </a>
             .
            </div>
            <div class="clear">
            </div>
            <span class="widget-item-control">
             <span class="item-control blog-admin">
              [linkx]
              
             </span>
            </span>
            <div class="clear">
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="footer-cap-bottom cap-bottom">
         <div class="cap-left">
         </div>
         <div class="cap-right">
         </div>
        </div>
       </div>
      </footer>
     </div>
    </div>
    <div class="content-cap-bottom cap-bottom">
     <div class="cap-left">
     </div>
     <div class="cap-right">
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0117
  </b>
 </body>
</html>|<---