--->|<!DOCTYPE doctype html>
<html class="" dir="ltr" lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=device-width, user-scalable=yes" name="viewport"/>
  <meta content="MediaWiki 1.19.24" name="generator">
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
    <meta content="summary" name="twitter:card"/>
    <meta content="@getfandom" name="twitter:site"/>
    <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
    <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
    <title>
     [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </title>
    <meta content="112328095453510" prefix="fb: http://www.facebook.com/2008/fbml" property="fb:app_id"/>
    <meta content="article" property="og:type"/>
    <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
    <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
    <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
    <meta content="app-id=422467074, app-arguments=https://pokemon.fandom.com/ko/wiki/%EA%B8%B0%EC%88%A0_%EA%B0%95%ED%99%94_%EB%8F%84%EA%B5%AC" name="apple-itunes-app"/>
   </meta>
  </meta>
 </head>
 <body class="mediawiki ltr ns-0 ns-subject page-기술_강화_도구 oasis-breakpoints skin-oasis user-anon wiki-kopokemon">
  <div class="background-image-gradient">
  </div>
  <div class="WikiaSiteWrapper">
   <h2>
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h2>
   <div class="wikia-ad noprint" id="ad-skin">
   </div>
   <div class="wds-global-navigation-wrapper">
    <div class="wds-global-navigation wds-search-is-always-visible" id="globalNavigation">
     <div class="wds-global-navigation__content-bar-left">
      [linkx]
      
      <nav class="wds-global-navigation__links">
       [linkx]
       
       [ahref]
       
       <a class="wds-global-navigation__link" data-tracking-label="link.tv" href="/topics/tv">
        TV
       </a>
       <div class="wds-dropdown wds-global-navigation__link-group wds-has-dark-shadow">
        <div class="wds-dropdown__toggle wds-global-navigation__dropdown-toggle wds-global-navigation__link">
         <span>
          위키
         </span>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-dropdown__content wds-global-navigation__dropdown-content">
         <ul class="wds-list wds-is-linked">
          <li>
           <a data-tracking-label="link.explore" href="/explore">
            위키 둘러보기
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </nav>
     </div>
     <div class="wds-global-navigation__content-bar-right">
      <div class="wds-global-navigation__dropdown-controls">
       <form action="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:Search" class="wds-global-navigation__search-container">
        <div class="wds-global-navigation__search">
         <div class="wds-global-navigation__search-toggle">
          <svg class="wds-icon wds-icon-small wds-global-navigation__search-toggle-icon" id="wds-icons-magnifying-glass-small" viewbox="0 0 18 18" xmlns="http://www.w3.org/2000/svg">
           <path d="M11.563 11.504l-.03.029-.03.031A4.984 4.984 0 0 1 8 13c-2.757 0-5-2.243-5-5s2.243-5 5-5c2.756 0 5 2.243 5 5a4.983 4.983 0 0 1-1.437 3.504m5.144 3.789l-3.103-3.103A6.963 6.963 0 0 0 15 8c0-3.859-3.141-7-7-7-3.86 0-7 3.141-7 7s3.14 7 7 7a6.956 6.956 0 0 0 4.189-1.396l3.103 3.103a1.001 1.001 0 0 0 1.415-1.414" fill-rule="evenodd">
           </path>
          </svg>
          <svg class="wds-icon wds-global-navigation__search-toggle-icon" id="wds-icons-magnifying-glass" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
           <path d="M10.5 18C6.364 18 3 14.636 3 10.5S6.364 3 10.5 3 18 6.364 18 10.5 14.636 18 10.5 18m12.207 3.293l-4.823-4.822A9.455 9.455 0 0 0 20 10.5C20 5.262 15.738 1 10.5 1S1 5.262 1 10.5 5.262 20 10.5 20c2.26 0 4.338-.793 5.97-2.115l4.823 4.822a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414">
           </path>
          </svg>
          <span class="wds-global-navigation__search-toggle-text">
           검색
          </span>
         </div>
         <div class="wds-dropdown wds-global-navigation__search-dropdown wds-no-chevron wds-has-dark-shadow">
          <div class="wds-dropdown__toggle wds-global-navigation__search-input-wrapper">
           <button class="wds-button wds-is-text wds-global-navigation__search-close" type="button">
            <svg class="wds-icon wds-icon-tiny wds-global-navigation__search-close-icon" id="wds-icons-close-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
             <defs>
              <path d="M7.426 6.001l4.278-4.279A1.008 1.008 0 1 0 10.278.296L6 4.574 1.723.296A1.008 1.008 0 1 0 .295 1.722l4.278 4.28-4.279 4.277a1.008 1.008 0 1 0 1.427 1.426L6 7.427l4.278 4.278a1.006 1.006 0 0 0 1.426 0 1.008 1.008 0 0 0 0-1.426L7.425 6.001z" id="close-tiny">
              </path>
             </defs>
             <use fill-rule="evenodd" xlink:href="#close-tiny">
             </use>
            </svg>
           </button>
           <button class="wds-button wds-global-navigation__search-submit" data-tracking-label="search">
            <svg class="wds-icon wds-icon-small wds-global-navigation__search-submit-icon" id="wds-icons-arrow-small" viewbox="0 0 18 18" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
             <defs>
              <path d="M8 17a.997.997 0 0 1-.707-.293l-7-7A.983.983 0 0 1 0 9.003v-.006a.988.988 0 0 1 .293-.704l7-7a.999.999 0 1 1 1.414 1.414L3.414 8H17a1 1 0 1 1 0 2H3.414l5.293 5.293A.999.999 0 0 1 8 17" id="arrow-small">
              </path>
             </defs>
             <use xlink:href="#arrow-small">
             </use>
            </svg>
           </button>
          </div>
         </div>
        </div>
       </form>
       <div class="wds-dropdown wds-global-navigation__user-menu wds-has-dark-shadow wds-global-navigation__user-anon">
        <div class="wds-dropdown__toggle">
         <div class="wds-avatar" title="">
          <svg class="wds-avatar__image" id="wds-icons-avatar" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <path d="M12 11c-.965 0-1.75-.785-1.75-1.75S11.035 7.5 12 7.5s1.75.785 1.75 1.75S12.965 11 12 11m0-5.5a3.754 3.754 0 0 0-3.75 3.75A3.754 3.754 0 0 0 12 13a3.754 3.754 0 0 0 3.75-3.75A3.754 3.754 0 0 0 12 5.5m7.679 12.914c-1.987-2.104-4.727-3.289-7.679-3.289-2.953 0-5.692 1.185-7.679 3.289A9.955 9.955 0 0 1 2 12C2 6.486 6.486 2 12 2s10 4.486 10 10a9.956 9.956 0 0 1-2.321 6.414M12 22a9.995 9.995 0 0 1-6.25-2.187c1.613-1.719 3.844-2.688 6.25-2.688s4.637.969 6.249 2.688A9.993 9.993 0 0 1 12 22m0-22C5.383 0 0 5.383 0 12c0 3.268 1.294 6.33 3.651 8.63l.012.013A12 12 0 0 0 12 24h.036a12.008 12.008 0 0 0 8.306-3.363C22.701 18.341 24 15.273 24 12c0-6.617-5.383-12-12-12" id="user-avatar-a">
            </path>
           </defs>
           <use fill-rule="evenodd" xlink:href="#user-avatar-a">
           </use>
          </svg>
         </div>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-dropdown__content wds-is-right-aligned">
         <ul class="wds-list wds-has-lines-between">
          <li>
           <a class="wds-button wds-is-full-width" data-tracking-label="account.sign-in" href="/signin?redirect=https%3A%2F%2Fpokemon.fandom.com%2Fko%2Fwiki%2F%25EA%25B8%25B0%25EC%2588%25A0_%25EA%25B0%2595%25ED%2599%2594_%25EB%258F%2584%25EA%25B5%25AC&amp;uselang=ko" rel="nofollow">
            로그인
           </a>
          </li>
          <li>
           <div class="wds-global-navigation__user-menu-dropdown-caption">
            아직 계정이 없으신가요?
           </div>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <div class="wds-global-navigation__start-a-wiki">
        <a class="wds-button wds-is-secondary wds-global-navigation__link-button" data-tracking-label="start-a-wiki" href="/wiki/Special:CreateNewWiki?uselang=ko">
         새 위키 만들기
        </a>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="banner-notifications-placeholder">
   </div>
   <div class="WikiaTopAds" id="WikiaTopAds">
    <div class="WikiaTopAdsInner">
     <div class="wikia-ad noprint default-height" id="hivi_leaderboard">
     </div>
     <div class="wikia-ad noprint default-height" id="top_leaderboard">
     </div>
    </div>
    <div class="wikia-ad noprint default-height" id="invisible_skin">
    </div>
   </div>
   <div class="wikia-ad noprint" id="floor_adhesion">
   </div>
   <div class="wikia-ad noprint" id="invisible_high_impact_2">
   </div>
   <div id="top_leaderboard_ab">
   </div>
   <header class="wds-community-header">
    <div class="wds-community-header__wordmark" data-tracking="wordmark-image">
     [ahref]
     
    </div>
    <div class="wds-community-header__top-container">
     <div class="wds-community-header__sitename" data-tracking="sitename">
      <a href="/ko">
       포켓몬 위키
      </a>
     </div>
     <div class="wds-community-header__counter" data-tracking="counter">
      <span class="wds-community-header__counter-value">
       10,671
      </span>
      <span class="wds-community-header__counter-label">
       문서
      </span>
     </div>
     <div class="wds-community-header__wiki-buttons wds-button-group">
      [ahref]
      
     </div>
    </div>
    <nav class="wds-community-header__local-navigation">
     <ul class="wds-tabs">
      <li class="wds-tabs__tab">
       [area1][keywordx][linkx]<li>[area1][keywordx]</li>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         [linkx]
         
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li class="wds-dropdown-level-2">
           <a class="wds-dropdown-level-2__toggle" data-tracking="custom-level-2" href="#">
            <span>
             조회수 높은 문서
            </span>
            <svg class="wds-icon wds-icon-tiny wds-dropdown-chevron" id="wds-icons-menu-control-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg">
             <path d="M11.707 3.293a.999.999 0 0 0-1.414 0L6 7.586 1.707 3.293A.999.999 0 1 0 .293 4.707l5 5a.997.997 0 0 0 1.414 0l5-5a.999.999 0 0 0 0-1.414" fill-rule="evenodd">
             </path>
            </svg>
           </a>
           <div class="wds-is-not-scrollable wds-dropdown-level-2__content">
            <ul class="wds-list wds-is-linked">
             <li>
              [ahref]
              
             </li>
             <li>
              <a data-tracking="custom-level-3" href="/ko/wiki/%EC%A7%84%ED%99%94%EC%9D%98_%EB%8F%8C">
               진화의 돌
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a data-tracking="custom-level-3" href="/ko/wiki/%EC%9D%B4%EB%B8%8C%EC%9D%B4_(%ED%8F%AC%EC%BC%93%EB%AA%AC)">
               이브이 (포켓몬)
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a data-tracking="custom-level-3" href="/ko/wiki/%ED%94%BC%EC%B9%B4%EC%B8%84_(%ED%8F%AC%EC%BC%93%EB%AA%AC)">
               피카츄 (포켓몬)
              </a>
             </li>
            </ul>
           </div>
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         <a data-tracking="custom-level-1" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:%ED%8F%AC%EB%9F%BC">
          <span>
           포럼
          </span>
         </a>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-tracking="custom-level-2" href="/ko/wiki/%EA%B2%8C%EC%8B%9C%ED%8C%90:%EB%AC%B8%EC%9D%98%ED%95%98%EA%B8%B0">
            문의하기
           </a>
          </li>
          <li>
           <a data-tracking="custom-level-2" href="/ko/wiki/%EA%B2%8C%EC%8B%9C%ED%8C%90:%EB%AC%B8%EC%84%9C_%ED%9B%BC%EC%86%90_%EC%A0%9C%EB%B3%B4">
            문서 훼손 제보
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         [linkx]
         
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           <a data-tracking="custom-level-2" href="/index.php?namespace=1&amp;amp;title=%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C">
            최근바뀐 토론문서
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-dropdown">
        <div class="wds-tabs__tab-label wds-dropdown__toggle">
         <svg class="wds-icon-tiny wds-icon" id="wds-icons-book-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M3.5 3C2.673 3 2 3.673 2 4.5v2.338c.91-.434 2.09-.434 3 0V4.5c0-.397-.159-.785-.437-1.063A1.513 1.513 0 0 0 3.5 3m5 3.5c.537 0 1.045.121 1.5.338V4.5c0-.397-.159-.785-.437-1.063A1.502 1.502 0 0 0 7 4.5v2.338A3.473 3.473 0 0 1 8.5 6.5M11 11a1 1 0 0 1-1-1c0-.827-.673-1.5-1.5-1.5S7 9.173 7 10a1 1 0 1 1-2 0c0-.827-.673-1.5-1.5-1.5S2 9.173 2 10a1 1 0 1 1-2 0V4.5a3.504 3.504 0 0 1 5.977-2.477l.026.027A3.489 3.489 0 0 1 8.5 1c.937 0 1.817.363 2.477 1.023A3.524 3.524 0 0 1 12 4.5V10a1 1 0 0 1-1 1" id="book-tiny">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#book-tiny">
          </use>
         </svg>
         <span>
          둘러보기
         </span>
         <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
           <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
           </path>
          </defs>
          <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
          </use>
         </svg>
        </div>
        <div class="wds-is-not-scrollable wds-dropdown__content">
         <ul class="wds-list wds-is-linked wds-has-bolded-items">
          <li>
           <a data-tracking="explore-activity" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:WikiActivity">
            위키 활동 내역
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="wds-tabs__tab">
       <div class="wds-tabs__tab-label">
        [ahref]
        
       </div>
      </li>
     </ul>
    </nav>
   </header>
   <section class="WikiaPage V2" id="WikiaPage" onclick="">
    <div class="WikiaPageBackground" id="WikiaPageBackground">
    </div>
    <div class="WikiaPageContentWrapper">
     <header class="page-header" id="PageHeader">
      <div class="page-header__main">
       <div class="page-header__categories">
        <span class="page-header__categories-in" data-tracking="categories-top-in">
         분류:
        </span>
        <div class="page-header__categories-links">
         [linkx]
         
        </div>
       </div>
       <h1 class="page-header__title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
      </div>
      <div class="page-header__contribution">
       <div>
       </div>
       <div class="page-header__contribution-buttons">
        <div class="wds-button-group">
         [linkx]
         
         <div class="wds-dropdown">
          <div class="wds-button wds-dropdown__toggle">
           <svg class="wds-icon wds-icon-tiny wds-dropdown__toggle-chevron" id="wds-icons-dropdown-tiny" viewbox="0 0 12 12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <defs>
             <path d="M6.0001895,8.80004571 C5.79538755,8.80004571 5.5905856,8.72164496 5.43458411,8.56564348 L2.23455364,5.365613 C2.00575146,5.13681083 1.93695081,4.79280755 2.06095199,4.4936047 C2.18415316,4.19440185 2.47695595,4 2.80015903,4 L9.20021997,4 C9.52342305,4 9.81542583,4.19440185 9.93942701,4.4936047 C10.0634282,4.79280755 9.99462754,5.13681083 9.76582536,5.365613 L6.56579489,8.56564348 C6.4097934,8.72164496 6.20499145,8.80004571 6.0001895,8.80004571 Z" id="dropdown-tiny-a">
             </path>
            </defs>
            <use fill-rule="evenodd" xlink:href="#dropdown-tiny-a">
            </use>
           </svg>
          </div>
          <div class="wds-dropdown__content wds-is-not-scrollable wds-is-right-aligned">
           <ul class="wds-list wds-is-linked">
            <li>
             [linkx]
             
            </li>
            <li>
             <a class="new" data-tracking="ca-talk-dropdown" href="/ko/wiki/%ED%86%A0%EB%A1%A0:%EA%B8%B0%EC%88%A0_%EA%B0%95%ED%99%94_%EB%8F%84%EA%B5%AC?action=edit&amp;redlink=1" id="ca-talk">
              토론 (0개)
             </a>
            </li>
           </ul>
          </div>
         </div>
        </div>
        [linkx]
        
       </div>
      </div>
     </header>
     <hr class="page-header__separator"/>
     <article class="WikiaMainContent" id="WikiaMainContent">
      <div class="WikiaMainContentContainer" id="WikiaMainContentContainer">
       <div class="WikiaArticle" id="WikiaArticle">
        <div class="home-top-right-ads">
        </div>
        <div class="mw-content-ltr mw-content-text" dir="ltr" id="mw-content-text" lang="ko">
         <p>
          포켓몬에게 지니게 하였을 때 특정 타입 기술의 위력이 강화되는 도구.
         </p>
         <p>
          3세대부터는 기술 위력의 10%, 4세대부터는 기술 위력의 20%가 상승한다.
         </p>
         <nav class="toc" data-loaded="false" id="toc">
          <div id="toctitle">
           <h2>
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <span class="toctoggle">
            [
            [linkx]
             <li>[linkx]</li><li>[area1][mkey1]</li>[linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
            
            ]
           </span>
          </div>
          <ol>
          </ol>
         </nav>
         <h2>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h2>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              검은띠
             </b>
            </big>
            <br/>
            くろおび
            <br/>
            Black Belt
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               마음을 긴장시키는 띠. 지니게 하면 격투타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               마음을 긴장시키는 띠. 지니게 하면 격투타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%B6%84%EB%85%B8%EC%9D%98_%ED%98%B8%EC%88%98" title="분노의 호수">
                분노의 호수
               </a>
               의 수방 (수요일)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의
               <a href="/ko/wiki/%ED%83%9C%EA%B6%8C%EC%99%95" title="태권왕">
                태권왕
               </a>
               ゴロウ에게 5번 승리 후, 괴력몬이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EA%B4%80%EB%8F%99_15%EB%B2%88%EB%8F%84%EB%A1%9C" title="관동 15번도로">
                관동 15번도로
               </a>
               <a href="/ko/wiki/%EA%B2%A9%ED%88%AC%EB%82%A8%EB%A7%A4" title="격투남매">
                격투남매
               </a>
               의 포켓몬이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 민가의 노인에게 특정 레벨의 포켓몬 제시 (반복 획득 가능)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 수방 (수요일)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 얻을 수 있다,야생의
               [linkx]
               
               가 지니고있다.(블랙,5%)
               <br/>
               [linkx]
               
               의
               <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%84%BC%ED%84%B0" title="포켓몬센터">
                포켓몬센터
               </a>
               에서 얻는다,야생의
               [linkx]
               
               가 지니고있음(5%)
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%8D%98%EC%A7%80%EB%AF%B8" title="던지미">
                던지미
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%8D%98%EC%A7%80%EB%AF%B8" title="던지미">
                던지미
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               (
               <a href="/ko/wiki/%ED%92%80%EC%88%B2" title="풀숲">
                풀숲
               </a>
               에 숨어있는
               <a class="mw-redirect" href="/ko/wiki/%ED%95%98%EB%A6%AC%EB%AD%89" title="하리뭉">
                하리뭉
               </a>
               이 가끔씩 떨어트린다.), 야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/3/31/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EA%B2%80%EC%9D%80%EC%95%88%EA%B2%BD.png/revision/latest?cb=20110406092755&amp;path-prefix=ko">
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              검은안경
             </b>
            </big>
            <br/>
            くろいメガネ
            <br/>
            BlackGlasses
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               괴상하게 보이는 안경. 지니게 하면 악 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               괴상하게 보이는 안경. 지니게 하면 악 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EA%B8%88%EC%9E%94%ED%84%B0%EB%84%90" title="금잔터널">
                금잔터널
               </a>
               비밀 출구의 안경 찾는 사람 주위(다우징)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 민가에 있는 남성과 오전 10시~ 오후 7시59분 사이에 대화한다
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               [ahref]
               
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%95%98%EB%85%B8%ED%95%98%EB%85%B8%EB%B9%84%EC%B9%98" title="하노하노비치">
                하노하노비치
               </a>
               ,
               [linkx]
               
               (모래먼지)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              금강옥
             </b>
            </big>
            <br>
             [area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </br>
            こんごうだま
            <br/>
            Adamant Orb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            5000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            4세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               [ahref]
               
               에게 이 도구를 지니게 하면
               [ahref]
               
               과
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               오직
               [ahref]
               
               가 지니고 있을 때만 효과가 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               이 도구를 가방에 넣은 상태에서
               <a href="/ko/wiki/%EC%A7%80%ED%95%98%ED%86%B5%EB%A1%9C" title="지하통로">
                지하통로
               </a>
               에 가면 금강구슬을 채집할 확률이 상승한다.
               <br/>
               [linkx]
               
               에서 이 도구를 획득하면
               [linkx]
               
               에서 디아루가를 만날 수 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               디아루가에게 지니게 하면 드래곤과 강철 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               디아루가에게 지니게 하면 드래곤과 강철 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               D:
               [linkx]
               
               <br/>
               Pt:
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               스토리 클리어 후
               [ahref]
               
               가
               [linkx]
               
               에서 준다.
               <br/>
               [linkx]
               
               에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%81%9D%EC%9D%98_%EB%8F%99%EA%B5%B4" title="끝의 동굴">
                끝의 동굴
               </a>
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 땅에 감싸진 곳에
               [linkx]
               
               포인트에서
               <a href="/ko/wiki/%EB%8B%A4%EC%9D%B4%EB%B9%99" title="다이빙">
                다이빙
               </a>
               후 찾는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%95%98%EC%9A%B0%EC%98%AC%EB%A6%AC%EC%8B%9C%ED%8B%B0" title="하우올리시티">
                하우올리시티
               </a>
               의 쇼핑몰
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/8/81/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EA%B8%88%EC%86%8D%EC%BD%94%ED%8A%B8.png/revision/latest?cb=20110130051300&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              금속코트
             </b>
            </big>
            <br/>
            メタルコート
            <br/>
            Metal Coat
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 1000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 지니게 하면 강철 타입 기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               특수한 금속 장막. 지니게 하면 강철 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a class="mw-redirect" href="/ko/wiki/%EC%83%81%ED%8A%B8%EC%95%99%EB%8A%90%ED%98%B8" title="상트앙느호">
                상트앙느호
               </a>
               <br/>
               야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               발전소
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%BD%94%EC%9D%BC" title="코일">
                코일
               </a>
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%B6%94%EC%96%B5%EC%9D%98_%ED%83%91" title="추억의 탑">
                추억의 탑
               </a>
               <br/>
               야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a class="mw-redirect" href="/ko/wiki/%EC%83%81%ED%8A%B8%EC%95%99%EB%8A%90%ED%98%B8" title="상트앙느호">
                상트앙느호
               </a>
               <br/>
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               ,
               <a href="/ko/wiki/%ED%83%9C%EC%97%BD%EC%82%B0" title="태엽산">
                태엽산
               </a>
               <br/>
               [ahref]
               
               ,
               <a href="/ko/wiki/%EC%95%BC%EC%BD%98%EB%A1%9C%EB%93%9C" title="야콘로드">
                야콘로드
               </a>
               ,
               <a href="/ko/wiki/%EC%A1%B0%EC%9D%B8%EC%95%A0%EB%B2%84%EB%89%B4" title="조인애버뉴">
                조인애버뉴
               </a>
               (고물상),
               [linkx]
               
               (
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
               )
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%B3%BC_%EA%B3%B5%EC%9E%A5" title="볼 공장">
                볼 공장
               </a>
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%89%B4%EB%B3%B4%EB%9D%BC" title="뉴보라">
                뉴보라
               </a>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              기적의씨
             </b>
            </big>
            <br/>
            きせきのタネ
            <br/>
            Miracle Seed
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               생명이 깃든 씨앗. 지니게 하면 풀 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               생명이 깃든 씨앗. 지니게 하면 풀 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               북쪽 출구 동부에 있는 소녀가 준다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 꽃향기의 꽃밭
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               <b>
                [linkx]
                
                :
               </b>
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               [linkx]
               
               1층에 있는
               [ahref]
               
               에게서 받는다.
               <br/>
               [ahref]
               
               중앙광장의 큰나무 주변에 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의 특대 호바귀가 100%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%93%B1%ED%99%94%EC%88%B2" title="등화숲">
                등화숲
               </a>
               의 여자아이에게 받는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%95%8C%EB%A1%9C%EB%9D%BC_8%EB%B2%88%EB%8F%84%EB%A1%9C" title="알로라 8번도로">
                8번도로
               </a>
               ,
               [linkx]
               
               , 야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref][area1][mkey1]<li>[area1][mkey1]</li>[area1][keywordx]<li>[pkeyx]</li>
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              녹지않는얼음
             </b>
            </big>
            <br/>
            とけないこおり
            <br/>
            NeverMeltIce
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               열을 가까이하지 않게 하는 얼음. 지니게 하면 얼음 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               열을 가까이하지 않게 하는 얼음. 지니게 하면 얼음 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%96%BC%EC%9D%8C%EC%83%9B%EA%B8%B8" title="얼음샛길">
                얼음샛길
               </a>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               얼음방(썰물때 입장 가능)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%96%BC%EC%96%B4%EB%B6%99%EC%9D%80_%ED%8F%AD%ED%8F%AC%EC%9D%98_%EB%8F%99%EA%B5%B4" title="얼어붙은 폭포의 동굴">
                얼어붙은 폭포의 동굴
               </a>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               Pt:
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%ED%94%84%EB%A6%AC%EC%A7%80%EC%98%A4" title="프리지오">
                프리지오
               </a>
               가 지니고 있다.
               <br/>
               [ahref]
               
               에서
               [linkx]
               
               를 통해서 얻는다.
               <b>
                (겨울)
               </b>
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%88%88%EC%93%B0%EA%B0%9C" title="눈쓰개">
                눈쓰개
               </a>
               ,
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               ,
               [ahref]
               
               (
               [linkx]
               
               이벤트), 야생의
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              독바늘
             </b>
            </big>
            <br/>
            どくバリ
            <br/>
            Poison Barb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               독이 있는 작은 침. 지니게 하면 독타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 금순 (금요일)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%95%84%EB%B3%B4%ED%81%AC" title="아보크">
                아보크
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [linkx]
                [linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][area1][keywordx][pkeyx][area1][mkey1]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%84%A0%EC%9D%B8%EC%99%95" title="선인왕">
                선인왕
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 금순 (금요일)
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [linkx]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%95%98%EB%82%98_8%EB%B2%88%EB%8F%84%EB%A1%9C" title="하나 8번도로">
                8번도로
               </a>
               <br/>
               [linkx]
               
               의
               [ahref]
               
               이 있던 곳에서 아래로 가면 있다.
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%8A%A4%EC%BD%9C%ED%94%BC" title="스콜피">
                스콜피
               </a>
               가 지니고 있다(5%)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               ,
               [ahref]
               
               (수면의 그림자에서 등장하는 포켓몬을 쓰러트리거나 포획할 시 일정한 확률로 얻는다.), 야생의
               [linkx]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              딱딱한돌
             </b>
            </big>
            <br/>
            かたいいし
            <br/>
            Hard Stone
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               절대 깨지지 않는 돌. 지니게 하면 바위타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 목인
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 목인(목요일)
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EC%9B%8C%EC%BB%A4" title="포켓워커">
                 <span style="color:#000">
                  포켓워커
                 </span>
                </a>
                :
               </b>
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               이 지니고 있다.
               <br/>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a class="mw-redirect" href="/ko/wiki/%EC%88%98%EC%88%98%EA%BB%98%EB%81%BC_%EC%A0%80%ED%83%9D" title="수수께끼 저택">
                수수께끼 저택
               </a>
               ,
               <a href="/ko/wiki/%EA%B8%88%EC%9E%94%ED%84%B0%EB%84%90" title="금잔터널">
                금잔터널
               </a>
               (
               <a href="/ko/wiki/%EB%B0%94%EC%9C%84%EA%B9%A8%EA%B8%B0" title="바위깨기">
                바위깨기
               </a>
               ),
               [ahref]
               
               (
               <a href="/ko/wiki/%EB%B0%94%EC%9C%84%EA%B9%A8%EA%B8%B0" title="바위깨기">
                바위깨기
               </a>
               ),
               [ahref]
               
               (
               [ahref]
               
               ),
               <br/>
               <a href="/ko/wiki/114%EB%B2%88%EB%8F%84%EB%A1%9C" title="114번도로">
                114번도로
               </a>
               (
               [ahref]
               
               ),
               [ahref]
               
               (
               [ahref]
               
               ),
               [linkx]
               
               (
               [ahref]
               
               ),
               [linkx]
               
               (
               [ahref]
               
               ),
               <br/>
               <a href="/ko/wiki/%EC%8A%88%ED%8D%BC%ED%8A%B8%EB%A0%88%EC%9D%B4%EB%8B%9D" title="슈퍼트레이닝">
                슈퍼트레이닝
               </a>
               <br/>
               야생의 가보리가 지니고 있다.(5%)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%85%90%EC%BA%90%EB%9F%BF%ED%9E%90" title="텐캐럿힐">
                텐캐럿힐
               </a>
               , 야생의
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              목탄
             </b>
            </big>
            <br/>
            もくたん
            <br/>
            Charcoal
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            4900,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               물건을 태우는 연료. 지니게 하면 불타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               한약방의 노인이 준다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EA%B3%A0%EB%8F%99%EB%A7%88%EC%9D%84" title="고동마을">
                고동마을
               </a>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               바위밀기 후
               <br/>
               배틀컴퍼니 1층에 있는
               <a href="/ko/wiki/%EC%97%98%EB%A6%AC%ED%8A%B8_%ED%8A%B8%EB%A0%88%EC%9D%B4%EB%84%88" title="엘리트 트레이너">
                엘리트 트레이너
               </a>
               에게서 받는다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%B0%B0%EB%A1%B1%EB%A7%88%EC%9D%84" title="배롱마을">
                배롱마을
               </a>
               , 야생의
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%8B%9D%EC%8A%A4%ED%85%8C%EC%9D%BC" title="식스테일">
                식스테일
               </a>
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              백옥
             </b>
            </big>
            <br/>
            しらたま
            <br/>
            Lustrous Orb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            5000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            4세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               [ahref]
               
               에게 이 도구를 지니게 하면
               [ahref]
               
               과
               <a href="/ko/wiki/%EB%93%9C%EB%9E%98%EA%B3%A4_(%ED%83%80%EC%9E%85)" title="드래곤 (타입)">
                드래곤
               </a>
               기술의 위력이 20% 상승한다.
               <br/>
               오직
               [linkx]
               
               가 지니고 있을 때만 효과가 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               이 도구를 가방에 넣은 상태에서
               [ahref]
               
               에 가면 하양구슬을 채집할 확률이 상승한다.
               <br/>
               [linkx]
               
               에서 이 도구를 획득하면
               [linkx]
               
               에서 펄기아를 만날 수 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               펄기아에게 지니게 하면 드래곤과 물 타입 기술의 위력이 올라가는 아름답게 반짝이는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               펄기아에게 지니게 하면 드래곤과 물 타입 기술의 위력이 올라가는 아름답게 반짝이는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               P:
               <a href="/ko/wiki/%EC%B0%BD%EA%B8%B0%EB%91%A5" title="창기둥">
                창기둥
               </a>
               <br/>
               Pt:
               <a href="/ko/wiki/%EC%B2%9C%EA%B4%80%EC%82%B0" title="천관산">
                천관산
               </a>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               <a href="/ko/wiki/%EC%9A%A9%EB%82%98%EC%84%A0%ED%83%91" title="용나선탑">
                용나선탑
               </a>
               에 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에서 낚시꾼 주변
               [linkx]
               
               포인트에
               <a href="/ko/wiki/%EB%8B%A4%EC%9D%B4%EB%B9%99" title="다이빙">
                다이빙
               </a>
               후 오른쪽 위쪽부분에서 찾는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 쇼핑몰
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              백금옥
             </b>
            </big>
            <br/>
            はっきんだま
            <br/>
            Griseous Orb
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            5000
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            4세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               <a class="mw-redirect" href="/ko/wiki/%EA%B8%B0%EB%9D%BC%ED%8B%B0%EB%82%98" title="기라티나">
                기라티나
               </a>
               에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EA%B3%A0%EC%8A%A4%ED%8A%B8_(%ED%83%80%EC%9E%85)" title="고스트 (타입)">
                고스트
               </a>
               와
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               오직
               [ahref]
               
               가 지니고 있을 때만 효과가 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               기라티나에게 이 도구를 지니게 하면
               [ahref]
               
               의 밖에서도 오리진폼을 유지한다.
               <br/>
               이 도구는 교환할 수 없다. (4세대)
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               기라티나에게 지니게 하면 드래곤과 고스트 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               기라티나에게 지니게 하면 드래곤과 고스트 타입 기술의 위력이 올라가는 반짝반짝 빛나는 구슬.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               Pt:
               [ahref]
               
               의 깨어진 세계
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%8B%A0%EB%8F%84%EC%9C%A0%EC%A0%81" title="신도유적">
                신도유적
               </a>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%9B%90%EB%8D%94_%EB%B8%8C%EB%A6%AC%EC%A7%80" title="원더 브리지">
                원더 브리지
               </a>
               <br/>
               [ahref]
               
               에 있다.
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               에서 오른쪽 윗부분의
               <a href="/ko/wiki/%EB%8B%A4%EC%9D%B4%EB%B9%99" title="다이빙">
                다이빙
               </a>
               포인트에
               [ahref]
               
               후 찾는다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 쇼핑몰
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              부드러운모래
             </b>
            </big>
            <br/>
            やわらかいすな
            <br/>
            Soft Sand
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EB%95%85_(%ED%83%80%EC%9E%85)" title="땅 (타입)">
                땅
               </a>
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               만지면 보슬보슬한 모래. 지니게 하면 땅 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               만지면 보슬보슬한 모래. 지니게 하면 땅 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              [linkx][area1][keywordx][pkeyx][area1][keywordx][linkx][linkx][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][area1][mkey1][area1][keywordx][area1][mkey1][linkx][ahref]
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에서 파도타기
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               해변 동남쪽의
               [ahref]
               
               이 준다.
               <br/>
               야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EA%B3%A0%EC%A7%80" title="고지">
                고지
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EA%B2%80%EC%9D%80%EB%A8%B9%EC%8B%9C%ED%8B%B0" title="검은먹시티">
                검은먹시티
               </a>
               의 토영 (토요일)
               <br/>
               야생의
               [ahref]
               
               ,
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%ED%86%B1%EC%B9%98" title="톱치">
                톱치
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%A6%AC%EC%A1%B0%ED%8A%B8%EB%8D%B0%EC%A0%80%ED%8A%B8" title="리조트데저트">
                리조트데저트
               </a>
               <br/>
               [linkx]
                [area1][mkey1]<li>[linkx]</li>[area1][keywordx][ahref]
               
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              신비의물방울
             </b>
            </big>
            <br/>
            しんぴのしずく
            <br/>
            Mystic Water
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               지니게 하면 물타입의 기술의 위력이 올라간다
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               물방울 모양의 보석. 지니게 하면 물 타입 기술의 위력이 올라간다.
[ahref][pkeyx][pkeyx][linkx][pkeyx][area1][mkey1][ahref][ahref][ahref][linkx][area1][keywordx][ahref]
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               서쪽의 낚시꾼
               <i>
                (
                [ahref]
                
                )
               </i>
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AC%B4%EA%B6%81%EC%8B%9C%ED%8B%B0" title="무궁시티">
                무궁시티
               </a>
               에서 파도타기
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%88%98%ED%96%89%EC%9D%98_%EB%B0%94%EC%9C%84%EB%8F%99%EA%B5%B4" title="수행의 바위동굴">
                수행의 바위동굴
               </a>
               에서 얻을 수 있다.
               <br/>
               배틀컴퍼니 1층에 있는
               <a href="/ko/wiki/%EC%97%98%EB%A6%AC%ED%8A%B8_%ED%8A%B8%EB%A0%88%EC%9D%B4%EB%84%88" title="엘리트 트레이너">
                엘리트 트레이너
               </a>
               에게서 받는다. 또는 4번도로 왼쪽 낚시터에서 주울 수 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%82%A0%EC%94%A8_%EC%97%B0%EA%B5%AC%EC%86%8C" title="날씨 연구소">
                날씨 연구소
               </a>
               의 포켓몬 교환으로 얻은 포켓몬이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%98%A4%ED%95%98%EB%82%98%EB%AA%A9%EC%9E%A5" title="오하나목장">
                오하나목장
               </a>
               (
               [linkx]
               
               의 시련 후), 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%BD%98%EC%B9%98" title="콘치">
                콘치
               </a>
               ,
               [linkx]
               
               ,
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%BA%90%EC%8A%A4%ED%90%81" title="캐스퐁">
                캐스퐁
               </a>
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%AC%BC%EA%B1%B0%EB%AF%B8" title="물거미">
                물거미
               </a>
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/8/8b/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EC%8B%A4%ED%81%AC%EC%8A%A4%EC%B9%B4%ED%94%84.png/revision/latest?cb=20110406092947&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              실크스카프
             </b>
            </big>
            <br/>
            シルクのスカーフ
            <br/>
            Silk Scarf
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            3세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               감촉이 좋은 스카프. 지니게 하면 노말 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               감촉이 좋은 스카프.지니게 하면 노말타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               선착장 옆 민가에 있는 남자가 준다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               게임코너
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               금빛시티 게임코너
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               앞 풀숲
               <br/>
               [ahref]
               
               담장너머
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%B9%84%EC%9D%B5%EC%8B%9C%ED%8B%B0" title="비익시티">
                비익시티
               </a>
               에서 향로가게 위쪽의 민가
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                 <li>[linkx]</li><li>[ahref]</li>[area1][keywordx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%95%98%EC%9A%B0%EC%98%AC%EB%A6%AC%EC%8B%9C%ED%8B%B0" title="하우올리시티">
                하우올리시티
               </a>
               , 야생의
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%8D%94%EC%8A%A4%ED%8A%B8%EB%82%98" title="더스트나">
                더스트나
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              예리한부리
             </b>
            </big>
            <br/>
            するどいくちばし
            <br/>
            Sharp Beak
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               길고 뾰족한 부리. 지니게 하면 비행 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 월희 (월요일)
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EA%B9%A8%EB%B9%84%EB%93%9C%EB%A6%B4%EC%A1%B0" title="깨비드릴조">
                깨비드릴조
               </a>
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%AC%B4%EC%9E%A5%EC%A1%B0" title="무장조">
                무장조
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/40%EB%B2%88%EC%88%98%EB%A1%9C" title="40번수로">
                40번수로
               </a>
               의 월희 (월요일)
               <br/>
               야생의
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%91%90%EB%91%90" title="두두">
                두두
               </a>
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%91%90%ED%8A%B8%EB%A6%AC%EC%98%A4" title="두트리오">
                두트리오
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 카고서비스 건물에서 베테랑 트레이너가 준다.
               <br/>
               [linkx]
               
               의 카고서비스 건물에서 베테랑 트레이너가 준다.
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%B9%BC%EB%A1%9C%EC%8A%A4_5%EB%B2%88%EB%8F%84%EB%A1%9C" title="칼로스 5번도로">
                5번도로
               </a>
               , 야생의
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%ED%83%80%EC%9D%B4%EB%93%9C%EB%A6%BD%ED%98%B8" title="타이드립호">
                타이드립호
               </a>
               , 야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%95%8C%EB%A1%9C%EB%9D%BC_3%EB%B2%88%EB%8F%84%EB%A1%9C" title="알로라 3번도로">
                3번도로
               </a>
               , 야생의
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              용의이빨
             </b>
            </big>
            <br/>
            りゅうのキバ
            <br/>
            Dragon Fang
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [linkx]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               단단하고 날카로운 이빨. 지니게 하면 드래곤 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>[linkx]<li>[ahref]</li>
              </td>
              <td style="text-align:left">
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               1층 뒷방 위에 있는
               <a href="/ko/wiki/%EB%93%9C%EB%9E%98%EA%B3%A4_%EC%A1%B0%EB%A0%A8%EC%82%AC" title="드래곤 조련사">
                드래곤 조련사
               </a>
               タケル에게 5번 승리 후,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a class="mw-redirect" href="/ko/wiki/%EC%82%AC%ED%8C%8C%EB%A6%AC%EC%A1%B4" title="사파리존">
                사파리존
               </a>
               <br/>
               야생의 신뇽이 5%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%95%84%EA%B3%B5%EC%9D%B4" title="아공이">
                아공이
               </a>
               가 5%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%9A%A9%EC%9D%98_%EA%B5%B4" title="용의 굴">
                용의 굴
               </a>
               <br/>
               야생의
               [ahref]
               
               가 5%확률로 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               용나선탑 안에 있다.
               <br/>
               <a href="/ko/wiki/%EC%B1%94%ED%94%BC%EC%96%B8%EB%A1%9C%EB%93%9C/%ED%95%98%EB%82%98_(B2W2)" title="챔피언로드/하나 (B2W2)">
                챔피언로드
               </a>
               의 동굴 위에 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%95%84%EA%B3%B5%EC%9D%B4" title="아공이">
                아공이
               </a>
               ,
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%95%84%EA%B3%B5%EC%9D%B4" title="아공이">
                아공이
               </a>
               ,
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               1차 엔딩 후
               [ahref]
               
               의 식당 2층, 야생의
               [linkx]
               
               ,
               [linkx]
               
               ,
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              은빛가루
             </b>
            </big>
            <br/>
            ぎんのこな
            <br/>
            Silver Powder
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [linkx]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               은색으로 반짝이는 가루. 지니게 하면 벌레 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A3%A8%EB%B9%84%C2%B7%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 루비·사파이어">
                 <span style="color:#A00000;">
                  R
                 </span>
                 <span style="color:#0000A0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의
               [linkx]
               
               ミキオ에게 5번 승리 후,
               <a class="mw-redirect" href="/ko/wiki/%EB%B9%84%EB%82%98%EB%B0%A9" title="비나방">
                비나방
               </a>
               이 지니고 있다.
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%B7%B0%ED%8B%B0%ED%94%8C%EB%9D%BC%EC%9D%B4" title="뷰티플라이">
                뷰티플라이
               </a>
               ,
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%B9%84%EB%82%98%EB%B0%A9" title="비나방">
                비나방
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%8F%84%EB%82%98%EB%A6%AC" title="도나리">
                도나리
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               야생의
               [linkx]
               
               ,
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%B2%84%ED%84%B0%ED%94%8C" title="버터플">
                버터플[pkeyx][area1][keywordx][pkeyx][area1][keywordx][ahref][linkx][pkeyx][pkeyx][ahref][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx]
               </a>
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%B9%84%EB%82%98%EB%B0%A9" title="비나방">
                비나방
               </a>
               이 지니고 있다.
               <br/>
               <b>
                [ahref]
                
                :
               </b>
               [linkx]
               
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               1차 엔딩 후
               [ahref]
               
               불카모스의 방에 야생
               <a class="mw-redirect" href="/ko/wiki/%EB%B6%88%EC%B9%B4%EB%AA%A8%EC%8A%A4" title="불카모스">
                불카모스
               </a>
               가 지니고 있다.
               <br/>
               [ahref]
               
               불카모스의 방에 야생
               [linkx]
               
               가 지니고 있다.
               <sup>
                <b>
                 <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                  <span style="color:#000;">
                   B
                  </span>
                  <span style="color:#1111FF;">
                   2
                  </span>
                  <span style="color:#929292;">
                   W
                  </span>
                  <span style="color:#FF1111;">
                   2
                  </span>
                 </a>
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               , 야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%82%98%EB%AC%B4%EC%97%B4%EB%A7%A4_%EB%B0%AD_(%EC%95%8C%EB%A1%9C%EB%9D%BC)" title="나무열매 밭 (알로라)">
                나무열매 밭
               </a>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [ahref]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              자석
             </b>
            </big>
            <br/>
            じしゃく
            <br/>
            Magnet
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EC%A0%84%EA%B8%B0_(%ED%83%80%EC%9E%85)" title="전기 (타입)">
                전기
               </a>
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               강력한 자석. 지니게 하면 전기 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 일식 (일요일)
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               6번째 도전 보상
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               강철섬
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               의 일식 (일요일)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EC%B9%BC%EB%A1%9C%EC%8A%A4%EB%B0%9C%EC%A0%84%EC%86%8C" title="칼로스발전소">
                칼로스발전소
               </a>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               (미궁 5)
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            <a class="image image-thumbnail" href="/pokemon/images/e/ee/%EB%8F%84%ED%8A%B8_%EC%95%84%EC%9D%B4%EC%BD%98_%EC%A0%80%EC%A3%BC%EC%9D%98%EB%B6%80%EC%A0%81.png/revision/latest?cb=20110406093135&amp;path-prefix=ko">
             <noscript>
             </noscript>
            </a>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              저주의부적
             </b>
            </big>
            <br/>
            のろいのおふだ
            <br/>
            Spell Tag
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            [ahref]
            
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EA%B3%A0%EC%8A%A4%ED%8A%B8_(%ED%83%80%EC%9E%85)" title="고스트 (타입)">
                고스트
               </a>
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               괴상하고 으스스한 부적. 지니게 하면 고스트 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               의 토영(토요일)
               <br/>
               야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%AC%B4%EC%9A%B0%EB%A7%88" title="무우마">
                무우마
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C" title="포켓몬스터 에메랄드">
                 <span style="color:#00A000;">
                  E
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               <br/>
               Pt:
               [ahref]
               
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%AC%B4%EC%A7%80%EA%B0%9C%EC%8B%9C%ED%8B%B0" title="무지개시티">
                무지개시티
               </a>
               의 무지개맨션 옥상
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               타워오브해븐
               <br/>
               야생의
               [linkx]
               
               가 지니고 있다.
               <br/>
               [linkx]
               
               의
               <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%84%BC%ED%84%B0" title="포켓몬센터">
                포켓몬센터
               </a>
               에 있는 할머니에게서 받는다.
               [ahref]
               
               의 책방에 있다.
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [linkx]
               
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [linkx]
               
               ,
               [linkx]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EB%8D%B0%EC%8A%A4%EB%8B%88%EC%B9%B8" title="데스니칸">
                데스니칸
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               ,
               [ahref]
               
               (모래구멍), 야생의
               <a class="mw-redirect" href="/ko/wiki/%EB%AA%A8%EB%9E%98%EA%BF%8D" title="모래꿍">
                모래꿍
               </a>
               이 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
            [linkx]
            
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              휘어진스푼
             </b>
            </big>
            <br/>
            まがったスプーン
            <br/>
            TwistedSpoon
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50,
            <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
             <span style="color:#F1912B;">
              S
             </span>
             <span style="color:#5599CA;">
              M
             </span>
            </a>
            : 500
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EC%97%90%EC%8A%A4%ED%8D%BC_(%ED%83%80%EC%9E%85)" title="에스퍼 (타입)">
                에스퍼
               </a>
               기술의 위력이 20% 상승한다.
               <br/>
               4세대 이전에는 10%
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               염동력을 담은 숟가락. 지니게 하면 에스퍼 타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에서 데려온
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               <a class="mw-redirect" href="/ko/wiki/%EC%9C%A4%EA%B2%94%EB%9D%BC" title="윤겔라">
                윤겔라
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[area1][keywordx]</li><li>[linkx]</li>[area1][mkey1]
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               야생의
               [ahref]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%95%98%ED%8A%B8%EA%B3%A8%EB%93%9C%C2%B7%EC%86%8C%EC%9A%B8%EC%8B%A4%EB%B2%84" title="포켓몬스터 하트골드·소울실버">
                 <span style="color:#B69E00;">
                  HG
                 </span>
                 <span style="color:#7D7D92;">
                  SS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/29%EB%B2%88%EB%8F%84%EB%A1%9C" title="29번도로">
                29번도로
               </a>
               의 화홍 (화요일)
               <br/>
               야생의
               [linkx]
               
               ,
               [ahref]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%99%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B8" title="포켓몬스터 블랙·화이트">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               지하 남서쪽 초능력자 근처에 있다.
               <br>
                [area1][keywordx]<li>[pkeyx]</li><li>[area1][mkey1]</li><li>[linkx]</li>
               </br>
               구름시티 지하 하수도에서 주울 수 있다.
               <sup>
                <b>
                 [linkx]
                 
                </b>
               </sup>
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_X%C2%B7Y" title="포켓몬스터 X·Y">
                 <span style="color:#025DA6;">
                  X
                 </span>
                 <span style="color:#EA1A3E;">
                  Y
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [linkx]
               
               , 야생의
               [linkx]
               
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               [ahref]
               
               에서 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%BA%90%EC%9D%B4%EC%8B%9C" title="캐이시">
                캐이시
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               <a href="/ko/wiki/%EB%A7%90%EB%A6%AC%EC%97%90%EC%8B%9C%ED%8B%B0" title="말리에시티">
                말리에시티
               </a>
               (외곽 해안가), 야생의
               <a class="mw-redirect" href="/ko/wiki/%EC%BA%90%EC%9D%B4%EC%8B%9C" title="캐이시">
                캐이시
               </a>
               가 지니고 있다.
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              물방울리본
             </b>
            </big>
            <br/>
            みずたまリボン
            <br/>
            Polkadot Bow
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               [ahref]
               
               기술의 위력이 10% 상승한다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               3세대에서
               [linkx]
               
               로 대체되었다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               지니게 하면 노말타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [linkx]
                
                <br/>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%8C%8C%EC%9D%B4%EC%96%B4%EB%A0%88%EB%93%9C%C2%B7%EB%A6%AC%ED%94%84%EA%B7%B8%EB%A6%B0" title="포켓몬스터 파이어레드·리프그린">
                 <span style="color:#FF7327;">
                  FR
                 </span>
                 <span style="color:#00DD00;">
                  LG
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C%C2%B7%ED%8E%84" title="포켓몬스터 다이아몬드·펄">
                 <span style="color:#AAAAFF;">
                  D
                 </span>
                 <span style="color:#FFAAAA;">
                  P
                 </span>
                </a>
                [ahref]
                
                <br/>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a class="mw-redirect" href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%B8%94%EB%9E%992%C2%B7%ED%99%94%EC%9D%B4%ED%8A%B82" title="포켓몬스터 블랙2·화이트2">
                 <span style="color:#000;">
                  B
                 </span>
                 <span style="color:#1111FF;">
                  2
                 </span>
                 <span style="color:#929292;">
                  W
                 </span>
                 <span style="color:#FF1111;">
                  2
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%9A%B8%ED%8A%B8%EB%9D%BC%EC%8D%AC%C2%B7%EC%9A%B8%ED%8A%B8%EB%9D%BC%EB%AC%B8" title="포켓몬스터 울트라썬·울트라문">
                 <span style="color:#E95B2B;">
                  US
                 </span>
                 <span style="color:#226DB5;">
                  UM
                 </span>
                </a>
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table cellpadding="10" class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              [area1][keywordx][pkeyx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </tr>
             <tr>
              <td colspan="2">
               <b>
                [ahref]
                
                [ahref]
                
               </b>
               1세대에서 데려온
               <a class="mw-redirect" href="/ko/wiki/%ED%91%B8%EB%A6%B0" title="푸린">
                푸린
               </a>
               이 지니고 있다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <table class="rounded" style="width:100%; text-align:center; border:5px solid #8E8EB1;">
          <tr>
           <td>
           </td>
           <td class="rounded" style="background:#CCF">
            <big>
             <b>
              핑크리본
             </b>
            </big>
            <br/>
            ピンクのリボン
            <br/>
            Pink Bow
           </td>
           <td style="text-align:left; padding-left:0.5em; line-height:1.6em;">
            <b>
             가격:
            </b>
            비매품
            <br/>
            <b>
             판매가:
            </b>
            50
           </td>
           <td>
            <b>
             첫등장
            </b>
            <br/>
            2세대
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="rounded-top" style="width:100%; border:1px solid #CCF;">
             <tr>
              <th style="width:90px; background: #CCF; border-top-left-radius: 10px;">
               효과
              </th>
              <td style="text-align:left; border-top-right-radius: 10px;">
               포켓몬에게 이 도구를 지니게 하면
               <a href="/ko/wiki/%EB%85%B8%EB%A7%90_(%ED%83%80%EC%9E%85)" title="노말 (타입)">
                노말
               </a>
               기술의 위력이 10% 상승한다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4">
            <table style="width:100%; border: 1px solid #CCF">
             <tr>
              <th style="width:90px; background:#CCF">
               부가효과
              </th>
              <td style="text-align:left">
               3세대에서
               [linkx]
               
               로 대체되었다.
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table class="prettytable rounded-top collapsible autocollapse" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background:#CCF">
               설 명
              </th>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               지니게 하면 노말타입 기술의 위력이 올라간다.
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [ahref]
                
                [linkx]
                
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td>
               <b>
                [linkx]
                
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%94%8C%EB%9D%BC%ED%8B%B0%EB%82%98" title="포켓몬스터 플라티나">
                 <span style="color:#999999;">
                  Pt
                 </span>
                </a>
                <br/>
                [linkx]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [ahref]
                
               </b>
               <br/>
               <b>
                [ahref]
                
               </b>
              </td>
              <td style="text-align:left">
               X
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%98%A4%EB%A9%94%EA%B0%80%EB%A3%A8%EB%B9%84%C2%B7%EC%95%8C%ED%8C%8C%EC%82%AC%ED%8C%8C%EC%9D%B4%EC%96%B4" title="포켓몬스터 오메가루비·알파사파이어">
                 <span style="color:#AB2813;">
                  ΩR
                 </span>
                 <span style="color:#26649C;">
                  αS
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
             <tr>
              <td style="width: 70px;">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EC%8D%AC%C2%B7%EB%AC%B8" title="포켓몬스터 썬·문">
                 <span style="color:#F1912B;">
                  S
                 </span>
                 <span style="color:#5599CA;">
                  M
                 </span>
                </a>
               </b>
               <br/>
               <b>
                [linkx]
                
               </b>
               <br/>
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EB%A0%88%EC%B8%A0%EA%B3%A0!_%ED%94%BC%EC%B9%B4%EC%B8%84%C2%B7%EB%A0%88%EC%B8%A0%EA%B3%A0!_%EC%9D%B4%EB%B8%8C%EC%9D%B4" title="포켓몬스터 레츠고! 피카츄·레츠고! 이브이">
                 <span style="color:#F5DA26;">
                  LP
                 </span>
                 <span style="color:#D4924B;">
                  LE
                 </span>
                </a>
               </b>
              </td>
              <td style="text-align:left">
              </td>
             </tr>
            </table>
           </td>
          </tr>
          <tr>
           <td colspan="4" style="padding:0 5px">
            <table cellpadding="10" class="prettytable rounded-top" style="width:100%; margin:3px 0;">
             <tr>
              <th class="rounded-top" colspan="2" style="background: #CCF">
               얻 는 곳
              </th>
             </tr>
             <tr>
              <td colspan="2">
               <b>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%EA%B8%88%C2%B7%EC%9D%80" title="포켓몬스터 금·은">
                 <span style="color:#DAA520;">
                  G
                 </span>
                 <span style="color:#C0C0C0;">
                  S
                 </span>
                </a>
                <a href="/ko/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0_%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%83%88" title="포켓몬스터 크리스탈">
                 <span style="color:#4FD9FF;">
                  C
                 </span>
                </a>
               </b>
               [ahref]
               
               의
               <b>
                화홍
               </b>
               <sup>
                <b>
                 [ahref]
                 
                </b>
               </sup>
               ,
               [linkx]
               
               [linkx]
               
               이벤트 완료 후 4층 스튜디오에 있는
               [linkx]
               
               (나옹 주인)
              </td>
             </tr>
            </table>
           </td>
          </tr>
         </table>
         <hr>
          <table class="navbox mw-collapsible" data-collapsetext="숨기기" data-expandtext="보이기">
           <tr>
            <th class="navbox__title" colspan="2" scope="col">
             <span class="navbox__vde">
              <a href="/ko/wiki/%ED%8B%80:%EB%8F%84%EA%B5%AC" title="틀:도구">
               <span style="color:#111;">
                보기
               </span>
              </a>
              ᛫
              <a class="new" data-uncrawlable-url="L2tvL3dpa2kvJUVEJThCJTgwJUVEJTg2JUEwJUVCJUExJUEwOiVFQiU4RiU4NCVFQSVCNSVBQz9hY3Rpb249ZWRpdCZyZWRsaW5rPTE=" rel="nofollow" title="틀토론:도구 (없는 문서)">
               <span style="color:#111;">
                토론
               </span>
              </a>
              ᛫
              [ahref]
              
             </span>
             <a href="/ko/wiki/%EB%8F%84%EA%B5%AC" title="도구">
              도구
             </a>
            </th>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row">
            <th class="navbox__group" scope="row">
             일반 도구
            </th>
            <td class="navbox__list">
             [linkx]
             
             (
             [ahref]
             
             ) ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             <a href="/ko/wiki/%EC%A7%84%ED%99%94_%EB%8F%84%EA%B5%AC" title="진화 도구">
              진화 도구
             </a>
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             <a class="mw-redirect" href="/ko/wiki/%ED%99%94%EC%84%9D" title="화석">
              화석
             </a>
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%ED%8B%B0%EC%BC%93" title="티켓">
              티켓
             </a>
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row alt">
            <th class="navbox__group" scope="row">
             회복약
            </th>
            <td class="navbox__list">
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EC%98%81%EC%96%91%EC%A0%9C" title="영양제">
              영양제
             </a>
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             <a href="/ko/wiki/%EC%9D%8C%EB%A3%8C%EC%88%98" title="음료수">
              음료수
             </a>
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row">
            <th class="navbox__group" scope="row">
             열매
            </th>
            <td class="navbox__list">
             [ahref]
             
             ᛫
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row alt">
            <th class="navbox__group" scope="row">
             장식품
            </th>
            <td class="navbox__list">
             [ahref]
             
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
             (
             [linkx]
             
             )
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row">
            <th class="navbox__group" scope="row">
             [ahref]
             
            </th>
            <td class="navbox__list">
             [linkx]
             
             ᛫
             [ahref]
             
             ᛫
             <a href="/ko/wiki/%EB%8A%A5%EB%A0%A5%EC%B9%98_%EC%83%81%EC%8A%B9_%EB%8F%84%EA%B5%AC" title="능력치 상승 도구">
              능력치 상승 도구
             </a>
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EC%A7%84%ED%99%94_%EB%8F%84%EA%B5%AC" title="진화 도구">
              진화 도구
             </a>
             ᛫
             <strong class="selflink">
              기술 강화 도구
             </strong>
             ᛫
             <a href="/ko/wiki/%ED%94%8C%EB%A0%88%EC%9D%B4%ED%8A%B8" title="플레이트">
              플레이트
             </a>
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EC%A3%BC%EC%96%BC" title="주얼">
              주얼
             </a>
             ᛫
             <a href="/ko/wiki/%ED%96%A5%EB%A1%9C" title="향로">
              향로
             </a>
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             [linkx]
             
             ᛫
             <a href="/ko/wiki/%EB%A9%94%EA%B0%80%EC%8A%A4%ED%86%A4" title="메가스톤">
              메가스톤
             </a>
             ᛫
             [ahref]
             
             ᛫
             [ahref]
             
            </td>
           </tr>
           <tr class="navbox__gutter">
            <td colspan="2">
            </td>
           </tr>
           <tr class="navbox__row alt">
            <th class="navbox__group" scope="row">
             그외
            </th>
            <td class="navbox__list">
             [linkx]
             
             (
             [ahref]
             
             ,
             [ahref]
             
             ,
             [linkx]
             
             ,
             [linkx]
             
             ,
             [linkx]
             
             ,
             [linkx]
             
             ,
             <a href="/ko/wiki/%EC%A4%91%EC%9A%94%ED%95%9C_%EB%8F%84%EA%B5%AC/7%EC%84%B8%EB%8C%80" title="중요한 도구/7세대">
              7
             </a>
             ) ᛫
             [ahref]
             
             ᛫
             [linkx]
             
            </td>
           </tr>
          </table>
          <noscript>
          </noscript>
         </hr>
        </div>
        <div class="printfooter">
         원본 주소 ‘
         [ahref]
         
         ’
        </div>
       </div>
       <nav class="article-categories CategorySelect articlePage" id="articleCategories">
        <div class="container">
         <div class="special-categories">
          <a class="categoriesLink" href="/ko/wiki/%ED%8A%B9%EC%88%98%EA%B8%B0%EB%8A%A5:%EB%B6%84%EB%A5%98" rel="nofollow" title="특수기능:분류">
           분류
          </a>
          :
         </div>
         <ul class="categories">
          <li class="category normal" data-name="도구" data-namespace="" data-outertag="" data-sortkey="" data-type="normal">
           <span class="name">
            [ahref]
            
           </span>
           <ul class="toolbar">
            <li class="tool editCategory sprite-small edit" title="">
            </li>
            <li class="tool removeCategory sprite-small delete" title="">
            </li>
           </ul>
          </li>
         </ul>
        </div>
       </nav>
       <div class="license-description">
        Community content is available under
        [linkx]
        
        unless otherwise noted.
       </div>
      </div>
     </article>
     <div class="WikiaRail" id="WikiaRailWrapper">
      <div class="wikia-rail-inner" id="WikiaRail">
       <div id="top-right-boxad-wrapper">
        <div class="wikia-ad noprint default-height" id="top_boxad">
        </div>
       </div>
       <div class="loading">
       </div>
      </div>
     </div>
     <footer class="WikiaFooter notoolbar" id="WikiaFooter">
      <div id="bottomLeaderboardWrapper">
       <div class="wikia-ad noprint default-height" id="bottom_leaderboard">
       </div>
      </div>
      <div class="mcf-international" data-number-of-wiki-articles="13" id="mixed-content-footer">
       <div class="mcf-content">
        <h1 class="mcf-header">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <div class="mcf-mosaic">
         <div class="mcf-column">
          <div class="mcf-card mcf-card-wiki-articles">
           <header class="mcf-card-wiki-articles__header">
            <span class="mcf-card-wiki-articles__header-text">
             More 포켓몬 위키
            </span>
           </header>
           <ul class="mcf-card-wiki-articles__list">
            <li class="mcf-card-wiki-articles__item">
             [linkx]
             
            </li>
            <li class="mcf-card-wiki-articles__item">
             [linkx]
             
            </li>
            <li class="mcf-card-wiki-articles__item">
             [linkx]
             
            </li>
           </ul>
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-4">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-7">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-10">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-13">
          </div>
         </div>
         <div class="mcf-column">
          <div class="mcf-card-wiki-placeholder mcf-card-sponsored-content" data-tracking="footer-card-2">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-5">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-8">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-11">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-14">
          </div>
         </div>
         <div class="mcf-column">
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-3">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-6">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-9">
          </div>
          <div class="mcf-card-wiki-placeholder" data-tracking="footer-card-12">
          </div>
          <div class="mcf-card mcf-card-related-wikis">
           <header class="mcf-card-related-wikis__header">
            Explore Wikis
           </header>
           <ul class="mcf-card-related-wikis__list">
            <li class="mcf-card-related-wikis__item">
             <a class="mcf-card-related-wikis__item-link" data-tracking="explore-wikis-1" href="/en-spotlight-test-glitchtale" title="Glitchtale Wiki">
              <div>
               <span class="mcf-card-related-wikis__title">
                Glitchtale Wiki
               </span>
              </div>
             </a>
            </li>
            <li class="mcf-card-related-wikis__item">
             [ahref]
             
            </li>
            <li class="mcf-card-related-wikis__item">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
      </div>
     </footer>
    </div>
   </section>
   <footer class="wds-global-footer">
    <h2 class="wds-global-footer__header">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h2>
    <div class="wds-global-footer__main">
     <div class="wds-global-footer__fandom-sections">
      <section class="wds-global-footer__fandom-section wds-is-fandom-overview">
       <h3 class="wds-global-footer__section-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__fandom-section wds-is-follow-us">
       <h3 class="wds-global-footer__section-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="follow-us.twitter" href="/getfandom">
          <svg class="wds-global-footer__image wds-icon" id="wds-icons-twitter" viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <path d="M20.681 7.328v.577c0 5.915-4.486 12.695-12.735 12.695-2.605 0-4.92-.721-6.946-2.02.434 0 .724.145 1.158.145 2.026 0 4.052-.722 5.644-1.876-1.882 0-3.618-1.298-4.197-3.174.29 0 .579.145.868.145.434 0 .434 0 1.013-.145-2.17-.432-4.052-2.308-4.052-4.472 0 .433 1.592.433 2.316.577-1.158-.865-1.882-2.164-1.882-3.75 0-.866.29-1.587.724-2.309 2.17 2.741 5.644 4.472 9.261 4.761-.144-.433-.144-.721-.144-1.01C11.709 5.02 13.735 3 16.195 3c1.302 0 2.46.433 3.328 1.443 1.013-.289 1.882-.577 2.75-1.154-.434 1.154-1.158 1.875-1.881 2.452a13.73 13.73 0 0 0 2.604-.721c-.723.865-1.447 1.73-2.315 2.308z" id="twitter-a">
            </path>
           </defs>
           <use fill-rule="evenodd" xlink:href="#twitter-a">
           </use>
          </svg>
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
     </div>
     <div class="wds-global-footer__wikia-sections">
      <section class="wds-global-footer__wikia-section wds-is-company-overview">
       <h3 class="wds-global-footer__section-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="company-overview.about" href="/about">
          소개
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-site-overview">
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-community">
       <h3 class="wds-global-footer__section-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="community.community-central" href="/ko/wiki/%EB%8C%80%EB%AC%B8">
          중앙 커뮤니티
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="community.support" href="/">
          지원
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="community.wam" href="/wiki/WAM">
          WAM 점수
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-create-wiki">
       <span class="wds-global-footer__section-description">
        원하는 커뮤니티를 찾지 못하셨나요? 그럼 직접 원하는 커뮤니티를 만들어 보세요!
       </span>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-community-apps">
       <h3 class="wds-global-footer__section-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <span class="wds-global-footer__section-description">
        모바일에서도 팬덤과 함께해 보세요!
       </span>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         <a class="wds-global-footer__link" data-tracking-label="community-apps.app-store" href="/us/app/fandom-videos-news-reviews/id1230063803?ls=1&amp;mt=8">
          <svg class="wds-global-footer__image wds-icon" id="wds-company-store-appstore" viewbox="0 0 119 35" xmlns="http://www.w3.org/2000/svg">
           <g fill="none" fill-rule="evenodd">
            <path d="M114.766 35H4.17C1.87 35 0 33.138 0 30.859V4.135C0 1.855 1.87 0 4.169 0h110.597C117.063 0 119 1.855 119 4.135V30.86c0 2.279-1.937 4.141-4.234 4.141" fill="#A9AAA9">
            </path>
            <path d="M118.147 30.86c0 1.851-1.511 3.35-3.38 3.35H4.17c-1.87 0-3.385-1.498-3.385-3.35V4.134C.785 2.284 2.3.78 4.169.78h110.597c1.87 0 3.38 1.505 3.38 3.355V30.86" fill="#0A0B09">
            </path>
            <path d="M26.557 17.311c-.025-2.82 2.327-4.192 2.434-4.257-1.332-1.928-3.396-2.19-4.122-2.211-1.734-.181-3.416 1.03-4.299 1.03-.9 0-2.262-1.012-3.727-.983-1.885.03-3.65 1.113-4.619 2.797-1.997 3.432-.507 8.477 1.406 11.251.958 1.36 2.076 2.877 3.54 2.823 1.432-.06 1.967-.907 3.696-.907 1.713 0 2.216.907 3.709.873 1.537-.025 2.505-1.365 3.429-2.736 1.106-1.558 1.55-3.092 1.568-3.171-.036-.012-2.986-1.129-3.015-4.509m-2.82-8.293c.77-.957 1.296-2.258 1.15-3.578-1.115.049-2.51.765-3.312 1.7-.71.825-1.345 2.176-1.181 3.447 1.253.092 2.539-.628 3.343-1.57M43.858 22.71l-.992-3.04c-.104-.31-.301-1.042-.592-2.194h-.034a84.012 84.012 0 0 1-.557 2.195l-.974 3.04h3.15zm3.43 4.856h-2.003l-1.096-3.42h-3.811l-1.045 3.42h-1.948l3.776-11.644h2.332l3.794 11.644zm7.796-4.233c0-.817-.185-1.491-.557-2.021-.407-.553-.951-.83-1.636-.83a1.96 1.96 0 0 0-1.262.459 2.115 2.115 0 0 0-.74 1.2 2.42 2.42 0 0 0-.087.57v1.4c0 .61.19 1.126.566 1.546.378.42.868.63 1.47.63.708 0 1.26-.27 1.654-.811.394-.542.592-1.256.592-2.143zm1.914-.068c0 1.427-.388 2.556-1.166 3.385-.696.738-1.56 1.106-2.593 1.106-1.113 0-1.914-.397-2.401-1.193h-.036v4.423h-1.879v-9.052c0-.898-.024-1.82-.07-2.765h1.653l.105 1.331h.035c.626-1.002 1.578-1.503 2.854-1.503.998 0 1.83.391 2.498 1.174.667.784 1 1.815 1 3.094zm7.815.068c0-.817-.186-1.491-.557-2.021-.407-.553-.952-.83-1.636-.83-.465 0-.885.154-1.263.459a2.123 2.123 0 0 0-.738 1.2c-.058.231-.088.42-.088.57v1.4c0 .61.189 1.126.564 1.546.378.42.869.63 1.473.63.707 0 1.258-.27 1.652-.811.395-.542.593-1.256.593-2.143zm1.914-.068c0 1.427-.388 2.556-1.167 3.385-.695.738-1.56 1.106-2.592 1.106-1.114 0-1.915-.397-2.401-1.193h-.036v4.423h-1.879v-9.052c0-.898-.024-1.82-.07-2.765h1.654l.104 1.331h.035c.626-1.002 1.576-1.503 2.854-1.503.997 0 1.83.391 2.498 1.174.666.784 1 1.815 1 3.094zm10.878 1.036c0 .99-.347 1.796-1.042 2.418-.764.68-1.828 1.02-3.196 1.02-1.26 0-2.274-.242-3.04-.726l.436-1.555a5.18 5.18 0 0 0 2.716.743c.708 0 1.26-.158 1.655-.476.395-.317.59-.741.59-1.272 0-.473-.16-.87-.487-1.194-.323-.323-.864-.623-1.617-.9-2.054-.76-3.081-1.874-3.081-3.34 0-.956.36-1.741 1.08-2.353.717-.611 1.674-.917 2.871-.917 1.068 0 1.955.184 2.662.552l-.47 1.521c-.661-.357-1.409-.535-2.245-.535-.661 0-1.178.16-1.548.483a1.38 1.38 0 0 0-.47 1.055c0 .46.179.84.54 1.139.312.277.88.577 1.705.9 1.01.403 1.75.874 2.228 1.415.476.542.713 1.216.713 2.022m6.213-3.731h-2.071v4.076c0 1.037.365 1.555 1.096 1.555.336 0 .616-.029.836-.086l.051 1.417c-.37.137-.857.206-1.461.206-.743 0-1.323-.224-1.741-.672-.416-.45-.627-1.204-.627-2.264V20.57h-1.234v-1.4H79.9v-1.538l1.846-.553v2.09h2.071v1.4m7.398 2.79c0-.774-.168-1.438-.505-1.992-.394-.67-.958-1.005-1.687-1.005-.756 0-1.33.334-1.724 1.005-.337.554-.504 1.229-.504 2.027 0 .774.167 1.439.504 1.992.407.67.975 1.005 1.707 1.005.717 0 1.28-.34 1.687-1.022.347-.565.522-1.236.522-2.01zm1.95-.06c0 1.29-.371 2.35-1.114 3.178-.778.853-1.811 1.279-3.099 1.279-1.241 0-2.23-.409-2.966-1.227-.737-.817-1.106-1.849-1.106-3.092 0-1.301.38-2.367 1.14-3.196.76-.83 1.783-1.244 3.071-1.244 1.242 0 2.24.409 2.995 1.227.719.794 1.079 1.819 1.079 3.075zm6.108-2.489a3.281 3.281 0 0 0-.592-.05c-.661 0-1.172.247-1.532.742-.314.438-.47.99-.47 1.658v4.406h-1.878l.016-5.752c0-.969-.023-1.85-.07-2.645h1.638l.068 1.607h.052c.198-.552.512-.997.94-1.33.418-.3.871-.449 1.358-.449.174 0 .331.012.47.034v1.78m6.613 1.676c.013-.553-.11-1.03-.365-1.434-.325-.518-.825-.777-1.497-.777-.615 0-1.115.252-1.496.76-.314.403-.5.887-.556 1.45h3.914zm1.792.484c0 .334-.022.616-.069.846h-5.637c.022.83.294 1.463.817 1.901.475.391 1.09.587 1.844.587.834 0 1.596-.133 2.281-.398l.294 1.296c-.8.346-1.745.519-2.835.519-1.312 0-2.342-.384-3.09-1.15-.747-.766-1.123-1.794-1.123-3.084 0-1.267.347-2.32 1.046-3.16.73-.9 1.716-1.348 2.957-1.348 1.219 0 2.142.448 2.769 1.347.497.714.746 1.596.746 2.643zM42.263 8.783c0-.667-.178-1.18-.535-1.536-.357-.356-.877-.535-1.56-.535-.292 0-.54.02-.745.06v4.277c.114.018.322.026.624.026.707 0 1.253-.195 1.638-.585.385-.39.578-.96.578-1.707zm.974-.025c0 1.03-.31 1.805-.932 2.326-.577.48-1.394.72-2.454.72-.525 0-.975-.022-1.351-.067V6.11c.49-.079 1.02-.118 1.59-.118 1.01 0 1.77.218 2.284.654.574.492.863 1.196.863 2.113zm4.206.929c0-.38-.083-.706-.248-.978-.194-.33-.47-.495-.83-.495-.37 0-.652.165-.846.495-.165.272-.248.604-.248.995 0 .38.083.707.248.98.2.328.478.492.838.492.354 0 .63-.167.83-.501.17-.278.256-.607.256-.988zm.958-.03c0 .635-.182 1.155-.547 1.562-.383.42-.89.629-1.522.629-.61 0-1.096-.2-1.458-.603-.362-.402-.543-.909-.543-1.52 0-.639.186-1.162.56-1.57.373-.408.876-.61 1.508-.61.611 0 1.1.2 1.472.602.352.39.53.894.53 1.51zm6.925-2.027l-1.3 4.124h-.845l-.54-1.791a13.32 13.32 0 0 1-.334-1.333h-.016c-.08.453-.191.898-.334 1.333l-.573 1.79h-.855L49.307 7.63h.949l.47 1.96c.113.465.208.906.283 1.325h.016c.068-.345.182-.784.342-1.316l.59-1.969h.752l.565 1.927c.137.47.248.922.333 1.358h.026c.062-.425.157-.877.283-1.358l.504-1.927h.906m4.789 4.124h-.924V9.39c0-.728-.278-1.092-.837-1.092a.837.837 0 0 0-.667.301c-.171.2-.257.436-.257.707v2.447h-.924V8.809c0-.363-.011-.755-.033-1.18h.812l.043.645h.026c.107-.2.268-.367.478-.498.25-.155.53-.232.838-.232.387 0 .71.125.967.374.319.305.478.76.478 1.366v2.47m1.625-6.017h.923v6.017h-.923zm5.402 3.95c0-.38-.082-.706-.247-.978-.193-.33-.471-.495-.829-.495-.372 0-.654.165-.847.495-.165.272-.248.604-.248.995 0 .38.083.707.248.98.2.328.479.492.838.492.354 0 .629-.167.829-.501.172-.278.256-.607.256-.988zm.96-.03c0 .635-.183 1.155-.548 1.562-.382.42-.89.629-1.522.629-.611 0-1.097-.2-1.458-.603-.362-.402-.542-.909-.542-1.52 0-.639.186-1.162.559-1.57.373-.408.877-.61 1.508-.61.612 0 1.1.2 1.472.602.353.39.53.894.53 1.51zm3.511.679V9.7c-1.019-.017-1.528.26-1.528.832 0 .215.058.376.177.483.119.108.27.161.451.161a.927.927 0 0 0 .564-.19.777.777 0 0 0 .336-.65zm.96 1.418h-.83l-.07-.475h-.025c-.284.379-.689.569-1.214.569-.392 0-.709-.125-.949-.374a1.168 1.168 0 0 1-.325-.84c0-.504.212-.888.637-1.155.425-.265 1.023-.396 1.793-.39v-.077c0-.543-.288-.814-.863-.814-.41 0-.772.101-1.083.305l-.188-.603c.386-.237.862-.356 1.426-.356 1.086 0 1.63.569 1.63 1.707v1.519c0 .412.02.74.06.984zm4.291-1.74v-.687a1.043 1.043 0 0 0-.36-.844.908.908 0 0 0-.617-.226.952.952 0 0 0-.813.407c-.197.272-.296.62-.296 1.044 0 .408.094.739.284.993.2.271.47.408.807.408a.895.895 0 0 0 .73-.34c.178-.209.265-.46.265-.755zm.958 1.74h-.82l-.042-.662h-.027c-.262.503-.707.755-1.334.755-.501 0-.917-.195-1.248-.585-.33-.391-.496-.897-.496-1.52 0-.667.179-1.208.539-1.62a1.662 1.662 0 0 1 1.283-.578c.557 0 .948.187 1.17.56h.017V5.737h.925v4.906c0 .401.01.771.033 1.11zm6.943-2.067c0-.38-.083-.706-.248-.978-.194-.33-.47-.495-.83-.495-.37 0-.652.165-.847.495-.165.272-.248.604-.248.995 0 .38.083.707.248.98.2.328.479.492.839.492.353 0 .63-.167.83-.501.17-.278.256-.607.256-.988zm.957-.03c0 .635-.182 1.155-.547 1.562-.383.42-.889.629-1.522.629-.61 0-1.095-.2-1.458-.603-.362-.402-.542-.909-.542-1.52 0-.639.186-1.162.56-1.57.372-.408.875-.61 1.51-.61.608 0 1.1.2 1.469.602.353.39.53.894.53 1.51zm4.968 2.097h-.923V9.39c0-.728-.279-1.092-.839-1.092a.833.833 0 0 0-.666.301c-.17.2-.257.436-.257.707v2.447h-.924V8.809c0-.363-.01-.755-.033-1.18h.811l.043.645h.026c.108-.2.269-.367.478-.498.252-.155.531-.232.839-.232.388 0 .71.125.966.374.32.305.478.76.478 1.366v2.47m6.218-3.438h-1.019v2.004c0 .509.181.764.54.764.165 0 .302-.014.41-.043l.025.696c-.182.068-.422.102-.718.102-.365 0-.649-.11-.853-.331-.207-.221-.309-.591-.309-1.112v-2.08h-.608v-.687h.608v-.756l.905-.271v1.027h1.019v.687m4.89 3.438h-.924V9.409c0-.74-.28-1.11-.837-1.11-.429 0-.721.215-.882.644-.027.09-.042.2-.042.33v2.48h-.923V5.738h.923v2.485h.017c.29-.452.708-.678 1.248-.678.383 0 .699.125.95.374.314.31.47.772.47 1.383v2.453m4.163-2.497a1.23 1.23 0 0 0-.179-.704c-.16-.255-.404-.382-.735-.382a.88.88 0 0 0-.735.374 1.38 1.38 0 0 0-.274.712h1.923zm.882.238c0 .165-.013.303-.035.416h-2.77c.012.408.144.718.4.934.235.192.539.288.909.288.41 0 .783-.064 1.12-.195l.145.636c-.394.17-.857.256-1.395.256-.643 0-1.15-.188-1.516-.565-.368-.377-.55-.882-.55-1.515 0-.622.17-1.14.512-1.553.358-.442.842-.663 1.453-.663.598 0 1.052.221 1.358.663.246.35.369.784.369 1.298z" fill="#FFF">
            </path>
           </g>
          </svg>
         </a>
        </li>
        <li class="wds-global-footer__links-list-item">
         [linkx]
         
        </li>
       </ul>
      </section>
      <section class="wds-global-footer__wikia-section wds-is-advertise">
       <h3 class="wds-global-footer__section-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="wds-global-footer__links-list">
        <li class="wds-global-footer__links-list-item">
         [ahref]
         
        </li>
       </ul>
      </section>
     </div>
    </div>
    <div class="wds-global-footer__bottom-bar">
     <div class="wds-global-footer__bottom-bar-row wds-has-padding">
      포켓몬 위키는 팬덤의 게임 커뮤니티입니다.
     </div>
     <div class="wds-global-footer__bottom-bar-row wds-has-border-top mobile-site-link">
      <a class="wds-global-footer__button-link" href="">
       모바일 버전으로 보기
      </a>
     </div>
    </div>
   </footer>
   <div id="WikiaBar">
    <div class="WikiaBarWrapper hidden" id="WikiaBarWrapper">
     <div class="wikia-bar wikia-bar-anon">
      [linkx]
      
      <div class="ad">
       <div class="noprint" id="WIKIA_BAR_BOXAD_1" style="width: 300px; position: relative;">
       </div>
      </div>
      <div class="message failsafe" data-messagetooltip="여기를 클릭해서 더 많은 정보를 볼 수 있습니다." data-wikiabarcontent='[{"text":"How the Twilight fandom saved a small town","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town?","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town","href":"https:\/\/fandom.link\/Twilight"},{"text":"How the Twilight fandom saved a small town?","href":"https:\/\/fandom.link\/Twilight"}]'>
      </div>
      [linkx]
      
      [linkx]
      
      [linkx]
      
     </div>
    </div>
    <div class="WikiaBarCollapseWrapper">
     [ahref]
     
    </div>
   </div>
   <div class="wikia-ad noprint default-height" id="gpt_flush">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0456
  </b>
 </body>
</html>
|<---