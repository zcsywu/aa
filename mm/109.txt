--->|<!DOCTYPE doctype html>
<html class="" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="always" name="Referrer"/>
  <meta content="text/javascript" http-equiv="Content-Script-Type"/>
  <meta content="text/css" http-equiv="Content-Style-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=1000" name="viewport"/>
  <meta content="Sun, 15 Nov 2015 13:00:11 GMT" http-equiv="Expires"/>
  <meta content="All" name="NaverBot">
   <meta content="index,follow" name="NaverBot">
    <meta content="All" name="Yeti">
     <meta content="index,follow" name="Yeti">
      <meta content="155418931138303" property="fb:pages">
       <meta content="105855619478324" property="fb:app_id">
        <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
        <meta content="article" property="og:type">
         <meta content="[심심풀이 화학]찐고구마보다 군고구마가 더 맛있는 이유" property="og:title">
          <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
          <meta content="https://cwstatic.asiae.co.kr/asiae_v1/gnb_t/asiae_logo.jpg" property="og:image">
           <meta content="200" property="og:image:width"/>
           <meta content="200" property="og:image:height"/>
           <meta content="고구마(사진=삼성정밀화학)" property="og:image:alt"/>
           <meta content="image/jpeg" property="og:image:type"/>
           <meta content="https://www.asiae.co.kr/article/2015111316191184940" property="og:site"/>
           <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
           <meta content="ko_KR" property="og:locale"/>
           <meta content="https://www.facebook.com/asiaeconomy" property="article:author"/>
           <meta content="https://www.facebook.com/asiaeconomy" property="article:publisher"/>
           <meta content="기업·CEO" property="article:section"/>
           <meta content="2015-11-15 13:00:11" property="article:published_time"/>
           <meta content="summary_large_image" property="twitter:card"/>
           <meta content="https://cwstatic.asiae.co.kr/asiae_v1/gnb_t/asiae_logo.jpg" property="twitter:image"/>
           <meta content="summary_large_image" name="twitter:card"/>
           <meta content="@asiae_daily" name="twitter:site"/>
           <meta content="@asiae_daily" name="twitter:creator"/>
           <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
           <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
           <meta content="https://cwstatic.asiae.co.kr/asiae_v1/gnb_t/asiae_logo.jpg" name="twitter:image"/>
           <meta content="[심심풀이 화학]찐고구마보다 군고구마가 더 맛있는 이유" name="title">
            <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description">
             <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords">
              <meta content="6BA948A1DBB30EE8C64BB7A1A83A6ECC" name="msvalidate.01">
               <meta content="K7B_a7g-EZfyZCwhwDTmZo6EaVBCZHiqFXzItp-N710" name="google-site-verification">
                <title>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </title>
               </meta>
              </meta>
             </meta>
            </meta>
           </meta>
          </meta>
         </meta>
        </meta>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-N856J92" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="skip">
   <a href="r" title="본문 바로가기">
    <span>
     본문 바로가기
    </span>
   </a>
  </div>
  <div class="bar_progressCont">
   <div class="bar_progress">
    bar_progress
   </div>
  </div>
  <div id="wrap">
   <div class="header">
    <div class="top_head">
     <div class="area_top">
      <div class="menu_ci">
       <a class="btn_hamburger" href=")" id="btn_menu_id" title="전체메뉴바로가기">
        전체메뉴클릭
       </a>
       <h1 class="btn_logo">
        <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
       </h1>
      </div>
      <div class="real_news">
       <strong>
        [linkx]
        
       </strong>
       <div class="roll_box">
        <ul id="sokboPlayer">
         <li>
          <a href="/article/2019070318361707234" title='"최저임금 제도개선"vs"불참 사과부터"…불꽃튀는 신경전'>
           "최저임금 제도개선"vs"불참 사과부터"…불꽃튀는 신경전
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/article/2019070318322801627" title='강경화 "北 핵보유국 지위, 절대 인정 못 한다"(종합)'>
           강경화 "北 핵보유국 지위, 절대 인정 못 한다"(종합)
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/article/2019070318200382735" title="[속보]최저임금委 경영계, 내년도 최저임금 8000원 제시">
           [속보]최저임금委 경영계, 내년도 최저임금 8000원 제시
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/article/2019070318062758681" title="교육공무직 파업 첫날…광주지역 공립 129개교 급식중단">
           교육공무직 파업 첫날…광주지역 공립 129개교 급식중단
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="right_toputili">
       <div class="search_wrap">
        <form action="/search/index.htm" method="post" name="mySSForm1" onsubmit="javascript:return checkSearchSubmit(this); this.blur();">
         <fieldset class="inner">
          <legend>
           검색하기영역
          </legend>
          [linkx]
          
          <div class="header_sear">
           <span class="t_wrap">
           </span>
           <ul class="autoform" id="query_result1" style="display:none;">
           </ul>
          </div>
         </fieldset>
        </form>
       </div>
       <div class="sns_box">
        [ahref]
        
        [linkx]
        
        [linkx]
        
        <a class="btn_frind" href=";" onclick="javascript:LoginPageJump();" title="로그인하기">
         로그인하기
        </a>
        [ahref]
        
       </div>
      </div>
      <a class="btn_noon" href="/" target="_blank" title="NOON 지면보기 바로가기">
      </a>
     </div>
    </div>
    <div class="gnb_wrap">
     <div class="area_gnbmn">
      <div class="gnb_menu01" style="display:block;">
       <h2 class="h2_tit" title="산업·IT 바로가기">
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h2>
       <div class="menu_list">
        <ul>
         <li class="on">
          <a href="/list/enterprise-CEO" title="기업·CEO">
           기업·CEO
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/list/distribution" title="유통">
           유통
          </a>
         </li>
         <li>
          <a href="/list/IT" title="IT·통합">
           IT·통합
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/list/industrial-general" title="일반">
           일반
          </a>
         </li>
         <li>
          <a href="/list/industry-IT-all" title="전체">
           전체
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="gnb_menu02" style="display:none;">
      </div>
      <div class="roll_wrap">
       <div class="roll_inner">
        <div class="roll_img">
         <ul>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
        <a class="btn_prev" href="#" id="prev_btn" title="왼쪽으로 이동">
         왼쪽으로 이동
        </a>
        <a class="btn_next" href="#" id="next_btn" title="오른쪽으로 이동">
         오른쪽으로 이동
        </a>
       </div>
      </div>
     </div>
    </div>
    <div class="float_bar">
     <div class="area_floatbarn">
      <div class="allmenu_wrap" id="btn_float_menu">
       <li>[link]</li><li>[link]</li><li>[link]</li>
      </div>
      <h2 class="float_logo">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <h3 class="scont_tit">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <span class="txt_bar">
       |[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
      </span>
      <p class="scont_txt">
       [심심풀이 화학]찐고구마보다 군고구마가 더 맛있는 이유
      </p>
      <div class="float_sns">
       <a class="btn_facebook" href=";" id="button" onclick="window.open('http://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.asiae.co.kr%2Farticle%2F2015111316191184940&amp;t=%5B');ga('send', 'event', 'V_제목영역', 'click', '페이스북공유');" title="페이스북">
        페이스북
       </a>
       [ahref]
       
       <span class="txt_bar">
        |
       </span>
      </div>
      <div class="share_wrap">
       [linkx]
       
      </div>
      <div class="frame_box">
       <ul>
        <li class="kakao">
         <a href=";" onclick="javascript:goKakao();" title="카카오스토리 이동하기">
          <span class="img_b">
           카카오스토리 이미지
          </span>
          카카오스토리
         </a>
        </li>
        <li class="naverblog">
         <a href=";" title="네이버블로그">
          <span class="img_b">
           네이버블로그 이미지
          </span>
          네이버블로그
         </a>
        </li>
        <li class="url">
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div class="menu_all" id="menu_all_id">
     <div class="menu_all_box">
      [ahref]
      
      <div class="menu_all_inner">
       <div class="h2_titwrap">
        <h2>
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
        </h2>
       </div>
       <div class="all_layme_area">
        <div class="area_depth01">
         <div class="depth_listw01">
          <dl>
           <dt class="h3_title">
            <a href="/section/politics" title="정치 바로가기">
             정치
            </a>
           </dt>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/political-general" title="일반 바로가기">
             일반
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
          </dl>
         </div>
         <div class="depth_listw02">
          <dl>
           [content11[linkx]content12[linkx]content13[linkx]content14]
          </dl>
         </div>
         <div class="depth_listw03">
          <dl>
           <dt class="h3_title">
            [linkx]
            
           </dt>
           <dd>
            <a href="/list/enterprise-CEO" title="기업·CEO 바로가기">
             기업·CEO
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/science" title="과학 바로가기">
             과학
            </a>
           </dd>
           <dd>
            <a href="/list/industrial-general" title="일반 바로가기">
             일반
            </a>
           </dd>
           <dd>
            <a href="/list/industry-IT-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
          </dl>
         </div>
         <div class="depth_listw04">
          <dl>
           <dt class="h3_title">
            [ahref]
            
           </dt>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/feature" title="특징주 바로가기">
             특징주
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/derivation-bond-foreignexchange" title="파생·채권·외환 바로가기">
             파생·채권·외환[content3][content4][linkx][content5][content6][content7]
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/stock-etc" title="기타 바로가기">
             기타
            </a>
           </dd>
           <dd>
            <a href="/list/stock-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
          </dl>
         </div>
         <div class="depth_listw05">
          <dl>
           <dt class="h3_title">
            [linkx]
            
           </dt>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/trend" title="업계동향 바로가기">
             업계동향
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/realestate-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
          </dl>
         </div>
         <div class="depth_listw06">
          <dl>
           <dt class="h3_title">
            <a href="/section/world" title="국제 바로가기">
             국제
            </a>
           </dt>
           <dd>
            <a href="/list/world-stockmarket" title="국제증시 바로가기">
             국제증시
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/world-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
          </dl>
         </div>
        </div>
        <div class="area_depth02">
         <div class="depth_listw07">
          <dl>
           <dt class="h3_title">
            <a href="/section/society" title="사회 바로가기">
             사회
            </a>
           </dt>
           <dd>
            <a href="/list/affair-incident" title="사건사고 바로가기">
             사건사고
            </a>
           </dd>
           <dd>
            <a href="/list/education" title="교육 바로가기">
             교육
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/society-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
           <dd class="last">
            <a href="/list/honam" title="아경호남 바로가기">
             아경호남
            </a>
           </dd>
          </dl>
         </div>
         <div class="depth_listw08">
          <dl>
           <dt class="h3_title">
            <a href="/section/life" title="라이프 바로가기">
             라이프
            </a>
           </dt>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/beauty-health" title="뷰티·헬스 바로가기">
             뷰티·헬스[link][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/performance-exhibit" title="공연·전시 바로가기">
             공연·전시
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/life-general" title="일반 바로가기">
             일반
            </a>
           </dd>
           <dd>
            <a href="/list/living-food" title="리빙푸드 바로가기">
             리빙푸드
            </a>
           </dd>
           <dd>
            <a href="/list/edu-asia" title="에듀아시아 바로가기">
             에듀아시아
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
          </dl>
          <div class="one_title">
           <h3 class="h3_title">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h3>
          </div>
         </div>
         <div class="depth_listw09">
          <dl>
           <dt class="h3_title">
            [ahref]
            
           </dt>
           <dd>
            <a href="/opinion-list/desk-column" title="데스크칼럼 바로가기">
             데스크칼럼
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/opinion-list/journalist-column" title="실감현장 바로가기">
             실감현장
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/opinion-list/satirical-cartoon" title="만평 바로가기">
             만평
            </a>
           </dd>
          </dl>
          <div class="one_title">
           <h3 class="h3_title">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h3>
          </div>
         </div>
         <div class="depth_listw10">
          <dl>
           <dt class="h3_title">
            <a href="/section/entertainment-sports" title="연예·스포츠 바로가기">
             연예·스포츠
            </a>
           </dt>
           <dd>
            <a href="/list/entertainment-star" title="연예스타 바로가기">
             연예스타
            </a>
           </dd>
           <dd>
            <a href="/list/sports" title="스포츠 바로가기">
             스포츠
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/entertainment-sports-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
          </dl>
          <div class="one_title">
           <h3 class="h3_title">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h3>
          </div>
         </div>
         <div class="depth_listw11">
          <dl>
           <dt class="h3_title">
            <a href="/section/photo-video" title="포토·영상 바로가기">
             포토·영상
            </a>
           </dt>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/video" title="동영상 바로가기">
             동영상
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
          </dl>
          <div class="one_title">
           <h3 class="h3_title">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h3>
          </div>
         </div>
         <div class="depth_listw12">
          <dl>
           <dt class="h3_title">
            [linkx]
            
           </dt>
           <dd>
            <a href="/list/golf-project" title="기획 바로가기">
             기획
            </a>
           </dd>
           <dd>
            <a href="/list/lesson" title="레슨 바로가기">
             레슨
            </a>
           </dd>
           <dd>
            [linkx]
            
           </dd>
           <dd>
            <a href="/list/golf-human" title="휴먼 바로가기">
             휴먼
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/golf-photo" title="포토 바로가기">
             포토
            </a>
           </dd>
           <dd>
            [ahref]
            
           </dd>
           <dd>
            <a href="/list/golf-all" title="전체뉴스 바로가기">
             전체뉴스
            </a>
           </dd>
          </dl>
          <div class="one_title">
           <h3 class="h3_title">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
           </h3>
          </div>
         </div>
        </div>
        <div class="area_lastbtn">
         <div class="fl_btn">
          <a class="btn_yang" href="r" target="_blank" title="양낙규의 디펜스클럽 바로가기">
           <span>
            양낙규의 디펜스클럽
           </span>
          </a>
          [ahref]
          
         </div>
         <div class="fr_btn">
          [ahref]
          
          <span class="icon_bar">
           |
          </span>
          [ahref]
          
          <span class="icon_bar">
           |
          </span>
          [linkx]
          
          <span class="icon_bar">
           |
          </span>
          [linkx]
          
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="container" id="container">
    <div class="wing_left" id="wing_left" style="display:none;">
    </div>
    <div class="wing_right" id="wing_right" style="display:none;">
    </div>
    <div class="content">
     <div class="news_view_ad">
      <div class="left_ad">
      </div>
      <div class="middle_ad">
       <span class="ico_ad">
        [AD]
       </span>
      </div>
      <div class="top_banwrap">
       <div class="inner_box">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <ul class="top_banrall">
         <li>
          <div class="thumb">
           <span class="mask">
            마스크영역
           </span>
          </div>
          <p class="txt">
           <a href="/project-issue-list/issue/2019070309213427848A" onclick="ga('send', 'event', 'V_최신기획이슈', 'click', '1슬롯');" title="2019년 하반기 경제정책">
            2019년 하반기 경제정책
           </a>
          </p>
         </li>
         <li>
          <div class="thumb">
           <span class="mask">
            마스크영역
           </span>
          </div>
          <p class="txt">
           <a href="/project-issue-list/issue/2019063014223642039A" onclick="ga('send', 'event', 'V_최신기획이슈', 'click', '2슬롯');" title="한미 정상회담">
            한미 정상회담
           </a>
          </p>
         </li>
         <li>
          <div class="thumb">
           <span class="mask">
            마스크영역
           </span>
          </div>
          <p class="txt">
           [ahref]
           
          </p>
         </li>
         <li>
          <div class="thumb">
           [content19][content20][linkx][content1][content2][linkx][content3][linkx]
          </div>
          <p class="txt">
           [ahref]
           
          </p>
         </li>
         <li>
          <div class="thumb">
           <span class="mask">
            마스크영역
           </span>
          </div>
          <p class="txt">
           <a href="/project-issue-list/project/2019062613442380456A" onclick="ga('send', 'event', 'V_최신기획이슈', 'click', '5슬롯');" title="수갑 찬 소년 품어줄 사회는 없나">
            수갑 찬 소년 품어줄 사회는 없나
           </a>
          </p>
         </li>
         <li>
          <div class="thumb">
           <span class="mask">
            마스크영역
           </span>
          </div>
          <p class="txt">
           <a href="/project-issue-list/project/2019061413420822966A" onclick="ga('send', 'event', 'V_최신기획이슈', 'click', '6슬롯');" title="脫 코리아">
            脫 코리아
           </a>
          </p>
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="cont_sub">
      <p class="user_views">
       <iframe allowtransparency="true" frameborder="0" height="18" name="조회수1" scrolling="no" src="//count.asiae.co.kr/count/get_count_new.php?idxno=2015111316191184940&amp;type=1&amp;code=01.04.09&amp;outdate=20151115130011&amp;ref_name=ASIAE&amp;user_id=" title="조회수1" width="130">
       </iframe>
       <iframe allowtransparency="true" frameborder="0" height="0" name="조회수2" scrolling="no" src="//count-bak.asiae.co.kr/count/get_count_new.php?idxno=2015111316191184940&amp;type=1&amp;code=01.04.09&amp;outdate=20151115130011&amp;ref_name=ASIAE&amp;user_id=" title="조회수2" width="0">
       </iframe>
      </p>
      <div class="lc">
       <a class="btn_title" href="/list/enterprise-CEO" onclick="ga('send', 'event', 'V_제목영역', 'click', '네비게이션');" title="기업·CEO">
        기업·CEO
       </a>
       <div class="lc_marea">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/list/automobile" title="자동차">
           자동차
          </a>
         </li>
         <li>
          <a href="/list/distribution" title="유통">
           유통
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/list/science" title="과학">
           과학
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/list/industry-IT-all" title="전체">
           전체
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="area_title">
       <h3>
        [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </h3>
       <div class="area_util">
        <div class="tit_sns">
         <a class="btn_facebook" href=";" id="button" onclick="window.open('http://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.asiae.co.kr%2Farticle%2F2015111316191184940&amp;t=%5B');ga('send', 'event', 'V_제목영역', 'click', '페이스북공유');" title="페이스북">
          페이스북
         </a>
         [ahref]
         
         <a class="btn_goback" href=";" onclick="ga('send', 'event', 'V_제목영역', 'click', '공유박스');" title="공유하기">
          <span>
           공유하기
          </span>
         </a>
         <div class="frame_box">
          <ul>
           <li class="kakao">
            <a href=";" title="카카오톡">
             <span class="img_b">
              카카오톡
             </span>
             카카오톡
            </a>
           </li>
           <li class="naverblog">
            <a href=";" title="네이버블로그">
             <span class="img_b">
              네이버블로그 이미지
             </span>
             네이버블로그
            </a>
           </li>
           <li class="url">
            <a data-clipboard-text="https://www.asiae.co.kr/article/2015111316191184940" href=";" id="urlcopy" title="주소복사하기">
             <span class="img_b">
              주소복사 이미지
             </span>
             주소복사
            </a>
           </li>
          </ul>
         </div>
        </div>
        <p class="user_data">
         <strong>
          최종수정
         </strong>
         2015.11.15 13:04
         <strong class="lst">
          기사입력
         </strong>
         2015.11.15 13:00
        </p>
        <p class="area_comment">
         [ahref]
         
        </p>
        <div class="util_menu">
         <div class="btn_util01">
          <a class="btn_print" href=";" onclick="javascript:print('2015111316191184940','1');ga('send', 'event', 'V_제목영역', 'click', '인쇄');" title="인쇄하기">
           인쇄하기
          </a>
          <a class="btn_save" href=";" onclick="javascript:LoginPage();ga('send', 'event', 'V_제목영역', 'click', '스크랩');" title="스크랩">
           스크랩
          </a>
          [ahref]
          
         </div>
         <div class="btn_util02">
          <a class="btn_collapse" href=";" onclick="javascript:fontPlusMinus('m');ga('send', 'event', 'V_제목영역', 'click', '폰트축소');" title="폰트축소">
           폰트축소
          </a>
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="cont_main">
      <div class="cont_article">
       [content16[linkx]content17]
      </div>
      <div class="cont_aside">
       <div class="ad_300250">
       </div>
       <div class="aside01">
        <h3 class="tit01">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="tab_menu">
         <ul>
          <li>
           [ahref]
           
          </li>
          <li class="on">
           [linkx]
           
          </li>
         </ul>
        </div>
        <div class="tab_cont" id="tabContent01">
         <ul class="tbl_txtb">
          <li class="l_num01">
           <span class="num best_col">
            1
           </span>
           <p class="txt_b">
            <a href="/article/2019070307013193522" onclick="ga('send', 'event', 'V_많이본뉴스', 'click', '종합1위');" title='"정준영 단톡방 열매 성관계 영상 없다" 우창범, BJ열매 폭로전 억울함 토로 '>
             "정준영 단톡방 열매 성관계 영상 없다" 우창범, BJ열
            </a>
           </p>
          </li>
          <li class="l_num02">
           <span class="num best_col">
            2
           </span>
           <p class="txt_b">
            [linkx]
            
           </p>
          </li>
          <li class="l_num03">
           <span class="num best_col">
            3
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num04">
           <span class="num best_col">
            4
           </span>
           <p class="txt">
            <a href="/article/2019070311173794963" onclick="ga('send', 'event', 'V_많이본뉴스', 'click', '종합4위');" title='"韓 공급처 바꾸면 日도 부메랑"…일본 언론 연일 우려 목소리'>
             "韓 공급처 바꾸면 日도 부메랑"…일본 언론 연일 우
            </a>
           </p>
          </li>
          <li class="l_num05">
           <span class="num best_col">
            5
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num06">
           <span class="num">
            6
           </span>
           <p class="txt">
            <a href="/article/2019070308175136892" onclick="ga('send', 'event', 'V_많이본뉴스', 'click', '종합6위');" title='"행복해" 이승우, SNS에 사진 올렸다가…승무원과 열애설'>
             "행복해" 이승우, SNS에 사진 올렸다가…승무원과 열
            </a>
           </p>
          </li>
          <li class="l_num07">
           <span class="num">
            7
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num08">
           <span class="num">
            8
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num09">
           <span class="num">
            9
           </span>
           <p class="txt">
            [linkx]
            
           </p>
          </li>
          <li class="l_num10">
           <span class="num">
            10
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
         </ul>
        </div>
        <div class="tab_cont" id="tabContent02" style="display: none;">
         <ul class="tbl_txtb">
          <li class="l_num01">
           <span class="num best_col">
            1
           </span>
           <p class="txt_b">
            [linkx]
            
           </p>
          </li>
          <li class="l_num02">
           <span class="num best_col">
            2
           </span>
           <p class="txt_b">
            [linkx]
            
           </p>
          </li>
          <li class="l_num03">
           <span class="num best_col">
            3
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num04">
           <span class="num best_col">
            4
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num05">
           <span class="num best_col">
            5
           </span>
           <p class="txt">
            [ahref]
            
           </p>
          </li>
          <li class="l_num06">
           <span class="num">
            6
           </span>
           <p class="txt">
            [linkx]
            
           </p>
          </li>
          <li class="l_num07">
           <span class="num">
            7
           </span>
           <p class="txt">
            <a href="/article/2019070308172330570" onclick="ga('send', 'event', 'V_많이본뉴스', 'click', '섹션7위');" title="세금 충분히 냈다…'구글세' 반대 외친 구글">
             세금 충분히 냈다…'구글세' 반대 외친 구글
            </a>
           </p>
          </li>
          <li class="l_num08">
           <span class="num">
            8
           </span>
           <p class="txt">
            [linkx]
            
           </p>
          </li>
          <li class="l_num09">
           <span class="num">
            9[link][link][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
           </span>
           <p class="txt">
            <a href="/article/2019070312115845633" onclick="ga('send', 'event', 'V_많이본뉴스', 'click', '섹션9위');" title="새 서비스 연기에 성희롱 사건까지…이재웅, 속만 '타다'">
             새 서비스 연기에 성희롱 사건까지…이재웅, 속만 '타[content15[linkx]content16]
            </a>
           </p>
          </li>
          <li class="l_num10">
           <span class="num">
            10
           </span>
           <p class="txt">
            <a href="/article/2019070311400662879" onclick="ga('send', 'event', 'V_많이본뉴스', 'click', '섹션10위');" title="글로벌 전기차 배터리 시장 中 CATL 독주…韓 3사 10위권 안착 ">
             글로벌 전기차 배터리 시장 中 CATL 독주…韓 3사 10
            </a>
           </p>
          </li>
         </ul>
        </div>
       </div>
       <div class="ad_p">
       </div>
       <div class="ad_300210">
       </div>
       <div class="aside09">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="pop_box">
         <ul class="pop_list RightPhotoModule">
          <li class="pli_01" onmouseover="javascript:photoView('0');">
           [ahref]
           
          </li>
          <li class="pli_02" onmouseover="javascript:photoView('1');">
           <a href="/visual-view/photonews/2019070311220435044" onclick="ga('send', 'event', 'V_인기포토갤러리', 'click', '2슬롯');" title="제니 '배만 빼꼼' 뾰로통">
            <em class="mask">
            </em>
           </a>
          </li>
          <li class="pli_03" onmouseover="javascript:photoView('2');">
           [linkx]
           
          </li>
          <li class="pli_04" onmouseover="javascript:photoView('3');">
           [ahref]
           
          </li>
          <li class="pli_05" onmouseover="javascript:photoView('4');">
           [linkx]
           
          </li>
          <li class="pli_06 over" onmouseover="javascript:photoView('5');">
           [ahref]
           
          </li>
          <li class="pli_07" onmouseover="javascript:photoView('6');">
           <a href="/visual-view/photonews/2019070310542885610" onclick="ga('send', 'event', 'V_인기포토갤러리', 'click', '7슬롯');" title="'치명적인 매력'">
            <em class="mask">
            </em>
           </a>
          </li>
          <li class="pli_08" onmouseover="javascript:photoView('7');">
           <a href="/visual-view/photonews/2019070310093527687" onclick="ga('send', 'event', 'V_인기포토갤러리', 'click', '8슬롯');" title="'인형 미모 발산'">
            <em class="mask">
            </em>
           </a>
          </li>
         </ul>
         <ul class="pop_big pop_big03 RightPhotoModuleList">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/visual-view/photonews/2019070309261602600" onclick="ga('send', 'event', 'V_인기포토갤러리', 'click', '4슬롯');" title="'자체포샵 수영복 자태'">
            <em class="mask">
            </em>
            <span class="tit">
             '자체포샵 수영복 자태'
            </span>
           </a>
          </li>
          <li>
           <a href="/visual-view/photonews/2019070309013203198" onclick="ga('send', 'event', 'V_인기포토갤러리', 'click', '5슬롯');" title="'모든 게 환상적'">
            <em class="mask">
            </em>
            <span class="tit">
             '모든 게 환상적'
            </span>
           </a>
          </li>
          <li class="on">
           <a href="/visual-view/photonews/2019070308342756930" onclick="ga('send', 'event', 'V_인기포토갤러리', 'click', '6슬롯');" title="'해변에서 뽐낸 여신미'">
            <em class="mask">
            </em>
            <span class="tit">
             '해변에서 뽐낸 여신미'
            </span>
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
       <span class="aside_height">
        간격처리를 위한 class
       </span>
       <div class="ad_300260">
       </div>
       <div class="ad_300210">
       </div>
       <div class="ad_300130_01" style="height: 250px; position: relative;">
       </div>
       <span class="aside_height">
        간격처리를 위한 class
       </span>
       <div class="ad_300260_2">
       </div>
       <div class="ad_300250">
       </div>
       <form action="/fortune/result.htm#con_start" method="post" name="unseForm">
        <div class="lucky_side01">
         <h3 class="tit01">
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <div class="list_mbox">
          <div class="num_box">
           <a class="lucky_btn" href=";" onclick="ga('send', 'event', 'V_운세', 'click', '길흉확인');" title="">
            길흉확인
           </a>
          </div>
          <p>
           ※아시아경제 숫자 운세 서비스입니다.
          </p>
         </div>
        </div>
       </form>
       <div class="cartoon_side">
        <h3 class="tit01">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="list_mbox bxslider">
         <div class="tab_cont" id="tabContent01">
          <ul class="cartoon_side01">
           <li class="mr6">
            <a class="car_link" href="/cartoon-view/chulining/97" onclick="ga('send', 'event', 'V_다시봐도 꿀잼! 무료 만화', 'click', '2슬롯');" title="사격훈련">
             <span class="thumb">
             </span>
             <span class="car_tit">
              사격훈련
             </span>
            </a>
            <p class="txt">
             [ahref]
             
            </p>
           </li>
           <li>
            <a class="car_link" href="/cartoon-view/trauma/225" onclick="ga('send', 'event', 'V_다시봐도 꿀잼! 무료 만화', 'click', '3슬롯');" title="출장감정">
             <span class="thumb">
             </span>
             <span class="car_tit">
              출장감정
             </span>
            </a>
            <p class="txt">
             [ahref]
             
            </p>
           </li>
          </ul>
         </div>
         <div class="tab_cont" id="tabContent02" style="display:none;">
          <ul class="cartoon_side01">
           <li class="mr6">
            <a class="car_link" href="/cartoon-view/bbogurday/406" onclick="ga('send', 'event', 'V_다시봐도 꿀잼! 무료 만화', 'click', '2슬롯');" title="경쟁">
             <span class="thumb">
             </span>
             <span class="car_tit">
              경쟁
             </span>
            </a>
            <p class="txt">
             <a class="car" href="/cartoon-list/bbogurday/new" onclick="ga('send', 'event', 'V_다시봐도 꿀잼! 무료 만화', 'click', '2슬롯');" title="뽀거데이">
              #뽀거데이
             </a>
            </p>
           </li>
           <li>
            [linkx]
            
            <p class="txt">
             <a class="car" href="/cartoon-list/chulining/new" onclick="ga('send', 'event', 'V_다시봐도 꿀잼! 무료 만화', 'click', '3슬롯');" title="추리닝">
              #추리닝
             </a>
            </p>
           </li>
          </ul>
         </div>
         <div class="tab_cont" id="tabContent03" style="display:none;">
          <ul class="cartoon_side01">
           <li class="mr6">
            <a class="car_link" href="/cartoon-view/trauma/488" onclick="ga('send', 'event', 'V_다시봐도 꿀잼! 무료 만화', 'click', '2슬롯');" title="형설">
             <span class="thumb">
             </span>
             <span class="car_tit">
              형설
             </span>
            </a>
            <p class="txt">
             [linkx]
             
            </p>
           </li>
           <li>
            [linkx]
            
            <p class="txt">
             [ahref]
             
            </p>
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="aside04">
        <h3 class="tit01">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <div class="list_mbox">
         <ul>
          <li>
           <div class="txt_b">
            <a href="/visual-view/video/2019070310011438199" onclick="ga('send', 'event', 'V_영상', 'click', '1슬롯제목');" title="[조용준의 여행만리]사라졌다 나타난 기암괴석 '황홀한 운무'">
             [조용준의 여행만리]사라졌다 나타난 기암괴석 '황...
            </a>
           </div>
           <div class="thumb">
            [ahref]
            
           </div>
          </li>
          <li>
           <div class="txt_b">
            <a href="/visual-view/video/2019070214104905838" onclick="ga('send', 'event', 'V_영상', 'click', '2슬롯제목');" title="[봐봐 홈 TV]청약, 가점·분양가 따라 '맞춤형' 전략 필요…현재 매수 가능한 분양권은?">
             [봐봐 홈 TV]청약, 가점·분양가 따라 '맞춤형' 전...
            </a>
           </div>
           <div class="thumb">
            <a href="/visual-view/video/2019070214104905838" onclick="ga('send', 'event', 'V_영상', 'click', '2슬롯썸네일');" title="[봐봐 홈 TV]청약, 가점·분양가 따라 '맞춤형' 전략 필요…현재 매수 가능한 분양권은?">
             <span class="icon_play">
              play
             </span>
            </a>
           </div>
          </li>
         </ul>
        </div>
        <a class="btn_youtube" href="/channel/UC8WLOh6UrALDSQ6ZmPjXJ9A" onclick="ga('send', 'event', 'V_영상', 'click', '유튜브바로가기');" target="_blank" title="YouTube 채널 구독 바로가기">
         YouTube 채널 구독
        </a>
       </div>
       <div class="ad_300260_2" id="ad_300250">
       </div>
       <div class="ad_30050">
       </div>
       <div class="as_culture3">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <ul class="culture_data3">
         <li>
          <a href="/view.htm?idxno=2019061716101320333" target="_blank">
           <span class="culture_txt">
            가터벨트에 가슴골이 그대로...걸그룹 조현 선정성 논란
           </span>
          </a>
         </li>
         <li>
          <a href="/view.htm?idxno=2019070200015740762" target="_blank">
           <span class="culture_txt">
            女 기상캐스터의 우월한 비키니 자태 '깜짝'
           </span>
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="lst_photocnt">
    <div class="area_photocnt">
     <div class="panel_tit">
      [ahref]
      
     </div>
     <div class="panel_list">
      <a class="btn_prev" href=")" id="prev">
       이전
      </a>
      <a class="btn_next" href=")" id="next">
       다음
      </a>
      <div class="rolling_panel">
       <ul style="left: 0px;">
        <li>
         <a href="/visual-view/photonews/2019070309262306515" onclick="ga('send', 'event', 'V_핫포토', 'click', '1슬롯');" title="강제추행 혐의 입건">
          <strong class="desc">
           <em>
            강제추행 혐의 입건
           </em>
          </strong>
         </a>
        </li>
        <li>
         <a href="/visual-view/photonews/2019070311220435044" onclick="ga('send', 'event', 'V_핫포토', 'click', '2슬롯');" title="제니 '배만 빼꼼' 뾰로통">
          <strong class="desc">
           <em>
            제니 '배만 빼꼼' 뾰로통
           </em>
          </strong>
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="/visual-view/photonews/2019070309261602600" onclick="ga('send', 'event', 'V_핫포토', 'click', '4슬롯');" title="'자체포샵 수영복 자태'">
          <strong class="desc">
           <em>
            '자체포샵 수영복 자태'
           </em>
          </strong>
         </a>
        </li>
        <li>
         <a href="/visual-view/photonews/2019070309013203198" onclick="ga('send', 'event', 'V_핫포토', 'click', '5슬롯');" title="'모든 게 환상적'">
          <strong class="desc">
           <em>
            '모든 게 환상적'
           </em>
          </strong>
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/visual-view/photonews/2019070310542885610" onclick="ga('send', 'event', 'V_핫포토', 'click', '7슬롯');" title="'치명적인 매력'">
          <strong class="desc">
           <em>
            '치명적인 매력'
           </em>
          </strong>
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
   <div class="section_footer">
    <div class="aside">
     <div class="area_user">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/company/notice_list.htm?sbk=announce_asia" title="회사공고 바로가기">
         회사공고
        </a>
       </li>
       <li>
        <a href="/company/ad_join.htm" title="광고문의 바로가기">
         광고문의
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/company/suggest.htm" title="기사제보 바로가기">
         기사제보
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/company/agreement2.htm" title="개인정보처리방침 바로가기">
         <b>
          개인정보처리방침
         </b>
        </a>
       </li>
       <li>
        <a href="/sitemap/" title="사이트맵 바로가기">
         사이트맵
        </a>
       </li>
       <li>
        <a href="/company/solution.htm" title="고충처리 바로가기">
         고충처리
        </a>
       </li>
      </ul>
      [ahref]
      
     </div>
    </div>
    <div class="footer">
     <div class="area_footer">
      <dl class="info_t01">
       <dt>
        아시아경제
       </dt>
       <dd>
        <address>
         서울특별시 중구 충무로 29 아시아미디어타워 10-11층
        </address>
        <span class="t_txt01">
         인터넷신문등록번호 : 서울 아00058
        </span>
        <span class="t_txt02">
         등록일 : 2005.09.13
        </span>
        <span class="t_txt03">
         발행·편집인 : 최영범
        </span>
        <br>
         <span class="t_txt04">
          청소년보호책임자 : 조병무
         </span>
         <span class="t_txt05">
          전화번호 : 02) 2200-2114
         </span>
        </br>
       </dd>
      </dl>
      <p class="info_lst">
       <span class="t_txt10">
        아시아경제의 모든 콘텐츠(기사)는 저작권법의 보호를 받는 바, 무단전재, 복사, 배포 등을 금합니다.
       </span>
       <span class="t_txt11">
        <strong>
         ⓒ 아시아경제
        </strong>
        All rights reserved.
       </span>
      </p>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0114
  </b>
 </body>
</html>
|<---