--->|<!DOCTYPE html>
<html class="hasSidebar hasPageActions hasBreadcrumb conceptual" data-auth-status-determined="false" data-authenticated="false" data-css-variable-support="true" data-target="docs" dir="ltr" lang="ko-kr" x-ms-format-detection="none">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="website" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description">
   [keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li><li>[link]</li>
  </meta>
  <meta content="https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png" property="og:image"/>
  <meta content="Microsoft Logo" property="og:image:alt"/>
  <meta content="summary" name="twitter:card"/>
  <meta content="@docsmsft" name="twitter:site"/>
  <meta content="/power-bi/breadcrumb/toc.json" name="breadcrumb_path"/>
  <meta content="hover over" name="bilingual_type"/>
  <meta content="MSDocsHeader-MSPowerBI" name="uhfHeaderId"/>
  <meta content="c074d6aa4fc7bdc530aa52f125f7f3d898b402c0" name="ms.openlocfilehash"/>
  <meta content="ko-KR" name="ms.contentlocale"/>
  <meta content="davidiseminger" name="author"/>
  <meta content="05/29/2019" name="ms.lasthandoff"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="davidi" name="ms.author"/>
  <meta content="kfile" name="manager"/>
  <meta content="MT" name="ms.translationtype"/>
  <meta content="conceptual" name="ms.topic">
   [keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
  </meta>
  <meta content="Create reports" name="LocalizationGroup"/>
  <meta content="60dad5aa0d85db790553e537bf8ac34ee3289ba3" name="ms.sourcegitcommit"/>
  <meta content="powerbi" name="ms.service"/>
  <meta content="05/08/2019" name="ms.date"/>
  <meta content="65514513" name="ms.locfileid"/>
  <meta content="powerbi-service" name="ms.subservice"/>
  <meta content="" name="ms.reviewer"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="search.ms_sitename"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="search.ms_docsetname"/>
  <meta content="ko-kr" name="locale"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="site_name"/>
  <meta content="MSDN" name="search.ms_product"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="depot_name"/>
  <meta content="2019-05-31 02:56 AM" name="updated_at"/>
  <meta content="https://github.com/MicrosoftDocs/powerbi-docs-pr.ko-KR/blob/86321c796a28412658700355e7ad81b865823b5c/powerbi-docs/desktop-tooltips.md" name="gitcommit"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="original_content_git_url"/>
  <meta content="97cbbb3e-3916-4340-4ddc-67bf22159bf3" name="document_id"/>
  <meta content="5b620628-1c10-b0bb-bd4d-1fd229260ea1" name="document_version_independent_id"/>
  <meta content="conceptual" name="page_type"/>
  <meta content="TOC.json" name="toc_rel"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="pdf_url_template"/>
  <meta content="2172" name="word_count"/>
  <meta content="Power-BI" name="scope"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
 </head>
 <body dir="ltr" lang="ko-kr">
  <div class="header-holder">
   <div data-bi-name="header" id="headerAreaHolder">
    <div id="uhf-placeholder">
    </div>
   </div>
   <div class="content-header uhf-container has-padding has-default-focus" data-bi-name="content-header">
    <nav aria-label="이동 경로" class="has-padding-none-mobile" data-bi-name="breadcrumb" itemscope="" itemtype="http://schema.org/BreadcrumbList" role="navigation">
     <ul class="breadcrumbs" id="page-breadcrumbs">
     </ul>
    </nav>
    <div class="content-header-controls">
     <button aria-haspopup="true" class="contents-button button" data-bi-name="contents-expand" type="button">
      <span class="icon">
       <span aria-hidden="true" class="docon docon-menu">
       </span>
      </span>
      <span>
       콘텐츠
      </span>
     </button>
    </div>
    <div class="content-header-controls exit-focus">
     <button aria-controls="action-panel" class="ap-collapse-behavior ap-expanded button" data-bi-name="ap-collapse" type="button">
      <span class="icon">
       <span aria-hidden="true" class="docon docon-exit-mode">
       </span>
      </span>
      <span>
       포커스 모드 종료
      </span>
     </button>
    </div>
    <div class="action-bar">
     <ul class="action-list">
      <li>
       <a class="button is-text is-small is-icon-only-touch" data-bi-name="comments" href="k">
        <span class="icon">
         <span aria-hidden="true" class="docon docon-comment-lines">
         </span>
        </span>
        <span class="action-item-text is-hidden-portrait">
         피드백
        </span>
       </a>
      </li>
      [ahref]
      
      <li>
       <div auto-align="" class="sharing dropdown has-caret">
        <button aria-controls="sharing-menu" aria-expanded="false" class="dropdown-trigger button is-text is-small is-icon-only-touch" data-bi-name="share" title="이 문서 공유">
         <span aria-hidden="true" class="icon">
          <span class="docon docon-sharing">
          </span>
         </span>
         <span class="action-item-text is-hidden-portrait">
          공유
         </span>
        </button>
        <div class="dropdown-menu" id="sharing-menu">
         <ul data-bi-name="share-links">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li class="is-unstyle-action-list-item">
       <div auto-align="" class="dropdown has-caret">
        <li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
       </div>
      </li>
      <li>
       <div class="lang-toggle-container">
        <label aria-hidden="true" for="language-toggle" tabindex="-1">
         영어로 읽기
        </label>
        <div class="checkbox-toggle-wrapper">
         <label class="switch" for="language-toggle">
         </label>
        </div>
       </div>
      </li>
      <li class="is-unstyled-action-list-item">
       [linkx]
       
       <div auto-align="" class="dropdown has-caret auth-status-determined authenticated">
        <button aria-controls="user-menu" aria-expanded="false" aria-label="계정" class="dropdown-trigger button is-text is-small is-icon-only-touch has-inner-focus">
         <span aria-hidden="true" class="icon">
          <span class="image">
          </span>
         </span>
         <span class="is-truncated has-margin-left-small" data-profile-property="userName">
         </span>
        </button>
        <div class="dropdown-menu box" id="user-menu" role="menu">
         <div class="media is-user-dir">
          <div class="media-left">
           <span aria-hidden="true" class="image is-64x64">
           </span>
          </div>
          <div class="media-content">
           <p class="title has-margin-top-small has-margin-bottom-small">
            <span class="is-truncated" data-profile-property="userName" style="max-width: 200px">
            </span>
           </p>
           <p class="subtitle">
            <span class="is-truncated" data-profile-property="upn" style="max-width: 200px">
            </span>
           </p>
          </div>
         </div>
         <ul class="is-unstyled has-margin-none">
          <li>
           [linkx]
           
          </li>
          <li>
           <a class="docs-sign-out" href="#">
            로그아웃
           </a>
          </li>
         </ul>
        </div>
       </div>
      </li>
     </ul>
     <button aria-label="콘텐츠" class="contents-button" data-bi-name="contents-expand-" type="button">
      <span class="docon docon-editor-list-bullet">
      </span>
      <span>
       Contents
      </span>
     </button>
    </div>
   </div>
   <div class="has-default-focus has-overflow-hidden" id="banner-holder">
   </div>
   <div class="has-overflow-hidden has-default-focus" id="disclaimer-holder">
   </div>
  </div>
  <div class="mainContainer uhf-container has-top-padding has-default-focus" data-bi-name="body">
   <div class="columns has-large-gaps ">
    <div class="left-container is-hidden-mobile column is-one-third-tablet is-one-quarter-desktop" id="left-container">
     <nav aria-label="기본" class="is-fixed is-flex is-flex-column" id="affixed-left-container" role="navigation">
     </nav>
    </div>
    <section class="primary-holder column is-two-thirds-tablet is-three-quarters-desktop">
     <div class="columns has-large-gaps ">
      <div class="column is-full is-four-fifths-desktop " id="main-column">
       <main class="content " data-bi-name="content" dir="ltr" id="main" lang="ko-kr" role="main">
        <div class="columns">
         <div class="column is-9-desktop is-12-tablet">
          <h1 id="create-tooltips-based-on-report-pages-in-power-bi-desktop" sourcefile="desktop-tooltips.md" sourcestartlinenumber="20">
           <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
          </h1>
          <ul class="metadata page-metadata" data-bi-name="page info" dir="ltr" lang="ko-kr">
           <li class="displayDate loading">
            <time data-article-date-source="ms.date" datetime="2019-05-08T00:00:00.000Z" role="presentation">
             05/08/2019
            </time>
           </li>
           <li class="readingTime">
            읽는 데 5분
           </li>
           <li class="contributors-holder">
            [ahref]
            
           </li>
          </ul>
         </div>
         <div class="column is-3 is-text-right is-hidden-tablet-only is-hidden-mobile">
          <p class="has-margin-top-none has-margin-bottom-small is-size-7">
           이 페이지가 도움이 되었나요?
          </p>
          <div class="buttons is-right">
           <button class="button thumb-rating dislike expand-rating-menu has-padding-extra-small is-icon-only is-secondary is-outlined is-rounded" data-bi-name="rating-no" data-bi-sat="0" title="아니요">
            <span aria-hidden="true" class="icon docon docon-dislike">
            </span>
           </button>
           <button class="button thumb-rating like has-margin-left-extra-small has-padding-extra-small is-icon-only is-secondary is-outlined is-rounded" data-bi-name="rating-yes" data-bi-sat="1" title="예">
            <span aria-hidden="true" class="icon docon docon-like">
            </span>
           </button>
          </div>
         </div>
        </div>
        <nav aria-label="문서 개요" class="doc-outline is-hidden-desktop" data-bi-name="intopic toc" id="center-doc-outline" role="navigation">
         <h3>
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
        </nav>
        <p>
         <span data-ttu-id="67e24-104">
          <strong>
           Power BI Desktop
          </strong>
          에서 만든 보고서 페이지에 기반을 둔 시각적 개체를 가리키면 나타나는
          <strong>
           보고서 도구 설명
          </strong>
          을 시각적으로 풍부하게 만들 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-104">
           You can create visually rich
           <strong>
            report tooltips
           </strong>
           that appear when you hover over visuals, based on report pages you create in
           <strong>
            Power BI Desktop
           </strong>
           .
          </span>
         </span>
         <span data-ttu-id="67e24-105">
          도구 설명으로 사용되는 보고서 페이지를 만들면 사용자 지정 도구 설명에 시각적 개체, 이미지 및 기타 보고서 페이지에서 만든 항목 컬렉션을 포함할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-105">
           By creating a report page that serves as your tooltip, your custom tooltips can include visuals, images, and any other collection of items you create in the report page.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-107">
          원하는 만큼 많은 도구 설명 페이지를 만들 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-107">
           You can create as many tooltip pages as you want.
          </span>
         </span>
         <span data-ttu-id="67e24-108">
          각 도구 설명 페이지는 하나 이상의 보고서 필드와 연결할 수 있으므로, 선택된 필드가 포함된 시각적 개체를 가리키면 도구 설명 페이지에서 만든 도구 설명이 나타나고, 마우스가 가리키는 데이터 요소에 따라 필터링됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-108">
           Each tooltip page can be associated with one or more fields in your report, so that when you hover over a visual that includes the selected field, the tooltip you created on your tooltip page appears when you hover over the visual, filtered by the datapoint over which your mouse is hovering.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-109">
          보고서 도구 설명을 사용하여 모든 종류의 흥미로운 작업을 수행할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-109">
           There are all sorts of interesting things you can do with report tooltips.
          </span>
         </span>
         <span data-ttu-id="67e24-110">
          도구 설명을 만드는 방법과 이를 구성하기 위해 해야 할 일을 살펴보겠습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-110">
           Let's take a look at how to create tooltips and what you must do to configure them.
          </span>
         </span>
        </p>
        <h2 id="create-a-report-tooltip-page">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         <span data-ttu-id="67e24-112">
          시작하려면 페이지 탭 영역에서
          <strong>
           Power BI Desktop
          </strong>
          캔버스 아래쪽에 있는
          <strong>
           +
          </strong>
          단추를 클릭하여 새 보고서 페이지를 만듭니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-112">
           To get started, create a new report page by clicking the
           <strong>
            +
           </strong>
           button, found along the bottom of the
           <strong>
            Power BI Desktop
           </strong>
           canvas, in the page tabs area.
          </span>
         </span>
         <span data-ttu-id="67e24-113">
          단추는 보고서의 마지막 페이지 옆에 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-113">
           The button is located beside the last page in the report.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-115">
          도구 설명의 크기는 제한되지 않지만 도구 설명은 보고서 캔버스 위에 표시되므로 적당히 작게 유지하는 것이 좋습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-115">
           Your tooltip can be any size, but keep in mind that tooltips hover over the report canvas, so you might want to keep them reasonably small.
          </span>
         </span>
         <span data-ttu-id="67e24-116">
          <strong>
           페이지 크기
          </strong>
          카드의
          <strong>
           서식
          </strong>
          창에서
          <em>
           도구 설명
          </em>
          이라는 새로운 페이지 크기 템플릿을 볼 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-116">
           In the
           <strong>
            Format
           </strong>
           pane in the
           <strong>
            Page Size
           </strong>
           card, you can see a new page size template called
           <em>
            Tooltip
           </em>
           .
          </span>
         </span>
         <span data-ttu-id="67e24-117">
          여기에는 도구 설명을 위해 준비된 보고서 페이지 캔버스 크기가 제공됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-117">
           This provides a report page canvas size that's ready for your tooltip.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-119">
          기본적으로
          <strong>
           Power BI Desktop
          </strong>
          은 보고서 캔버스를 페이지의 사용 가능한 공간에 맞춥니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-119">
           By default,
           <strong>
            Power BI Desktop
           </strong>
           fits your report canvas to the available space on the page.
          </span>
         </span>
         <span data-ttu-id="67e24-120">
          이는 유용한 경우가 많지만 도구 설명의 경우에는 그렇지 않은 경우도 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-120">
           Often that's good, but not in the case of tooltips.
          </span>
         </span>
         <span data-ttu-id="67e24-121">
          작업이 완료되면 도구 설명의 모양을 보다 잘 볼 수 있도록
          <strong>
           페이지 보기
          </strong>
          를 실제 크기로 변경할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-121">
           To get a better sense and view of what your tooltip will look like when you're done, you can change the
           <strong>
            Page View
           </strong>
           to actual size.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-122">
          그렇게 하려면 리본에서
          <strong>
           보기
          </strong>
          탭을 선택합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-122">
           To do that, select the
           <strong>
            View
           </strong>
           tab from the ribbon.
          </span>
         </span>
         <span data-ttu-id="67e24-123">
          여기에서 다음 이미지에 표시된 것처럼
          <strong>
           페이지 뷰 > 실제 크기
          </strong>
          를 선택합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-123">
           From there, select
           <strong>
            Page View > Actual Size
           </strong>
           , as shown in the following image.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-125">
          용도를 분명히 알 수 있도록 보고서 페이지의 이름을 지정할 수도 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-125">
           You can also name the report page so its purpose is clear.
          </span>
         </span>
         <span data-ttu-id="67e24-126">
          <strong>
           서식
          </strong>
          창에서
          <strong>
           페이지 정보
          </strong>
          카드를 선택한 다음, 여기에 표시되는
          <strong>
           이름
          </strong>
          필드에 이름만 입력하면 됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-126">
           Just select the
           <strong>
            Page Information
           </strong>
           card in the
           <strong>
            Format
           </strong>
           pane, then type the name into the
           <strong>
            Name
           </strong>
           field you find there.
          </span>
         </span>
         <span data-ttu-id="67e24-127">
          다음 이미지에서 도구 설명 보고서 이름은
          <em>
           Tooltip 1
          </em>
          이지만, 더 영감을 얻을 수 있는 이름으로 자유롭게 지정할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-127">
           In the following image the tooltip report name is
           <em>
            Tooltip 1
           </em>
           , but feel free to name yours something more inspired.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-129">
          여기에서 도구 설명에 표시할 시각적 개체를 만들 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-129">
           From there, you can create whatever visuals you would like to show up in your tooltip.
          </span>
         </span>
         <span data-ttu-id="67e24-130">
          다음 이미지에는 도구 설명 페이지에 두 개의 카드와 하나의 클러스터된 막대형 차트가 있고 페이지 자체의 배경색, 각 시각적 개체의 배경색으로 원하는 모양을 지정했습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-130">
           In the following image, there are two cards and one clustered bar chart on the tooltip page, along with a background color for the page itself, and backgrounds for each of the visuals, to give it the look we wanted.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-132">
          도구 설명 보고서 페이지가 도구 설명으로 작동하려면 더 많은 단계를 완료해야 합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-132">
           There are more steps to complete before your tooltip report page is ready to work as a tooltip.
          </span>
         </span>
         <span data-ttu-id="67e24-133">
          다음 섹션에 설명된 대로 몇 가지 방법으로 도구 설명 페이지를 구성해야 합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-133">
           You need to configure the tooltip page in a few ways, as described in the next section.
          </span>
         </span>
        </p>
        <h2 id="configure-your-tooltip-report-page">
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <p>
         <span data-ttu-id="67e24-135">
          도구 설명 보고서 페이지를 만들었으면,
          <strong>
           Power BI Desktop
          </strong>
          이 도구 설명으로 등록하고, 올바른 시각적 개체 위에 표시하도록 페이지를 구성해야 합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-135">
           Once you have the tooltip report page created, you need to configure the page in order for
           <strong>
            Power BI Desktop
           </strong>
           to register it as a tooltip, and to ensure it appears in over the right visuals.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-136">
          시작하려면
          <strong>
           페이지 정보
          </strong>
          카드에서
          <strong>
           도구 설명
          </strong>
          슬라이더를
          <strong>
           켜기
          </strong>
          로 전환하여 페이지를 도구 설명으로 만들어야 합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-136">
           To begin with, you need to turn the
           <strong>
            Tooltip
           </strong>
           slider to
           <strong>
            On
           </strong>
           , in the
           <strong>
            Page Information
           </strong>
           card, to make the page a tooltip.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-138">
          해당 슬라이더가 켜져 있으면 보고서 도구 설명을 표시할 필드를 지정합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-138">
           Once that slider is set to on, you specify the fields for which you want the report tooltip to appear.
          </span>
         </span>
         <span data-ttu-id="67e24-139">
          지정한 필드를 포함하는 보고서의 시각적 개체에 도구 설명이 나타납니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-139">
           For visuals in the report that include the field you specify, the tooltip will appear.
          </span>
         </span>
         <span data-ttu-id="67e24-140">
          <strong>
           시각화
          </strong>
          창의
          <strong>
           필드
          </strong>
          섹션에 있는
          <strong>
           도구 설명 필드
          </strong>
          버킷으로 끌어서 적용할 하나 이상의 필드를 지정합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-140">
           You specify which field or fields apply by dragging them into the
           <strong>
            Tooltip fields
           </strong>
           bucket, found in the
           <strong>
            Fields
           </strong>
           section of the
           <strong>
            Visualizations
           </strong>
           pane.
          </span>
         </span>
         <span data-ttu-id="67e24-141">
          다음 이미지에서
          <em>
           SalesAmount
          </em>
          필드는
          <strong>
           도구 설명 필드
          </strong>
          버킷으로 끌어온 것입니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-141">
           In the following image, the
           <em>
            SalesAmount
           </em>
           field has been dragged into the
           <strong>
            Tooltips fields
           </strong>
           bucket.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-143">
          <strong>
           도구 설명 필드
          </strong>
          버킷에는 측정값을 포함한 범주 및 숫자 필드를 모두 포함할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-143">
           You can include both categorical and numerical fields in the
           <strong>
            Tooltips fields
           </strong>
           bucket, including measures.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-144">
          완료되면 생성된 도구 설명 보고서 페이지가
          <strong>
           도구 설명 필드
          </strong>
          버킷에 배치된 필드를 사용하는 보고서의 시각적 개체에서 도구 설명으로 사용되며, 기본 Power BI 도구 설명을 대체합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-144">
           Once completed, the tooltip report page you created will be used as a tooltip in visuals in the report that use any fields you placed into the
           <strong>
            Tooltips fields
           </strong>
           bucket, replacing the default Power BI tooltip.
          </span>
         </span>
        </p>
        <h2 id="manually-setting-a-report-tooltip">
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <p>
         <span data-ttu-id="67e24-146">
          지정된 필드를 포함하는 시각적 개체를 가리키면 자동으로 나타나는 도구 설명을 만드는 것 외에도, 수동으로 도구 설명을 설정할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-146">
           In addition to creating a tooltip that automatically appears when hovering over a visual that contains the specified field, you can manually set a tooltip.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-147">
          이제 보고서 도구 설명을 지원하는 모든 시각적 개체에는 해당
          <strong>
           서식
          </strong>
          창에
          <strong>
           도구 설명
          </strong>
          카드가 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-147">
           Any visual that supports report tooltips now has a
           <strong>
            Tooltip
           </strong>
           card in its
           <strong>
            Formatting
           </strong>
           pane.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-148">
          도구 설명을 수동으로 설정하려면 수동 도구 설명을 지정할 시각적 개체를 선택한 다음,
          <strong>
           시각화
          </strong>
          창에서
          <strong>
           서식
          </strong>
          섹션을 선택하고
          <strong>
           도구 설명
          </strong>
          카드를 확장하세요.
         </span>
         <span class="sxs-lookup">
          [content4][content5][linkx]
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-150">
          그런 다음,
          <strong>
           페이지
          </strong>
          드롭다운에서 선택한 시각적 개체에 사용할 도구 설명 페이지를 선택하세요.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-150">
           Then, in the
           <strong>
            Page
           </strong>
           dropdown, select the tooltip page you want to use for the selected visual.
          </span>
         </span>
         <span data-ttu-id="67e24-151">
          <strong>
           도구 설명
          </strong>
          페이지로 지정된 보고서 페이지만 대화 상자에 표시됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-151">
           Note that only report pages that are specified as
           <strong>
            Tooltip
           </strong>
           pages show up in the dialog.
          </span>
         </span>
        </p>
        <p>
        </p>
        <p>
         <span data-ttu-id="67e24-153">
          도구 설명을 수동으로 설정하는 기능은 다양한 용도로 사용됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-153">
           Being able to manually set a tooltip has many uses.
          </span>
         </span>
         <span data-ttu-id="67e24-154">
          도구 설명에 대한 빈 페이지를 설정하여 기본 Power BI 도구 설명 선택을 재정의할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-154">
           You can set a blank page for a tooltip, and thereby override the default Power BI tooltip selection.
          </span>
         </span>
         <span data-ttu-id="67e24-155">
          또한 Power BI에서 자동으로 선택된 도구 설명을 도구 설명으로 사용하지 않으려는 경우에 사용합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-155">
           Another use is when you don't want the tooltip that is automatically selected by Power BI to be the tooltip.
          </span>
         </span>
         <span data-ttu-id="67e24-156">
          예를 들어 두 개의 필드를 포함하는 시각적 개체가 있고, 해당 필드에 연결된 도구 설명이 있는 경우, Power BI는 하나만 표시하도록 선택합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-156">
           For example, if you have a visual that includes two fields, and both of those fields have an associated tooltip, Power BI selects only one to show.
          </span>
         </span>
         <span data-ttu-id="67e24-157">
          사용자는 이를 원치 않을 경우 표시할 도구 설명을 수동으로 선택할 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-157">
           You might not want that to be the case, so you could manually select which tooltip should be displayed.
          </span>
         </span>
        </p>
        <h2 id="reverting-to-default-tooltips">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         <span data-ttu-id="67e24-159">
          시각적 개체에 대한 수동 도구 설명을 만들었지만 기본 도구 설명을 대신 사용하려는 경우, Power BI가 제공하는 기본 도구 설명으로 언제든지 되돌릴 수 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-159">
           If you create a manual tooltip for a visual but decide you want the default tooltip instead, you can always return to the default tooltip that Power BI provides.
          </span>
         </span>
         <span data-ttu-id="67e24-160">
          이렇게 하려면 시각적 개체를 선택하고
          <strong>
           도구 설명
          </strong>
          카드가 확장되었을 때,
          <strong>
           페이지
          </strong>
          드롭다운에서
          <em>
           자동
          </em>
          을 선택하여 기본값으로 되돌리면 됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-160">
           <li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>[link]
          </span>
         </span>
        </p>
        <p>
        </p>
        <h2 id="custom-report-tooltips-and-line-charts">
         <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
        </h2>
        <p>
         <span data-ttu-id="67e24-163">
          보고서 도구 설명이 꺾은선형 차트 시각적 개체와 교차 강조 표시되며 상호 작용할 때 유의해야 할 몇 가지 고려 사항이 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-163">
           There are a few considerations to keep in mind when your report tooltips are interacting with line chart visuals, and with visuals when cross-highlighting.
          </span>
         </span>
        </p>
        <h3 id="report-tooltips-and-line-charts">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <p>
         <span data-ttu-id="67e24-165">
          꺾은선형 차트에 대한 보고서 도구 설명이 표시될 때는 차트의 모든 줄에 대한 하나의 도구 설명만 표시됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-165">
           When a report tooltip is displayed for a line chart, only one tooltip for all lines in the chart is displayed.
          </span>
         </span>
         <span data-ttu-id="67e24-166">
          이는 하나의 도구 설명만 표시하는 꺾은선형 차트의 기본 도구 설명 동작과 유사합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-166">
           This is similar to the default tooltip behavior for line charts, which also displays only one tooltip.
          </span>
         </span>
        </p>
        <p>
         <span data-ttu-id="67e24-167">
          이 동작은 범례에 있는 필드가 도구 설명의 필터로 전달되지 않기 때문에 발생합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-167">
           This is because the field in the legend does not get passed through as a filter for the tooltip.
          </span>
         </span>
         <span data-ttu-id="67e24-168">
          다음 이미지에서 표시되는 도구 설명에는 보고서 도구 설명에 표시된 세 가지 클래스(이 예에서는 Deluxe, Economy 및 Regular) 전체에서 해당 날짜에 판매된 모든 단위가 표시됩니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-168">
           In the following image, the tooltip being displayed is showing all units sold on that day across all three classes displayed in the report tooltip (in this example, Deluxe, Economy, and Regular).
          </span>
         </span>
        </p>
        <p>
        </p>
        <h3 id="report-tooltips-and-cross-highlighting">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
        <p>
         <span data-ttu-id="67e24-171">
          보고서에서 시각적 개체가 교차 강조 표시될 때 보고서 도구 설명은 사용자가 데이터 요소의 흐린 섹션을 가리키더라도 교차 강조 표시된 데이터를 항상 표시합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-171">
           When a visual is being cross-highlighted in a report, report tooltips always show the cross-highlighted data, even if you're hovering over the faded section of the data point.
          </span>
         </span>
         <span data-ttu-id="67e24-172">
          다음 이미지에서는 막대 그래프의 흐린 섹션(강조 표시되지 않은 섹션)을 마우스로 가리키더라도 보고서 도구 설명에서는 여전히 해당 데이터 요소에서 강조 표시된 부분의 데이터(강조 표시된 데이터)를 표시합니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-172">
           In the following image, the mouse is hovering over the faded section of the bar graph (the section that is not highlighted), but the report tooltip still shows data for the highlighted portion of that datapoint (the highlighted data).
          </span>
         </span>
        </p>
        <p>
        </p>
        <h2 id="limitations-and-considerations">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         <span data-ttu-id="67e24-175">
          <strong>
           도구 설명
          </strong>
          에 대해 유념해야 할 몇 가지 제한 사항과 고려 사항이 있습니다.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-175">
           There are a few limitations and considerations for
           <strong>
            tooltips
           </strong>
           to keep in mind.
          </span>
         </span>
        </p>
        <ul>
         [content17][content18][linkx][content19][content20][linkx][content1][content12][content13][content14][linkx]
        </ul>
        <h2 id="next-steps">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <p>
         <span data-ttu-id="67e24-182">
          보고서 도구 설명과 유사한 기능 또는 상호 작용하는 기능에 대한 자세한 내용은 다음 아티클을 참조하세요.
         </span>
         <span class="sxs-lookup">
          <span data-stu-id="67e24-182">
           For more information about features that are similar or interact with report tooltips, take a look at the following articles:
          </span>
         </span>
        </p>
        <ul>
         <li>
          <a data-linktype="relative-path" href="h">
           <span data-ttu-id="67e24-183">
            Power BI Desktop에서 드릴스루 사용
           </span>
           <span class="sxs-lookup">
            <span data-stu-id="67e24-183">
             Use drillthrough in Power BI Desktop
            </span>
           </span>
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </main>
       <section class="feedback-section" data-bi-name="feedback-section">
        <div class="has-border-top has-padding-top-small has-margin-top-medium has-margin-bottom-small" data-bi-name="rating" id="feedback-verbatim">
         <p class="has-margin-top-none has-margin-bottom-small">
          이 페이지가 도움이 되었나요?
         </p>
         <button aria-controls="verbatim-input" aria-haspopup="true" class="button thumb-rating dislike expand-rating-menu has-margin-right-extra-small has-padding-extra-small is-icon-only is-secondary is-outlined is-rounded" data-bi-name="rating-no" data-bi-sat="0" title="아니요">
          <span aria-hidden="true" class="icon docon docon-dislike">
          </span>
         </button>
         <button aria-controls="verbatim-input" aria-haspopup="true" class="button thumb-rating like expand-rating-menu has-padding-extra-small is-icon-only is-secondary is-outlined is-rounded" data-bi-name="rating-yes" data-bi-sat="1" title="예">
          <span aria-hidden="true" class="icon docon docon-like">
          </span>
         </button>
         <form class="is-hidden" id="feedback-verbatim-form">
          <div class="box is-relative has-box-shadow-none has-border has-margin-top-medium has-padding-small is-size-7" id="verbatim-textarea">
           <label class="visually-hidden" for="rating-feedback">
            의견을 공유해 주세요.
           </label>
          </div>
          <div class="buttons is-right has-margin-top-medium">
           <button class="button is-text is-link" id="skip-rating" type="button">
            건너뛰기
           </button>
           <button class="button is-primary" data-bi-name="rating-verbatim" disabled="" id="submit-rating" type="submit">
            전송
           </button>
          </div>
         </form>
         <div class="is-hidden" id="thankyou-rating">
          <p>
           피드백을 보내 주셔서 감사합니다.
          </p>
         </div>
        </div>
        <h2 id="feedback">
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <div class="alert choose-feedback-type">
         <p aria-hidden="true" id="send-feedback-about">
          다음에 대한 피드백 보내기[content11][content12][linkx][content13]
         </p>
         <div class="choose-feedback-buttons">
          [ahref]
          
          <div class="field has-addons is-inline-flex has-margin-bottom-small">
           <div class="control has-margin-top-none has-margin-bottom-none">
            <button aria-label="이 페이지에 대한 피드백 보내기" class="button feedback-sign-in-button has-text-wrap" data-bi-name="feedback-sign-in">
             <span aria-hidden="true" class="icon docon docon-brand-github">
             </span>
             <span>
              이 페이지
             </span>
            </button>
           </div>
           <div auto-align="" class="control dropdown has-caret has-margin-top-none has-margin-bottom-none">
            <button aria-controls="fbm0" aria-describedby="send-feedback-about" aria-expanded="false" aria-label="추가 피드백 옵션" class="button dropdown-trigger is-full-height" data-bi-name="documentation-feedback-menu">
             <span aria-hidden="true" class="icon">
              <span class="docon docon-chevron-down-light expanded-indicator">
              </span>
             </span>
            </button>
            <div class="dropdown-menu documentation-feedback-menu" id="fbm0">
             [linkx]
             
             에 직접 피드백을 남길 수도 있습니다.
            </div>
           </div>
          </div>
          <div class="field has-addons is-inline-flex has-margin-bottom-small" hidden="">
           <div class="control has-margin-top-none has-margin-bottom-none">
            <button aria-controls="feedback-form" aria-describedby="send-feedback-about" aria-expanded="false" class="button feedback-form-toggle" data-bi-name="documentation-feedback">
             이 페이지
            </button>
           </div>
           <div auto-align="" class="control dropdown has-caret has-margin-top-none has-margin-bottom-none">
            <button aria-controls="fbm1" aria-describedby="send-feedback-about" aria-expanded="false" aria-label="추가 피드백 옵션" class="button dropdown-trigger" data-bi-name="documentation-feedback-menu">
             <span aria-hidden="true" class="icon">
              <span class="docon docon-chevron-down-light expanded-indicator">
               [content6][content7][linkx][content8]
              </span>
             </span>
            </button>
            <div class="dropdown-menu documentation-feedback-menu" id="fbm1">
             [ahref]
             
             에 직접 피드백을 남길 수도 있습니다.
            </div>
           </div>
          </div>
         </div>
        </div>
        <form accept-charset="UTF-8" action=":" autocomplete="off" class="feedback-form" hidden="" id="feedback-form">
         <h3 class="feedback-form-heading current-user">
          [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h3>
         <label>
          <span class="visually-hidden">
           문제 제목
          </span>
         </label>
         <label>
          <span class="visually-hidden">
           의견 남기기
          </span>
         </label>
         <div class="action-container">
          <button class="button is-primary" name="submit" type="submit">
           피드백 제출
          </button>
         </div>
        </form>
        <div class="feedback-status alert is-loading">
         <p>
          피드백 로드 중...
         </p>
        </div>
        <div class="feedback-tab-group tabGroup" data-tab-group-independent="" hidden="">
         <ul role="tablist">
          <li role="presentation">
           <a aria-controls="tabpanel-issues-open" data-tab="issues-open" href="n" role="tab">
           </a>
          </li>
          <li role="presentation">
           [linkx]
           
          </li>
         </ul>
         <section data-tab="issues-open" id="tabpanel-issues-open" role="tabpanel">
          <div class="no-issues-placeholder">
           미해결 문제가 없습니다.
          </div>
          <ul aria-label="미해결 문제" class="github-issues-list">
          </ul>
         </section>
         <section data-tab="issues-closed" id="tabpanel-issues-closed" role="tabpanel">
          <div class="no-issues-placeholder">
           종결된 문제가 없습니다.
          </div>
          <ul aria-label="종결된 문제" class="github-issues-list">
          </ul>
         </section>
        </div>
        <div class="action-container">
         [linkx]
         
        </div>
       </section>
       <div class="footerContainer is-visible-interactive has-default-focus ">
        <footer class="footer-layout" data-bi-name="footer" id="footer-interactive">
         [ahref]
         
         <ul class="links" data-bi-name="footerlinks">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </footer>
       </div>
      </div>
      <div aria-label="페이지 작업" class="right-container column is-one-quarter is-one-fifth-desktop is-hidden-mobile is-hidden-tablet-only" data-bi-name="pageactions" id="page-actions" role="complementary">
       <nav aria-label="문서 개요" class="doc-outline is-fixed is-vertically-scrollable" data-bi-name="intopic toc" id="side-doc-outline" role="navigation">
        <h3>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h3>
       </nav>
      </div>
     </div>
    </section>
    <aside class="interactive-container is-visible-interactive column has-body-background-dark " id="interactive-container">
    </aside>
   </div>
  </div>
  <div class="openfeedback-container" id="openFeedbackContainer">
  </div>
  <div class="footerContainer has-default-focus is-hidden-interactive ">
   <footer class="footer-layout uhf-container has-padding" data-bi-name="footer" id="footer" role="contentinfo">
    <a class="locale-selector-link" data-bi-name="select-locale" data-mscc-ic="false" href="#">
     <span aria-hidden="true" class="icon docon docon-world is-size-4 has-margin-right-small">
     </span>
     <span class="local-selector-link-text">
     </span>
    </a>
    <ul class="links" data-bi-name="footerlinks">
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
       [link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </footer>
  </div>
  <div aria-label="작업 패널" class="action-panel has-default-focus" id="action-panel" role="region" tabindex="-1">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0428
  </b>
 </body>
</html>
|<---