--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.11" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-아파트_드라마 rootpage-아파트_드라마 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   <a id="top">
   </a>
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [ahref]
    
    [linkx]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <table class="infobox" style="width:300px;">
       <tbody>
        <tr>
         <td colspan="2">
          <div style="background:#DCDCDC; position:relative; width:300px; height:45px; display:table;">
           <div style="position:absolute; bottom:0; right:0;">
           </div>
           <span style="position:relative; width:100%; display:table-cell; vertical-align:middle; text-align:center; padding:4px;">
            <big>
             <big>
              <b>
               아파트
              </b>
             </big>
            </big>
           </span>
          </div>
         </td>
        </tr>
        <tr>
         <th>
          장르
         </th>
         <td>
          <a href="/wiki/%EB%93%9C%EB%9D%BC%EB%A7%88" title="드라마">
           드라마
          </a>
         </td>
        </tr>
        <tr>
         <th>
          방송 국가
         </th>
         <td>
          <span class="flagicon">
           [ahref]
           
          </span>
          [linkx]
          
         </td>
        </tr>
        <tr>
         <th>
          방송 채널
         </th>
         <td>
          <a href="/wiki/%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1" title="문화방송">
           MBC
          </a>
         </td>
        </tr>
        <tr>
         <th>
          방송 기간
         </th>
         <td>
          [linkx]
          
          [ahref]
          
          ~
          [ahref]
          
          [linkx]
          
         </td>
        </tr>
        <tr>
         <th>
          방송 시간
         </th>
         <td>
          매주 토,일 밤 8시
         </td>
        </tr>
        <tr>
         <th>
          방송 분량
         </th>
         <td>
          60분
         </td>
        </tr>
        <tr>
         <th>
          방송 횟수
         </th>
         <td>
          54부작
         </td>
        </tr>
        <tr>
         <th>
          기획
         </th>
         <td>
          김지일
         </td>
        </tr>
        <tr>
         <th>
          연출
         </th>
         <td>
          <a href="/wiki/%EC%9D%B4%EC%A7%84%EC%84%9D_(%EC%97%B0%EC%B6%9C%EA%B0%80)" title="이진석 (연출가)">
           이진석
          </a>
         </td>
        </tr>
        <tr>
         <th>
          극본
         </th>
         <td>
          최성실
         </td>
        </tr>
        <tr>
         <th>
          출연자
         </th>
         <td>
          [ahref]
          
          ,
          [ahref]
          
          ,
          [ahref]
          
          ,
          [ahref]
          
          외
         </td>
        </tr>
        <tr>
         <th>
          음성
         </th>
         <td>
          2채널
          [ahref]
          
          사운드(
          <a href="/wiki/%EC%95%84%EB%82%A0%EB%A1%9C%EA%B7%B8_%ED%85%94%EB%A0%88%EB%B9%84%EC%A0%84" title="아날로그 텔레비전">
           아날로그
          </a>
          )
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       《
       <b>
        아파트
       </b>
       》는
       [linkx]
       
       <a href="/wiki/10%EC%9B%94_21%EC%9D%BC" title="10월 21일">
        10월 21일
       </a>
       부터
       <a href="/wiki/1996%EB%85%84" title="1996년">
        1996년
       </a>
       [linkx]
       
       까지 방영된
       [linkx]
       
       로, 서민 아파트 같은 동에 사는 네 가구의 다양한 이야기들을 담아낸 홈드라마다.
       <sup class="reference" id="cite_ref-1">
        <a href="1">
         [1]
        </a>
       </sup>
      </p>
      <div class="toc" id="toc">
       <div class="toctitle" dir="ltr" lang="ko">
        <h2>
         [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
        </h2>
        <span class="toctogglespan">
         <label class="toctogglelabel" for="toctogglecheckbox">
         </label>
        </span>
       </div>
       <ul>
        <li class="toclevel-1 tocsection-1">
         [linkx]
         
         <ul>
          <li class="toclevel-2 tocsection-2">
           [ahref]
           
          </li>
          <li class="toclevel-2 tocsection-3">
           [ahref]
           
          </li>
          <li class="toclevel-2 tocsection-4">
           [linkx]
           
          </li>
          <li class="toclevel-2 tocsection-5">
           <a href="호">
            <span class="tocnumber">
             1.4
            </span>
            <span class="toctext">
             806호
            </span>
           </a>
          </li>
          <li class="toclevel-2 tocsection-6">
           <a href="물">
            <span class="tocnumber">
             1.5
            </span>
            <span class="toctext">
             그 외 인물
            </span>
           </a>
          </li>
         </ul>
        </li>
        <li class="toclevel-1 tocsection-7">
         [linkx]
         
        </li>
        <li class="toclevel-1 tocsection-8">
         [linkx]
         
        </li>
        <li class="toclevel-1 tocsection-9">
         [ahref]
         
        </li>
       </ul>
      </div>
      <h2>
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li>
        <a href="/wiki/%EC%B1%84%EC%8B%9C%EB%9D%BC" title="채시라">
         채시라<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>
        </a>
        : 나홍두 역
       </li>
      </ul>
      <dl>
       <dd>
        컴퓨터 그래픽 디자이너. 결혼에는 도통 관심이 없는 독립적이고 중성적인 성격의 여성.
       </dd>
      </dl>
      <ul>
       <li>
        [linkx]
        
        : 차나리 역
       </li>
      </ul>
      <dl>
       <dd>
        홍두와 동거하는 친구. 행복한 결혼만이 지상과제인 꿈꾸는 처녀이자 여성적인 여자.
        <sup class="reference" id="cite_ref-2">
         <a href="2">
          [2]
         </a>
        </sup>
       </dd>
      </dl>
      <ul>
       <li>
        [linkx]
        
        : 김옥분 역 - 홍두의 어머니
       </li>
      </ul>
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li>
        [ahref]
        
        : 한범수 역 - 퇴직한 대기업 이사
       </li>
       <li>
        [ahref]
        
        : 한판 역 - 범수의 아들
       </li>
       <li>
        [ahref]
         [link][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
        
        : 순정 역 - 범수의 부인
       </li>
      </ul>
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li>
        [ahref]
        
        <sup class="reference" id="cite_ref-3">
         [linkx]
         
        </sup>
        : 변응보 역 - 건축설계 사무소에서 근무
       </li>
       <li>
        <a href="/wiki/%EC%9B%90%EB%AF%B8%EA%B2%BD" title="원미경">
         원미경
        </a>
        : 이지경 역 - 응보의 아내
       </li>
       <li>
        [ahref]
        
        : 변규영 역 - 응보의 아들
       </li>
       <li>
        [linkx]
        
        : 변규리 역 - 응보의 딸
       </li>
      </ul>
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li>
        [linkx]
        
        : 이우진 역 - 신세대 남편
       </li>
       <li>
        [linkx]
        
        : 전현아 역 - 신세대 아내
       </li>
      </ul>
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li>
        <a href="/wiki/%EC%9D%B4%ED%9A%A8%EC%A0%95_(1961%EB%85%84)" title="이효정 (1961년)">
         이효정
        </a>
        : 장준하 역 - 부잣집 바람둥이
       </li>
       <li>
        [ahref]
        
        : 박호민 역 - 나리를 쫓아다니던 가난한 남자
       </li>
       <li>
        <a href="/wiki/%EA%B9%80%EC%9D%91%EC%84%9D" title="김응석">
         김응석
        </a>
        : 진호 역 - 치과의사
       </li>
       <li>
        <a href="/wiki/%EA%B0%95%EB%82%A8%EA%B8%B8" title="강남길">
         강남길
        </a>
        : 경비원 박씨 역
       </li>
       <li>
        [ahref]
        
        : 경비원 국씨 역
       </li>
       <li>
        <a class="new" href="/w/index.php?title=%EA%B9%80%ED%99%94%EC%98%81&amp;action=edit&amp;redlink=1" title="김화영 (없는 문서)">
         김화영
        </a>
        : 혜진 역
       </li>
       <li>
        [ahref]
        
        : 응보 부 역
       </li>
       <li>
        [ahref]
        
        : 응보 모 역
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [content7][content8][linkx][content9][content10]
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/wiki/%EC%9C%A0%ED%83%9C%EC%9B%85" title="유태웅">
         유태웅
        </a>
       </li>
       <li>
        <a href="/wiki/%EA%B9%80%EC%88%98%ED%98%84_(1971%EB%85%84)" title="김수현 (1971년)">
         김수현
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/wiki/%EC%9D%B4%EC%A2%85%EC%88%98_(%EB%B0%B0%EC%9A%B0)" title="이종수 (배우)">
         이종수
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/wiki/%EB%82%98%EA%B2%BD%EB%AF%B8" title="나경미">
         나경미
        </a>
       </li>
       <li>
        <a href="/wiki/%EC%8B%A0%EC%B6%A9%EC%8B%9D" title="신충식">
         신충식
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        곽민승
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/wiki/%EB%B0%95%EC%A2%85%EC%84%A4" title="박종설">
         박종설
        </a>
       </li>
       <li>
        <a href="/wiki/%EB%82%A8%EC%9C%A4%EC%A0%95" title="남윤정">
         남윤정
        </a>
       </li>
       <li>
        <a href="/wiki/%EC%9D%B4%ED%98%84%EA%B2%BD_(%EB%B0%B0%EC%9A%B0)" title="이현경 (배우)">
         이현경
        </a>
       </li>
      </ul>
      <h2>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h2>
      <ul>
       <li>
        초중반에는 동시간대 KBS 2TV <
        <a href="/wiki/%EB%AA%A9%EC%9A%95%ED%83%95%EC%A7%91_%EB%82%A8%EC%9E%90%EB%93%A4" title="목욕탕집 남자들">
         목욕탕집 남자들
        </a>
        >와 접전을 펼쳤으나
        <sup class="reference" id="cite_ref-4">
         [ahref]
         
        </sup>
        <sup class="reference" id="cite_ref-5">
         [linkx]
         
        </sup>
        1월 중순부터는 점점 격차가 벌어져
        <sup class="reference" id="cite_ref-6">
         <a href="6">
          [6]
         </a>
        </sup>
        후반부에는 시청률 부진을 면치 못했다.
        <sup class="reference" id="cite_ref-7">
         [ahref]
         
        </sup>
       </li>
       <li>
        초중반에 30% 가까이의 시청률을 기록하여 평균 시청률은 20%대였다.
       </li>
      </ul>
      <h2>
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <ul>
       <li>
        [linkx]
        
        이 드라마 촬영이 시작될 때 즈음
        <a href="/wiki/1995%EB%85%84" title="1995년">
         1995년
        </a>
        [ahref]
        
        갑작스러운 교통사고로 가슴 등에 타박상을 입게 되자 울며 겨자먹기로 드라마 촬영스케줄을 수정하는 어려움을 겪기도 했다.
        <sup class="reference" id="cite_ref-8">
         [ahref]
         
        </sup>
        <sup class="reference" id="cite_ref-9">
         <a href="9">
          [9]
         </a>
        </sup>
       </li>
       <li>
        선거 출마로 방송 출연이 금지된
        [linkx]
        
        의 모습을 드라마 타이틀에서 미처 지우지 못하였고, 총선 출마 예정자의 90일 전부터 연예·오락 프로그램 출연을 금지한 조항을 어겨 같은 해
        [ahref]
        
        초
        [linkx]
        
        에서 주의 조치를 받은 바 있었다.
        <sup class="reference" id="cite_ref-10">
         [ahref]
         
        </sup>
       </li>
       <li>
        [linkx]
        
        는 주연급으로 지목되었으나 신인이란 이유로 탈락한 바 있었다.
        <sup class="reference" id="cite_ref-11">
         [linkx]
         
        </sup>
       </li>
       <li>
        하는 일 없이 결혼할 남자 찾기에 열중하여 신데렐라 콤플렉스에 빠진 차나리 역(
        [linkx]
        
        )이 왜곡된 여성상을 심는 데 일조했다는 지적이 있었다.
        <sup class="reference" id="cite_ref-12">
         [ahref]
         
        </sup>
       </li>
      </ul>
      <h2>
       <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
      </h2>
      <div class="mw-references-wrap mw-references-columns">
       <ol class="references">
        <li id="cite_note-1">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           이무경 (1995년 10월 21일).
           <a class="external text" href="/viewer/index.nhn?articleId=1995102100329115007&amp;editNo=40&amp;printCount=1&amp;publishDate=1995-10-21&amp;officeId=00032&amp;pageNo=15&amp;printNo=15573&amp;publishType=00010" rel="nofollow">
            “서민들 진솔한 삶의 이야기 MBC「아파트」오늘 첫 방영”
           </a>
           . 경향신문.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%EC%84%9C%EB%AF%BC%EB%93%A4+%EC%A7%84%EC%86%94%ED%95%9C+%EC%82%B6%EC%9D%98+%EC%9D%B4%EC%95%BC%EA%B8%B0+MBC%E3%8C%EC%95%84%ED%8C%8C%ED%8A%B8%E3%EC%98%A4%EB%8A%98+%EC%B2%AB+%EB%B0%A9%EC%98%81&amp;rft.au=%EC%9D%B4%EB%AC%B4%EA%B2%BD&amp;rft.date=1995-10-21&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1995102100329115007%26editNo%3D40%26printCount%3D1%26publishDate%3D1995-10-21%26officeId%3D00032%26pageNo%3D15%26printNo%3D15573%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-2">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           심정미 (1995년 10월 31일).
           [ahref]
           
           . 세계일보
           <span class="reference-accessdate">
            . 2017년 2월 19일에 확인함
           </span>
           .
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%EC%B2%9C%ED%8E%B8%EC%9D%BC%EB%A5%A0+%EB%93%9C%EB%9D%BC%EB%A7%88+%22%ED%95%B4%EB%8F%84+%EB%84%88%EB%AC%B4%ED%95%9C%EB%A4%22&amp;rft.au=%EC%AC%EC%A0%95%EB%AF%B8&amp;rft.date=1995-10-31&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.segye.com%2Fcontent%2Fhtml%2F1995%2F10%2F31%2F19951031000010.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-3">
         <span class="mw-cite-backlink">
          <a href="3">
           ↑
          </a>
         </span>
         <span class="reference-text">
          [linkx]
          
          은
          [linkx]
          
          [ahref]
          
          에 출마하게 되어 같은 해
          [linkx]
          
          방송분을 끝으로 하차하였고, 극중에서는 사업차 중국에 가는 것으로 하여 아내와 아이들은 시댁에서 지내는 것으로 변경하였다.
         </span>
        </li>
        <li id="cite_note-4">
         <span class="mw-cite-backlink">
          [linkx]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           오광수 (1995년 11월 25일).
           <a class="external text" href="/viewer/index.nhn?articleId=1995112500329135001&amp;editNo=40&amp;printCount=1&amp;publishDate=1995-11-25&amp;officeId=00032&amp;pageNo=35&amp;printNo=15607&amp;publishType=00010" rel="nofollow">
            “KBS「목욕탕…」·MBC「아파트」주말 안방서 한판승부”
           </a>
           . 경향신문.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=KBS%E3%8C%EB%AA%A9%EC%9A%95%ED%83%95%A6%E3%B7MBC%E3%8C%EC%95%84%ED%8C%8C%ED%8A%B8%E3%EC%A3%BC%EB%A7%90+%EC%95%88%EB%B0%A9%EC%84%9C+%ED%95%9C%ED%8C%90%EC%8A%B9%EB%B6&amp;rft.au=%EC%98%A4%EA%B4%91%EC%88%98&amp;rft.date=1995-11-25&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1995112500329135001%26editNo%3D40%26printCount%3D1%26publishDate%3D1995-11-25%26officeId%3D00032%26pageNo%3D35%26printNo%3D15607%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-5">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           오광수 (1996년 1월 10일).
           <a class="external text" href="/viewer/index.nhn?articleId=1996011000329135010&amp;editNo=40&amp;printCount=1&amp;publishDate=1996-01-10&amp;officeId=00032&amp;pageNo=35&amp;printNo=15648&amp;publishType=00010" rel="nofollow">
            “「바람은 불어도」1위”
           </a>
           . 경향신문.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%E3%8C%EB%B0%94%EB%9E%8C%EC%9D+%EB%B6%88%EC%96%B4%EB%8F%84%E31%EC%9C%84&amp;rft.au=%EC%98%A4%EA%B4%91%EC%88%98&amp;rft.date=1996-01-10&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1996011000329135010%26editNo%3D40%26printCount%3D1%26publishDate%3D1996-01-10%26officeId%3D00032%26pageNo%3D35%26printNo%3D15648%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-6">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           [linkx]
           
           . 동아일보. 1996년 1월 16일.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%E3%8C%EB%B0%94%EB%9E%8C%EC%9D+%EB%B6%88%EC%96%B4%EB%8F%84%E3%EC%83%88%ED%95%B4+%EC%97%B0%EC%86+1%EC%9C%84&amp;rft.date=1996-01-16&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1996011600209117011%26editNo%3D45%26printCount%3D1%26publishDate%3D1996-01-16%26officeId%3D00020%26pageNo%3D17%26printNo%3D23083%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-7">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           [linkx]
           
           . 매일경제. 1996년 3월 11일.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=MBC%2C%EC%83%88%EC%A3%BC%EB%A7%90%EC%97%B0%EC%86%EA%B7%B9%E3%8C%EB%B9%EC%A0%EC%9D+%EC%95%84%EB%B2%84%EC%A7%E34%EC%9B%94%EB%B0%A9%EC%98%81&amp;rft.date=1996-03-11&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1996031100099135029%26editNo%3D16%26printCount%3D1%26publishDate%3D1996-03-11%26officeId%3D00009%26pageNo%3D35%26printNo%3D9379%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-8">
         <span class="mw-cite-backlink">
          <a href="8">
           ↑
          </a>
         </span>
         <span class="reference-text">
          <cite class="citation news">
           김정수 (1995년 9월 16일).
           [linkx]
           
           . 한겨레신문
           <span class="reference-accessdate">
            . 2018년 4월 6일에 확인함
           </span>
           .
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%EC%B5%9C%EC%A7%84%EC%A4+%EA%B5%90%ED%86%B5%EC%82%AC%EA%B3%A0+%EA%B0%EC%8A%B4%EB%93%B1%EC%97%90+%ED%83%EB%B0%95%EC%83%81&amp;rft.au=%EA%B9%EC%A0%95%EC%88%98&amp;rft.date=1995-09-16&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1995091600289119012%26editNo%3D5%26printCount%3D1%26publishDate%3D1995-09-16%26officeId%3D00028%26pageNo%3D19%26printNo%3D2342%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-9">
         <span class="mw-cite-backlink">
          <a href="9">
           ↑
          </a>
         </span>
         <span class="reference-text">
          <cite class="citation news">
           이정희 (1995년 10월 6일).
           [ahref]
           
           . 부산일보
           <span class="reference-accessdate">
            . 2018년 4월 6일에 확인함
           </span>
           .
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%E3%8C%EB%A8%B8%ED%94%BC%EC%9D%98+%EB%B2%95%EC%B9%99%E3%EC%97%90+%EB%B9%A0%EC%A7%84+MBC+%22%ED%95%98%EB%8A%94+%EC%9D%BC%EB%A7%88%EB%A4+%EA%BC%AC%EC%9D%B8%EB%A4%22&amp;rft.au=%EC%9D%B4%EC%A0%95%ED%9D%AC&amp;rft.date=1995-10-06&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnews20.busan.com%2Fcontroller%2FnewsController.jsp%3FnewsId%3D19951006000076&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-10">
         <span class="mw-cite-backlink">
          [linkx]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           박원재 (1996년 1월 23일).
           <a class="external text" href="/viewer/index.nhn?articleId=1996012300209127001&amp;editNo=45&amp;printCount=1&amp;publishDate=1996-01-23&amp;officeId=00020&amp;pageNo=27&amp;printNo=23090&amp;publishType=00010" rel="nofollow">
            “總選(총선) 출마예정자 방송출연 규제범위 싸고 논란”
           </a>
           . 동아일보.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%E7%B8%BD%E9%81%B8%28%EC%B4%9D%EC%84%A0%29+%EC%B6%9C%EB%A7%88%EC%98%88%EC%A0%95%EC%9E%90+%EB%B0%A9%EC%86%A1%EC%B6%9C%EC%97%B0+%EA%B7%9C%EC%A0%9C%EB%B2%94%EC%9C%84+%EC%B8%EA%B3%A0+%EB%85%BC%EB%9E&amp;rft.au=%EB%B0%95%EC%9B%90%EC%9E%AC&amp;rft.date=1996-01-23&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1996012300209127001%26editNo%3D45%26printCount%3D1%26publishDate%3D1996-01-23%26officeId%3D00020%26pageNo%3D27%26printNo%3D23090%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-11">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          <cite class="citation news">
           박성수 (1996년 1월 26일).
           [ahref]
           
           . 경향신문.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=MBC+%E3%8C%EC%A7%84%EC%A4%E3%E3%8C%EB%B3%84%E3%EC%B6%9C%EC%97%B0+%EC%B5%9C%EC%A7%EB%82%98+%EC%9E%AC%EC%A3%BC%EB%A7%8E%EC%9D+%E3%8C21%EC%84%B8%EA%B8%B0%ED%98%95+%EB%AF%B8%EC%9D%B8%E3%22%EC%97%B0%EA%B8%B0%ED%8F+%EB%84%93%ED%98+%ED%8A%EC%96%B4%EB%B3%BC%EB%9E%98%EC%9A%94%27&amp;rft.au=%EB%B0%95%EC%84%B1%EC%88%98&amp;rft.date=1996-01-26&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1996012600329114003%26editNo%3D40%26publishDate%3D1996-01-26%26officeId%3D00032%26pageNo%3D14%26printNo%3D15664%26publishType%3D00010%26from%3Dnews&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
        <li id="cite_note-12">
         <span class="mw-cite-backlink">
          <a href="2">
           ↑
          </a>
         </span>
         <span class="reference-text">
          <cite class="citation news">
           이무경 (1996년 2월 12일).
           [linkx]
           
           . 경향신문.
          </cite>
          <span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fko.wikipedia.org%3A%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29&amp;rft.atitle=%EB%93%9C%EB%9D%BC%EB%A7%88%27%EC%A0%EB%B0%EB%A0%90%EB%9D%BC+%EC%BD%A4%ED%94%8C%EB%A0%89%EC%8A%A4%27%EC%A4%91%EC%A6%9D&amp;rft.au=%EC%9D%B4%EB%AC%B4%EA%B2%BD&amp;rft.date=1996-02-12&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fnewslibrary.naver.com%2Fviewer%2Findex.nhn%3FarticleId%3D1996021200329135001%26editNo%3D40%26printCount%3D1%26publishDate%3D1996-02-12%26officeId%3D00032%26pageNo%3D35%26printNo%3D15681%26publishType%3D00010&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal">
           <span style="display:none;">
           </span>
          </span>
         </span>
        </li>
       </ol>
      </div>
      <table class="wikitable" style="margin:1em auto; font-size:smaller; text-align:center;">
       <caption>
       </caption>
       <tbody>
        <tr>
         <th colspan="3">
          <span style="white-space:nowrap">
          </span>
          <span style="white-space:nowrap">
           [ahref]
           
          </span>
         </th>
        </tr>
        <tr style="">
         <th abbr="이전 프로그램" id="last_program" style="width:30%">
          이전 작품
         </th>
         <th abbr="이 문서의 프로그램" id="this_program" style="width:40%">
          작품명
         </th>
         <th abbr="다음 프로그램" id="next_program" style="width:30%">
          다음 작품
         </th>
        </tr>
        <tr style="">
         <td headers="last_program" style="vertical-align:top">
          <div style="text-align:center; white-space:nowrap">
           <a href="/wiki/%EC%82%AC%EB%9E%91%EA%B3%BC_%EA%B2%B0%ED%98%BC" title="사랑과 결혼">
            사랑과 결혼
           </a>
           <br/>
           (1995년 4월 22일 ~ 1995년 10월 15일)
          </div>
         </td>
         <td headers="this_program" style="vertical-align:top">
          <div style="text-align:center; white-space:nowrap; font-weight:bold">
           아파트
           <br/>
           (1995년 10월 21일 ~ 1996년 4월 21일)
          </div>
         </td>
         <td headers="next_program" style="vertical-align:top">
          <div style="text-align:center; white-space:nowrap">
           [ahref]
           
           <br/>
           (1996년 4월 27일 ~ 1996년 7월 28일)
          </div>
         </td>
        </tr>
       </tbody>
      </table>
      <div aria-labelledby="55px&amp;#124;link=문화방송_주말연속극" class="navbox" role="navigation" style="padding:3px">
       <table class="nowraplinks collapsible collapsed navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
        <tbody>
         <tr>
          <th class="navbox-title" colspan="2" scope="col" style="background-color:#C33232; color:white;">
           <div class="plainlinks hlist navbar mini">
            <ul>
             <li class="nv-view">
              [ahref]
              
             </li>
             <li class="nv-talk">
              <a class="new" href="/w/index.php?title=%ED%8B%80%ED%86%A0%EB%A1%A0:%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1_%EC%A3%BC%EB%A7%90%EC%97%B0%EC%86%8D%EA%B7%B9&amp;action=edit&amp;redlink=1" title="틀토론:문화방송 주말연속극 (없는 문서)">
               <abbr style=";background-color:#C33232; color:white;;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none; padding:0;" title="이 틀에 대한 토론">
                d
               </abbr>
              </a>
             </li>
             <li class="nv-edit">
              [ahref]
              
             </li>
             <li class="nv-history">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div id="55px&amp;#124;link=문화방송_주말연속극" style="font-size:114%;margin:0 4em">
            <a href="/wiki/%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1" title="문화방송">
            </a>
            <a href="/wiki/%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1_%EC%A3%BC%EB%A7%90%EC%97%B0%EC%86%8D%EA%B7%B9" title="문화방송 주말연속극">
             <span style="color:white;">
              주말연속극
             </span>
            </a>
           </div>
          </th>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background-color:#EDB9B9;">
           1970년대
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" id="후반" scope="row" style="width:1%;background-color:#F5D8D8;">
               후반
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  [keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background-color:#EDB9B9;">
           1980년대
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               전반
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  <a href="/wiki/%EC%A2%85%EC%A0%90_(%EB%93%9C%EB%9D%BC%EB%A7%88)" title="종점 (드라마)">
                   종점
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%8B%B9%EC%8B%A0%EC%9D%98_%EC%B4%88%EC%83%81" title="당신의 초상">
                   당신의 초상
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                  <small>
                   (단막)
                  </small>
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               후반
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [content17][content18][content19][linkx]
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EC%82%AC%EB%9E%91%EA%B3%BC_%EC%95%BC%EB%A7%9D_(1987%EB%85%84_%EB%93%9C%EB%9D%BC%EB%A7%88)" title="사랑과 야망 (1987년 드라마)">
                   사랑과 야망
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%ED%96%89%EB%B3%B5%ED%95%9C_%EC%97%AC%EC%9E%90_(1989%EB%85%84_%EB%93%9C%EB%9D%BC%EB%A7%88)" title="행복한 여자 (1989년 드라마)">
                   행복한 여자
                  </a>
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background-color:#EDB9B9;">
           1990년대
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               전반
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%AA%BD%EC%8B%A4%EC%96%B8%EB%8B%88" title="몽실언니">
                   몽실언니
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EC%82%B0%EB%84%88%EB%A8%B8_%EC%A0%80%EC%AA%BD" title="산너머 저쪽">
                   산너머 저쪽
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EC%95%84%EB%93%A4%EA%B3%BC_%EB%94%B8" title="아들과 딸">
                   아들과 딸
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《남과 여》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               후반
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EA%B0%80%EC%8A%B4%EC%9D%84_%EC%97%B4%EC%96%B4%EB%9D%BC" title="가슴을 열어라">
                   가슴을 열어라
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EA%B7%B8%EB%8C%80_%EA%B7%B8%EB%A6%AC%EA%B3%A0_%EB%82%98" title="그대 그리고 나">
                   그대 그리고 나
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%82%A8%EC%9D%98_%EC%86%8D%EB%8F%84_%EB%AA%A8%EB%A5%B4%EA%B3%A0" title="남의 속도 모르고">
                   남의 속도 모르고
                  </a>
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background-color:#EDB9B9;">
           2000년대
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               전반
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  <a href="/wiki/%EC%82%AC%EB%9E%91%EC%9D%80_%EC%95%84%EB%AC%B4%EB%82%98_%ED%95%98%EB%82%98_(2000%EB%85%84_%EB%93%9C%EB%9D%BC%EB%A7%88)" title="사랑은 아무나 하나 (2000년 드라마)">
                   사랑은 아무나 하나
                  </a>
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EC%97%84%EB%A7%88%EC%95%BC_%EB%88%84%EB%82%98%EC%95%BC_(%EB%93%9C%EB%9D%BC%EB%A7%88)" title="엄마야 누나야 (드라마)">
                   엄마야 누나야
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EA%B7%B8%EB%8C%80%EB%A5%BC_%EC%95%8C%EA%B3%A0%EB%B6%80%ED%84%B0" title="그대를 알고부터">
                   그대를 알고부터
                  </a>
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%A7%B9%EA%B0%80%EB%84%A4_%EC%A0%84%EC%84%B1%EC%8B%9C%EB%8C%80" title="맹가네 전성시대">
                   맹가네 전성시대
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               후반
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  <a href="/wiki/%EB%96%A8%EB%A6%AC%EB%8A%94_%EA%B0%80%EC%8A%B4" title="떨리는 가슴">
                   떨리는 가슴
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EA%B2%B0%ED%98%BC%ED%95%A9%EC%8B%9C%EB%8B%A4_(2005%EB%85%84_%EB%93%9C%EB%9D%BC%EB%A7%88)" title="결혼합시다 (2005년 드라마)">
                   결혼합시다
                  </a>
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EC%A7%84%EC%A7%9C_%EC%A7%84%EC%A7%9C_%EC%A2%8B%EC%95%84%ED%95%B4_(%EB%93%9C%EB%9D%BC%EB%A7%88)" title="진짜 진짜 좋아해 (드라마)">
                   진짜 진짜 좋아해
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%AC%B8%ED%9D%AC_(%EB%93%9C%EB%9D%BC%EB%A7%88)" title="문희 (드라마)">
                   문희
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EC%9E%98%ED%96%88%EA%B5%B0_%EC%9E%98%ED%96%88%EC%96%B4_(%EB%93%9C%EB%9D%BC%EB%A7%88)" title="잘했군 잘했어 (드라마)">
                   잘했군 잘했어
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  <a class="mw-redirect" href="/wiki/%EC%9D%B8%EC%97%B0_%EB%A7%8C%EB%93%A4%EA%B8%B0" title="인연 만들기">
                   인연 만들기
                  </a>
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background-color:#EDB9B9;">
           2010년대
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               전반
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                   [keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  [content4[linkx]content5]
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [ahref]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;background-color:#F5D8D8;">
               후반
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  《
                  <a href="/wiki/%EC%97%AC%EC%9E%90%EB%A5%BC_%EC%9A%B8%EB%A0%A4" title="여자를 울려">
                   여자를 울려
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%8B%B9%EC%8B%A0%EC%9D%80_%EB%84%88%EB%AC%B4%ED%95%A9%EB%8B%88%EB%8B%A4" title="당신은 너무합니다">
                   당신은 너무합니다
                  </a>
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%B0%A5%EC%83%81_%EC%B0%A8%EB%A6%AC%EB%8A%94_%EB%82%A8%EC%9E%90" title="밥상 차리는 남자">
                   밥상 차리는 남자
                  </a>
                  》
                 </li>
                 <li>
                  《
                  <a href="/wiki/%EB%B6%80%EC%9E%A3%EC%A7%91_%EC%95%84%EB%93%A4" title="부잣집 아들">
                   부잣집 아들
                  </a>
                  》
                 </li>
                 <li>
                  《
                  [linkx]
                  
                  》
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <td class="navbox-abovebelow" colspan="2" style="background-color:#EDB9B9;">
           <div>
            [linkx]
            
            | 일일 (
            [linkx]
            
            <span style="font-weight:bold;">
             ·
            </span>
            [ahref]
            
            ) |
            [linkx]
             [content7][content8][linkx][content9][content10][content11][linkx]
            
            |
            <a href="/wiki/%ED%8B%80:%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1_%EC%88%98%EB%AA%A9_%EB%AF%B8%EB%8B%88%EC%8B%9C%EB%A6%AC%EC%A6%88" title="틀:문화방송 수목 미니시리즈">
             수목
            </a>
            |
            [linkx]
            
            |
            <a href="/wiki/%ED%8B%80:%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1_%EC%98%88%EB%8A%A5%EB%93%9C%EB%9D%BC%EB%A7%88" title="틀:문화방송 예능드라마">
             예능
            </a>
            | 주말 (
            [ahref]
            
            <span style="font-weight:bold;">
             ·
            </span>
            <a href="/wiki/%ED%8B%80:%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1_%EC%A3%BC%EB%A7%90%EC%97%B0%EC%86%8D%EA%B7%B9" title="틀:문화방송 주말연속극">
             연속극
            </a>
            ) |
            [linkx]
            
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [linkx]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [linkx]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:1996%EB%85%84_%EB%93%9C%EB%9D%BC%EB%A7%88" title="분류:1996년 드라마">
         1996년 드라마
        </a>
       </li>
       <li>
        <a href="/wiki/%EB%B6%84%EB%A5%98:%EB%AC%B8%ED%99%94%EB%B0%A9%EC%86%A1_%EC%A3%BC%EB%A7%90%EC%97%B0%EC%86%8D%EA%B7%B9" title="분류:문화방송 주말연속극">
         문화방송 주말연속극
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [linkx]
       
      </li>
      <li id="pt-anoncontribs">
       [ahref]
       
      </li>
      <li id="pt-createaccount">
       [ahref]
       
      </li>
      <li id="pt-login">
       <a accesskey="o" href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EB%A1%9C%EA%B7%B8%EC%9D%B8&amp;returnto=%EC%95%84%ED%8C%8C%ED%8A%B8+%28%EB%93%9C%EB%9D%BC%EB%A7%88%29" title="위키백과에 로그인하면 여러가지 편리한 기능을 사용할 수 있습니다. [o]">
        로그인
       </a>
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [ahref]
         
        </span>
       </li>
       <li id="ca-talk">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul>
       [link][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li><li>[link]</li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [content1][content2][linkx][content3]
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        [ahref]
        
       </li>
       <li id="n-portal">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EC%82%AC%EC%9A%A9%EC%9E%90_%EB%AA%A8%EC%9E%84" title="위키백과 참여자를 위한 토론/대화 공간입니다.">
         사용자 모임
        </a>
       </li>
       <li id="n-currentevents">
        [ahref]
        
       </li>
       <li id="n-recentchanges">
        [ahref]
        
       </li>
       <li id="n-index">
        [ahref]
        
       </li>
       <li id="n-randompage">
        [ahref]
        
       </li>
       <li id="n-help">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%8F%84%EC%9B%80%EB%A7%90" title="도움말">
         도움말
        </a>
       </li>
       <li id="n-sitesupport">
        <a href="/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_ko.wikipedia.org&amp;uselang=ko" title="지원을 기다립니다">
         기부
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        [ahref]
        
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        [ahref]
        
       </li>
       <li id="t-permalink">
        <a href="/w/index.php?title=%EC%95%84%ED%8C%8C%ED%8A%B8_(%EB%93%9C%EB%9D%BC%EB%A7%88)&amp;oldid=24188183" title="문서의 이 판에 대한 고유링크">
         고유 링크
        </a>
       </li>
       <li id="t-info">
        [linkx]
        
       </li>
       <li id="t-wikibase">
        [ahref]
        
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [ahref]
        
       </li>
       <li id="coll-download-as-rl">
        [ahref]
        
       </li>
       <li id="t-print">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     <div class="body">
      <ul>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-add wb-langlinks-link">
        [linkx]
        
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2019년 5월 11일 (토) 09:55에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">
      크리에이티브 커먼즈 저작자표시-동일조건변경허락 3.0
     </a>
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     [linkx]
     
     을 참고하십시오.
     <br/>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     [ahref]
     
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [ahref]
     
    </li>
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%A9%B4%EC%B1%85_%EC%A1%B0%ED%95%AD" title="위키백과:면책 조항">
      면책 조항
     </a>
    </li>
    <li id="footer-places-developers">
     [linkx]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     [ahref]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0006
  </b>
 </body>
</html>
|<---