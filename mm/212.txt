--->|<!DOCTYPE html>
<html itemscope="" itemtype="http://schema.org/WebPage" lang="ko-KR">
 <head>
  <meta charset="utf-8"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="Total WordPress Theme 4.6.1" name="generator">
   <meta content="IE=edge" http-equiv="X-UA-Compatible">
   </meta>
  </meta>
 </head>
 <body class="page-template-default page page-id-9 wp-custom-logo wpex-theme wpex-responsive full-width-main-layout has-composer wpex-live-site content-full-width sidebar-widget-icons hasnt-overlay-header wpex-has-fixed-footer page-header-disabled wpex-mobile-toggle-menu-icon_buttons has-mobile-menu wpex-share-p-horizontal wpb-js-composer js-comp-ver-5.4.7 vc_responsive">
  [linkx]
  
  <span data-ls_id="#site_top">
  </span>
  <div class="clr" id="outer-wrap">
   <div class="clr" id="wrap">
    <header class="header-one fixed-scroll shrink-sticky-header custom-bg dyn-styles clr" id="site-header" itemscope="itemscope" itemtype="http://schema.org/WPHeader">
     <div class="container clr" id="site-header-inner">
      <div class="site-branding clr header-one-logo" id="site-logo">
       <div class="clr" id="site-logo-inner">
        [linkx]
        
       </div>
      </div>
      <div class="navbar-style-one wpex-dropdowns-caret clr" id="site-navigation-wrap">
       <nav class="navigation main-navigation clr" id="site-navigation" itemscope="itemscope" itemtype="http://schema.org/SiteNavigationElement">
        <ul class="dropdown-menu sf-menu" id="menu-paris_menu">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-25" id="menu-item-25">
          <a href="/about-us/">
           <span class="link-inner">
            파리어학원 소개
           </span>
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-24" id="menu-item-24">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-23" id="menu-item-23">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-727" id="menu-item-727">
          [content10[linkx]content11]
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-22" id="menu-item-22">
          [ahref]
          
         </li>
        </ul>
       </nav>
      </div>
      <div class="clr wpex-mobile-menu-toggle wpex-hidden" id="mobile-menu">
       [ahref]
       
      </div>
     </div>
    </header>
    <main class="site-main clr" id="main">
     <div class="container clr" id="content-wrap">
      <div class="content-area clr" id="primary">
       <div class="site-content clr" id="content">
        <article class="single-page-article wpex-clr" id="single-blocks">
         <div class="single-page-content entry clr">
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101161110">
             <div class="wpb_wrapper">
              <div class="wpb_revslider_element wpb_content_element">
               <div class="rev_slider_wrapper fullwidthbanner-container" data-source="gallery" id="rev_slider_1_1_wrapper" style="margin:0px auto;background:transparent;padding:0px;margin-top:0px;margin-bottom:0px;">
                <div class="rev_slider fullwidthabanner" data-version="5.4.7.2" id="rev_slider_1_1" style="display:none;">
                 <ul>
                  <li data-description="" data-easein="default" data-easeout="default" data-hideafterloop="0" data-hideslideonmobile="off" data-index="rs-1" data-masterspeed="300" data-param1="" data-param10="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-rotate="0" data-saveperformance="off" data-slotamount="default" data-title="Slide" data-transition="fade">
                   <div class="tp-caption tp-resizeme" data-fontsize="['42','42','36','32']" data-frames='[{"delay":670,"speed":2000,"frame":"0","from":"opacity:0;","to":"o:1;","ease":"Power4.easeInOut"},{"delay":"wait","speed":300,"frame":"999","to":"opacity:0;","ease":"Power3.easeInOut"}]' data-height="['44','44','44','none']" data-hoffset="['11','11','11','18']" data-letterspacing="['25','25','25','20']" data-lineheight="['42','42','36','32']" data-paddingbottom="[0,0,0,0]" data-paddingleft="[0,0,0,0]" data-paddingright="[0,0,0,0]" data-paddingtop="[0,0,0,0]" data-responsive_offset="on" data-textalign="['center','center','center','center']" data-type="text" data-voffset="['-119','-119','-117','-89']" data-whitespace="nowrap" data-width="['391','391','391','369']" data-x="['center','center','center','center']" data-y="['middle','middle','middle','middle']" id="slide-1-layer-2" style="z-index: 6; min-width: 391px; max-width: 391px; max-width: 44px; max-width: 44px; white-space: nowrap; font-size: 42px; line-height: 42px; font-weight: 400; color: #ffffff; letter-spacing: 25px;font-family:'Nanum Myeongjo';">
                    파리어학원
                   </div>
                   <div class="tp-caption tp-resizeme" data-frames='[{"delay":10,"speed":1700,"frame":"0","from":"opacity:0;","to":"o:1;","ease":"Power3.easeInOut"},{"delay":"wait","speed":300,"frame":"999","to":"opacity:0;","ease":"Power3.easeInOut"}]' data-height="none" data-hoffset="['0','0','0','7']" data-paddingbottom="[0,0,0,0]" data-paddingleft="[0,0,0,0]" data-paddingright="[0,0,0,0]" data-paddingtop="[0,0,0,0]" data-responsive_offset="on" data-textalign="['inherit','inherit','inherit','inherit']" data-type="image" data-voffset="['-202','-202','-183','-154']" data-whitespace="nowrap" data-width="none" data-x="['center','center','center','center']" data-y="['middle','middle','middle','middle']" id="slide-1-layer-5" style="z-index: 7;">
                   </div>
                   <div class="tp-caption tp-resizeme tp-videolayer" data-autoplay="on" data-frames='[{"delay":0,"speed":300,"frame":"0","from":"opacity:0;","to":"o:1;","ease":"Power3.easeInOut"},{"delay":"wait","speed":300,"frame":"999","to":"opacity:0;","ease":"Power3.easeInOut"}]' data-hoffset="['0','0','0','-1']" data-paddingbottom="[0,0,0,0]" data-paddingleft="[0,0,0,0]" data-paddingright="[0,0,0,0]" data-paddingtop="[0,0,0,0]" data-responsive_offset="on" data-textalign="['inherit','inherit','inherit','inherit']" data-type="video" data-videoattributes="title=0&amp;byline=0&amp;portrait=0&amp;api=1" data-videoheight="['307px','307px','270px','229px']" data-videoloop="none" data-videowidth="['524px','524px','451px','351px']" data-vimeoid="314175273" data-voffset="['268','248','178','165']" data-volume="100" data-whitespace="nowrap" data-x="['center','center','center','center']" data-y="['top','top','top','top']" id="slide-1-layer-7" style="z-index: 8;">
                   </div>
                  </li>
                 </ul>
                 <div class="tp-bannertimer tp-bottom" style="visibility: hidden !important;">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101379785">
             <div class="wpb_wrapper">
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid vc_custom_1535019561658 wpex-vc_row-has-fill wpex-vc-row-stretched" data-vc-full-width="true" data-vc-full-width-init="false" style="background-position:center top !important;">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner ">
             <div class="wpb_wrapper">
              <div class="wpb_text_column has-custom-color wpb_content_element " data-wpex-rcss='{"font-size":{"d":"28px","tp":"24px","pp":"22px"}}' style="color:#ffffff;text-align:center;">
               <div class="wpb_wrapper">
                <p>
                 REVIEW
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 32px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpex-carousel wpex-carousel-blog owl-carousel clr arrwstyle-default" data-autoplay="true" data-autoplay-timeout="5000" data-center="true" data-dots="false" data-items="1" data-items-mobile-landscape="1" data-items-mobile-portrait="1" data-items-tablet="1" data-loop="true" data-margin="15" data-nav="false" data-slideby="1" data-smart-speed="150">
               <li>[keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[link]</li>[link][link]<li>[link]</li>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row-full-width vc_clearfix">
          </div>
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101379785">
             <div class="wpb_wrapper">
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid main_benefit_wrap vc_custom_1526304245902 wpex-vc_row-has-fill wpex-vc-row-stretched" data-vc-full-width="true" data-vc-full-width-init="false" style="background-position:center top !important;">
           [content20][content1][content2][linkx]
          </div>
          <div class="vc_row-full-width vc_clearfix">
          </div>
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101379785">
             <div class="wpb_wrapper">
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid main_benefit_wrap vc_custom_1536676433934 wpex-vc_row-has-fill wpex-vc-row-stretched" data-vc-full-width="true" data-vc-full-width-init="false" style="background-position:center top !important;">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner ">
             <div class="wpb_wrapper">
              <div class="wpb_text_column has-custom-color wpb_content_element main_benefit_tit" style="color:#ffffff;font-weight:700;text-align:center;">
               <div class="wpb_wrapper">
                <p>
                 <span class="color_blue">
                  1:1
                 </span>
                 학사 관리
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 30px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column has-custom-color wpb_content_element main_benefit_cont" style="color:#ffffff;text-align:center;line-height:1.7em;">
               <div class="wpb_wrapper">
                <p>
                 초기 어학상담과 레벨테스트를 통한
                 <span class="fw_500">
                  맞춤 어학 플래닝부터
                  <br>
                   <h1>
                    <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
                   </h1>
                   매월 말 진행되는 1:1 개인별 피드백
                  </br>
                 </span>
                 까지 체계적인 관리 시스템이 갖추어져 있습니다.
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row-full-width vc_clearfix">
          </div>
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101379785">
             <div class="wpb_wrapper">
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid main_benefit_wrap vc_custom_1526304235708 wpex-vc_row-has-fill wpex-vc-row-stretched" data-vc-full-width="true" data-vc-full-width-init="false" style="background-position:center top !important;">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner ">
             <div class="wpb_wrapper">
              <div class="wpb_text_column has-custom-color wpb_content_element main_benefit_tit" style="color:292929;font-weight:700;text-align:center;">
               <div class="wpb_wrapper">
                <p>
                 <span class="color_blue">
                  프랑스
                 </span>
                 를 느낄 수 있는 환경
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 30px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column has-custom-color wpb_content_element main_benefit_cont" style="color:#404040;text-align:center;">
               <div class="wpb_wrapper">
                <p>
                 <span class="fw_500">
                  현지학교와 비슷한 어학원 내부,
                  <br>
                   그리고 프랑스원서
                  </br>
                 </span>
                 를 맘껏 읽을 수 있는 Médiathèque가 준비되어있습니다.
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row-full-width vc_clearfix">
          </div>
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101379785">
             <div class="wpb_wrapper">
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid main_benefit_wrap vc_custom_1526304241083 wpex-vc_row-has-fill wpex-vc-row-stretched" data-vc-full-width="true" data-vc-full-width-init="false" style="background-position:center top !important;">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner ">
             <div class="wpb_wrapper">
              <div class="wpb_text_column has-custom-color wpb_content_element main_benefit_tit" style="color:#ffffff;font-weight:700;text-align:center;">
               <div class="wpb_wrapper">
                <p>
                 매월 다양한
                 <span class="color_blue">
                  이벤트 진행
                 </span>
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 30px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column has-custom-color wpb_content_element main_benefit_cont" style="color:#ffffff;text-align:center;line-height:1.7em;">
               <div class="wpb_wrapper">
                <p>
                 매월 열리는 프랑스와 관련된
                 <span class="fw_500">
                  이벤트를 통해 문화와 언어
                 </span>
                 를 함께 익힐 수 있습니다.
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row-full-width vc_clearfix">
          </div>
          <div class="vc_row wpb_row vc_row-fluid">
           <div class="wpb_column vc_column_container vc_col-sm-12">
            <div class="vc_column-inner vc_custom_1526101379785">
             <div class="wpb_wrapper">
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row wpb_row vc_row-fluid main_contact_wrap vc_custom_1526304693383 wpex-vc_row-has-fill wpex-vc-row-stretched" data-vc-full-width="true" data-vc-full-width-init="false" style="background-position:center top !important;">
           <div class="wpb_column vc_column_container vc_col-sm-6">
            <div class="vc_column-inner ">
             <div class="wpb_wrapper">
              <div class="wpb_text_column has-custom-color wpb_content_element " data-wpex-rcss='{"font-size":{"d":"50px","tp":"40px ","pp":"32px"}}' style="color:#292929;letter-spacing:-1px;font-weight:700;">
               <div class="wpb_wrapper">
                <p>
                 CONTACT US
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 30px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column has-custom-color wpb_content_element " data-wpex-rcss='{"font-size":{"d":"16px","tp":"15px"}}' style="color:#4c4c4c;">
               <div class="wpb_wrapper">
                <p>
                 언어를 배우는 과정, 정확한 방향과 플랜이 중요합니다.
                 <br>
                  프랑스어학상담 전문가와 함께
                  <span class="fw_700">
                   파리어학원
                  </span>
                  에서 시작하세요!
                 </br>
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 30px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column wpb_content_element main_contac_list call">
               <div class="wpb_wrapper">
                <p>
                 010-4292-0431
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 12px">
               <span class="vc_empty_space_inner">
                [keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][link][keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
               </span>
              </div>
              <div class="wpb_text_column wpb_content_element main_contac_list location">
               <div class="wpb_wrapper">
                <p>
                 서울시 서초구 서초대로 397 부띠끄모나코 B동 1102호
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 12px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column wpb_content_element main_contac_list email">
               <div class="wpb_wrapper">
                <p>
                 contact.langue@gmail.com
                </p>
               </div>
              </div>
              <div class="vc_empty_space" style="height: 40px">
               <span class="vc_empty_space_inner">
               </span>
              </div>
              <div class="wpb_text_column wpb_content_element ">
               <div class="wpb_wrapper">
                <p>
                 [linkx]
                 
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="wpb_column vc_column_container vc_col-sm-6">
            <div class="vc_column-inner ">
             <div class="wpb_wrapper">
              <div class="wpb_gmaps_widget wpb_content_element vc_custom_1526104684527">
               [ahref]
               
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="vc_row-full-width vc_clearfix">
          </div>
         </div>
        </article>
       </div>
      </div>
     </div>
    </main>
    <div class="clr textleft" id="footer-bottom">
     <div class="container clr" id="footer-bottom-inner">
      <div class="clr" id="copyright">
       주소 : 서울시 서초구 서초대로 397 부띠끄모나코 B동 1102호 파리어학원
       <br/>
       상호 : 파리어학원ㅣ 대표: 최유리ㅣ 사업자등록번호 : 570-92-00601 ㅣ TEL: 010-4292-0431
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":412,"slug":"%ec%9a%94%ec%9d%bc%eb%b3%84-%ec%8b%9c%ea%b0%84%ed%91%9c","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"medium","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"none","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-412" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-medium responsive size-medium" id="popmake-412">
    <div class="pum-content popmake-content">
     <p class="table_tit">
      요일별 시간표
     </p>
     <p class="table_tx">
      옆으로 드래그하시면 모든 내용을 보실 수 있습니다.
     </p>
     <div class="table_wrap">
      <table border="1" class="time" width="100%">
       <colgroup>
        <col class="fix" span="1"/>
       </colgroup>
       <thead>
        <tr>
         <th bgcolor="#3fb0f0">
         </th>
         <th bgcolor="#3fb0f0">
          Lundi (월)
         </th>
         <th bgcolor="#3fb0f0">
          Mardi (화)
         </th>
         <th bgcolor="#3fb0f0">
          Mercredi (수)
         </th>
         <th bgcolor="#3fb0f0">
          Jeudi (목)
         </th>
         <th bgcolor="#3fb0f0">
          Vendredi (금)
         </th>
        </tr>
       </thead>
       <tbody>
        <tr>
         <td bgcolor="#f5f9fb" style="text-align: center;">
          10h – 13h
         </td>
         <td>
          <p>
          </p>
         </td>
         <td style="text-align: center;">
          <span style="color: #ffcc99; font-family: inherit; font-size: inherit;">
           Programme A1 (2)
          </span>
         </td>
         <td style="text-align: center;">
          <p style="text-align: center;">
           <span class="s1" style="color: #333399;">
            Programme B1 (1)
           </span>
          </p>
         </td>
         <td style="text-align: center;">
          <span style="color: #ffcc99; font-family: inherit; font-size: inherit;">
           Programme A1 (2)
          </span>
         </td>
         <td style="text-align: center;">
          <p style="text-align: center;">
           <span class="s1" style="color: #333399;">
            Programme B1 (1)
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <td bgcolor="#f5f9fb" style="text-align: center;">
          14h – 16h
         </td>
         <td>
          <p class="p2" style="text-align: center;">
          </p>
         </td>
         <td style="text-align: center;">
          <span style="color: #339966;">
           Programme A0
           <br>
           </br>
          </span>
          <span style="color: #993366;">
           Atelier Delf A2
          </span>
         </td>
         <td style="text-align: center;">
          <span style="color: #ffcc99; font-family: inherit; font-size: inherit;">
           Programme A1 (3)
           <br>
            <strong style="color: #000000; font-family: inherit; font-size: inherit;">
             14h-17h
            </strong>
            <br>
            </br>
           </br>
          </span>
         </td>
         <td>
          <p style="text-align: center;">
           [keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[link]</li>[link]
          </p>
         </td>
         <td>
          <p style="text-align: center;">
           <span style="color: #ffcc99;">
            Programme A1 (3)
            <br/>
            <span style="color: #000000;">
             <strong>
              14h-17h
             </strong>
            </span>
            <br/>
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <td bgcolor="#f5f9fb" style="text-align: center;">
         </td>
         <td style="text-align: center;">
          <p style="text-align: center;">
          </p>
         </td>
         <td style="text-align: center;">
          <p style="text-align: center;">
          </p>
         </td>
         <td style="text-align: center;">
         </td>
         <td style="text-align: center;">
          <p style="text-align: center;">
          </p>
         </td>
         <td>
          <p style="text-align: center;">
          </p>
         </td>
        </tr>
        <tr>
         <td bgcolor="#f5f9fb" style="text-align: center;">
          18h 30 – 21h 30
         </td>
         <td style="text-align: center;">
          <p>
          </p>
          <p>
          </p>
         </td>
         <td style="text-align: center;">
          <span style="color: #339966;">
           Programme A0
          </span>
          <br/>
          <strong>
           18h30-20h30
          </strong>
          <span style="color: #ffcc99;">
           <br/>
           Programme A2(2)
          </span>
         </td>
         <td style="text-align: center;">
          <span style="color: #ffcc99;">
           Programme A1(1)
           <br/>
           <span style="color: #ff99cc;">
            <strong>
             <span style="color: #000000;">
              18h-21h
             </span>
            </strong>
           </span>
           <br/>
          </span>
         </td>
         <td style="text-align: center;">
          <span style="color: #339966;">
           Programme A0
          </span>
          <br/>
          <strong>
          </strong>
          <strong>
           18h30-20h30
           <br/>
          </strong>
          <span style="color: #ffcc99; font-family: inherit; font-size: inherit;">
           Programme A2(2)
          </span>
         </td>
         <td style="text-align: center;">
          <span style="color: #ffcc99;">
           Programme A1(1)
           <br/>
           <span style="color: #ff99cc;">
            <strong>
             <span style="color: #000000;">
              18h-21h
             </span>
            </strong>
           </span>
           <br/>
          </span>
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <div class="table_mobile_trans">
     </div>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":372,"slug":"%eb%a0%88%eb%b2%a8%eb%b3%84-%ec%8b%9c%ea%b0%84%ed%91%9c","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"medium","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"none","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-372" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-medium responsive size-medium" id="popmake-372">
    <div class="pum-content popmake-content">
     <p class="table_tit">
      레벨별 시간표
     </p>
     <p class="table_tx">
      옆으로 드래그하시면 모든 내용을 보실 수 있습니다.
     </p>
     <div class="table_wrap">
      <table border="1" class="day" width="100%">
       <thead>
        <tr>
         <td>
         </td>
         <th bgcolor="#cae1ee" colspan="2">
          A0
         </th>
         <th bgcolor="#b0d6ec" colspan="2">
          A1
         </th>
         <th bgcolor="#98ccea" colspan="2">
          A2
         </th>
         <th bgcolor="#81c4e9" colspan="2">
          B1
         </th>
         <th bgcolor="#64bdee" colspan="2">
          B2
         </th>
         <th bgcolor="#4bb5ef" colspan="2">
          C1
         </th>
        </tr>
       </thead>
       <tbody>
        <tr>
         <td bgcolor="#f5f9fb" class="fw_700 tit">
          중심
          <br/>
          프로그램
         </td>
         <td bgcolor="#f5f9fb" colspan="2">
          <strong>
           나의 첫 프랑스어
          </strong>
          <br/>
          주2회 (월 8회)
          <br/>
          1개월 코스
          <br/>
          (오전반) 화/목10h-12h
          <br/>
          (오후반) 월/금13h30-15h30
          <br/>
          (저녁반) 월/금19h-21h
         </td>
         <td bgcolor="#f5f9fb" colspan="2">
          <strong>
           A1 프로그램
          </strong>
          <br/>
          주3회 (월 12회)
          <br/>
          3개월 코스
          <br/>
          (오전반) 월/수/금 10h-12h
          <br/>
          (오후반) 월/수/금 13h30-15h30
         </td>
         <td bgcolor="#f5f9fb" colspan="2">
          <strong>
           A2 프로그램
          </strong>
          <br/>
          주3회 (월12회)
          <br/>
          3개월 코스
          <br>
           [link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
          </br>
          (오후반1) 월/수/금 13h30-15h30
          <br/>
          (오후반) 월/수/금16h-18h
          <br/>
          (저녁반) 월/수/금 19h-21h
         </td>
         <td bgcolor="#f5f9fb" colspan="2">
          [content20][content1][linkx][content2][content3][linkx][content4][linkx]
         </td>
         <td bgcolor="#f5f9fb" colspan="2">
          <strong>
           B2 프로그램
          </strong>
          <br/>
          주2회 (월 8회)
          <br/>
          4개월 코스
          <br/>
          (오후반) 월/금 16h-18h
         </td>
         <td bgcolor="#f5f9fb" colspan="2">
          <strong>
           C1 수업
          </strong>
          <br/>
          주1회 (월4회)
          <br/>
          (오후반) 수 16h-18h
         </td>
        </tr>
        <tr class="plus">
         <td colspan="3">
         </td>
         <td colspan="2">
         </td>
         <td colspan="2">
         </td>
         <td colspan="6">
         </td>
        </tr>
        <tr>
         <td bgcolor="#f5fbf6" class="fw_700 tit">
          아뜰리에
         </td>
         <td bgcolor="#fff" colspan="2">
         </td>
         <td bgcolor="#f5fbf6" colspan="2">
          <strong>
           회화
          </strong>
          <br/>
          목 13h30-15h30
          <br/>
          <strong>
           문법
          </strong>
          <br/>
          화 13h30-15h30
         </td>
         <td bgcolor="#f5fbf6" colspan="2">
          <strong>
           회화
          </strong>
          <br/>
          화 13h30-15h30
          <br/>
          <strong>
           문화
          </strong>
          <br/>
          목 13h30-15h30
          <br/>
          <strong>
           문법
          </strong>
          <br/>
          목 16h-18h
         </td>
         <td bgcolor="#f5fbf6" colspan="2">
          <strong>
           회화
          </strong>
          <br/>
          화 16h-18h
          <br/>
          <strong>
           문화
          </strong>
          <br/>
          화 19h-21h
          <br/>
          <strong>
           문법
          </strong>
          <br/>
          목 16h-18h
         </td>
         <td bgcolor="#f5fbf6" colspan="2">
          <strong>
           대화/토론 그룹
          </strong>
          <br/>
          목 16h-18h
          <br/>
          <strong>
           문법
          </strong>
          <br/>
          화 16h-18h
         </td>
         <td bgcolor="#fff" colspan="2">
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <div class="table_mobile_trans">
     </div>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     <h3>
      [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
     </h3>
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":213,"slug":"c2","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"tiny","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-213" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-tiny responsive size-tiny" id="popmake-213">
    <div class="pum-content popmake-content">
     <h2 style="text-align: center;">
      <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h2>
     <p>
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":211,"slug":"c1","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"tiny","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-211" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-tiny responsive size-tiny" id="popmake-211">
    <div class="pum-content popmake-content">
     <h2 style="text-align: center;">
      <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h2>
     <p>
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":212,"slug":"b2","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"small","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-212" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-small responsive size-small" id="popmake-212">
    <div class="pum-content popmake-content">
     <p>
      <li>[link]</li>[link][link]
     </p>
     <p>
     </p>
     <p style="text-align: center;">
     </p>
     <p>
     </p>
     <p>
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":210,"slug":"b1","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"small","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-210" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-small responsive size-small" id="popmake-210">
    <div class="pum-content popmake-content">
     <p>
     </p>
     <p>
     </p>
     <p style="text-align: center;">
     </p>
     <p>
     </p>
     <p>
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":209,"slug":"a2","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"small","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-209" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-small responsive size-small" id="popmake-209">
    <div class="pum-content popmake-content">
     <p>
     </p>
     <p>
     </p>
     <p style="text-align: center;">
     </p>
     <p>
     </p>
     <p>
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":204,"slug":"a1","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"small","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":false,"animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-204" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-small responsive size-small" id="popmake-204">
    <div class="pum-content popmake-content">
     <p>
     </p>
     <p>
     </p>
     <p style="text-align: center;">
     </p>
     <p>
     </p>
     <p>
      [content7[linkx]content8[linkx]content9[linkx]content10]
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  <div aria-hidden="true" class="pum pum-overlay pum-theme-191 pum-theme-default-theme popmake-overlay pum-overlay-disabled click_open" data-popmake='{"id":197,"slug":"a0","theme_id":191,"cookies":[],"triggers":[{"type":"click_open","settings":{"extra_selectors":"","cookie_name":null}}],"mobile_disabled":null,"tablet_disabled":null,"meta":{"display":{"stackable":false,"overlay_disabled":"1","scrollable_content":false,"disable_reposition":false,"size":"small","responsive_min_width":"0%","responsive_min_width_unit":false,"responsive_max_width":"100%","responsive_max_width_unit":false,"custom_width":"640px","custom_width_unit":false,"custom_height":"380px","custom_height_unit":false,"custom_height_auto":false,"location":"center","position_from_trigger":false,"position_top":"100","position_left":"0","position_bottom":"0","position_right":"0","position_fixed":"1","animation_type":"fade","animation_speed":"350","animation_origin":"center top","overlay_zindex":false,"zindex":"1999999999"},"close":{"text":"X","button_delay":"0","overlay_click":false,"esc_press":false,"f4_press":false},"click_open":[]}}' id="pum-197" role="dialog">
   <div class="pum-container popmake theme-191 pum-responsive pum-responsive-small responsive size-small pum-position-fixed" id="popmake-197">
    <div class="pum-content popmake-content">
     <p style="text-align: center;">
     </p>
     <p style="text-align: center;">
      교재설명을 입력합니다 교재설명을 입력합니다 교재설명을 입력합니다
     </p>
     <p style="text-align: center;">
      교재설명을 입력합니다 교재설명을 입력합니다
     </p>
     <p style="text-align: center;">
      교재설명을 입력합니다 교재설명을 입력합니다
     </p>
     <p style="text-align: center;">
      교재설명을 입력합니다 교재설명을 입력합니다
     </p>
     <p style="text-align: center;">
     </p>
    </div>
    <button aria-label="Close" class="pum-close popmake-close" type="button">
     X
    </button>
   </div>
  </div>
  [ahref]
  
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0219
  </b>
 </body>
</html>|<---