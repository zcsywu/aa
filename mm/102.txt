--->|<!DOCTYPE html>
<html data-cast-api-enabled="true" lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="description"/>
  <meta content="[mkey1][symbolx][pkey3][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="keywords"/>
  <meta content="#ff0000" name="theme-color"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="https://i.ytimg.com/vi/FV9IVi7j4Ho/maxresdefault.jpg" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="544007664" property="al:ios:app_store_id"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="al:ios:app_name"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="al:ios:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="al:android:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="al:android:app_name"/>
  <meta content="com.google.android.youtube" property="al:android:package"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="al:web:url"/>
  <meta content="video.other" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:video:url"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:video:secure_url"/>
  <meta content="text/html" property="og:video:type"/>
  <meta content="1280" property="og:video:width"/>
  <meta content="720" property="og:video:height"/>
  <meta content="고구마요리" property="og:video:tag"/>
  <meta content="고구마" property="og:video:tag"/>
  <meta content="고구마맛탕" property="og:video:tag"/>
  <meta content="백종원고구마맛탕" property="og:video:tag"/>
  <meta content="고구마맛탕만들기" property="og:video:tag"/>
  <meta content="고구마맛탕만드는법" property="og:video:tag"/>
  <meta content="고구마간식" property="og:video:tag"/>
  <meta content="87741124305" property="fb:app_id"/>
  <meta content="player" name="twitter:card"/>
  <meta content="@youtube" name="twitter:site"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:url"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:title"/>
  <meta content="[mkey1][symbolx][pkey2][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:description"/>
  <meta content="https://i.ytimg.com/vi/FV9IVi7j4Ho/maxresdefault.jpg" name="twitter:image"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:app:name:iphone"/>
  <meta content="544007664" name="twitter:app:id:iphone"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:app:name:ipad"/>
  <meta content="544007664" name="twitter:app:id:ipad"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:app:url:iphone"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:app:url:ipad"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:app:name:googleplay"/>
  <meta content="com.google.android.youtube" name="twitter:app:id:googleplay"/>
  <meta content="[mkey1][symbolx][pkey4][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" name="twitter:app:url:googleplay"/>
  <meta content="https://www.youtube.com/embed/FV9IVi7j4Ho" name="twitter:player"/>
  <meta content="1280" name="twitter:player:width"/>
  <meta content="720" name="twitter:player:height"/>
 </head>
 <body class=" visibility-logging-enabled ltr exp-invert-logo exp-kevlar-settings exp-mouseover-img exp-responsive exp-search-big-thumbs site-center-aligned site-as-giant-card appbar-hidden not-nirvana-dogfood flex-width-enabled flex-width-enabled-snap delayed-frame-styles-not-in " data-spf-name="watch" dir="ltr" id="body">
  <div id="early-body">
  </div>
  <div id="body-container">
   <div id="a11y-announcements-container" role="alert">
    <div id="a11y-announcements-message">
    </div>
   </div>
   <form action="/logout" method="POST" name="logoutForm">
   </form>
   <div id="masthead-positioner">
    <div id="ticker-content">
    </div>
    <div class="clearfix yt-base-gutter" id="yt-masthead-container">
     <button class="skip-nav" data-target-id="main" id="a11y-skip-nav" tabindex="3">
      탐색 건너뛰기
     </button>
     <div id="yt-masthead">
      <div class="yt-masthead-logo-container ">
       <button aria-controls="appbar-guide-menu" aria-label="가이드" class="yt-uix-button yt-uix-button-size-default yt-uix-button-text yt-uix-button-empty yt-uix-button-has-icon appbar-guide-toggle appbar-guide-clickable-ancestor" id="appbar-guide-button" onclick=";return false;" type="button">
        <span class="yt-uix-button-icon-wrapper">
         <span class="yt-uix-button-icon yt-uix-button-icon-appbar-guide yt-sprite">
         </span>
        </span>
       </button>
       <div id="appbar-main-guide-notification-container">
       </div>
       [ahref]
       
      </div>
      <div id="yt-masthead-signin">
       [linkx]
       
       <div class="signin-container ">
        <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-primary" href="https://accounts.google.com/ServiceLogin?service=youtube&amp;hl=ko&amp;uilel=3&amp;passive=true&amp;continue=https%3A%2F%2Fwww.youtube.com%2Fsignin%3Fapp%3Ddesktop%26hl%3Dko%26feature%3Dsign_in_button%26action_handle_signin%3Dtrue%26next%3D%252Fwatch%253Fv%253DFV9IVi7j4Ho" onclick=";window.location.href=this.getAttribute('href');return false;" role="link" type="button">
         <span class="yt-uix-button-content">
          로그인
         </span>
        </button>
        <iframe id="signin-passive" src="https://accounts.google.com/ServiceLogin?service=youtube&amp;hl=ko&amp;uilel=3&amp;passive=true&amp;continue=https%3A%2F%2Fwww.youtube.com%2Fsignin%3Fapp%3Ddesktop%26hl%3Dko%26feature%3Dpassive%26action_handle_signin%3Dtrue%26next%3D%252Fsignin_passive">
        </iframe>
       </div>
      </div>
      <div id="yt-masthead-content">
       <form action="/results" class=" search-form consolidated-form vve-check" data-clicktracking="CAIQ7VAiEwiq2KXIlpnjAhXHjFgKHeCaAmco-B0" data-visibility-tracking="CAIQ7VAiEwiq2KXIlpnjAhXHjFgKHeCaAmco-B0" id="masthead-search" onsubmit="if (document.getElementById('masthead-search-term').value == '') return false;">
        <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default search-btn-component search-button" dir="ltr" id="search-btn" onclick="if (document.getElementById('masthead-search-term').value == '') return false; document.getElementById('masthead-search').submit(); return false;;return true;" tabindex="2" type="submit">
         <span class="yt-uix-button-content">
          검색
         </span>
        </button>
        <div class="masthead-search-terms-border" dir="ltr" id="masthead-search-terms">
        </div>
       </form>
      </div>
     </div>
    </div>
    <div class="clearfix" id="masthead-appbar-container">
     <div id="masthead-appbar">
      <[keywordx]>
      </[keywordx]>
     </div>
    </div>
   </div>
   <div id="masthead-positioner-height-offset">
   </div>
   <div id="page-container">
    <div class=" watch video-FV9IVi7j4Ho clearfix" id="page">
     <div class="yt-scrollbar" id="guide">
      <div class="appbar-menu appbar-guide-menu-layout appbar-guide-clickable-ancestor" id="appbar-guide-menu">
       <div id="guide-container">
        <div class="guide-module-content guide-module-loading">
         <p class="yt-spinner ">
          <span class="yt-spinner-img yt-sprite" title="로드 중 아이콘">
          </span>
          <span class="yt-spinner-message">
           로드 중...
          </span>
         </p>
        </div>
       </div>
      </div>
     </div>
     <div class="alerts-wrapper">
      <div class="content-alignment" id="alerts">
       <div class="yt-alert yt-alert-default yt-alert-info " id="yt-lang-alert-container">
        <div class="yt-alert-icon">
         <span class="icon master-sprite yt-sprite">
         </span>
        </div>
        <div class="yt-alert-content" role="alert">
         <div class="yt-alert-message" tabindex="0">
          언어를 선택하세요.
         </div>
        </div>
        <div class="yt-alert-buttons">
         <button aria-label="닫기" class="yt-uix-button yt-uix-button-size-default yt-uix-button-close close yt-uix-close" data-close-parent-class="yt-alert" onclick=";return false;" type="button">
          <span class="yt-uix-button-content">
           닫기
          </span>
         </button>
        </div>
        <div class="yt-alert-panel ">
         <div class="clearfix" id="yt-lang-alert-content">
          <div id="default-language-message">
           <div class="yt-lang-alert-controls">
            [linkx]
            
            <br/>
            [ahref]
            
           </div>
           <strong>
            한국어
           </strong>
           로 YouTube를 사용하고 있습니다.
           [ahref]
           
           할 수 있습니다.
          </div>
          <div class="hid" id="default-language-message-english">
           <div class="yt-lang-alert-controls">
            [linkx]
            
            <br/>
           </div>
           You're viewing YouTube in
           <strong>
            Korean
           </strong>
           .
        You can
           [ahref]
           
           .
          </div>
         </div>
        </div>
       </div>
       <div id="editor-progress-alert-container">
       </div>
       <div class="yt-alert yt-alert-default yt-alert-warn hid " id="editor-progress-alert-template">
        <div class="yt-alert-icon">
         <span class="icon master-sprite yt-sprite">
          [linkx][keywordx][symbolx][keywordx][symbolx][bracketl17][keywordx][bracketr17][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx]
         </span>
        </div>
        <div class="yt-alert-content" role="alert">
        </div>
        <div class="yt-alert-buttons">
         <button aria-label="닫기" class="yt-uix-button yt-uix-button-size-default yt-uix-button-close close yt-uix-close" data-close-parent-class="yt-alert" onclick=";return false;" type="button">
          <span class="yt-uix-button-content">
           닫기
          </span>
         </button>
        </div>
       </div>
      </div>
     </div>
     <div id="header">
     </div>
     <div class=" content-alignment watch-small " id="player" role="complementary">
      <div class="player-height" id="theater-background">
      </div>
      <div id="player-mole-container">
       <div class=" hid player-width player-height player-unavailable " id="player-unavailable">
        <div class="content">
         <h1 class="message" id="unavailable-message">
          [mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
         </h1>
         <div class="submessage" id="unavailable-submessage">
         </div>
        </div>
       </div>
       <div class="player-width player-height off-screen-target player-api" id="player-api" tabindex="-1">
       </div>
       <div class="video-mole mole-collapsed hid" id="watch-queue-mole">
        <div class="watch-playlist player-height" id="watch-queue">
         <div class="main-content">
          <div class="watch-queue-header">
           <div class="watch-queue-info">
            <div class="watch-queue-info-icon">
             <span class="tv-queue-list-icon yt-sprite">
             </span>
            </div>
            <h3 class="watch-queue-title">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h3>
            <h3 class="tv-queue-title">
             <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>[pkeyx][keywordx][keywordx][symbolx][keywordx][symbolx][bracketl12][keywordx][bracketr12][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][keywordx][linkx][keywordx][symbolx][keywordx][symbolx][bracketl13][keywordx][bracketr13][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][pkeyx][pkeyx][pkeyx]
            </h3>
            <span class="tv-queue-details">
            </span>
           </div>
           <div class="watch-queue-control-bar control-bar-button">
            <div class="watch-queue-mole-info">
             <div class="watch-queue-control-bar-icon">
              <span class="watch-queue-icon yt-sprite">
              </span>
             </div>
             <div class="watch-queue-title-container">
              <span class="watch-queue-count">
              </span>
              <span class="watch-queue-title">
               동영상 대기열
              </span>
              <span class="tv-queue-title">
               대기열
              </span>
             </div>
            </div>
            <span class="dark-overflow-action-menu">
             <button aria-expanded="false" aria-haspopup="true" aria-label="대기열에 해당하는 작업" class="flip control-bar-button yt-uix-button yt-uix-button-dark-overflow-action-menu yt-uix-button-size-default yt-uix-button-has-icon no-icon-markup yt-uix-button-empty" onclick=";return false;" type="button">
              <span class="yt-uix-button-arrow yt-sprite">
              </span>
              <ul aria-haspopup="true" class="watch-queue-menu yt-uix-button-menu yt-uix-button-menu-dark-overflow-action-menu hid" role="menu">
               <li role="menuitem">
                <span class="watch-queue-menu-choice overflow-menu-choice yt-uix-button-menu-item" data-action="remove-all" onclick=";return false;">
                 전체 삭제
                </span>
               </li>
               <li role="menuitem">
                <span class="watch-queue-menu-choice overflow-menu-choice yt-uix-button-menu-item" data-action="disconnect" onclick=";return false;">
                 연결 해제
                </span>
               </li>
              </ul>
             </button>
            </span>
            <div class="watch-queue-controls">
             <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-empty yt-uix-button-has-icon control-bar-button prev-watch-queue-button yt-uix-button-opacity yt-uix-tooltip yt-uix-tooltip" onclick=";return false;" title="이전 동영상" type="button">
              <span class="yt-uix-button-icon-wrapper">
               <span class="yt-uix-button-icon yt-uix-button-icon-watch-queue-prev yt-sprite">
               </span>
              </span>
             </button>
             <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-empty yt-uix-button-has-icon control-bar-button play-watch-queue-button yt-uix-button-opacity yt-uix-tooltip yt-uix-tooltip" onclick=";return false;" title="재생" type="button">
              <span class="yt-uix-button-icon-wrapper">
               <span class="yt-uix-button-icon yt-uix-button-icon-watch-queue-play yt-sprite">
               </span>
              </span>
             </button>
             <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-empty yt-uix-button-has-icon control-bar-button pause-watch-queue-button yt-uix-button-opacity yt-uix-tooltip hid yt-uix-tooltip" onclick=";return false;" title="일시중지" type="button">
              <span class="yt-uix-button-icon-wrapper">
               <span class="yt-uix-button-icon yt-uix-button-icon-watch-queue-pause yt-sprite">
               </span>
              </span>
             </button>
             <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-empty yt-uix-button-has-icon control-bar-button next-watch-queue-button yt-uix-button-opacity yt-uix-tooltip yt-uix-tooltip" onclick=";return false;" title="다음 동영상" type="button">
              <span class="yt-uix-button-icon-wrapper">
               <span class="yt-uix-button-icon yt-uix-button-icon-watch-queue-next yt-sprite">
                [mkey1][ahref][pkeyx][keywordx]
               </span>
              </span>
             </button>
            </div>
           </div>
           <div class="autoplay-dismiss-bar fade-out">
            <span class="autoplay-dismiss-title-label">
             다음 동영상 시작하는 중
            </span>
            <span>
             <button class="yt-uix-button yt-uix-button-size-default autoplay-dismiss-button yt-uix-tooltip" onclick=";return false;" title="중지" type="button">
              <span class="yt-uix-button-content">
               중지
              </span>
             </button>
            </span>
           </div>
          </div>
          <div class="watch-queue-items-container yt-scrollbar-dark yt-scrollbar">
           <div class="yt-uix-scroller playlist-videos-list">
            <ol class="watch-queue-items-list" data-scroll-action="yt.www.watchqueue.loadThumbnails">
             <p class="yt-spinner ">
              <span class="yt-spinner-img yt-sprite" title="로드 중 아이콘">
               [mkey1][ahref][mkey1][pkeyx][pkeyx][ahref][linkx][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl11][keywordx][bracketr11][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][keywordx][mkey1][keywordx][pkeyx][pkeyx][keywordx][keywordx][linkx][ahref][pkeyx][ahref][mkey1]
              </span>
              <span class="yt-spinner-message">
               로드 중...
              </span>
             </p>
            </ol>
            <div class="autoplay-control-container yt-uix-scroller-scroll-unit hid">
             <div class="autoplay-control-bar">
              <label class="autoplay-label" for="autoplay-toggle-id">
              </label>
              <label class="yt-uix-form-input-checkbox-container yt-uix-form-input-container yt-uix-form-input-paper-toggle-container ">
              </label>
             </div>
            </div>
            <div class="up-next-item-container hid">
            </div>
           </div>
          </div>
         </div>
         <div class="hid">
          <div id="watch-queue-title-msg">
           동영상 대기열
          </div>
          <div id="tv-queue-title-msg">
           대기열
          </div>
          <div id="watch-queue-count-msg">
           전체 __total__개 중 __count__개
          </div>
          <div id="watch-queue-loading-template">
          </div>
         </div>
        </div>
       </div>
       <div class=" content-alignment watch-player-playlist " id="player-playlist">
       </div>
      </div>
      <div class="clear">
      </div>
     </div>
     <div class=" content-alignment" id="content" role="main">
      <div id="placeholder-player">
       <div class="player-api player-width player-height">
       </div>
      </div>
      <div class="" id="watch7-container">
       <div id="player-messages">
        <div class="yt-dialog hid mealbar-promo-renderer">
         [ahref][keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][pkeyx][pkeyx][linkx][ahref][keywordx][ahref][pkeyx][pkeyx][keywordx]
        </div>
        <div class="mealbar-visibility" data-lact-th="" data-prompt-del-sec="" data-trigger-condition="TRIGGER_CONDITION_POST_AD" data-visibility-tracking="CAYQ42kYASITCKrYpciWmeMCFceMWAod4JoCZyj4HQ==">
        </div>
       </div>
       <div id="watch7-main-container">
        <div class="clearfix" id="watch7-main">
         <div class="player-width player-height hid" id="watch7-preview">
         </div>
         <div class="watch-main-col " id="watch7-content" itemid="" itemscope="" itemtype="http://schema.org/VideoObject">
          [keywordx]<li>[ahref]</li>[keywordx]
         </div>
         <div class="watch-sidebar" id="watch7-sidebar">
          <div class="watch-playlist player-height hid" id="placeholder-playlist">
          </div>
          <div class="watch-sidebar-gutter yt-card yt-card-has-padding yt-uix-expander yt-uix-expander-collapsed" id="watch7-sidebar-contents">
           <div id="watch7-sidebar-offer">
           </div>
           <div id="watch7-sidebar-ads">
            <div class="" id="watch-channel-brand-div">
             <div id="watch-channel-brand-div-text">
              광고
             </div>
             <div id="google_companion_ad_div">
             </div>
            </div>
           </div>
           <div id="watch7-sidebar-modules">
            <div class="watch-sidebar-section">
             <div class="autoplay-bar">
              <div class="checkbox-on-off">
               <label for="autoplay-checkbox">
                자동재생
               </label>
               <span class="autoplay-hovercard yt-uix-hovercard">
                <span class="autoplay-info-icon yt-uix-button-opacity yt-uix-hovercard-target yt-sprite" data-orientation="vertical" data-position="topright">
                </span>
                <span class="yt-uix-hovercard-content">
                 자동재생을 사용하도록 설정하면 추천 동영상이 자동으로 이어서 재생됩니다.<li>[keywordx]</li>[keywordx][ahref][keywordx]
                </span>
               </span>
               <span class="yt-uix-checkbox-on-off ">
                <label for="autoplay-checkbox" id="autoplay-checkbox-label">
                 <span class="checked">
                 </span>
                 <span class="toggle">
                 </span>
                 <span class="unchecked">
                 </span>
                </label>
               </span>
              </div>
              <h4 class="watch-sidebar-head">
               다음 동영상
              </h4>
              <div class="watch-sidebar-body">
               <ul class="video-list">
                <li class="video-list-item related-list-item show-video-time">
                 <div class="content-wrapper">
                  [ahref]
                  
                 </div>
                 <div class="thumb-wrapper">
                  [ahref]
                  
                 </div>
                </li>
               </ul>
              </div>
             </div>
            </div>
            <div class="watch-sidebar-section">
             <hr class="watch-sidebar-separation-line"/>
             <div class="watch-sidebar-body">
              <ul class="video-list" id="watch-related">
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                  [ahref][mkey1][ahref][keywordx]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 <a class=" content-link spf-link yt-uix-sessionlink spf-link " data-sessionlink="itct=CCAQpDAYDyITCKrYpciWmeMCFceMWAod4JoCZyj4HTIGcmVsbWZ1SPrAj_fiitKvFQ" data-visibility-tracking="CCAQpDAYDyITCKrYpciWmeMCFceMWAod4JoCZyj4HUCTpIqXhejvyekB" href="/watch?v=6ZO_QFLikhM" rel=" spf-prefetch nofollow" title="[koreafood] EXO CHAN YEOL 엑소 찬열 떡볶이 만들기, 레시피">
                  <span aria-describedby="description-id-685675" class="title" dir="ltr">
                   [koreafood] EXO CHAN YEOL 엑소 찬열 떡볶이 만들기, 레시피
                  </span>
                  <span class="accessible-description" id="description-id-685675">
                   - 길이: 2:09
                  </span>
                  <span class="stat attribution">
                   <span class="">
                    라비키친Rabikitchen
                   </span>
                  </span>
                  <span class="stat view-count">
                   조회수 9,552회
                  </span>
                 </a>
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [ahref]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [ahref]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 <a aria-hidden="true" class=" vve-check thumb-link spf-link yt-uix-sessionlink spf-link " data-sessionlink="itct=CB0QpDAYEiITCKrYpciWmeMCFceMWAod4JoCZyj4HTIHcmVsYXRlZEj6wI_34orSrxU" data-visibility-tracking="CB0QpDAYEiITCKrYpciWmeMCFceMWAod4JoCZyj4HUCG7ObtvLDJ8UM=" href="/watch?v=Q-Mlg825tgY" rel=" spf-prefetch nofollow" tabindex="-1">
                  <span class="yt-uix-simple-thumb-wrap yt-uix-simple-thumb-related" data-vid="Q-Mlg825tgY">
                   <span class="video-time">
                    18:26
                   </span>
                  </span>
                 </a>
                </div>
               </li>
               <li class="video-list-item related-list-item show-video-time related-list-item-compact-video">
                <div class="content-wrapper">
                 [linkx]
                 
                </div>
                <div class="thumb-wrapper">
                 [linkx]
                 
                </div>
               </li>
               <div class="hid" id="watch-more-related">
                <li id="watch-more-related-loading">
                 추가 추천 동영상 로드 중...
                </li>
               </div>
               <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-expander" data-button-action="yt.www.watch.related.loadMore" data-continuation="CBQSRBILRlY5SVZpN2o0SG_AAQDIAQDgAQGiAg0o____________AUAAwgIbGhdodHRwczovL3d3dy55b3V0dWJlLmNvbSIAGAAqzwEIxaLQgcDAp49JCKTW5Lmt293qeAjB1sXj0vqL8a8BCPSN19r4vc7LdAiCy8zUj8ibg2UIuYmK9O3Qlv8-CImh1bOGmYXXAwiUzYGG-ZbN5yAIrM7L7s2Rstt_CJWi2--rhNLKRAjDoebr0sPR8oABCJq_06zNncbnoQEIzeDLzOH_xubUAQjcj8eHuNeB8o8BCIDK6ozW5sL1AwiTpIqXhejvyekBCLSu6fHs1rnGrAEIloGY29iMucABCIbs5u28sMnxQwjQsY7Y3-Xg5Uk%3D" id="watch-more-related-button" onclick=";return false;" type="button">
                <span class="yt-uix-button-content">
                 더보기
                </span>
               </button>
              </ul>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="yt-base-gutter force-layer" id="footer-container">
   <div id="footer">
    <div id="footer-main">
     <div id="footer-logo">
      [ahref]
      
     </div>
     <ul class="pickers yt-uix-button-group" data-button-toggle-group="optional">
      <li>
       <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default yt-uix-button-has-icon" data-button-action="yt.www.picker.load" data-button-menu-id="arrow-display" data-button-toggle="true" data-picker-key="language" data-picker-position="footer" id="yt-picker-language-button" onclick=";return false;" type="button">
        <span class="yt-uix-button-icon-wrapper">
         <li>[pkeyx]</li><li>[linkx]</li><li>[keywordx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl15][keywordx][bracketr15][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
        </span>
        <span class="yt-uix-button-content">
         <span class="yt-picker-button-label">
          언어:
         </span>
         한국어
        </span>
        <span class="yt-uix-button-arrow yt-sprite">
        </span>
       </button>
      </li>
      <li>
       <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default" data-button-action="yt.www.picker.load" data-button-menu-id="arrow-display" data-button-toggle="true" data-picker-key="country" data-picker-position="footer" id="yt-picker-country-button" onclick=";return false;" type="button">
        [pkeyx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl18][keywordx][bracketr18][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[mkey1]</li><li>[pkeyx]</li>
       </button>
      </li>
      <li>
       <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default" data-button-action="yt.www.picker.load" data-button-menu-id="arrow-display" data-button-toggle="true" data-picker-key="safetymode" data-picker-position="footer" id="yt-picker-safetymode-button" onclick=";return false;" type="button">
        <span class="yt-uix-button-content">
         <span class="yt-picker-button-label">
          제한 모드:
         </span>
         사용 안함
        </span>
        <span class="yt-uix-button-arrow yt-sprite">
        </span>
       </button>
      </li>
     </ul>
     [ahref]
     
     <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default yt-uix-button-has-icon yt-uix-button-reverse yt-google-help-link inq-no-click " data-feedback-product-id="59" data-ghelp-anchor="google-help" data-ghelp-tracking-param="" data-load-chat-support="true" id="google-help" onclick=";return false;" type="button">
      <span class="yt-uix-button-icon-wrapper">
       <span class="yt-uix-button-icon yt-uix-button-icon-questionmark yt-sprite">
       </span>
      </span>
      <span class="yt-uix-button-content">
       도움말
      </span>
     </button>
     <div class="yt-picker" id="yt-picker-language-footer" style="display: none">
      <p class="yt-spinner ">
       <span class="yt-spinner-img yt-sprite" title="로드 중 아이콘">
       </span>
       <span class="yt-spinner-message">
        로드 중...
    [linkx][pkeyx][mkey1][pkeyx][linkx][pkeyx][pkeyx][keywordx][keywordx][ahref][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][ahref][mkey1][keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
       </span>
      </p>
     </div>
     <div class="yt-picker" id="yt-picker-country-footer" style="display: none">
      <p class="yt-spinner ">
       <span class="yt-spinner-img yt-sprite" title="로드 중 아이콘">
       </span>
       <span class="yt-spinner-message">
        로드 중...
       </span>
      </p>
     </div>
     <div class="yt-picker" id="yt-picker-safetymode-footer" style="display: none">
      <p class="yt-spinner ">
       <span class="yt-spinner-img yt-sprite" title="로드 중 아이콘">
       </span>
       <span class="yt-spinner-message">
        로드 중...
       </span>
      </p>
     </div>
    </div>
    <div id="footer-links">
     <ul id="footer-links-primary">
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
     <ul id="footer-links-secondary">
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [keywordx][symbolx][keywordx][symbolx][bracketl14][keywordx][bracketr14][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx]</li>[ahref]
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div class="yt-dialog hid " id="feed-privacy-lb">
   <div class="yt-dialog-base">
    <span class="yt-dialog-align">
    </span>
    <div class="yt-dialog-fg" role="dialog">
     [linkx][keywordx]<li>[pkeyx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl16][keywordx][bracketr16][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
    </div>
   </div>
  </div>
  <div class="hid" id="hidden-component-template-wrapper">
   <div class="hid" id="shared-addto-watch-later-login">
    나중에 볼 동영상에 추가하려면
    [ahref]
     [mkey1]<li>[linkx]</li>[pkeyx]
    
    하세요.
   </div>
   <div class="yt-ui-menu-content" id="yt-uix-videoactionmenu-menu">
    <div class="hide-on-create-pl-panel">
     <h3>
      <b>[mkey1][symbolx][pkeyx][symbolx][keyword1][bracketl1][keywordx][bracketr1][symbolx][bracketl2][keywordx][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
     </h3>
    </div>
    <div class="add-to-widget">
     <p class="yt-spinner ">
      <span class="yt-spinner-img yt-sprite" title="로드 중 아이콘">
      </span>
      <span class="yt-spinner-message">
       재생목록 로드 중...
      </span>
     </p>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0108
  </b>
 </body>
</html>|<---