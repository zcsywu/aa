--->|PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KIDxoZWFkPgogIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+CiAgPG1ldGEgY29udGVudD0iSUU9ZWRnZSIgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIi8+CiAgPG1ldGEgY29udGVudD0iYWx3YXlzIiBuYW1lPSJyZWZlcnJlciIvPgogIDxtZXRhIGNvbnRlbnQ9IjEwNDMyNjIwMjM2NjQxNjU2NDYiIHByb3BlcnR5PSJxYzphZG1pbnMiPgogICA8bWV0YSBjb250ZW50PSJ0ZWxlcGhvbmU9bm8iIG5hbWU9ImZvcm1hdC1kZXRlY3Rpb24iLz4KICAgPG1ldGEgY29udGVudD0ib24iIGh0dHAtZXF1aXY9IngtZG5zLXByZWZldGNoLWNvbnRyb2wiLz4KICAgPG1ldGEgY29udGVudD0iW1YgTElWRV0gWyNFVkVSR0xPV10g7LaVIOyXkOq4gCAxMDDsnbwg7YyM66asIO2IrOuCmOyehyEhIfCfpbDwn6WwIiBwcm9wZXJ0eT0ib2c6dGl0bGUiPgogICAgPG1ldGEgY29udGVudD0iaHR0cHM6Ly93d3cudmxpdmUudHYvdmlkZW8vMTM2ODk0IiBwcm9wZXJ0eT0ib2c6dXJsIj4KICAgICA8bWV0YSBjb250ZW50PSJodHRwczovL3YtcGhpbmYucHN0YXRpYy5uZXQvMjAxOTA2MjdfMTEvMTU2MTY0NzQ4MTc0NXZ3b1hWX0pQRUcvMzgyNTAyODkzMDUuanBnP3R5cGU9YTcyMF9wbGF5IiBwcm9wZXJ0eT0ib2c6aW1hZ2UiPgogICAgICA8bWV0YSBjb250ZW50PSJodHRwczovL3YtcGhpbmYucHN0YXRpYy5uZXQvMjAxOTA2MjdfMTEvMTU2MTY0NzQ4MTc0NXZ3b1hWX0pQRUcvMzgyNTAyODkzMDUuanBnP3R5cGU9YTcyMF9wbGF5IiBwcm9wZXJ0eT0ib2c6aW1hZ2U6c2VjdXJlX3VybCI+CiAgICAgICA8bWV0YSBjb250ZW50PSI3MjAiIHByb3BlcnR5PSJvZzppbWFnZTp3aWR0aCIvPgogICAgICAgPG1ldGEgY29udGVudD0iNDA1IiBwcm9wZXJ0eT0ib2c6aW1hZ2U6aGVpZ2h0Ii8+CiAgICAgICA8bWV0YSBjb250ZW50PSJbbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF0iIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIvPgogICAgICAgPG1ldGEgY29udGVudD0iYXJ0aWNsZSIgcHJvcGVydHk9Im9nOnR5cGUiLz4KICAgICAgIDxtZXRhIGNvbnRlbnQ9InN1bW1hcnlfbGFyZ2VfaW1hZ2UiIG5hbWU9InR3aXR0ZXI6Y2FyZCIvPgogICAgICAgPG1ldGEgY29udGVudD0iW21rZXkxXVtzeW1ib2x4XVtwa2V5MV1bc3ltYm9seF1ba2V5d29yZDFdW2JyYWNrZXRsMV1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW3NpdGVyMV1bYnJhY2tldHIyXVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdIiBuYW1lPSJ0d2l0dGVyOnRpdGxlIi8+CiAgICAgICA8bWV0YSBjb250ZW50PSJbbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF0iIG5hbWU9InR3aXR0ZXI6dXJsIi8+CiAgICAgICA8bWV0YSBjb250ZW50PSJbbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF0iIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iLz4KICAgICAgIDxtZXRhIGNvbnRlbnQ9Imh0dHBzOi8vdi1waGluZi5wc3RhdGljLm5ldC8yMDE5MDYyN18xMS8xNTYxNjQ3NDgxNzQ1dndvWFZfSlBFRy8zODI1MDI4OTMwNS5qcGc/dHlwZT1hNzIwX3BsYXkiIG5hbWU9InR3aXR0ZXI6aW1hZ2UiLz4KICAgICAgIDxtZXRhIGNvbnRlbnQ9IndlYnBhZ2UiIG5hbWU9IndlaWJvOnR5cGUiPgogICAgICAgIDxtZXRhIGNvbnRlbnQ9Imh0dHBzOi8vd3d3LnZsaXZlLnR2L3ZpZGVvLzEzNjg5NCIgbmFtZT0id2VpYm86d2VicGFnZTp1cmwiPgogICAgICAgICA8bWV0YSBjb250ZW50PSJbViBMSVZFXSBbI0VWRVJHTE9XXSDstpUg7JeQ6riAIDEwMOydvCDtjIzrpqwg7Yis64KY7J6HISEh8J+lsPCfpbAiIG5hbWU9IndlaWJvOndlYnBhZ2U6dGl0bGUiPgogICAgICAgICAgPG1ldGEgY29udGVudD0iVHJ5IHdhdGNoaW5nIHZpZGVvcyBvbiBWIExJVkUhIiBuYW1lPSJ3ZWlibzp3ZWJwYWdlOmRlc2NyaXB0aW9uIj4KICAgICAgICAgICA8bWV0YSBjb250ZW50PSJodHRwczovL3YtcGhpbmYucHN0YXRpYy5uZXQvMjAxOTA2MjdfMTEvMTU2MTY0NzQ4MTc0NXZ3b1hWX0pQRUcvMzgyNTAyODkzMDUuanBnP3R5cGU9YTcyMF9wbGF5IiBuYW1lPSJ3ZWlibzp3ZWJwYWdlOmltYWdlIj4KICAgICAgICAgICAgPG1ldGEgY29udGVudD0iW21rZXkxXVtzeW1ib2x4XVtwa2V5MV1bc3ltYm9seF1ba2V5d29yZDFdW2JyYWNrZXRsMV1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW3NpdGVyMV1bYnJhY2tldHIyXVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdIiBuYW1lPSJkZXNjcmlwdGlvbiIvPgogICAgICAgICAgICA8dGl0bGU+CiAgICAgICAgICAgICBbbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF0KICAgICAgICAgICAgPC90aXRsZT4KICAgICAgICAgICAgPG1ldGEgY29udGVudD0iW21rZXkxXVtzeW1ib2x4XVtwa2V5MV1bc3ltYm9seF1ba2V5d29yZDFdW2JyYWNrZXRsMV1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW3NpdGVyMV1bYnJhY2tldHIyXVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdIiBuYW1lPSJrZXl3b3JkcyIvPgogICAgICAgICAgIDwvbWV0YT4KICAgICAgICAgIDwvbWV0YT4KICAgICAgICAgPC9tZXRhPgogICAgICAgIDwvbWV0YT4KICAgICAgIDwvbWV0YT4KICAgICAgPC9tZXRhPgogICAgIDwvbWV0YT4KICAgIDwvbWV0YT4KICAgPC9tZXRhPgogIDwvbWV0YT4KIDwvaGVhZD4KIDxib2R5IGNsYXNzPSJlbiI+CiAgPGRpdiBpZD0id3JhcCI+CiAgIDxkaXYgaWQ9InVfc2tpcCI+CiAgICA8YSBocmVmPSJiIj4KICAgICA8c3BhbiBjbGFzcz0iYmxpbmQiPgogICAgICDrqZTsnbgg66mU64m066GcIOuwlOuhnOqwgOq4sAogICAgIDwvc3Bhbj4KICAgIDwvYT4KICAgIDxhIGhyZWY9InQiPgogICAgIDxzcGFuIGNsYXNzPSJibGluZCI+CiAgICAgIOuzuOusuOycvOuhnCDrsJTroZzqsIDquLAKICAgICA8L3NwYW4+CiAgICA8L2E+CiAgIDwvZGl2PgogICA8ZGl2IGlkPSJoZWFkZXIiPgogICAgPGRpdiBjbGFzcz0iZ25iX3RvcCI+CiAgICAgPGgxPgogICAgICA8Yj5bbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF08L2I+CiAgICAgPC9oMT4KICAgICA8ZGl2IGNsYXNzPSJuYXZpZ2F0aW9uIj4KICAgICAgPHVsPgogICAgICAgPGxpPgogICAgICAgIDxhIGNsYXNzPSIiIGhyZWY9Ii9ob21lIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdtYWluJywgJ2NsaWNrX2hvbWUnKTsiPgogICAgICAgICA8c3BhbiBjbGFzcz0ibWVudTEiPgogICAgICAgICAgSE9NRQogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9hPgogICAgICAgPC9saT4KICAgICAgIDxsaT4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICA8L2xpPgogICAgICAgPGxpPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgIDwvbGk+CiAgICAgICA8bGk+CiAgICAgICAgPGEgY2xhc3M9IiIgaHJlZj0iL2V2ZW50cyIgb25jbGljaz0ibmNsayh0aGlzLCdnbmIuZXZlbnRzJywnJywnJyxldmVudCk7Ij4KICAgICAgICAgPHNwYW4gY2xhc3M9Im1lbnU0Ij4KICAgICAgICAgIEVWRU5UUwogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9hPgogICAgICAgPC9saT4KICAgICAgIDxsaT4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICA8L2xpPgogICAgICAgPGxpPgogICAgICAgIDxhIGhyZWY9InYiPgogICAgICAgICA8c3BhbiBjbGFzcz0ibWVudTYiPgogICAgICAgICAgViBUT0RBWQogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9hPgogICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJnbmJfaW5mbyI+CiAgICAgIDxsYWJlbCBjbGFzcz0iYmxpbmQiIGZvcj0iYnRuX3NlYXJjaDEiPgogICAgICAgc2VhcmNoCiAgICAgIDwvbGFiZWw+CiAgICAgIDxkaXYgY2xhc3M9InNlYXJjaF9hcmVhIiBpZD0ic2VhcmNoX2FyZWEiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgICAgIDxkaXYgY2xhc3M9ImJveCI+CiAgICAgICAgPGZvcm0gYWN0aW9uPSIvc2VhcmNoL2FsbCIgY2xhc3M9Il9zZWFyY2hGb3JtIj4KICAgICAgICAgPGxhYmVsIGNsYXNzPSJibGluZCIgZm9yPSJidG5fc2VhcmNoMiI+CiAgICAgICAgICDqsoDsg4kKICAgICAgICAgPC9sYWJlbD4KICAgICAgICA8L2Zvcm0+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9Imx5ciBzZWFyY2hfd29yZCI+CiAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoX2F1dG8iPgogICAgICAgICA8dWwgY2xhc3M9InJlc3VsdF9saXN0Ij4KICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibG9naW5fYXJlYSI+CiAgICAgICA8YSBjbGFzcz0iYnRuX2xvZ2luIiBocmVmPSIjIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdtZW1iZXJzaGlwJywgJ2xvZ2luJyk7dmxpdmUudHYuYXV0aC5oYW5kbGVyLmxvZ2luKGV2ZW50KTtyZXR1cm4gZmFsc2U7IiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICAgICAgTG9naW4KICAgICAgIDwvYT4KICAgICAgIDxkaXYgY2xhc3M9Im5pY2tfYXJlYSBfdG9wX25pY2tfYXJlYSI+CiAgICAgICAgPGxpPltrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsMTBdW2tleXdvcmR4XVticmFja2V0cjEwXVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF08L2xpPjxsaT5ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDExXVtrZXl3b3JkeF1bYnJhY2tldHIxMV1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdPC9saT48bGk+W2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGwxMl1ba2V5d29yZHhdW2JyYWNrZXRyMTJdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XTwvbGk+W2xpbmtdCiAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImxhbmdfYXJlYSI+CiAgICAgICA8c3Ryb25nIGNsYXNzPSJibGluZCI+CiAgICAgICAgQ2hvb3NlIGxhbmd1YWdlCiAgICAgICA8L3N0cm9uZz4KICAgICAgIDxhIGNsYXNzPSJidG5fbGFuZyIgaHJlZj0iIyIgb25jbGljaz0ibmNsayh0aGlzLCdnbmIuZW5nbGlzaCcsJycsJycsZXZlbnQpOyI+CiAgICAgICAgRW5nbGlzaAogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uX2FyciI+CiAgICAgICAgPC9zcGFuPgogICAgICAgPC9hPgogICAgICAgPGRpdiBjbGFzcz0ibHlyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICA8YSBjbGFzcz0ib24iIGhyZWY9IiMiIG9uY2xpY2s9Im5jbGsodGhpcywnZ25iLmxhbmdlbicsJycsJycsZXZlbnQpO3ZsaXZlLnR2LmNvbW1vbi5jaGFuZ2VMYW5ndWFnZSgnZW4nKTtyZXR1cm4gZmFsc2U7Ij4KICAgICAgICAgRW5nbGlzaFtjb250ZW50MTRdW2NvbnRlbnQxNV1bY29udGVudDE2XVtjb250ZW50MTddW2xpbmt4XQogICAgICAgIDwvYT4KICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICAgPGEgaHJlZj0iIyIgb25jbGljaz0ibmNsayh0aGlzLCdnbmIubGFuZ3poSGFucycsJycsJycsZXZlbnQpO3ZsaXZlLnR2LmNvbW1vbi5jaGFuZ2VMYW5ndWFnZSgnemhfY24nKTtyZXR1cm4gZmFsc2U7Ij4KICAgICAgICAg5Lit5paHKOeugOS9kykKICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iIyIgb25jbGljaz0idmxpdmUudHYuY29tbW9uLmNoYW5nZUxhbmd1YWdlKCd6aF90dycpO3JldHVybiBmYWxzZTsiPgogICAgICAgICDkuK3mloco57mB6auUKQogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSIjIiBvbmNsaWNrPSJuY2xrKHRoaXMsJ2duYi5sYW5ndmknLCcnLCcnLGV2ZW50KTt2bGl2ZS50di5jb21tb24uY2hhbmdlTGFuZ3VhZ2UoJ3ZpJyk7cmV0dXJuIGZhbHNlOyI+CiAgICAgICAgIFRp4bq/bmcgVmnhu4d0CiAgICAgICAgPC9hPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICAgPGEgaHJlZj0iIyIgb25jbGljaz0idmxpdmUudHYuY29tbW9uLmNoYW5nZUxhbmd1YWdlKCdlcycpO3JldHVybiBmYWxzZTsiPgogICAgICAgICBFc3Bhw7FvbAogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSIjIiBvbmNsaWNrPSJ2bGl2ZS50di5jb21tb24uY2hhbmdlTGFuZ3VhZ2UoJ2phJyk7cmV0dXJuIGZhbHNlOyI+CiAgICAgICAgIOaXpeacrOiqngogICAgICAgIDwvYT4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZGltbWVkX2JnIiBpZD0ibG9naW5EaW1tZWRBcmVhIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InZsb2dpbl9seXIiIGlkPSJsb2dpblBvcHVwQXJlYSIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgIDxkaXYgY2xhc3M9Imx5cl90aXQiPgogICAgICA8c3BhbiBjbGFzcz0idGl0X2ltZyI+CiAgICAgIDwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9InR4dCI+CiAgICAgICBXRUxDT01FIFRPIFYgTElWRQogICAgICA8L3NwYW4+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0ibHlyX2NvbnQgX2V0Y19sYXllciI+CiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgIDxhIGNsYXNzPSJsb2dpbl9idG4gZmIiIGhyZWY9Ii9hdXRoL2xvZ2luP2xvZ2luU3ZjPWZhY2Vib29rIiBvbmNsaWNrPSJuY2xrKHRoaXMsJ2xvZy5mYWNlYm9vaycsJycsJycsZXZlbnQpOyI+CiAgICAgICBMb2cgaW4gd2l0aCBGYWNlYm9vawogICAgICA8L2E+CiAgICAgIDxhIGNsYXNzPSJsb2dpbl9idG4gdHdpdHRlciIgaHJlZj0iL2F1dGgvbG9naW4/bG9naW5TdmM9dHdpdHRlciI+CiAgICAgICBMb2cgaW4gd2l0aCBUd2l0dGVyCiAgICAgIDwvYT4KICAgICAgPGRpdiBjbGFzcz0idGV4dF9hcmVhIj4KICAgICAgIFthaHJlZl0KICAgICAgIAogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idGV4dF9hcmVhIj4KICAgICAgIDxzdHJvbmc+CiAgICAgICAgWW91IGNhbiB1c2UgeW91ciBhY2NvdW50IGFib3ZlIHRvIGxvZyBpbiB0byBWLgogICAgICAgPC9zdHJvbmc+CiAgICAgICA8cD4KICAgICAgICBCeSBsb2dnaW5nIGluLCB5b3UgYWdyZWUgdG8gb3VyCiAgICAgICAgW2xpbmt4XQogICAgICAgIAogICAgICAgIGFuZAogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgICAuCiAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgIDwvZGl2PgogICAgIDxkaXYgY2xhc3M9Imx5cl9jb250IF9jbl9sYXllciIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgICBbYWhyZWZdCiAgICAgIAogICAgICBbbGlua3hdCiAgICAgIAogICAgICBbbGlua3hdCiAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJ0ZXh0X2FyZWEiPgogICAgICAgW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGwzXVtrZXl3b3JkeF1bYnJhY2tldHIzXVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF08bGk+W2xpbmtdPC9saT48bGk+W2xpbmtdPC9saT48bGk+W2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGw0XVtrZXl3b3JkeF1bYnJhY2tldHI0XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF08L2xpPjxsaT5ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDVdW2tleXdvcmR4XVticmFja2V0cjVdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XTwvbGk+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJ0ZXh0X2FyZWEiPgogICAgICAgPHN0cm9uZz4KICAgICAgICBZb3UgY2FuIHVzZSB5b3VyIGFjY291bnQgYWJvdmUgdG8gbG9nIGluIHRvIFYuCiAgICAgICA8L3N0cm9uZz4KICAgICAgIDxwPgogICAgICAgIEJ5IGxvZ2dpbmcgaW4sIHlvdSBhZ3JlZSB0byBvdXIKICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICAgYW5kCiAgICAgICAgW2xpbmt4XQogICAgICAgIAogICAgICAgIC4KICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgICAgPGEgY2xhc3M9ImJ0bl9jbG9zZSIgaHJlZj0iIyIgb25jbGljaz0ibmNsayh0aGlzLCdsb2cuY2xvc2UnLCcnLCcnLGV2ZW50KTt2bGl2ZS50di5hdXRoLmhhbmRsZXIubG9naW5DYW5jZWwoKTtyZXR1cm4gZmFsc2U7IiB0aXRsZT0i64ur6riwIj4KICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgIENsb3NlCiAgICAgIDwvc3Bhbj4KICAgICA8L2E+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgIDxkaXYgaWQ9ImNvbnRhaW5lciI+CiAgICA8ZGl2IGlkPSJjb250ZW50Ij4KICAgICA8ZGl2IGNsYXNzPSJ2bGl2ZV9zZWN0aW9uIj4KICAgICAgPGgyIGNsYXNzPSJibGluZCI+CiAgICAgICBbbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF0KICAgICAgPC9oMj4KICAgICAgW2FocmVmXQogICAgICAKICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJhZF9hcmVhIj4KICAgICAgPGRpdiBjbGFzcz0iYWRfY29udGVudCIgaWQ9ImRpdi1zc3AtMjYiPgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJjb250X3NlY3Rpb24iPgogICAgICA8ZGl2IGNsYXNzPSJ2aWRlb19hcmVhIHN1Z2dlc3QiPgogICAgICAgPGgzIGNsYXNzPSJ0aXQiPgogICAgICAgIFtta2V5MV1bc3ltYm9seF1bcGtleTFdW3N5bWJvbHhdW2tleXdvcmQxXVticmFja2V0bDFdW2JyYWNrZXRyMV1bc3ltYm9seF1bYnJhY2tldGwyXVtzaXRlcjFdW2JyYWNrZXRyMl1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XQogICAgICAgPC9oMz4KICAgICAgIDxkaXYgY2xhc3M9ImlubmVyIj4KICAgICAgICA8dWwgY2xhc3M9InZpZGVvX2xpc3QgX3N1Z2dlc3RfbGlzdCI+CiAgICAgICAgIDxsaSBjbGFzcz0idmlkZW9fbGlzdF9jb250IF9zdWdnZXN0X3BhZ2VfMSI+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgIFthaHJlZl0KICAgICAgICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9fZGF0ZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGUiPgogICAgICAgICAgICAxMyBkYXlzIGFnbwogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICBbbGlua3hdCiAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2luZm8iPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5Ij4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX3BsYXkiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsnqzsg53siJgKICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICA4LDcyMgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJsaWtlIj4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX2xpa2UiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsoovslYTsmpQg7IiYCiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgNDM4LDAwMAogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgIDwvbGk+CiAgICAgICAgIDxsaSBjbGFzcz0idmlkZW9fbGlzdF9jb250IF9zdWdnZXN0X3BhZ2VfMSI+CiAgICAgICAgICA8YSBjbGFzcz0idGh1bWJfYXJlYSIgZGF0YS1nYS1hY3Rpb249ImNsaWNrX3N1Z2dlc3Rpb25zIiBkYXRhLWdhLWNuYW1lPSJFVkVSR0xPVyIgZGF0YS1nYS1jc2VxPSIxMTM1IiBkYXRhLWdhLWN0eXBlPSJCQVNJQyIgZGF0YS1nYS1uYW1lPSJbI+yFmOyDpF0g7IWY7IOk7J24IOuEpOydvOyCtOuhsfCfmIAiIGRhdGEtZ2EtcHJvZHVjdD0iTk9ORSIgZGF0YS1nYS1zZXE9IjEzNDY4OSIgZGF0YS1nYS10eXBlPSJWT0QiIGRhdGEtc2VxPSIxMzQ2ODkiIGhyZWY9Ii92aWRlby8xMzQ2ODkiIG9uY2xpY2s9InZsaXZlLnR2LmNvbW1vbi52aWRlb0dhKHRoaXMpOyIgdGl0bGU9Ilsj7IWY7IOkXSDshZjsg6Tsnbgg64Sk7J287IK066Gx8J+YgCI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbl9ib3giPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGltZSI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxpbmQiPgogICAgICAgICAgICAgIOyerOyDneyLnOqwhAogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgNTY6MjIKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aHVtYl9ib3JkZXIiPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhIGNsYXNzPSJ2aWRlb190aXQiIGRhdGEtZ2EtYWN0aW9uPSJjbGlja19zdWdnZXN0aW9ucyIgZGF0YS1nYS1jbmFtZT0iRVZFUkdMT1ciIGRhdGEtZ2EtY3NlcT0iMTEzNSIgZGF0YS1nYS1jdHlwZT0iQkFTSUMiIGRhdGEtZ2EtbmFtZT0iWyPshZjsg6RdIOyFmOyDpOyduCDrhKTsnbzsgrTrobHwn5iAIiBkYXRhLWdhLXByb2R1Y3Q9Ik5PTkUiIGRhdGEtZ2Etc2VxPSIxMzQ2ODkiIGRhdGEtZ2EtdHlwZT0iVk9EIiBocmVmPSIvdmlkZW8vMTM0Njg5IiBvbmNsaWNrPSJ2bGl2ZS50di5jb21tb24udmlkZW9HYSh0aGlzKTsiIHRpdGxlPSJbI+yFmOyDpF0g7IWY7IOk7J24IOuEpOydvOyCtOuhsfCfmIAiPgogICAgICAgICAgIFsj7IWY7IOkXSDshZjsg6Tsnbgg64Sk7J287IK066Gx8J+YgAogICAgICAgICAgPC9hPgogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9fZGF0ZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGUiPgogICAgICAgICAgICAxNyBkYXlzIGFnbwogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2luZm8iPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5Ij4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX3BsYXkiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsnqzsg53siJgKICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAxMSw2ODcKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGlrZSI+CiAgICAgICAgICAgIDxlbSBjbGFzcz0iaWNvIGljb19saWtlIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGluZCI+CiAgICAgICAgICAgICAg7KKL7JWE7JqUIOyImAogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2VtPgogICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgIDcyNyw3ODkKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICA8L2xpPgogICAgICAgICA8bGkgY2xhc3M9InZpZGVvX2xpc3RfY29udCBfc3VnZ2VzdF9wYWdlXzEiPgogICAgICAgICAgW2FocmVmXQogICAgICAgICAgCiAgICAgICAgICA8YSBjbGFzcz0idmlkZW9fdGl0IiBkYXRhLWdhLWFjdGlvbj0iY2xpY2tfc3VnZ2VzdGlvbnMiIGRhdGEtZ2EtY25hbWU9IkVWRVJHTE9XIiBkYXRhLWdhLWNzZXE9IjExMzUiIGRhdGEtZ2EtY3R5cGU9IkJBU0lDIiBkYXRhLWdhLW5hbWU9Ilsj66iA7JioXSDri6TqvrjqsIAg7Jio64ukIOuogOyYqH7wn5CxIiBkYXRhLWdhLXByb2R1Y3Q9Ik5PTkUiIGRhdGEtZ2Etc2VxPSIxMzQwNDciIGRhdGEtZ2EtdHlwZT0iVk9EIiBocmVmPSIvdmlkZW8vMTM0MDQ3IiBvbmNsaWNrPSJ2bGl2ZS50di5jb21tb24udmlkZW9HYSh0aGlzKTsiIHRpdGxlPSJbI+uogOyYqF0g64uk6r646rCAIOyYqOuLpCDrqIDsmKh+8J+QsSI+CiAgICAgICAgICAgWyPrqIDsmKhdIOuLpOq+uOqwgCDsmKjri6Qg66iA7JiofvCfkLEKICAgICAgICAgIDwvYT4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2RhdGUiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJkYXRlIj4KICAgICAgICAgICAgMjAgZGF5cyBhZ28KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPGEgY2xhc3M9Im5hbWUiIGRhdGEtZ2EtbmFtZT0iRVZFUkdMT1ciIGRhdGEtZ2Etc2VxPSIxMTM1IiBkYXRhLWdhLXR5cGU9IkJBU0lDIiBocmVmPSIvY2hhbm5lbHMvQjg0OEREIiBvbmNsaWNrPSJ2bGl2ZS50di5jb21tb24uY2hHYSh0aGlzKTsiPgogICAgICAgICAgICBFVkVSR0xPVwogICAgICAgICAgIDwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9faW5mbyI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9InBsYXkiPgogICAgICAgICAgICA8ZW0gY2xhc3M9ImljbyBpY29fcGxheSI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxpbmQiPgogICAgICAgICAgICAgIOyerOyDneyImAogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2VtPgogICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgIDEwLDI1MQogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJsaWtlIj4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX2xpa2UiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsoovslYTsmpQg7IiYCiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgNzg2LDY2MDxsaT5ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVticmFja2V0bDddW2tleXdvcmR4XVticmFja2V0cjddW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XTwvbGk+W2xpbmtdW2xpbmtdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGw4XVtrZXl3b3JkeF1bYnJhY2tldHI4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF08bGk+W2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGw5XVtrZXl3b3JkeF1bYnJhY2tldHI5XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF08L2xpPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgIDwvbGk+CiAgICAgICAgIDxsaSBjbGFzcz0idmlkZW9fbGlzdF9jb250IF9zdWdnZXN0X3BhZ2VfMSI+CiAgICAgICAgICBbbGlua3hdCiAgICAgICAgICAKICAgICAgICAgIFtsaW5reF0KICAgICAgICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9fZGF0ZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGUiPgogICAgICAgICAgICAyNCBkYXlzIGFnbwogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8YSBjbGFzcz0ibmFtZSIgZGF0YS1nYS1uYW1lPSJFVkVSR0xPVyIgZGF0YS1nYS1zZXE9IjExMzUiIGRhdGEtZ2EtdHlwZT0iQkFTSUMiIGhyZWY9Ii9jaGFubmVscy9CODQ4REQiIG9uY2xpY2s9InZsaXZlLnR2LmNvbW1vbi5jaEdhKHRoaXMpOyI+CiAgICAgICAgICAgIEVWRVJHTE9XCiAgICAgICAgICAgPC9hPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlb19pbmZvIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0icGxheSI+CiAgICAgICAgICAgIDxlbSBjbGFzcz0iaWNvIGljb19wbGF5Ij4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGluZCI+CiAgICAgICAgICAgICAg7J6s7IOd7IiYCiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgOSw5MzUKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGlrZSI+CiAgICAgICAgICAgIDxlbSBjbGFzcz0iaWNvIGljb19saWtlIj4KICAgICAgICAgICAgIOyii+yVhOyalCDsiJhbY29udGVudDZbbGlua3hdY29udGVudDddCiAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgOTYxLDc3NzxsaT5bbGlua108L2xpPltrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsMV1ba2V5d29yZHhdW2JyYWNrZXRyMV1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdPGxpPltrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2JyYWNrZXRsMl1ba2V5d29yZHhdW2JyYWNrZXRyMl1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdPC9saT4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICA8L2xpPgogICAgICAgICA8bGkgY2xhc3M9InZpZGVvX2xpc3RfY29udCBfc3VnZ2VzdF9wYWdlXzEiPgogICAgICAgICAgPGEgY2xhc3M9InRodW1iX2FyZWEiIGRhdGEtZ2EtYWN0aW9uPSJjbGlja19zdWdnZXN0aW9ucyIgZGF0YS1nYS1jbmFtZT0iRVZFUkdMT1ciIGRhdGEtZ2EtY3NlcT0iMTEzNSIgZGF0YS1nYS1jdHlwZT0iQkFTSUMiIGRhdGEtZ2EtbmFtZT0iI0VWRVJHTE9XXSA26rO17KO8IOuniOy5tOyYpCDsnoXshLEgKOuLpOyLnCEhKSIgZGF0YS1nYS1wcm9kdWN0PSJOT05FIiBkYXRhLWdhLXNlcT0iMTMyMzg1IiBkYXRhLWdhLXR5cGU9IlZPRCIgZGF0YS1zZXE9IjEzMjM4NSIgaHJlZj0iL3ZpZGVvLzEzMjM4NSIgb25jbGljaz0idmxpdmUudHYuY29tbW9uLnZpZGVvR2EodGhpcyk7IiB0aXRsZT0iI0VWRVJHTE9XXSA26rO17KO8IOuniOy5tOyYpCDsnoXshLEgKOuLpOyLnCEhKSI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbl9ib3giPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGltZSI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxpbmQiPgogICAgICAgICAgICAgIOyerOyDneyLnOqwhAogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgODoyNwogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9InRodW1iX2JvcmRlciI+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEgY2xhc3M9InZpZGVvX3RpdCIgZGF0YS1nYS1hY3Rpb249ImNsaWNrX3N1Z2dlc3Rpb25zIiBkYXRhLWdhLWNuYW1lPSJFVkVSR0xPVyIgZGF0YS1nYS1jc2VxPSIxMTM1IiBkYXRhLWdhLWN0eXBlPSJCQVNJQyIgZGF0YS1nYS1uYW1lPSIjRVZFUkdMT1ddIDbqs7Xso7wg66eI7Lm07JikIOyeheyEsSAo64uk7IucISEpIiBkYXRhLWdhLXByb2R1Y3Q9Ik5PTkUiIGRhdGEtZ2Etc2VxPSIxMzIzODUiIGRhdGEtZ2EtdHlwZT0iVk9EIiBocmVmPSIvdmlkZW8vMTMyMzg1IiBvbmNsaWNrPSJ2bGl2ZS50di5jb21tb24udmlkZW9HYSh0aGlzKTsiIHRpdGxlPSIjRVZFUkdMT1ddIDbqs7Xso7wg66eI7Lm07JikIOyeheyEsSAo64uk7IucISEpIj4KICAgICAgICAgICAjRVZFUkdMT1ddIDbqs7Xso7wg66eI7Lm07JikIOyeheyEsSAo64uk7IucISEpCiAgICAgICAgICA8L2E+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlb19kYXRlIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGF0ZSI+CiAgICAgICAgICAgIDEgbW9udGggYWdvCiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDxhIGNsYXNzPSJuYW1lIiBkYXRhLWdhLW5hbWU9IkVWRVJHTE9XIiBkYXRhLWdhLXNlcT0iMTEzNSIgZGF0YS1nYS10eXBlPSJCQVNJQyIgaHJlZj0iL2NoYW5uZWxzL0I4NDhERCIgb25jbGljaz0idmxpdmUudHYuY29tbW9uLmNoR2EodGhpcyk7Ij4KICAgICAgICAgICAgRVZFUkdMT1cKICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2luZm8iPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5Ij4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX3BsYXkiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsnqzsg53siJgKICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAxMiwxODUKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGlrZSI+CiAgICAgICAgICAgIDxlbSBjbGFzcz0iaWNvIGljb19saWtlIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGluZCI+CiAgICAgICAgICAgICAg7KKL7JWE7JqUIOyImAogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2VtPgogICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgIDQxOCwyMzIKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImJ0bl9hcmVhIj4KICAgICAgICA8c3BhbiBjbGFzcz0icGFnaW5hdGUiPgogICAgICAgICA8c3Ryb25nIGNsYXNzPSJibGluZCI+CiAgICAgICAgICBQYWdlCiAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICA8ZW0gY2xhc3M9Im51bSBfY3VycmVudF9zdWdnZXN0X3BhZ2Vfbm8iPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDEKICAgICAgICAgPC9lbT4KICAgICAgICAgPHNwYW4gY2xhc3M9Im51bSI+CiAgICAgICAgICAvNQogICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzdHJvbmcgY2xhc3M9ImJsaW5kIj4KICAgICAgICAgTW9yZQogICAgICAgIDwvc3Ryb25nPgogICAgICAgIDxzcGFuIGNsYXNzPSJidG5fYXJyIHByZXYiPgogICAgICAgICA8YSBjbGFzcz0iX3N1Z2dlc3RfcGFnZV9wcmV2IiBocmVmPSIjIiBvbmNsaWNrPSJuY2xrKHRoaXMsJ3N1Zy5wcmV2JywnJywnJyxldmVudCk7IiBzdHlsZT0iZGlzcGxheTpub25lOyIgdGl0bGU9IlByZXYiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICDsnbTsoIQKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9hPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iYnRuX2FyciBuZXh0Ij4KICAgICAgICAgPGEgY2xhc3M9Il9zdWdnZXN0X3BhZ2VfbmV4dCIgaHJlZj0iIyIgb25jbGljaz0ibmNsayh0aGlzLCdzdWcubmV4dCcsJycsJycsZXZlbnQpOyIgdGl0bGU9Ik5leHQiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICDri6TsnYwKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9hPgogICAgICAgIDwvc3Bhbj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idmlkZW9fYXJlYSB1cGNvbWluZyI+CiAgICAgICA8aDMgY2xhc3M9InRpdCI+CiAgICAgICAgW21rZXkxXVtzeW1ib2x4XVtwa2V5MV1bc3ltYm9seF1ba2V5d29yZDFdW2JyYWNrZXRsMV1bYnJhY2tldHIxXVtzeW1ib2x4XVticmFja2V0bDJdW3NpdGVyMV1bYnJhY2tldHIyXVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdCiAgICAgICA8L2gzPgogICAgICAgPGRpdiBjbGFzcz0iaW5uZXIiPgogICAgICAgIDx1bCBjbGFzcz0idmlkZW9fbGlzdCBfdXBjb21pbmdfbGlzdCI+CiAgICAgICAgIDxsaSBjbGFzcz0idmlkZW9fbGlzdF9jb250IF91cGNvbWluZ19wYWdlXzEiPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2RhdGUiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJkYXRlIj4KICAgICAgICAgICAgMTAgbWludXRlcyBhZ28KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPGEgY2xhc3M9Im5hbWUiIGRhdGEtZ2EtbmFtZT0iQ2hlcnJ5IEJ1bGxldCIgZGF0YS1nYS1zZXE9IjEwNzAiIGRhdGEtZ2EtdHlwZT0iQkFTSUMiIGhyZWY9Ii9jaGFubmVscy9CQzU4NUIiIG9uY2xpY2s9InZsaXZlLnR2LmNvbW1vbi5jaEdhKHRoaXMpOyI+CiAgICAgICAgICAgIENoZXJyeSBCdWxsZXQKICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2luZm8iPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5Ij4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX3BsYXkiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsnqzsg53siJgKICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAxLDU3NgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJsaWtlIj4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX2xpa2UiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsoovslYTsmpQg7IiYCiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgNTEsMzM4CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgPC9saT4KICAgICAgICAgPGxpIGNsYXNzPSJ2aWRlb19saXN0X2NvbnQgX3VwY29taW5nX3BhZ2VfMSI+CiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgIFtsaW5reF0KICAgICAgICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9fZGF0ZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGUiPgogICAgICAgICAgICAyNSBtaW51dGVzIGFnbwogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2luZm8iPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5Ij4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX3BsYXkiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsnqzsg53siJhbY29udGVudDNdW2NvbnRlbnQ0XVtjb250ZW50NV1bY29udGVudDZdW2NvbnRlbnQ3XVtsaW5reF0KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICA1OSwwMzIKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGlrZSI+CiAgICAgICAgICAgIDxlbSBjbGFzcz0iaWNvIGljb19saWtlIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGluZCI+CiAgICAgICAgICAgICAg7KKL7JWE7JqUIOyImAogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2VtPgogICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgIDQsNjg0LDg1MwogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgIDwvbGk+CiAgICAgICAgIDxsaSBjbGFzcz0idmlkZW9fbGlzdF9jb250IF91cGNvbWluZ19wYWdlXzEiPgogICAgICAgICAgPGEgY2xhc3M9InRodW1iX2FyZWEgX2xpdmVfdGh1bWIiIGRhdGEtZ2EtY25hbWU9Iuq3uOugiOydtOyLnChHLXJleWlzaCkiIGRhdGEtZ2EtY3NlcT0iNTgzIiBkYXRhLWdhLWN0eXBlPSJCQVNJQyIgZGF0YS1nYS1uYW1lPSLsmIjsnpDrp6Trk6Trgbzrpqwg7JmU7Ja07JqpIPCfkpXwn6WzIiBkYXRhLWdhLXByb2R1Y3Q9Ik5PTkUiIGRhdGEtZ2Etc2VxPSIxMzc5ODUiIGRhdGEtZ2EtdHlwZT0iTElWRSIgZGF0YS1zZXE9IjEzNzk4NSIgaHJlZj0iL3ZpZGVvLzEzNzk4NSIgb25jbGljaz0idmxpdmUudHYuY29tbW9uLnZpZGVvR2EodGhpcyk7IiB0aXRsZT0i7JiI7J6Q66ek65Ok64G866asIOyZlOyWtOyaqSDwn5KV8J+lsyI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbl9ib3giPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbl9saXZlIj4KICAgICAgICAgICAgIExJVkUKICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aHVtYl9ib3JkZXIiPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICAgIFtsaW5reF0KICAgICAgICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9fZGF0ZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGUiPgogICAgICAgICAgICA0NiBtaW51dGVzIGFnbwogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2luZm8iPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5Ij4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX3BsYXkiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsnqzsg53siJgKICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9lbT4KICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAxLDAyNgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJsaWtlIj4KICAgICAgICAgICAgPGVtIGNsYXNzPSJpY28gaWNvX2xpa2UiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICAgICAgICDsoovslYTsmpQg7IiYCiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZW0+CiAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgMzYsNDE3CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgPC9saT4KICAgICAgICAgPGxpIGNsYXNzPSJ2aWRlb19saXN0X2NvbnQgX3VwY29taW5nX3BhZ2VfMSI+CiAgICAgICAgICBbbGlua3hdCiAgICAgICAgICAKICAgICAgICAgIDxhIGNsYXNzPSJ2aWRlb190aXQiIGRhdGEtZ2EtY25hbWU9IkRvcm90aHkgQ29tcGFueSIgZGF0YS1nYS1jc2VxPSI2NjkiIGRhdGEtZ2EtY3R5cGU9IkJBU0lDIiBkYXRhLWdhLW5hbWU9IuuhnOyLnOydmCDsiqTtjpjshZwgViBMSVZFIDzrjIDrhpPqs6Ag7IaM7Ya167Cp7IahPiAvIFJPVEhZJ3MgPFNQRUNJQUwgTElWRSBUQUxLIFNIT1c+IiBkYXRhLWdhLXByb2R1Y3Q9Ik5PTkUiIGRhdGEtZ2Etc2VxPSIxMzc2NjQiIGRhdGEtZ2EtdHlwZT0iVVBDT01JTkciIGhyZWY9Ii92aWRlby8xMzc2NjQiIG9uY2xpY2s9InZsaXZlLnR2LmNvbW1vbi52aWRlb0dhKHRoaXMpOyIgdGl0bGU9IuuhnOyLnOydmCDsiqTtjpjshZwgViBMSVZFIDzrjIDrhpPqs6Ag7IaM7Ya167Cp7IahPiAvIFJPVEhZJ3MgPFNQRUNJQUwgTElWRSBUQUxLIFNIT1c+Ij4KICAgICAgICAgICDroZzsi5zsnZgg7Iqk7Y6Y7IWcIFYgTElWRSA864yA64aT6rOgIOyGjO2GteuwqeyGoT4gLyBST1RIWSdzIDxTUEVDSUFMIExJVkUgVEFMSyBTSE9XPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW9fZGF0ZSI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGUiPgogICAgICAgICAgICBUb2RheSA3OjAwIFBNCiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDxhIGNsYXNzPSJuYW1lIiBkYXRhLWdhLW5hbWU9IkRvcm90aHkgQ29tcGFueSIgZGF0YS1nYS1zZXE9IjY2OSIgZGF0YS1nYS10eXBlPSJCQVNJQyIgaHJlZj0iL2NoYW5uZWxzL0Q1NjUzOSIgb25jbGljaz0idmxpdmUudHYuY29tbW9uLmNoR2EodGhpcyk7Ij4KICAgICAgICAgICAgRG9yb3RoeSBDb21wYW55CiAgICAgICAgICAgPC9hPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgIDwvbGk+CiAgICAgICAgIDxsaSBjbGFzcz0idmlkZW9fbGlzdF9jb250IF91cGNvbWluZ19wYWdlXzEiPgogICAgICAgICAgW2xpbmt4XQogICAgICAgICAgCiAgICAgICAgICBbYWhyZWZdCiAgICAgICAgICAKICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvX2RhdGUiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJkYXRlIj4KICAgICAgICAgICAgVG9kYXkgNzowMCBQTQogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICBbbGlua3hdCiAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgPC9saT4KICAgICAgICA8L3VsPgogICAgICAgPC9kaXY+CiAgICAgICA8ZGl2IGNsYXNzPSJidG5fYXJlYSI+CiAgICAgICAgPHNwYW4gY2xhc3M9InBhZ2luYXRlIj4KICAgICAgICAgPHN0cm9uZyBjbGFzcz0iYmxpbmQiPgogICAgICAgICAgUGFnZQogICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgPGVtIGNsYXNzPSJudW0gX2N1cnJlbnRfdXBjb21pbmdfcGFnZV9ubyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxpbmQiPgogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgMQogICAgICAgICA8L2VtPgogICAgICAgICA8c3BhbiBjbGFzcz0ibnVtIj4KICAgICAgICAgIC82CiAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHN0cm9uZyBjbGFzcz0iYmxpbmQiPgogICAgICAgICBNb3JlCiAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bl9hcnIgcHJldiI+CiAgICAgICAgIFthaHJlZl0KICAgICAgICAgCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJidG5fYXJyIG5leHQiPgogICAgICAgICBbbGlua3hdCiAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iYnRuX3RvcF9hcmVhIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICAgW2xpbmt4XQogICAgIAogICAgPC9kaXY+CiAgIDwvZGl2PgogICA8ZGl2IGlkPSJmb290ZXIiPgogICAgPGRpdiBjbGFzcz0iZm9vdGVyX2Jhbm5lciI+CiAgICAgPGRpdiBjbGFzcz0iYnRuX2FyZWEiPgogICAgICA8YSBjbGFzcz0iYnRuX2FuZHJvaWQiIGhyZWY9Ii9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9Y29tLm5hdmVyLnZhcHAiIG9uY2xpY2s9Im5jbGsodGhpcywnZm90LmFuZGRvd24nLCcnLCcnLGV2ZW50KTsiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgIDxzcGFuIGNsYXNzPSJibGluZCI+CiAgICAgICAgQW5kcm9pZCBEb3dubG9hZCBhcHAKICAgICAgIDwvc3Bhbj4KICAgICAgPC9hPgogICAgICA8YSBjbGFzcz0iYnRuX2lvcyIgaHJlZj0iL2FwcC9pZDEwMTk0NDcwMTE/bXQ9OCIgb25jbGljaz0ibmNsayh0aGlzLCdmb3QuaW9zZG93bicsJycsJycsZXZlbnQpOyIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICBpT1MgRG93bmxvYWQgYXBwCiAgICAgICA8L3NwYW4+CiAgICAgIDwvYT4KICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZm9vdGVyX2luZm8iPgogICAgIDxkaXYgY2xhc3M9ImFkZHJlc3MiPgogICAgICA8dWwgY2xhc3M9ImZvb3Rlcl9saW5rIj4KICAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIvYWJvdXQiIG9uY2xpY2s9Im5jbGsodGhpcywnZm90LmFib3V0dicsJycsJycsZXZlbnQpOyI+CiAgICAgICAgIEFib3V0IFYgTElWRQogICAgICAgIDwvYT4KICAgICAgIDwvbGk+CiAgICAgICA8bGk+CiAgICAgICAgPGEgaHJlZj0iL3BvbGljaWVzL3Rlcm1zIiBvbmNsaWNrPSJuY2xrKHRoaXMsJ2ZvdC50ZXJtcycsJycsJycsZXZlbnQpOyI+CiAgICAgICAgIFRlcm1zCiAgICAgICAgPC9hPgogICAgICAgPC9saT4KICAgICAgIDxsaT4KICAgICAgICA8YSBocmVmPSIvcG9saWNpZXMvcHJpdmFjeSIgb25jbGljaz0ibmNsayh0aGlzLCdmb3QucHJpdmFjeScsJycsJycsZXZlbnQpOyI+CiAgICAgICAgIDxzdHJvbmc+CiAgICAgICAgICBQcml2YWN5CiAgICAgICAgIDwvc3Ryb25nPgogICAgICAgIDwvYT4KICAgICAgIDwvbGk+CiAgICAgICA8bGk+CiAgICAgICAgW2FocmVmXQogICAgICAgIAogICAgICAgPC9saT4KICAgICAgIDxsaT4KICAgICAgICBbYWhyZWZdCiAgICAgICAgCiAgICAgICA8L2xpPgogICAgICA8L3VsPgogICAgICA8dWwgY2xhc3M9ImZvb3Rlcl9saW5rIj4KICAgICAgIDxsaT4KICAgICAgICBbbGlua3hdCiAgICAgICAgCiAgICAgICA8L2xpPgogICAgICAgPGxpPgogICAgICAgIFtsaW5reF0KICAgICAgICAKICAgICAgIDwvbGk+CiAgICAgICA8bGk+CiAgICAgICAgW2xpbmt4XQogICAgICAgIAogICAgICAgPC9saT4KICAgICAgPC91bD4KICAgICAgPGRpdiBjbGFzcz0iYWRyZXNzX2luZm8iPgogICAgICAgPGRpdiBjbGFzcz0iaW5uZXIiPgogICAgICAgIFtjb250ZW50NltsaW5reF1jb250ZW50N1tsaW5reF1jb250ZW50OF0KICAgICAgIDwvZGl2PgogICAgICAgPGRpdiBjbGFzcz0iaW5uZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJ0eHQiPgogICAgICAgICA2LCBCdWxqZW9uZy1ybywgQnVuZGFuZy1ndSwgU2VvbmduYW0tc2ksIEd5ZW9uZ2dpLWRvLCBLb3JlYQogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0idHh0Ij4KICAgICAgICAgVGVsOiAxNTg4LTM4MjAKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9InR4dCI+CiAgICAgICAgIEVtYWlsIGFkZHJlc3MgOgogICAgICAgICBbYWhyZWZdCiAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0idHh0Ij4KICAgICAgICAgUGxhdGZvcm1zIDogViBMSVZFIEFwcCAvIHd3dy52bGl2ZS50dgogICAgICAgIDwvc3Bhbj4KICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPHNwYW4gY2xhc3M9ImNvcHlyaWdodCI+CiAgICAgICBbYWhyZWZdCiAgICAgICAKICAgICAgIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgICAgIDwvc3Bhbj4KICAgICA8L2Rpdj4KICAgICA8ZGl2IGNsYXNzPSJzb2NpYWxfbGluayI+CiAgICAgIFthaHJlZl0KICAgICAgCiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0idmxpdmVfYnJvYWRjYXN0X21lbnUiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgICAgPGEgY2xhc3M9InZsaXZlX2Jyb2FkY2FzdF9idG4iIGhyZWY9Ii9icm9hZGNhc3RlciI+CiAgICAgICA8ZW0gY2xhc3M9ImJsaW5kIj4KICAgICAgICBQUklTTSBMaXZlIFN0dWRpbwogICAgICAgPC9lbT4KICAgICAgPC9hPgogICAgIDwvZGl2PgogICAgPC9kaXY+CiAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9Imx5X2V2dCBfZ2lmdF9jb2luIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgIDxkaXYgY2xhc3M9Imx5cl9jb250Ij4KICAgIDxkaXYgY2xhc3M9Imx5X2NvbnRfYXJlYSI+CiAgICAgPGgyIGNsYXNzPSJ0aXQiPgogICAgICA8Yj5bbWtleTFdW3N5bWJvbHhdW3BrZXkxXVtzeW1ib2x4XVtrZXl3b3JkMV1bYnJhY2tldGwxXVticmFja2V0cjFdW3N5bWJvbHhdW2JyYWNrZXRsMl1bc2l0ZXIxXVticmFja2V0cjJdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF08L2I+CiAgICAgPC9oMj4KICAgICA8c3Ryb25nIGNsYXNzPSJzdWJfdGl0Ij4KICAgICAgQ29pbnMgYXMgYSBnaWZ0IGhhdmUgYmVlbiBhZGRlZCB0byB5b3VyIGFjY291bnQuCiAgICAgPC9zdHJvbmc+CiAgICAgPGRpdiBjbGFzcz0iZXZlbnRfY29pbiI+CiAgICAgIDxzcGFuIGNsYXNzPSJpY29uX2NvaW4iPgogICAgICAgPHNwYW4gY2xhc3M9ImJsaW5kIj4KICAgICAgICBWIENvaW4KICAgICAgIDwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0idHh0IF9hbW91bnQiPgogICAgICA8L3NwYW4+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBjbGFzcz0idHh0X2FyZWEiPgogICAgICA8cCBjbGFzcz0idHh0Ij4KICAgICAgIENvaW5zIHJlY2VpdmVkIG9uIFBDIGNhbiBvbmx5IGJlIHVzZWQgb24gUEMuCiAgICAgIDwvcD4KICAgICAgPHAgY2xhc3M9InR4dDIiPgogICAgICAgSWYgeW91IHdhbnQgdG8gdXNlIGNvaW5zIG9uIHRoZSBWIExJVkUgYXBwLCBnZXQgdGhlbSBmcm9tIHRoZSBhcHAuCiAgICAgICA8YnIvPgogICAgICAgPHNwYW4gY2xhc3M9Il9leHBpcmVEYXRlV3JhcCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgICAgIEV4cGlyYXRpb24gZGF0ZSBmb3IgdGhlIG9mZmVyIDoKICAgICAgICA8c3BhbiBjbGFzcz0iX2V4cGlyZURhdGUiPgogICAgICAgIDwvc3Bhbj4KICAgICAgIDwvc3Bhbj4KICAgICAgPC9wPgogICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJidG5fYXJlYSI+CiAgICAgW2FocmVmXQogICAgIAogICAgIFthaHJlZl0KICAgICAKICAgIDwvZGl2PgogICA8L2Rpdj4KICAgPGEgY2xhc3M9ImJ0bl9jbG9zZSIgaHJlZj0iIyIgdGl0bGU9ImNsb3NlIj4KICAgIDxzcGFuIGNsYXNzPSJpbm5lciI+CiAgICAgQ2xvc2UKICAgIDwvc3Bhbj4KICAgPC9hPgogIDwvZGl2PgogIDxkaXYgY2xhc3M9InBvcF9seXIgX2FjY2VwdF9naWZ0X2NvaW4gX3N1Y2Nlc3NfY29uZmlybSIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICA8ZGl2IGNsYXNzPSJseXJfY29udDEiPgogICAgPGRpdiBjbGFzcz0idHh0X2FyZWEiPgogICAgIDxwIGNsYXNzPSJ0eHQiIGRhdGEtc3VjY2Vzcz0iezB9IGNvaW5zIGhhdmUgYmVlbiBhZGRlZCB0byB5b3VyIGFjY291bnQuIj4KICAgICA8L3A+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1vbl9idG5fYXJlYSI+CiAgICAgPHNwYW4gY2xhc3M9ImJ0biI+CiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgPC9zcGFuPgogICAgIDxzcGFuIGNsYXNzPSJidG4iPgogICAgICA8YSBjbGFzcz0iYnRuX3R4dCBvayBfZ29fbXkiIGhyZWY9Ii9teS9jb2luIj4KICAgICAgIFZpZXcgSGlzdG9yeQogICAgICA8L2E+CiAgICAgPC9zcGFuPgogICAgPC9kaXY+CiAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9InBvcF9seXIgX2FjY2VwdF9naWZ0X2NvaW4gX3N1Y2Nlc3MiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgPGRpdiBjbGFzcz0ibHlyX2NvbnQxIj4KICAgIDxkaXYgY2xhc3M9InR4dF9hcmVhIj4KICAgICA8cCBjbGFzcz0idHh0IiBkYXRhLXN1Y2Nlc3M9InswfSBjb2lucyBoYXZlIGJlZW4gYWRkZWQgdG8geW91ciBhY2NvdW50LiI+CiAgICAgPC9wPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21tb25fYnRuX2FyZWEiPgogICAgIDxzcGFuIGNsYXNzPSJidG4iPgogICAgICA8YSBjbGFzcz0iYnRuX3R4dCBvayBfY2xvc2VfYWNjZXB0X2dpZnQiIGhyZWY9IiMiPgogICAgICAgT0sKICAgICAgPC9hPgogICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJwb3BfbHlyIF9hY2NlcHRfZ2lmdF9jb2luIF9lcnJvciIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICA8ZGl2IGNsYXNzPSJseXJfY29udDEiPgogICAgPGRpdiBjbGFzcz0idHh0X2FyZWEiPgogICAgIDxwIGNsYXNzPSJ0eHQiIGRhdGEtZXJyb3I9IkEgdGVtcG9yYXJ5IGVycm9yIGhhcyBvY2N1cnJlZC48YnI+UGxlYXNlIHRyeSBhZ2Fpbi4iIGRhdGEtZXhwaXJlPSJHaWZ0IGNvaW5zIGhhdmUgZXhwaXJlZCwgc28geW91IGNhbm5vdCByZWNlaXZlIGNvaW5zLiI+CiAgICAgPC9wPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21tb25fYnRuX2FyZWEiPgogICAgIDxzcGFuIGNsYXNzPSJidG4iPgogICAgICA8YSBjbGFzcz0iYnRuX3R4dCBvayBfY2xvc2VfYWNjZXB0X2dpZnQiIGhyZWY9IiMiPgogICAgICAgT0sKICAgICAgPC9hPgogICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJwb3BfbHlyIF9lbWFpbF9zZW50IiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgIDxkaXYgY2xhc3M9Imx5cl9jb250MSI+CiAgICA8ZGl2IGNsYXNzPSJ0eHRfYXJlYSI+CiAgICAgPGg0IGNsYXNzPSJ0eHQiPgogICAgICBNZXNzYWdlIFNlbnQKICAgICA8L2g0PgogICAgIDxwIGNsYXNzPSJ0eHQgcG9pbnQgX2VtYWlsX2FkZHIiPgogICAgIDwvcD4KICAgICA8cCBjbGFzcz0idHh0Ij4KICAgICAgQ2hlY2sgeW91ciBlbWFpbCB3aXRoaW4gMjQgaG91cnMuCiAgICAgIDxici8+CiAgICAgIFRhcCBbT0tdIHRvIGdvIHRvIHRoZSBsb2dpbiBzY3JlZW4uCiAgICAgPC9wPgogICAgIDxwIGNsYXNzPSJ0eHQiPgogICAgICBJZiB5b3UgZGlkbid0IHJlY2VpdmUgYSByZXNldCBlbWFpbCwgY2hlY2sgdGhhdCB0aGUgZW1haWwgYWRkcmVzcyB5b3UgZW50ZXJlZCBpcyB0aGUgb25lIHlvdSB2ZXJpZmllZCB3aXRoIFYgTElWRS4KICAgICA8L3A+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1vbl9idG5fYXJlYSI+CiAgICAgPHNwYW4gY2xhc3M9ImJ0biI+CiAgICAgIDxhIGNsYXNzPSJidG5fdHh0IG9rIiBocmVmPSIjIiBvbmNsaWNrPSJ2bGl2ZS50di5hdXRoLmhhbmRsZXIubG9naW4oKTtyZXR1cm4gZmFsc2U7Ij4KICAgICAgIE9LCiAgICAgIDwvYT4KICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0icG9wX2x5ciBfZW1haWxfYXV0aGVudGljYXRpb24iIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgPGRpdiBjbGFzcz0ibHlyX2NvbnQxIj4KICAgIFtjb250ZW50MTRdW2NvbnRlbnQxNV1bbGlua3hdCiAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9InBvcF9seXIgX2NvbW1vbl9sYXllcl9hbGVydCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICA8ZGl2IGNsYXNzPSJseXJfY29udDEiPgogICAgPGRpdiBjbGFzcz0idHh0X2FyZWEiPgogICAgIDxwIGNsYXNzPSJ0eHQiPgogICAgIDwvcD4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tbW9uX2J0bl9hcmVhIj4KICAgICA8c3BhbiBjbGFzcz0iYnRuIj4KICAgICAgPGEgY2xhc3M9ImJ0bl90eHQgb2sgX2Nsb3NlX2xheWVyIiBocmVmPSIjIj4KICAgICAgPC9hPgogICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJwb3BfbHlyIF9jb21tb25fbGF5ZXJfYWxlcnRfc3ViIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgIDxkaXYgY2xhc3M9Imx5cl9jb250MSI+CiAgICA8ZGl2IGNsYXNzPSJ0eHRfYXJlYSI+CiAgICAgPHAgY2xhc3M9InR4dCI+CiAgICAgPC9wPgogICAgIDxlbSBjbGFzcz0ic3ViX2luZm8iPgogICAgIDwvZW0+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1vbl9idG5fYXJlYSI+CiAgICAgPHNwYW4gY2xhc3M9ImJ0biI+CiAgICAgIDxhIGNsYXNzPSJidG5fdHh0IG9rIF9jbG9zZV9sYXllciIgaHJlZj0iIyI+CiAgICAgIDwvYT4KICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0icG9wX2x5ciBfY29tbW9uX2xheWVyX2NvbmZpcm0iIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgPGRpdiBjbGFzcz0ibHlyX2NvbnQxIj4KICAgIDxkaXYgY2xhc3M9InR4dF9hcmVhIj4KICAgICA8cCBjbGFzcz0idHh0Ij4KICAgICA8L3A+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1vbl9idG5fYXJlYSI+CiAgICAgPHNwYW4gY2xhc3M9ImJ0biI+CiAgICAgIFtsaW5reF0KICAgICAgCiAgICAgPC9zcGFuPgogICAgIDxzcGFuIGNsYXNzPSJidG4iPgogICAgICBbbGlua3hdCiAgICAgIAogICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJwb3BfbHlyIF9jb21tb25fbGF5ZXJfY29uZmlybV9zdWIiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgPGRpdiBjbGFzcz0ibHlyX2NvbnQxIj4KICAgIDxkaXYgY2xhc3M9InR4dF9hcmVhIj4KICAgICA8cCBjbGFzcz0idHh0Ij4KICAgICA8L3A+CiAgICAgPGVtIGNsYXNzPSJzdWJfaW5mbyI+CiAgICAgPC9lbT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tbW9uX2J0bl9hcmVhIj4KICAgICA8c3BhbiBjbGFzcz0iYnRuIj4KICAgICAgW2FocmVmXQogICAgICAKICAgICA8L3NwYW4+CiAgICAgPHNwYW4gY2xhc3M9ImJ0biI+CiAgICAgIDxhIGNsYXNzPSJidG5fdHh0IG9rIF9yaWdodCIgaHJlZj0iIyI+CiAgICAgIDwvYT4KICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0icG9wX2x5ciBfY29tbW9uX2xheWVyX3RpdGxlX2NvbmZpcm0iIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgPGRpdiBjbGFzcz0ibHlyX2NvbnQxIj4KICAgIDxkaXYgY2xhc3M9InR4dF9hcmVhIj4KICAgICA8aDQgY2xhc3M9InRpdCI+CiAgICAgPC9oND4KICAgICA8cCBjbGFzcz0idHh0Ij4KICAgICA8L3A+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1vbl9idG5fYXJlYSI+CiAgICAgPHNwYW4gY2xhc3M9ImJ0biI+CiAgICAgIDxhIGNsYXNzPSJidG5fdHh0IF9sZWZ0IiBocmVmPSIjIj4KICAgICAgPC9hPgogICAgIDwvc3Bhbj4KICAgICA8c3BhbiBjbGFzcz0iYnRuIj4KICAgICAgPGEgY2xhc3M9ImJ0bl90eHQgb2sgX3JpZ2h0IiBocmVmPSIjIj4KICAgICAgPC9hPgogICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJwb3BfbHlyIiBpZD0icHJpdmFjeUFncmVlUG9wdXAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgW2xpbmtdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF1bYnJhY2tldGw2XVtrZXl3b3JkeF1bYnJhY2tldHI2XVtrZXl3b3JkeF1bc3ltYm9seF1ba2V5d29yZHhdW3N5bWJvbHhdW2tleXdvcmR4XVtzeW1ib2x4XVtrZXl3b3JkeF1bc3ltYm9seF08bGk+W2xpbmtdPC9saT4KICA8L2Rpdj4KICA8YiBzdHlsZT0iY29sb3I6YmxhY2s7YmFja2dyb3VuZC1jb2xvcjojYTBmZmZmIj4KICAgam5pY2UwOS1pcHAzMC13cS16cS0wMTk2CiAgPC9iPgogPC9ib2R5Pgo8L2h0bWw+|<---