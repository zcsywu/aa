--->|<!DOCTYPE html>
<html class="pp_release pp_singlerelease" lang="ko-ko">
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
  </title>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" lang="ko-ko" name="description"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" lang="ko-ko" name="keywords"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:title"/>
  <meta content="https://content.presspage.com/uploads/1859/1920_iwc-goodwoodmm-2017-pressselection-highres-13.jpg?10000" property="og:image"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:site_name"/>
  <meta content="article" property="og:type"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:url"/>
  <meta content="[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]" property="og:description"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="width=device-width, initial-scale=1" id="viewport" name="viewport"/>
  <meta content="IE=9;IE=10;IE=Edge,chrome=1" http-equiv="X-UA-Compatible"/>
 </head>
 <body>
  [linkx]
  
  <div class="loadLater" id="placeholderFBSDK">
  </div>
  <div class="pp-bodywrapper">
   <div class="pp-allcontainer">
    <div class="ppcl-wrapper">
     <div class="iparys_inherited">
      <div class="par">
       <div class="fragmentselector">
        <div class="header-fragment abstractpage page">
         <div class="iwc-header fragment iwc-component" data-component-name="headerfragment">
          <header role="banner">
           <h1 class="iwc-hidden">
            [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][content8][content9][linkx]
           </h1>
           <div class="iwc-logo iwc-component" data-component-name="logo">
            [ahref]
            
            <div class="iwc-logo-white">
             <svg aria-label="IWC Schaffhausen" class="iwc-logo-svg" role="img" viewbox="0 0 109 42" xmlns="//www.w3.org/2000/svg">
              <title>
               IWC Schaffhausen
              </title>
              <g fill="none" fill-rule="evenodd">
               <g transform="translate(22.75 .154)">
                <path d="M.195 23.832v-.603c1.805-.1 2.64-.5 2.64-2.005V3.038C2.836 1.533 2 1.098.363 1.03v-.6h8.424v.601c-1.604.068-2.44.502-2.44 2.007v18.186c0 1.505.836 1.905 2.642 2.005v.603H.195zM40.546 3.806l-7.454 20.192h-.6L27.207 8.82l-6.319 15.178h-.602L13.032 3.004c-.435-1.237-.97-1.872-2.674-1.973V.43h8.692v.601c-1.705.1-2.173.67-2.173 1.438 0 .401.234 1.137.468 1.771l4.546 13.206 4.514-10.999-1.272-3.744c-.4-1.137-1.035-1.571-2.54-1.672V.43h8.66v.601c-2.007.034-2.24.703-2.24 1.238 0 .367.133.935.367 1.57l4.548 13.139L38.24 5.243c.569-1.537.736-2.474.736-2.84 0-.904-.702-1.271-2.374-1.372V.43h7.456v.601c-1.773.1-2.708.635-3.512 2.775zM54.42 24.333c-7.254 0-11.433-5.115-11.433-12.203 0-4.279 2.575-11.934 11.535-11.934 4.045 0 5.114 1.57 6.518 1.57.535 0 .903-.267 1.002-1.27h.603l.266 7.122h-.7c-.904-4.08-3.878-6.085-7.388-6.085-1.84 0-3.544.635-4.883 2.006-1.703 1.738-2.774 4.613-2.774 8.591 0 6.185 2.742 10.599 8.023 10.599 3.544 0 5.75-1.405 7.49-4.146l.602.334c-1.773 3.443-4.714 5.416-8.861 5.416z" fill="#FFFFFF" mask="url(#b)">
                </path>
               </g>
               <path d="M102.737 41.683h1.224v-5.037l3.904 5.037h1.043V34.6h-1.225v4.897L103.89 34.6h-1.153v7.082zm-9.145 0h5.3V40.57h-4.056v-1.902h3.55v-1.114h-3.55v-1.84h4.006V34.6h-5.25v7.082zm-6.1.101c1.487 0 2.53-.79 2.53-2.114v-.02c0-1.173-.77-1.71-2.267-2.074-1.366-.324-1.69-.566-1.69-1.113v-.02c0-.466.426-.84 1.154-.84.647 0 1.285.253 1.923.728l.667-.94c-.718-.577-1.538-.89-2.57-.89-1.406 0-2.418.839-2.418 2.053v.02c0 1.306.85 1.751 2.357 2.115 1.316.303 1.6.576 1.6 1.082v.02c0 .526-.486.89-1.256.89-.87 0-1.557-.333-2.235-.92l-.75.89a4.367 4.367 0 0 0 2.956 1.133zm-9.257.01c1.853 0 3.046-1.062 3.046-3.176V34.6h-1.244v4.077c0 1.306-.678 1.962-1.78 1.962-1.113 0-1.791-.697-1.791-2.012V34.6h-1.244v4.077c0 2.054 1.173 3.117 3.014 3.117zm-10.56-2.923l1.213-2.833 1.225 2.833h-2.437zm-2.458 2.812h1.275l.729-1.71h3.348l.718 1.71h1.315l-3.116-7.132h-1.153l-3.116 7.132zm-9.468 0h1.244v-2.984h3.379v2.984h1.243V34.6h-1.243v2.945h-3.38V34.6H55.75v7.082zm-8.7 0h1.244V38.8h3.571v-1.133h-3.57v-1.932h4.025v-1.134h-5.27v7.082zm-8.862 0h1.245V38.8h3.571v-1.133h-3.571v-1.932h4.026v-1.134h-5.27v7.082zm-8.193-2.812l1.214-2.833 1.223 2.833h-2.437zm-2.459 2.812h1.275l.729-1.71h3.348l.718 1.71h1.315l-3.116-7.132h-1.153l-3.116 7.132zm-9.195 0h1.244v-2.984h3.38v2.984h1.244V34.6h-1.245v2.945h-3.379V34.6H18.34v7.082zm-6.282.121c1.325 0 2.135-.485 2.873-1.254l-.799-.81c-.607.567-1.163.911-2.033.911-1.356 0-2.337-1.123-2.337-2.509v-.02c0-1.386.991-2.498 2.337-2.498.809 0 1.416.353 1.983.88l.799-.92c-.678-.648-1.467-1.103-2.772-1.103-2.145 0-3.652 1.648-3.652 3.661v.02c0 2.034 1.538 3.642 3.601 3.642zm-9.104-.02c1.487 0 2.529-.79 2.529-2.114v-.02c0-1.173-.769-1.71-2.266-2.074-1.366-.324-1.69-.566-1.69-1.113v-.02c0-.466.425-.84 1.154-.84.647 0 1.284.253 1.922.728l.667-.94c-.718-.577-1.537-.89-2.569-.89-1.406 0-2.418.839-2.418 2.053v.02c0 1.306.85 1.751 2.357 2.115 1.315.303 1.599.576 1.599 1.082v.02c0 .526-.486.89-1.255.89-.87 0-1.558-.333-2.235-.92L0 40.65a4.366 4.366 0 0 0 2.954 1.133z" fill="#FFFFFF">
               </path>
              </g>
             </svg>
            </div>
           </div>
           <div class="header-divider">
           </div>
           <div class="press-room-wrapper">
            <div class="header-press-room">
             프레스 센터
            </div>
           </div>
          </header>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <main id="pp-main" role="main">
     <div id="maindiv">
      <div class="maindiv-extra">
       <div class="pp-content-top">
       </div>
       <div class="maintables" id="maintable">
        <div class="pp-main-column main_padding">
         <div class="top_main_case">
         </div>
         <div class="content_main_case content_main_case_right">
          <article class="div_text_companyprofile">
           <div aria-label="social share buttons" class="div_like_reactions" role="region" tabindex="0">
            <div class="div_sharelinkedin" style="padding-bottom:4px;">
             <div class="loadLater" id="placeholderLinkedinicon">
             </div>
            </div>
            <div class="div_sharetwitter floatLeft" style="padding-bottom:4px;">
             <div class="loadLater" id="placeholderTwittericon">
             </div>
            </div>
            <div class="floatLeft div_sharefacebook_release" style="margin-left: 5px; padding-bottom:4px;">
             <div class="loadLater" id="placeholderFBlike">
             </div>
            </div>
           </div>
           <div class="div_date_location">
            <div class="pp_date_location">
             Goodwood, UK,
            </div>
            <div class="pp_date_year">
             2017년
            </div>
            <div class="pp_date_month">
             3월
            </div>
            <div class="pp_date_day">
             20일
            </div>
            <div class="pp_date_timewrapper">
             <div class="pp_date_divider">
              |
             </div>
             <div class="pp_date_time">
              10:00
             </div>
             <div class="pp_date_timezone">
              Europe/Amsterdam
             </div>
            </div>
           </div>
           <div class="title_companyprofile">
            <h1 title="뿌리를 찾아가는 IWC 인제니어">
             <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h1>
           </div>
           <div class="pp_gridcontainer_gallery pp_moduleblock pp-images-module pp-images-module-nocarousel pp-images-module-nocarousel-titel" style="">
            <div class="pp-gallery-container clearboth">
             <div>
              [ahref]
              
              <div class="pp_gallery_labels_container">
               <div class="pp_gallery_label pp_gallery_title none">
                IWC_Goodwood MM_2017
               </div>
               <div class="pp_gallery_label pp_gallery_description none">
                Xenia Tchoumi waves the chequred flag during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
               </div>
              </div>
             </div>
            </div>
           </div>
           <div style="clear:both;">
           </div>
           <div class="pp_moduleblock" id="ppmodule_summary">
            <div class="divmodule_summary">
             <div class="div_summary">
              <div class="title_summary ">
              </div>
              <div class="text_summary">
               <p>
                <strong>
                 샤프하우젠
                </strong>
                <strong>
                 , 2017
                </strong>
                <strong>
                 년
                </strong>
                <strong>
                 3
                </strong>
                <strong>
                 월
                </strong>
                <strong>
                 20
                </strong>
                <strong>
                 일
                </strong>
                <strong>
                 – IWC
                </strong>
                <strong>
                 샤프하우젠이
                </strong>
                <strong>
                 75
                </strong>
                <strong>
                 번째
                </strong>
                <strong>
                 굿우드
                </strong>
                <strong>
                 멤버스
                </strong>
                <strong>
                 미팅
                </strong>
                <strong>
                 (Goodwood Members’ Meeting)
                </strong>
                <strong>
                 에서
                </strong>
                <strong>
                 완전히
                </strong>
                <strong>
                 새롭게
                </strong>
                <strong>
                 변신한
                </strong>
                <strong>
                 인제니어
                </strong>
                <strong>
                 라인을
                </strong>
                <strong>
                 선보였습니다
                </strong>
                <strong>
                 .
                </strong>
                <strong>
                 영국
                </strong>
                <strong>
                 남부에서
                </strong>
                <strong>
                 열린
                </strong>
                <strong>
                 역사적인
                </strong>
                <strong>
                 모터
                </strong>
                <strong>
                 스포츠
                </strong>
                <strong>
                 이벤트는
                </strong>
                <strong>
                 1950
                </strong>
                <strong>
                 년대와
                </strong>
                <strong>
                 1960
                </strong>
                <strong>
                 년대의
                </strong>
                <strong>
                 1
                </strong>
                <strong>
                 세대
                </strong>
                <strong>
                 인제니어
                </strong>
                <strong>
                 컬렉션을
                </strong>
                <strong>
                 되살린
                </strong>
                <strong>
                 뉴
                </strong>
                <strong>
                 컬렉션의
                </strong>
                <strong>
                 완벽한
                </strong>
                <strong>
                 무대가
                </strong>
                <strong>
                 되어
                </strong>
                <strong>
                 주었습니다
                </strong>
                <strong>
                 .
                </strong>
                <strong>
                 이번
                </strong>
                <strong>
                 행사의
                </strong>
                <strong>
                 하이라이트는
                </strong>
                <strong>
                 1955
                </strong>
                <strong>
                 년형
                </strong>
                <strong>
                 메르세데스
                </strong>
                <strong>
                 300 SL
                </strong>
                <strong>
                 의
                </strong>
                <strong>
                 데모런이었는데
                </strong>
                <strong>
                 ,
                </strong>
                <strong>
                 바로
                </strong>
                <strong>
                 인제니어가
                </strong>
                <strong>
                 탄생한
                </strong>
                <strong>
                 해이기도
                </strong>
                <strong>
                 합니다
                </strong>
                <strong>
                 .
                </strong>
               </p>
              </div>
             </div>
            </div>
           </div>
           <div class="pp_moduleblock" id="ppmodule_pressrelease">
            <div class="text_companyprofile">
             <div>
              <p>
               최초의 인제니어(Ingenieur, Ref. 666)는 심플한 쓰리 핸즈 시계로써 가장 간결한 디자인으로 새로운 기준을 세웠으며 IWC는 1967년부터 레퍼런스 866과 함께 이 디자인에 섬세함을 더욱 부각시켰습니다. “이번 뉴 컬렉션은 초창기 인제니어 모델과 매우 유사하며 이로써 컬렉션의 뿌리로 되돌아 갑니다. 라운드형의 심플한 케이스 뿐만 아니라 독특한 발광 핸즈와 인덱스를 탑재한 다이얼에서도 그 흔적을 찾을 수 있습니다.”라고 IWC의 차기 CEO인 크리스토프 그레인저-헤어(Christoph Grainger-Herr)가 설명합니다. 인제니어 컬렉션은 눈에 띄는 빈티지 특성으로 전체적으로 우아하고 무겁지 않은 인상을 줍니다. 뉴 컬렉션은 3가지 오토매틱 모델, 4가지 자체제작 크로노그래프와 퍼페추얼 캘린더가 장착된 리미티드 제품 한 가지로 선보이면서 폭넓은 스펙트럼을 자랑합니다.
              </p>
              <p>
               인제니어 오토매틱(Ingenieur Automatic, Ref. IW357001/IW357002/IW357003)은 40 mm 직경의 심플한 쓰리 핸즈 시계로 3시 방향에 날짜 창이 탑재되어 있습니다. 이 제품은 세 가지 베리에이션으로 선보입니다. 두 가지 모델은 로듐 도금 핸즈와 인덱스가 어우러진 스테인리스 스틸 케이스로 구매할 수 있습니다. 이 중 한 모델(Ref. IW357001)은 실버 도금 다이얼과 블랙 엘리게이터 레더 스트랩이, 다른 한 모델(Ref. IW357002)은 블랙 다이얼에 스테인리스 스틸 브레이슬릿이 매치됩니다. 세 번째 모델인 IW357003 제품은 18캐럿 레드 골드 케이스, 슬레이트 컬러 다이얼, 골드 도금 핸즈와 블랙 엘리게이터 레더 스트랩이 돋보입니다.
              </p>
              <p>
               인제니어 크로노그래프(Ingenieur Chronograph, Ref. IW380801/IW380802/IW380803)는 양방향 폴 와인딩(Pawl-winding)과 46시간의 파워리저브를 갖춘 신개발 IWC 자체제작 69375 칼리버로 구동됩니다. 스테인리스 스틸 케이스와 브레이슬릿 버전의 두 가지 모델은 각각 실버 도금 다이얼에 골드 도금 핸즈(Ref. IW380801) 그리고 블루 다이얼에 로듐 도금 핸즈(Ref. IW380802)가 어우러져 선보입니다. 스테인리스 스틸 브레이슬릿은 특별히 인제니어를 위해 새로 개발되었고 뛰어난 착용감과 버클에 내장된 미세 조정 클래스프가 특징입니다. 세 번째 모델은 18캐럿 레드 골드에 슬레이트 컬러 다이얼, 골드 도금 핸즈와 블랙 엘리게이터 레더 스트랩이 조화를 이룹니다(Ref. IW380803). 모든 시계는 사파이어 글래스의 투명한 백케이스를 통해 69375 칼리버를 감상할 수 있습니다.
              </p>
              <p>
               인제니어 크로노그래프 스포츠(Ingenieur Chronograph Sport, Ref. IW380901)는 500피스로 한정 제작되며 IWC 자체제작 무브먼트 89361 칼리버에서 동력을 얻습니다. 티타늄 소재의 44 mm 케이스, 블랙 다이얼과 블랙 카프스킨 스트랩은 전체적으로 우아하면서도 스포티한 분위기를 자아냅니다. 6시 방향에서
              </p>
              <p>
               볼 수 있는 번개 모양의 스몰 세컨즈 핸드는 연철 케이지가
              </p>
              <p>
               시계 무브먼트를 자기장의 영향으로부터 보호하려는 느낌을 연상시킵니다.
              </p>
              <p>
               인제니어 퍼페추얼 캘린더 디지털 데이트 먼스(Ingenieur Per­petual Calendar Digital Date-Month, Ref. IW381701)는 탑 모델로 꼽힙니다. 퍼페추얼 캘린더는 4년 단위의 변환 요일을 포함하여 서로 다른 일수를 자동으로 인식하기 때문에 크라운을 통해 간편히 조정할 수 있습니다. 자체제작 89801 칼리버는 추가적으로 크로노그래프 기능도 갖추고 있습니다. 이 타임피스는 45 mm 직경의 18캐럿 레드 골드 케이스, 실버 도금 다이얼, 블랙 핸즈와 블랙 엘리게이터 레더 스트랩이 조화를 이루며 100피스로 한정 제작됩니다.
              </p>
              <p>
               시계 론칭의 무대가 된 굿우드 멤버스 미팅
              </p>
              <p>
               영국 남부의 3.8 km에 달하는 모터 서킷에서 역사적인 레이싱카와 튜니카들과 함께 수 많은 레이싱 경주가 열렸습니다. 최고의 하이라이트는 IWC 차기 CEO 크리스토프 그레인저-헤어가 인제니어가 탄생한 해에 제작된 1955년형 메르세데스 300 SL의 핸들을 잡은 IWC 트랙 모멘트였습니다. IWC는 또한 최초의 스콧 브라운 트로피(Scott Brown Trophy)를 소개하고 상금을 후원하였습니다. 이 경주를 통해 1950년대의 전설적인 리스터 크노블리(Lister Knobbly) 레이싱카를 몰았던 영국 레이싱 선수 아치 스콧 브라운(Archie Scott Brown)을 기념하였습니다.
              </p>
              <p>
              </p>
              <p>
               FOR PRODUCT IMAGES, PLEASE GO TO
              </p>
              <p>
               [ahref]
               
              </p>
             </div>
            </div>
            <div class="clearboth">
            </div>
           </div>
           <div aria-label="image gallery" class="pp_moduleblock pp-images-module pp-images-module-gallery pp-images-module-gallery-gallery-module" role="region" style="" tabindex="0">
            <div class="pp_flexslider-2354198 pp_flexslider clearboth" style="height: auto;">
             <ul class="pp_slides">
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 David Coulthard and Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen, during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 One of the highlights was the IWC Track Moment with the incoming CEO of IWC Schaffhausen, Christoph Grainger-Herr together with David Coulthard who sat in a Mercedes 300 SL from 1955 – the year the Ingenieur was born.  During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               <a aria-label="IWC_Goodwood MM_2017 (opens in dialog)" class="pp_cb_imagegallery_2354198" data-attr-hash="26ab73a72d75bf971c5619fd92bd6735d156f139" data-copyright="" data-description="Christian Knoop, Creative Director of IWC, John Helliwell with his wife and Christoph Grainger-Herr, incoming CEO of IWC,  during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England." data-filename="iwc-goodwoodmm-2017-pressselection-highres-10.jpg" data-mediakithash="65f5a6716f3b37366fd0ffbe87666b54cb31db44" data-pageid="188073" data-pagetype="release" data-sharepath="https://press.iwc.com/ko-ko/asset/343695/iwc-goodwoodmm-2017-pressselection-highres-10" data-sourcepath="" data-title="IWC_Goodwood MM_2017" data-uploadid="343695" href="/uploads/1859/800_iwc-goodwoodmm-2017-pressselection-highres-10.jpg?10000" rel="nofollow">
                <div class="pp_flexgallery_item" style="background-image:url(//content.presspage.com/uploads/1859/500_iwc-goodwoodmm-2017-pressselection-highres-10.jpg?10000);" title="IWC_Goodwood MM_2017">
                </div>
               </a>
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christian Knoop, Creative Director of IWC, John Helliwell with his wife and Christoph Grainger-Herr, incoming CEO of IWC,  during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Lord March, owner of the Goodwood Estate, being interviewed during the 75th Goodwood Members’ Meeting. The Swiss luxury watch manufacturer IWC Schaffhausen was Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017[content9][content10][linkx][content11][content12]
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen, wears the new Ingenieur perpetual calendar digital date-month during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               <a aria-label="IWC_Goodwood MM_2017 (opens in dialog)" class="pp_cb_imagegallery_2354198" data-attr-hash="27672a232d589a5e341f7253b4dac67497da0f4e" data-copyright="" data-description="Xenia Tchoumi waves the chequred flag during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England." data-filename="iwc-goodwoodmm-2017-pressselection-highres-13.jpg" data-mediakithash="65f5a6716f3b37366fd0ffbe87666b54cb31db44" data-pageid="188073" data-pagetype="release" data-sharepath="https://press.iwc.com/ko-ko/asset/343698/iwc-goodwoodmm-2017-pressselection-highres-13" data-sourcepath="" data-title="IWC_Goodwood MM_2017" data-uploadid="343698" href="/uploads/1859/800_iwc-goodwoodmm-2017-pressselection-highres-13.jpg?10000" rel="nofollow">
                <div class="pp_flexgallery_item" style="background-image:url(//content.presspage.com/uploads/1859/500_iwc-goodwoodmm-2017-pressselection-highres-13.jpg?10000);" title="IWC_Goodwood MM_2017">
                </div>
               </a>
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Xenia Tchoumi waves the chequred flag during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Xenia Tchoumi and David Coulthard during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection during the weekend. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 David Coulthard during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection during the weekend. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               <a aria-label="IWC_Goodwood MM_2017 (opens in dialog)" class="pp_cb_imagegallery_2354198" data-attr-hash="eb4628525b62d77c20cf84be95dede5e83668782" data-copyright="" data-description="Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen gives a speech at a black tie cocktail reception followed by a private dinner at Goodwood House with Lord March during the 75th Goodwood Members’ Meeting." data-filename="iwc-goodwoodmm-2017-pressselection-highres-03.jpg" data-mediakithash="65f5a6716f3b37366fd0ffbe87666b54cb31db44" data-pageid="188073" data-pagetype="release" data-sharepath="https://press.iwc.com/ko-ko/asset/343686/iwc-goodwoodmm-2017-pressselection-highres-03" data-sourcepath="" data-title="IWC_Goodwood MM_2017" data-uploadid="343686" href="/uploads/1859/800_iwc-goodwoodmm-2017-pressselection-highres-03.jpg?10000" rel="nofollow">
                <div class="pp_flexgallery_item" style="background-image:url(//content.presspage.com/uploads/1859/500_iwc-goodwoodmm-2017-pressselection-highres-03.jpg?10000);" title="IWC_Goodwood MM_2017">
                </div>
               </a>
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen gives a speech at a black tie cocktail reception followed by a private dinner at Goodwood House with Lord March during the 75th Goodwood Members’ Meeting.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen during the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 David Coulthard, former racing driver, during a black tie cocktail reception followed by a private dinner at Goodwood House with Lord March during the 75th Goodwood Members' Meeting. The Swiss luxury watch manufacturer IWC Schaffhausen was Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               <a aria-label="IWC_Goodwood MM_2017 (opens in dialog)" class="pp_cb_imagegallery_2354198" data-attr-hash="5020be5e6ff7c48d6f1ca0e04af06c18f5752342" data-copyright="" data-description="Xenia Tchoumi during a black tie cocktail reception followed by a private dinner at Goodwood House with Lord March during the 75th Goodwood Members' Meeting. The Swiss luxury watch manufacturer IWC Schaffhausen was Timing Partner of the exclusive historic car racing weekend in West Sussex, England." data-filename="iwc-goodwoodmm-2017-pressselection-highres-04.jpg" data-mediakithash="65f5a6716f3b37366fd0ffbe87666b54cb31db44" data-pageid="188073" data-pagetype="release" data-sharepath="https://press.iwc.com/ko-ko/asset/343688/iwc-goodwoodmm-2017-pressselection-highres-04" data-sourcepath="" data-title="IWC_Goodwood MM_2017" data-uploadid="343688" href="/uploads/1859/800_iwc-goodwoodmm-2017-pressselection-highres-04.jpg?10000" rel="nofollow">
                <div class="pp_flexgallery_item" style="background-image:url(//content.presspage.com/uploads/1859/500_iwc-goodwoodmm-2017-pressselection-highres-04.jpg?10000);" title="IWC_Goodwood MM_2017">
                </div>
               </a>
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Xenia Tchoumi during a black tie cocktail reception followed by a private dinner at Goodwood House with Lord March during the 75th Goodwood Members' Meeting. The Swiss luxury watch manufacturer IWC Schaffhausen was Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 David Coulthard wears the new IWC Ingenieur Chronograph during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 David Coulthard during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Lord March, owner of the Goodwood Estate being interviewed during the 75th Goodwood Members’ Meeting. The Swiss luxury watch manufacturer IWC Schaffhausen was Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 The new Ingenieur Automatic during the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               <a aria-label="IWC_Goodwood MM_2017 (opens in dialog)" class="pp_cb_imagegallery_2354198" data-attr-hash="609da556504f1eec17a70ecafd2a7e9e911c10b6" data-copyright="" data-description="Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen during the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England." data-filename="iwc-goodwoodmm-2017-pressselection-highres-25.jpg" data-mediakithash="65f5a6716f3b37366fd0ffbe87666b54cb31db44" data-pageid="188073" data-pagetype="release" data-sharepath="https://press.iwc.com/ko-ko/asset/343710/iwc-goodwoodmm-2017-pressselection-highres-25" data-sourcepath="" data-title="IWC_Goodwood MM_2017" data-uploadid="343710" href="/uploads/1859/800_iwc-goodwoodmm-2017-pressselection-highres-25.jpg?10000" rel="nofollow">
                <div class="pp_flexgallery_item" style="background-image:url(//content.presspage.com/uploads/1859/500_iwc-goodwoodmm-2017-pressselection-highres-25.jpg?10000);" title="IWC_Goodwood MM_2017">
                </div>
               </a>
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christoph Grainger-Herr, incoming CEO of IWC Schaffhausen during the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Guests enjoy fireworks at the Saturday night fair during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               <a aria-label="IWC_Goodwood MM_2017 (opens in dialog)" class="pp_cb_imagegallery_2354198" data-attr-hash="a501975b1a5546d97e79ab430fceccdb2873b964" data-copyright="" data-description="One of the highlights was the IWC Track Moment with the new CEO of IWC Schaffhausen, Christoph Grainger-Herr, who sat at the wheel of a Mercedes 300 SL from 1955 – the year the Ingenieur was born. During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England." data-filename="iwc-goodwoodmm-2017-pressselection-highres-28.jpg" data-mediakithash="65f5a6716f3b37366fd0ffbe87666b54cb31db44" data-pageid="188073" data-pagetype="release" data-sharepath="https://press.iwc.com/ko-ko/asset/343712/iwc-goodwoodmm-2017-pressselection-highres-28" data-sourcepath="" data-title="IWC_Goodwood MM_2017" data-uploadid="343712" href="/uploads/1859/800_iwc-goodwoodmm-2017-pressselection-highres-28.jpg?10000" rel="nofollow">
                <div class="pp_flexgallery_item" style="background-image:url(//content.presspage.com/uploads/1859/500_iwc-goodwoodmm-2017-pressselection-highres-28.jpg?10000);" title="IWC_Goodwood MM_2017">
                </div>
               </a>
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 One of the highlights was the IWC Track Moment with the new CEO of IWC Schaffhausen, Christoph Grainger-Herr, who sat at the wheel of a Mercedes 300 SL from 1955 – the year the Ingenieur was born. During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 IWC Schaffhausen presented the first ever Scott Brown Trophy and sponsored the main prize. This race honoured the British racing driver Archie Scott Brown, who drove the legendary “Lister Knobbly” sports car back in the 1950s.During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 IWC Schaffhausen presented the first ever Scott Brown Trophy and sponsored the main prize. This race honoured the British racing driver Archie Scott Brown, who drove the legendary “Lister Knobbly” sports car back in the 1950s. During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christoph Grainger-Herr incoming CEO of IWC Schaffhausen and John Helliwell during the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 IWC Schaffhausen presented the first ever Scott Brown Trophy and sponsored the main prize. This race honoured the British racing driver Archie Scott Brown, who drove the legendary “Lister Knobbly” sports car back in the 1950s. During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                [link][link][keywordx][symbolx][keywordx][symbolx][bracketl9][keywordx][bracketr9][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl10][keywordx][bracketr10][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 Christian Knoop, creative director of IWC Schaffhausen and John Helliwell during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [linkx]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 David Coulthard during the 75th Goodwood Members’ Meeting. IWC Schaffhausen unveiled its new Ingenieur Collection during the weekend. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
                [content1[linkx]content2[linkx]content3[linkx]content4]
               
               <div class="pp_gallery_labels_container">
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 One of the highlights was the IWC Track Moment with the incoming CEO of IWC Schaffhausen, Christoph Grainger-Herr together with  David Coulthard,  who sat in a Mercedes 300 SL from 1955 – the year the Ingenieur was born.  During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
              <li>
               [ahref]
               
               <div class="pp_gallery_labels_container">
                <h3>
                 [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
                </h3>
                <div class="pp_gallery_label pp_gallery_title none">
                 IWC_Goodwood MM_2017
                </div>
                <div class="pp_gallery_label pp_gallery_description none">
                 IWC Schaffhausen presented Phil Keen the first ever Scott Brown Trophy and sponsored the main prize. This race honoured the British racing driver Archie Scott Brown, who drove the legendary “Lister Knobbly” sports car back in the 1950s. During the 75th Goodwood Members’ Meeting, IWC Schaffhausen unveiled its new Ingenieur Collection. The Swiss luxury watch manufacturer is Timing Partner of the exclusive historic car racing weekend in West Sussex, England.
                </div>
               </div>
              </li>
             </ul>
            </div>
           </div>
           <div class="ppmodule_textblock">
            <div class="text_companyprofile">
             <p>
              굿우드 멤버스 미팅
             </p>
             <p>
              멤버스 미팅은 2014년 굿우드 로드 레이싱 클럽(Goodwood Road Racing Club)에 의해 다시 개최되었습니다. 이 행사는 1949년부터 1966년까지 브리티시 오토 모빌 레이싱 클럽(British Automobile Racing Club)이 진행한 71 멤버스 미팅의 분위기와 연대감을 그대로 되살립니다. 멤버스 미팅은 멤버스 온리 이벤트(Members-only-Event)로써 제한된 회원들은 편안한 분위기에서 서로 허물없이 친목을 다지고 모든 시설을 자유롭게 이용할 수 있습니다. 이 행사는 전통 모터 스포츠의 시즌 시작을 축하하며 명성 높은 6월의 굿우드 페스티벌 오브 스피드(Goodwood Festival of Speed)와 9월의 리바이벌 미팅(Revival Meeting)을 완벽히 보완해 주고 있습니다.
             </p>
            </div>
           </div>
           <div class="pp_moduleblock" id="ppmodule_boilerplate">
            <div class="divmodule_boilerplate">
             <div class="div_summary">
              <li>[keywordx][symbolx][keywordx][symbolx][bracketl8][keywordx][bracketr8][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link][link]<li>[link]</li>
             </div>
            </div>
           </div>
          </article>
          <div class="clearboth">
          </div>
         </div>
         <div class="bottom_main_case">
         </div>
        </div>
        <aside class="pp-side-column td_extras_right" role="complementary">
         <div class="div_main_extras_top">
         </div>
         <div class="div_main_extras " id="release_extras" style="padding-top:5px;">
          <div class="flag_container">
           <table class="table_flags">
            <tr>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               <a class="flag_disabled" href="/iwc-lleva-el-ingenieur-de-vuelta-a-sus-raices/">
                <div class="flag_langimage flag_es_disabled" id="flag_es" title="Español">
                </div>
                <span class="pp_lang_es flag_langtext_disabled">
                 Español
                </span>
               </a>
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               <a class="flag_selected" href="/%EB%BF%8C%EB%A6%AC%EB%A5%BC-%EC%B0%BE%EC%95%84%EA%B0%80%EB%8A%94-IWC-%EC%9D%B8%EC%A0%9C%EB%8B%88%EC%96%B4/">
                <div class="flag_langimage flag_ko-ko" id="flag_ko-ko" title="한국의">
                </div>
                <span class="pp_lang_ko-ko flag_langtext">
                 한국의
                </span>
               </a>
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [linkx]
               
              </div>
             </td>
             <td class="languagebar_bg">
              <div class="div_flag">
               [ahref]
               
              </div>
             </td>
            </tr>
           </table>
          </div>
          <div class="pp_moduleblock" id="ppmodule_downloads">
           <div class="extras_header">
            <h2 class="extras_headertitle_right" id="title_downloads">
             <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h2>
           </div>
           <div class="div_extras">
            <div class="extras_content_right">
             <div class="center">
              <table>
               <tr>
                <td class="downloads_media_icon">
                </td>
                <td>
                 <div class="break_download">
                  [ahref]
                  
                 </div>
                </td>
               </tr>
              </table>
             </div>
            </div>
           </div>
           <div class="extras_footer">
           </div>
          </div>
          <div class="pp_moduleblock" id="ppmodule_contacts">
           <div class="extras_header">
            <h2 class="extras_headertitle_right" id="title_contacts">
             [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
           </div>
           <div class="div_extras">
            <div class="extras_content_right">
            </div>
           </div>
           <div class="extras_footer">
           </div>
          </div>
          <div class="extras_newsroom_header pp_moduleblock" id="backtonewsroom_button">
           <div class="extras_newsroom_headertitle_right" id="newsroom_button">
            [ahref]
            
           </div>
          </div>
          <div class="pp_moduleblock" id="ppmodule_shareus">
           <div class="extras_header">
            <h2 class="extras_headertitle_right" id="title_shareus_right">
             <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h2>
           </div>
           <div class="div_extras">
            <div class="shareus_right">
             <div class="volgdiv_right">
              <div class="volglink">
               뿌리를 찾아가는 IWC 인제니어
              </div>
             </div>
             <div class="div_shareus">
              <table id="table_shareus">
               <tr>
                <td class="td_shareus">
                 [ahref]
                 
                </td>
                <td class="td_shareus">
                 [linkx]
                 
                </td>
                <td class="td_shareus">
                 [linkx]
                 
                </td>
                <td class="pp_sharemore">
                 <div class="loadLater" id="placeholderSharethis">
                 </div>
                </td>
               </tr>
              </table>
             </div>
            </div>
           </div>
           <div class="extras_footer">
           </div>
          </div>
          <div class="pp_moduleblock" id="ppmodule_socialmedia">
           <div class="extras_header">
            <h2 class="extras_headertitle_right" id="title_socialmedia">
             [mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]
            </h2>
           </div>
           <div class="div_extras floatLeft">
            <div class="socialmedia_float">
             <ul class="ulSocialmedia">
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [linkx]
               
              </li>
              <li>
               [linkx]
               
              </li>
             </ul>
            </div>
           </div>
           <div class="extras_footer floatLeft">
           </div>
           <div class="centerclear">
           </div>
          </div>
          <div class="pp_moduleblock" id="ppmodule_latestnews">
           <div class="extras_header">
            <h2 class="extras_headertitle_right" id="title_latestnews_right">
             <b>[mkey1][symbolx][pkey1][symbolx][keyword1][bracketl1][bracketr1][symbolx][bracketl2][siter1][bracketr2][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx]</b>
            </h2>
           </div>
           <div class="div_extras">
            <div class="extras_content_right" id="pp_latestnews_div-2352589" style="margin:0px;padding: 10px;display:none;">
             <div class="pp_latestnews_container" id="pp_latestnews_container-2352589">
              <div class="latestnews_row">
               <div class="pp_latestrelease_date">
                <div class="pp_date_year">
                 2019년
                </div>
                <div class="pp_date_month">
                 6월
                </div>
                <div class="pp_date_day">
                 25일
                </div>
               </div>
               <div class="pp_date_divider">
                -
               </div>
               <div class="pp_latestrelease_item">
                <a href="/iwc-schaffhausen-announces-tom-brady-as-global-brand-ambassador-ko/">
                 IWC 샤프하우젠의 글로벌 브랜드 홍보대사로 톰 브래디 선정
                </a>
               </div>
              </div>
              <div class="latestnews_row">
               <div class="pp_latestrelease_date">
                <div class="pp_date_year">
                 2019년
                </div>
                <div class="pp_date_month">
                 5월
                </div>
                <div class="pp_date_day">
                 24일
                </div>
               </div>
               <div class="pp_date_divider">
                -
               </div>
               <div class="pp_latestrelease_item">
                [ahref]
                
               </div>
              </div>
              <div class="latestnews_row">
               <div class="pp_latestrelease_date">
                <div class="pp_date_year">
                 2019년
                </div>
                <div class="pp_date_month">
                 1월[content5][content6][linkx][content7][content8][content9]
                </div>
                <div class="pp_date_day">
                 16일
                </div>
               </div>
               <div class="pp_date_divider">
                -
               </div>
               <div class="pp_latestrelease_item">
                [ahref]
                
               </div>
              </div>
              <div class="latestnews_row">
               <div class="pp_latestrelease_date">
                <div class="pp_date_year">
                 2019년
                </div>
                <div class="pp_date_month">
                 1월[keywordx][symbolx][keywordx][symbolx][bracketl4][keywordx][bracketr4][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][bracketl5][keywordx][bracketr5][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]<li>[keywordx][symbolx][keywordx][symbolx][bracketl6][keywordx][bracketr6][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl7][keywordx][bracketr7][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]
                </div>
                <div class="pp_date_day">
                 13일
                </div>
               </div>
               <div class="pp_date_divider">
                -
               </div>
               <div class="pp_latestrelease_item">
                [linkx]
                
               </div>
              </div>
              <div class="latestnews_row">
               <div class="pp_latestrelease_date">
                <div class="pp_date_year">
                 2019년
                </div>
                <div class="pp_date_month">
                 1월
                </div>
                <div class="pp_date_day">
                 13일
                </div>
               </div>
               <div class="pp_date_divider">
                -
               </div>
               <div class="pp_latestrelease_item">
                [linkx]
                
               </div>
              </div>
              <div class="latestnews_row">
               <div class="pp_latestrelease_date">
                <div class="pp_date_year">
                 2019년
                </div>
                <div class="pp_date_month">
                 1월
                </div>
                <div class="pp_date_day">
                 13일
                </div>
               </div>
               <div class="pp_date_divider">
                -
               </div>
               <div class="pp_latestrelease_item">
                [ahref]
                
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="extras_footer">
           </div>
          </div>
         </div>
         <div class="div_main_extras_bottom">
         </div>
        </aside>
        <div class="clearboth">
        </div>
       </div>
      </div>
     </div>
    </main>
   </div>
   <div class="ppcl-wrapper">
    <div class="iparys_inherited">
     <div class="par">
      <div class="fragmentselector">
       <div class="footer-fragment abstractpage page">
        <div class="iwc-footer fragment iwc-component" data-component-name="footer">
         <footer>
          <div class="iwc-footer-header">
           <div class="iwc-footer-top-header">
            [linkx]
            
           </div>
          </div>
          <div class="iwc-footer-header">
           <div class="iwc-contact-concierge iwc-component" data-component-name="contactconcierge">
            <div class="iwc-contact-concierge-controls">
             <p class="iwc-contact-concierge-label-mobile">
              문의처
             </p>
             <p class="iwc-contact-concierge-label-desktop">
              컨시어지에게 문의하기
             </p>
             <div class="iwc-icn-map-marker">
              <label class="iwc-always-hidden" for="iwc-contact-concierge-country-desktop">
               위치 선택
              </label>
              <select class="iwc-contact-concierge-country iwc-contact-concierge-country-desktop" id="iwc-contact-concierge-country-desktop" style="width: 40px;">
               <option data-phone="+1 800 870 830 " data-whatsapp="+1 800 870 830 " value="AU">
                호주
               </option>
               <option data-phone="+43 1 532 0580 51" data-whatsapp="+43 1 532 0580 51" value="AT">
                오스트리아
               </option>
               <option data-phone="+32 42 71 03 10" data-whatsapp="+32 42 71 03 10" value="BE">
                벨기에
               </option>
               <option data-phone="+86 400 0642 999" data-whatsapp="+86 400 0642 999" value="CN">
                중국
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="DK">
                덴마크
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="FI">
                핀란드
               </option>
               <option data-phone="+33 1 58 18 14 98" data-whatsapp="+33 1 58 18 14 98" value="FR">
                프랑스
               </option>
               <option data-phone="+49 89 559 84 210" data-whatsapp="+49 89 559 84 210" value="DE">
                독일
               </option>
               <option data-phone="+852 8200 3001" data-whatsapp="+852 8200 3001" value="HK">
                홍콩
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="IS">
                아이슬란드
               </option>
               <option data-phone="+39 02 360 11868" data-whatsapp="+39 02 360 11868" value="IT">
                이탈리아
               </option>
               <option data-phone="+81 3 6758 5807" data-whatsapp="+81 3 6758 5807" value="JA">
                일본
               </option>
               <option data-phone="+82 2 3440 5876" data-whatsapp="+82 2 3440 5876" selected="" value="KR">
                한국
               </option>
               <option data-phone="+32 42 71 03 10" data-whatsapp="+32 42 71 03 10" value="LU">
                룩셈부르크
               </option>
               <option data-phone="+852 8200 3001" data-whatsapp="+852 8200 3001" value="MO">
                마카오
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="NL">
                네덜란드
               </option>
               <option data-phone="+1 800 870 830 " data-whatsapp="+1 800 870 830 " value="NZ">
                뉴질랜드
               </option>
               <option data-phone=" +31 207 110 868" data-whatsapp=" +31 207 110 868" value="NO">
                노르웨이
               </option>
               <option data-phone="+7 495 660 18 68" data-whatsapp="+7 495 660 18 68" value="RU">
                러시아 연방
               </option>
               <option data-phone="+65 6510 2878" data-whatsapp="+65 6510 2878" value="SG">
                싱가포르
               </option>
               <option data-phone="+34 914191868" data-whatsapp="+34 914191868" value="ES">
                스페인
               </option>
               <option data-phone="+46 85 06 92 140" data-whatsapp="+46 85 06 92 140" value="SE">
                스웨덴
               </option>
               <option data-phone="+41 52 235 73 63" data-whatsapp="+41 52 235 73 63" value="CH">
                스위스
               </option>
               <option data-phone="+800 617 688" data-whatsapp="+800 617 688" value="TW">
                타이완
               </option>
               <option data-phone="+44 845337 1868" data-whatsapp="+44 845337 1868" value="UK">
                영국
               </option>
               <option data-phone="+1-800-432-9330" data-whatsapp="+1-800-432-9330" value="US">
                미국
               </option>
               <option data-phone="800-IWC1868" value="AE">
                아랍 에미리트
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="DZ">
                알제리
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="AO">
                앙골라
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BH">
                바레인
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BJ">
                베냉
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BV">
                부베 섬
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BF">
                부르키나 파소
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BI">
                부룬디
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CM">
                카메룬
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CV">
                카보베르데
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CF">
                중앙아프리카 공화국
                                                [link]<li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl1][keywordx][bracketr1][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>[link]<li>[keywordx][symbolx][keywordx][symbolx][bracketl2][keywordx][bracketr2][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TD">
                차드
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="KM">
                코모로
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CG">
                콩고
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CI">
                코트디부아르
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="EG">
                이집트
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ER">
                에리트레아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ET">
                에티오피아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GA">
                가봉
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GM">
                감비아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GH">
                가나
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GN">
                기니
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GW">
                기니비사우
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="IR">
                이란 이슬람 공화국
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="IQ">
                이라크
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="JO">
                요르단
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="KE">
                케냐
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="KW">
                쿠웨이트
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LB">
                레바논
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LS">
                레소토
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LR">
                라이베리아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LY">
                리비아 아랍 자마히리야
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MD">
                마다가스카르
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MW">
                말라위
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ML">
                말리
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MR">
                모리타니
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MU">
                모리셔스
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="YT">
                마요트
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MA">
                모로코
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MZ">
                모잠비크
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="NP">
                네팔
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="NE">
                니제르
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="NG">
                나이지리아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="OM">
                오만
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="PK">
                파키스탄
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="QA">
                카타르
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CD">
                콩고 민주 공화국
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="IN">
                인도
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="RE">
                레위니옹
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="RW">
                르완다
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SH">
                세인트헬레나 어센션 트리스탄다쿠냐
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ST">
                상투메 프린시페
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SA">
                사우디 아라비아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SN">
                세네갈
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SC">
                세이셸
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SL">
                시에라리온
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SO">
                소말리아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SL">
                스리랑카
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SZ">
                스와질랜드
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SY">
                시리아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TZ">
                탄자니아 연합공화국
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TG">
                토고
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TN">
                튀니지
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="UG">
                우간다
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="EH">
                서사하라
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="YE">
                예멘
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ZM">
                잠비아
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ZW">
                짐바브웨
               </option>
              </select>
              <label class="iwc-always-hidden" for="iwc-contact-concierge-country-dummy">
               위치
                                                선택
              </label>
              <select aria-label="위치 선택" class="iwc-contact-concierge-country-dummy" id="iwc-contact-concierge-country-dummy" style="">
               <option class="iwc-contact-concierge-option-dummy">
                한국
               </option>
              </select>
              <label class="iwc-always-hidden" for="iwc-contact-concierge-country-mobile">
               위치
                                                선택
              </label>
              <select aria-label="위치 선택" class="iwc-contact-concierge-country iwc-contact-concierge-country-mobile" id="iwc-contact-concierge-country-mobile" style="width: 40px;">
               <option data-phone="+1 800 870 830 " data-whatsapp="+1 800 870 830 " value="AU">
                AU
               </option>
               <option data-phone="+43 1 532 0580 51" data-whatsapp="+43 1 532 0580 51" value="AT">
                AT
               </option>
               <option data-phone="+32 42 71 03 10" data-whatsapp="+32 42 71 03 10" value="BE">
                BE
               </option>
               <option data-phone="+86 400 0642 999" data-whatsapp="+86 400 0642 999" value="CN">
                CN
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="DK">
                DK
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="FI">
                FI
               </option>
               <option data-phone="+33 1 58 18 14 98" data-whatsapp="+33 1 58 18 14 98" value="FR">
                FR
               </option>
               <option data-phone="+49 89 559 84 210" data-whatsapp="+49 89 559 84 210" value="DE">
                DE
               </option>
               <option data-phone="+852 8200 3001" data-whatsapp="+852 8200 3001" value="HK">
                HK
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="IS">
                IS
               </option>
               <option data-phone="+39 02 360 11868" data-whatsapp="+39 02 360 11868" value="IT">
                IT
               </option>
               <option data-phone="+81 3 6758 5807" data-whatsapp="+81 3 6758 5807" value="JA">
                JA
               </option>
               <option data-phone="+82 2 3440 5876" data-whatsapp="+82 2 3440 5876" selected="selected" value="KR">
                KR
               </option>
               <option data-phone="+32 42 71 03 10" data-whatsapp="+32 42 71 03 10" value="LU">
                LU
               </option>
               <option data-phone="+852 8200 3001" data-whatsapp="+852 8200 3001" value="MO">
                MO
               </option>
               <option data-phone="+31 207 110 868" data-whatsapp="+31 207 110 868" value="NL">
                NL
               </option>
               <option data-phone="+1 800 870 830 " data-whatsapp="+1 800 870 830 " value="NZ">
                NZ
               </option>
               <option data-phone=" +31 207 110 868" data-whatsapp=" +31 207 110 868" value="NO">
                NO
               </option>
               <option data-phone="+7 495 660 18 68" data-whatsapp="+7 495 660 18 68" value="RU">
                RU
               </option>
               <option data-phone="+65 6510 2878" data-whatsapp="+65 6510 2878" value="SG">
                SG
               </option>
               <option data-phone="+34 914191868" data-whatsapp="+34 914191868" value="ES">
                ES
               </option>
               <option data-phone="+46 85 06 92 140" data-whatsapp="+46 85 06 92 140" value="SE">
                SE
               </option>
               <option data-phone="+41 52 235 73 63" data-whatsapp="+41 52 235 73 63" value="CH">
                CH
               </option>
               <option data-phone="+800 617 688" data-whatsapp="+800 617 688" value="TW">
                TW
               </option>
               <option data-phone="+44 845337 1868" data-whatsapp="+44 845337 1868" value="UK">
                UK
               </option>
               <option data-phone="+1-800-432-9330" data-whatsapp="+1-800-432-9330" value="US">
                US
               </option>
               <option data-phone="800-IWC1868" value="AE">
                AE
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="DZ">
                DZ
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="AO">
                AO
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BH">
                BH
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BJ">
                BJ
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BV">
                BV
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BF">
                BF
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="BI">
                BI
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CM">
                CM
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CV">
                CV
                                                <li>[link]</li><li>[link]</li><li>[keywordx][symbolx][keywordx][symbolx][bracketl3][keywordx][bracketr3][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx][keywordx][symbolx]</li>
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CF">
                CF
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TD">
                TD
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="KM">
                KM
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CG">
                CG
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CI">
                CI
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="EG">
                EG
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ER">
                ER
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ET">
                ET
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GA">
                GA
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GM">
                GM
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GH">
                GH
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GN">
                GN
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="GW">
                GW
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="IR">
                IR
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="IQ">
                IQ
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="JO">
                JO
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="KE">
                KE
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="KW">
                KW
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LB">
                LB
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LS">
                LS
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LR">
                LR
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="LY">
                LY
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MD">
                MD
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MW">
                MW
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ML">
                ML
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MR">
                MR
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MU">
                MU
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="YT">
                YT
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MA">
                MA
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="MZ">
                MZ
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="NP">
                NP
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="NE">
                NE
                                                [content5][content6][content7][content8][linkx]
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="NG">
                NG
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="OM">
                OM
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="PK">
                PK
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="QA">
                QA
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="CD">
                CD
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="IN">
                IN
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="RE">
                RE
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="RW">
                RW
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SH">
                SH
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ST">
                ST
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SA">
                SA
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SN">
                SN
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SC">
                SC
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SL">
                SL
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SO">
                SO
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SL">
                SL
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SZ">
                SZ
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="SY">
                SY
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TZ">
                TZ
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TG">
                TG
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="TN">
                TN
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="UG">
                UG
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="EH">
                EH
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="YE">
                YE
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ZM">
                ZM
               </option>
               <option data-phone="+971 (4) 240 6322" data-whatsapp="+971 (4) 240 6322" value="ZW">
                ZW
               </option>
              </select>
             </div>
             <div class="iwc-contact-concierge-contacts">
              [ahref]
              
              [ahref]
              
             </div>
            </div>
           </div>
          </div>
          <div class="iwc-footer-main-wrapper">
           <div class="iwc-footer-left-section">
            <div class="sections">
             <div>
              <p aria-level="2" class="iwc-navigation-links-heading" role="heading">
               제조국:
                                                스위스 (샤프하우젠)
              </p>
              <ul class="iwc-navigation-links">
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                <a class="iwc-navigation-link" href="/ko/complications/perpetual-calendar.html" target="_self">
                 컴플리케이션
                </a>
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
              </ul>
             </div>
            </div>
            <div class="sections">
             <div>
              <p aria-level="2" class="iwc-navigation-links-heading" role="heading">
               컬렉션
              </p>
              <ul class="iwc-navigation-links">
               <li class="iwc-navigation-links-item">
                <a class="iwc-navigation-link" href="/ko/watch-collections/jubilee-collection.html" target="_self">
                 주빌레 컬렉션
                </a>
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
              </ul>
             </div>
            </div>
            <div class="sections">
             <div>
              <p aria-level="2" class="iwc-navigation-links-heading" role="heading">
               서비스
              </p>
              <ul class="iwc-navigation-links">
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
              </ul>
             </div>
            </div>
            <div class="sections">
             <div>
              <p aria-level="2" class="iwc-navigation-links-heading" role="heading">
               기업
              </p>
              <ul class="iwc-navigation-links">
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                <a class="iwc-navigation-link" href="/ko/company/history.html" target="_self">
                 역사
                </a>
               </li>
               <li class="iwc-navigation-links-item">
                [ahref]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
               <li class="iwc-navigation-links-item">
                [linkx]
                
               </li>
              </ul>
             </div>
            </div>
           </div>
           <div class="iwc-footer-right-section">
            <div class="iwc-footer-boutique">
             <div>
              <section class="iwc-nearest-boutique iwc-component" data-component-name="nearestboutique">
               [linkx]
               
               <div class="iwc-boutique-address">
               </div>
               <ul class="iwc-nearest-boutique-address-links">
                <li>
                 [ahref]
                 
                </li>
                <li>
                 [ahref]
                 
                </li>
               </ul>
              </section>
             </div>
             <div class="iwc-footer-generic-link">
              <div class="genericlink parbase">
               [ahref]
               
              </div>
              <div class="genericlink parbase">
               [linkx]
               
              </div>
             </div>
             <div class="iwc-footer-social">
              <div>
               <div class="iwc-social-icons iwc-component" data-component-name="socialicons">
                <div class="iwc-social-icons-section">
                 <p aria-level="2" class="iwc-social-icons-heading" role="heading">
                  FOLLOW US
                 </p>
                 <ul class="iwc-social-icons-list">
                  <li class="iwc-social-icons-item">
                   [ahref]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [ahref]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [ahref]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [ahref]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [linkx]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [linkx]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [linkx]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [linkx]
                   
                  </li>
                  <li class="iwc-social-icons-item">
                   [ahref]
                   
                  </li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="iwc-footer-footer-section">
            <div class="iwc-footer-country-selector">
             <div class="generic-fragment abstractpage page">
              <div>
               <div class="countryselector parbase">
                <span class="iwc-cs-current-site-label">
                 지역 변경
                </span>
                [linkx]
                
               </div>
              </div>
             </div>
            </div>
            <div class="iwc-footer-legal-links">
             <div class="genericlink parbase">
              [ahref]
              
             </div>
             <div class="genericlink parbase">
              <a class="iwc-link iwc-link-m " href="/ko/terms-and-legal/terms-of-use.html" target="_self">
               이용약관
              </a>
             </div>
            </div>
           </div>
          </div>
         </footer>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="all-dropdown__wrapper">
    <div class="all-dropdown__title-wrapper">
    </div>
    <div class="language-dropdown__wrapper">
     <div class="language-dropdown__wrapper-title">
      Language
     </div>
     <div class="language-dropdown__box js-dropdown-trigger">
      <div class="language-dropdown__title">
       Select language
      </div>
      <div class="language-dropdown__arrow">
      </div>
      <div class="language-dropdown__dropdown js-dropdown js-dropdown-language">
      </div>
     </div>
    </div>
    <div class="download-dropdown__wrapper">
     <div class="download-dropdown__wrapper-title">
      DOWNLOADS
     </div>
     <div class="download-dropdown__box js-dropdown-trigger">
      <span class="download-dropdown__icon download-dropdown__icon--middle">
      </span>
      <div class="download-dropdown__title">
       <span id="amount-of-downloads">
       </span>
       items
      </div>
      <div class="download-dropdown__arrow">
      </div>
      <div class="download-dropdown__dropdown js-dropdown js-dropdown-download">
      </div>
     </div>
    </div>
    <div class="year-dropdown__wrapper">
     <div class="year-dropdown__wrapper-title">
      YEAR
     </div>
     <div class="year-dropdown__box js-dropdown-trigger">
      <div class="year-dropdown__title">
       Select year
      </div>
      <div class="year-dropdown__arrow">
      </div>
      <div class="year-dropdown__dropdown js-dropdown js-dropdown-year">
      </div>
     </div>
    </div>
   </div>
  </div>
  <span class="loadLater" id="placeholderTwitterlib">
  </span>
  <b style="color:black;background-color:#a0ffff">
   jnice09-ipp30-wq-zq-0321
  </b>
 </body>
</html>
|<---